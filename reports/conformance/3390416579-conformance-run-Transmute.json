{
  "collection": {
    "info": {
      "_postman_id": "f5f17919-82a1-4db5-be95-0f985635313d",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "37a17c57-d10f-4de6-a4c9-523dcf348ff0",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b2aa1a65-d00f-4529-9507-907f03eb6baf",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f9ae7926-8a51-4d3c-ae23-3a666ff349de",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "878c8142-72a5-4f7c-8359-9077e66542f3"
                }
              }
            ]
          },
          {
            "id": "164eab4b-948a-438e-a984-62671876384a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2c81da97-5feb-4739-8545-27395a4daba5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8023fe98-940e-464c-aa43-a200102b6eaa"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "34bd6209-9d4d-417a-8d01-f05c1d833b1e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "2951149f-d1d3-4c10-bdbf-2695bd3526dc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3985e84d-44dd-4a1d-aa08-c416a99dd273",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f307538f-8f02-4599-b687-e6520e1dd229",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "68734e06-45da-4d8c-abf3-ac45a85b8a43"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "41ef0ffc-d076-4120-ae5c-b34aea1c0992",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4efa9e3e-6bcd-4c46-bf81-f86af8c478a5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "500b2f14-2088-4672-b0b2-20b1fb4beffa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "368d2570-55aa-4403-9206-ab0547510fd9"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f4cb3251-d3a3-4986-8981-b4b551b2bc37",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "0a12bc38-3c4e-458f-88fe-6df25170a035"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "607e6472-d184-44ee-a13c-102cf29167b3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3dbb5e78-ec76-407c-91fa-8ea3ac76096a"
            }
          }
        ]
      },
      {
        "id": "252155a6-5282-4efd-9879-44f7ef97e601",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "e5075618-df71-47d7-b464-b877c8d32ad5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f0ee2df7-bcb4-4862-8021-1b4994ce469e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "94ee4ed9-090e-4c6b-a26c-0eaa6618fc9e",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c340f5a-2610-439e-874b-0a1d5ead3ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8fcbd6fe-9d5f-4136-80c2-6360448ef39b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8955d457-54dd-4755-9123-8b415145263b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "620910e0-0cb9-416e-9ee1-976a1bb786e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9bf31e3c-2332-48ae-b551-6bff98b80e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61893cc0-a0b6-44ca-9552-9bc476fa51bd",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d32ab1-afad-46ae-b1f8-0151f6479305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "55c70232-a7ec-41c3-8dab-3b07d331ebbc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "48553764-9f47-4913-9128-5f4a7a7d9c8b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ded6d776-0d68-426c-8205-f47247d566cc",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d586a0cc-1111-4efa-8199-42cc8e72009e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c8ba585d-1504-4378-90f8-2985cb08c54f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "857bc628-63fa-4891-839f-c94cc3a101b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5149cf56-281b-4471-8395-dd88e34d49d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feae8cee-049b-4ec5-982b-b048eabe6f6d",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc04e4df-9b72-4998-a755-6d7e41f5fc89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "302d0f40-c5d7-49a7-a549-084065950713"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d9a5889-87d4-4af0-9520-41d16cc91cda",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "0ee3aa04-1239-4f26-9ed9-da13e4f01185"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "133b8f6d-bc82-425d-971e-3b3b86f02fec",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c4e341d9-91c5-415c-b40d-e6613a0464f6",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "22ad34e3-e747-46b6-b005-a22855e605a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "44be382d-1804-4226-874f-2f9fd06a2ca7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5e12f06e-c74f-4eaa-bbe7-b4330721e77b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "d35fff7a-67f6-4609-af9a-35e5a354eb89"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d2189a69-dce7-4477-a4d8-70f9659e961d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3a98f8a2-1d03-4095-858f-b0085efba8db"
            }
          }
        ]
      },
      {
        "id": "59d58bf8-de49-4b18-be0e-b9eb42093fe4",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d2439073-1547-4545-84f9-c0f95261f9ba",
            "name": "Negative Testing",
            "item": [
              {
                "id": "41a2873f-eb1e-4bda-9bab-3df3d3e2ba2b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b3a4287c-76d1-409e-ade3-0682f0290953",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32331f6-e7ff-4148-ae27-6a9915d312c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35b3ee1b-a67e-411e-9a3c-23b2636cdd0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc5c687b-38f0-47b7-8970-ce1b2f035a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab042af0-2ea1-4dc0-a61f-2108793e4384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83912953-54f4-4e15-a3f0-04571a869a18",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb806d6-b4de-48b4-acfb-971bfdd32d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eef5801-a606-4aef-b01e-9f12c129b7e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc09a537-482c-4d80-8c6c-f72412e50ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9030acc1-061d-4df8-a0f4-db770862c7dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a854ecd1-c337-43c0-ad33-98a4dc0da212",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7524524d-2f13-4131-8b52-6c67af6e4b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d7c4da4-e3c0-4d2b-9cbe-3c1a0a700f72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5cf12aa-c7fe-4684-9c08-b916961e7c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5cdebfd8-6899-4669-b492-ba4e7c89eea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41088c1b-87d6-4bc3-bd51-d08c301a38d0",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "153e1cfe-e495-4913-a2fe-b7a52e8763ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f310c653-3b7c-47ad-be9c-ae164a4ec21a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c0abe0e-6bc4-4f0c-9190-7c68ecf191d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62e57dc7-34ca-4c4f-b2fe-728802b2f4bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35ee05eb-7768-4ab0-95a5-322fa2f0c20a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76122df1-0805-44b0-9b80-f3fe1f897fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "238fcfd9-7079-4eea-8502-dea8e623a302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c247ef60-8839-4aa7-889d-f0bbd3a093ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed381bc9-4bd6-4085-9387-43dbf81a010a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a1ec36-9a28-4d41-ae6b-e91804d414fb",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "604ec9b0-985c-48d9-98ff-8d749773c5a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61dcf3be-f1eb-492a-a4f7-840f8469c949"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd46848-fe9a-482a-be42-47a3e74e66b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51920a71-a6e9-453e-9bca-8ed401272079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e30bd6c9-3458-4ac2-bdc2-4957d528da0b",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e48471e-b282-4000-8167-523e2872f917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdf061c5-319b-4d04-ac25-5c927b38ca7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70199f46-84ec-47fb-9556-4f2ac9799eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "050ce084-adb5-43ce-9d82-9c4ea4e8159a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4533afed-ad71-412c-9269-732dc868d43a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc67df8-5c61-44b7-8533-2841ebce1c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08536d66-1af7-429a-9f50-62ad84ac60af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd4158c-ac3c-4ead-87ab-4020a0025683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "110038a2-8ac9-4ecc-bb17-5878485c2099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27d5bd8f-a22c-4f12-a532-037b79b65d45",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c5967b-1b10-41d9-a5bb-3e754da70def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd079a78-bfcc-4eb1-b7d9-f4087fa2bb0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41da46d1-87d1-4a13-8576-7e2fefa6012b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9fb0e360-ef86-44dc-af5a-0db8f5d7ec09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "310e0762-f964-4c3b-b8af-daac02c99800",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6e1cb0f-6f09-4d87-8a9e-bc0ebea2237d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "230ed679-5145-4369-8eb9-f29e4f18f817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b40eaa-b38f-402e-8dd5-1d3e1e84f64b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b417506-f9cc-430c-941a-0d0d2a838c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4d62d7f-6c86-40af-b615-d3eea0cbff33",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c429fe-72ef-4d5f-8fb3-d69dac35d84f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "329f088f-cbd7-40bb-87b4-dd273a5d7c07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c4a611-b15c-4677-977c-484acfac1914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f90f41ac-5d0a-468b-abcc-68f82051e00e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4feeac5-b1cd-43b6-be88-bc6e2a5bd6ac",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa35b57f-4a32-43ee-9667-15f979762c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "700a1236-d441-4cd7-9498-2b6a17f6620f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3054303-ebd0-4a93-adc7-9b3cceac0652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93aa4c1f-9ce1-46bd-8ac9-3dafc0694b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1faa6865-860f-444a-b240-f88d2da84369",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6384fdf4-fe50-44b1-91bd-3eabf81b3398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43e199bc-dfc3-4f40-aa00-809a2a648f56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2193326-22df-4a76-a76b-4b0b7dac8f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f96d53a-5caa-4720-8c44-2badfae2cdb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b412426f-b105-4d00-88a3-3cdef36f96c0",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d71b6f-7c5e-4b06-b893-80cfdfeb6257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf9e507d-c242-4a83-b73e-ab156331e91c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa8030d9-adef-4149-872c-8e4fb958598e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ccc990c-20ae-4a9f-a14e-d3a133efea2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6276570-7ee2-405f-a4af-bd54ff5b8150",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8347fe2-be00-4355-bc98-c91bef9be324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "180eab50-588a-4bb5-ad0e-8b894a3f0c36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd81e01-7e6b-4ce6-b15a-5f13131fc648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff422267-01ac-46ad-9451-4056b690397b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a54cebd6-10eb-46a5-b0b1-a59bb114a4c5",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f51cdb-1428-4820-9ebc-ef751f29b7b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69719b31-983e-4ff3-8d4a-b0ee5edee119"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2405fc28-b534-43de-bbec-677dade3da65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82568446-c8d0-49b4-8bb0-2311b2ac15e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d170ddb-5430-4a9b-97ff-9a52429906cd",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "409c53a8-6d05-4ac9-aaf9-51e7a11f630e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "170adcac-83fb-402b-bf1d-f49adaa41b34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f48a9a-2b2f-48fb-9539-2d6b7ba24482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32193035-70ac-4042-86d4-8c98cd6a5e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb24cfe4-6b3a-4584-b31c-0dd67966bd2f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a99c2abc-f7f1-436b-b55e-5afc3390a8c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b62ebc6-1cf9-4429-9466-c38e91c49af3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ccbd26-f53f-4fd5-b3da-84a5364f38f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "744c3a86-73e6-4825-b076-5cec7b655e99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b72fbda6-0eec-44f6-b58f-3c625e4ff93b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b4fb560-d4c9-4c95-bdf9-0a45c8e82cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db8fe6e0-3a11-4e25-b4c3-cbe25ff4995a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ea3d458-e807-4028-be96-75986d66fe18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d7104b5-ba42-4501-af59-2da79f4e1f5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7af6816d-91ae-4d9a-954c-6c3849bba782",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf45ce14-acdb-4b20-ae47-231509a056ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "114bf5cd-1323-4bbe-97b2-d37b3de18cbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c22090-97ed-4a2d-a2ab-151b5ddea282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "99889c94-f7fd-4d5f-95db-3116520ffce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5946970-65f7-4fe4-8ee1-d31312df365f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5381cd73-ad7f-4d74-b85b-b8a25cd4b1e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "719dd33a-baf1-4382-948f-f790a018e5f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f640c0-53d1-41da-8a15-3a3d9f6fb82a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "adeb7ca8-5a31-41dc-922e-2afbc1c75f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d5d142d-f150-4fb6-bfc6-b25c43bbb3a2",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ad0ee8-8d90-4a80-906d-6897474c4b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4da0eb55-8a8a-490b-858b-2b13a962fa46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f09f92-2e08-45c4-8652-f18e6ac6e65b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad05f213-3526-4497-9478-b409b6055f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e84c68e-01cb-4460-8312-8c257ea37646",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d1aa08e-d72f-4a1d-9471-02eeb9b54ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c096edf0-ac94-44aa-9570-7070ca4bb8fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e16ac46-4fca-41af-8a61-1444fc3e6c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "196af817-ae3e-4a32-9d39-270ec787c293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e70d7a00-ce71-4848-83ef-6158769f534c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0aeaf53-8a53-47dd-9f35-25eb6a3fe4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5145c3d-d208-47a8-a0fa-11253f98b603"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2553589a-584c-4a43-a915-dcdf3355ed27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "829a992d-0a0f-407a-9001-20c38b4e5bf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d19c8a16-e0e8-40a4-9ff3-282ee237908a",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d5aaa48-e75c-48d0-b16f-7e82327d2196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "400b2be9-98ab-4cf2-af64-113b88ac5f2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d03b67-e197-4063-9280-2df934a85617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbef9f1d-16ae-447d-8943-eb070f485a56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c57c64e-5011-4424-bbfe-1a4e52e0930b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "774241bd-6273-4ec9-9f08-b71b0154266b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8bc17be-d176-4e77-88fc-2836e8589001"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e680802-0668-42de-bfa1-af34307d8968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "929fc108-fc13-4591-8f47-dc4c5816d88b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc2d79eb-f4bf-446c-b9b1-525b1affc8e1",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12502dc7-1dd1-4212-9829-09c91666d9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78a56f81-0a25-417a-bf1b-15b77fe2ba2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b17b54e-f80e-4796-ae83-a25881d4fba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e82ae9b9-cece-4e7b-883b-19248ac5e2c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a33d12ae-64c4-4f82-9eb5-5dd7b58b49c1",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb3066a1-71f5-436c-9e69-bf9a1363fc81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6484a3ce-3d20-4288-850f-a7aab80ac50e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4955ed3f-ac1b-4fc5-9c63-c829497b6272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f95ec9bf-0834-4813-b1a9-a126379b4ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3b8f38c-d114-43b7-8061-605a6e6149d0",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d965a2a-eac6-4a2c-b53c-31365529f4ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61a445cf-bab3-4989-9703-8f0897e4875f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bbf9dc5-9e60-4dd7-90c9-e1b6605dccaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "01b2df3b-9456-4a62-a0d6-161fea77a858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e80e6d5-0b59-426e-8cba-2a04273838f8",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a64f7b68-66b7-4ded-a0aa-683c563d84af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c7a4006-8870-49bc-8ba0-fc009dab1568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3345e2c-37bd-47ff-9a9d-74510e5d82db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fa63a23-e419-41ac-9231-4a968b7282b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39d08df-7f87-4d43-aa1c-e840b4c1591e",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a8c243-dd09-4ee3-8afd-4304f8d075ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f64abb24-fa61-4918-b633-857bca738232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e279bc62-7271-4910-a32e-9cdb9d761005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e753bb16-c04e-4cb2-8188-ecd1e9a387f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "831ac59e-0276-4c68-ad6f-87405926083e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b87a363-07c1-408c-88de-c2362e778f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8fdd5b2-42d3-4eee-a279-0f15a7bfd7e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca028cc4-941c-4574-a049-0944c7bdef2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "037e7e73-fbe8-43a1-b37e-1ecde1735dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "149027dd-c4b8-4282-b5b0-5db44114a80a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d6096fc-bb52-4914-8e9a-5f80808c8305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c64a1784-f607-4c5b-ab97-b85afaa7243c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef003a3-23d6-4131-942f-9f553f037dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6c267fa-9ca0-44af-96fe-39a670ffaaac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c8de71-4141-4262-a715-34f706ada09f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53294f5b-6124-4371-bb73-9cce823aa758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "286e2d3f-80f7-4411-8700-31089ff248cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e698a7-cf17-4692-8a74-13f07058d453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "85da8a28-d672-4a2b-ba42-b8c77a4a3415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6577dd8-4106-433a-b11d-04eeafaaf138",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c29e08-c514-4133-b07e-e30947fc0f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdebf570-b37a-420d-bab1-85b8e7d34ad1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ed313e-01ea-4643-85ee-27f8b8474d08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "dc2e2272-8d89-43fc-9f1e-092d3670045d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b74d714-be3a-4fc2-8126-11cf1f50f181",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e685729-b75f-462c-ac32-b2f2aba8a952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ccaed230-6934-4d47-8814-85b7fc4f5611"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "889c0f5f-a759-42cb-b005-196cfd059a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7b1eb0de-3d14-4e4f-8584-2868fac6b2be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acfba808-370f-4331-b6f6-632e847867b9",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56abca8e-211a-486b-91c0-e6ec62b4d173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dc057be-a41c-4395-be6a-7183010e0682"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df381dc-8815-441f-aabb-6b509af8aeae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7968b41d-4ba7-4c72-91be-ef49ef264b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de2b9207-472e-48e3-915e-19cdd1cb902a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf71923-a8f2-492a-b060-963d09688454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9c802af-fe27-4646-8635-8648f21a59fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "103f02da-e4f0-4ef0-a9e8-4f63e43e4506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7b3d66e-a667-4299-87ac-8197e800f484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97b6b4f0-ec8a-4171-871b-5a735dbd0299",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb256cc-4e0e-4d2b-bd65-6fc9f7edfd6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d85530c6-8cd5-44e8-972f-5d6b78b6e4c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e134bae-290a-4657-a83e-c310dfbc2288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e172159-9932-43b0-9ca5-ff7d2adc120b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b53098-6109-437e-a99b-4a9a7b568aed",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a6b557-ee71-4b91-9e76-8ba2853cd491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c69a30de-a527-4657-85ad-f82f78a3953c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "626cb1b9-3901-48c0-ad83-b7936dde2e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb53f918-4e8e-4290-aa76-bd225ff7b66a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "451d117d-dd4d-488e-98c0-1c912cdcdd36",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ec8f427-e454-4b92-ba28-ac82406c1b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9011a4ed-3f44-406b-9ace-77f55fe26f5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d62499c-e9c7-47ef-bb09-0938cd161be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7f1f44a-97e9-44ef-8c40-10db403459c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a62489bc-16ef-4324-bdc2-569358c2a917",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be9158c5-80a3-4cd7-998b-aa7df0d375fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f09d9cbd-12c5-4886-bfc1-fd58120964f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "708a21cd-f7a4-4121-bb08-78d33f9ca7b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b1981e6b-b2f1-47c9-9403-e94382397f0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b1d259-c51f-4f1e-9479-ff27465024e8",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "576230b5-4491-434b-8a4e-efcbed684433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a615a897-64da-4613-a690-60efe36f8100"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0513e667-841f-4e34-84b6-5e80c409afe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c268aaa-caa4-41e5-8081-75d2cbd6eaf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d14e9e-c82b-4914-8196-838882b4fd4c",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f81a5162-8774-4e9c-97b2-9b11f0530218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5cd84bc-9326-48c8-9092-306ffcc441a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "588999ba-381f-4ac4-81e7-d0176ffaebed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7836d1f-a8db-473f-8b5d-9a32520e9223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed10099f-9de3-42fc-aab0-eb38d1d880bb",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "254931ee-7d22-4b16-a515-9c2bc35ab2cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63360014-33b7-43cc-b906-616f39c5db3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "238f84ad-ed07-41d5-a890-e79df0f34058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1ab1d97-2a9b-4424-a0f8-28a5451666ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf95c51d-272d-4186-ae44-6835fd48b6d2",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df47c58-209c-4c3c-ac8e-4484a3e35014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ce9d8d9-5174-4937-9d6f-1068fc24663c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "241da247-c3c2-4b00-b3a3-8d57270cce0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0dd0b8c-8a2f-4dc1-9cfa-3ae6907442be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7892b6ce-30a1-4923-86e7-b4defec32f59",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2e1c99e-ae33-4ad8-bb9a-b95360f85442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be9ad0ac-deb8-42fa-bb36-527f85f84178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c046ee3-ca36-4069-9d29-eb61de3cffed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "88dc036f-af64-4c57-816f-3266cb71355a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9390ef1b-b96a-4685-b2d5-2e8148b107be",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f69bda3-5481-4263-93b7-a7db6fed84b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6b4708e-15ec-4004-acc7-7075343bb998"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcfaffee-9e34-48b9-aa6f-e2617d5c8bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "64d01da6-270f-42b5-ab73-b2a1027bd8d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "786cca70-5ec7-4d49-af94-d4fa9dfaeda6",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "506a285d-ca5d-4233-8484-25fddba410cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a05e1a84-e509-49dc-b3f6-735a851fc6f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f62d4652-7dd9-4ee5-b600-8d563dae8925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "71bae538-c319-4bc8-a992-ec79e1334fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12d1451c-9e41-42f7-9814-c701e0b3cb19",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4125a4d-3d79-4b1c-9554-c51de8ff74a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42f96246-f8de-43c4-a282-62b8a5b6d894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c2521f-b89b-4d8f-a16e-cf4018279259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f90942ac-c533-449c-bec3-4cd990572086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e087d4-69d2-40f1-a44b-fcfbdc77023d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e341acf-06f5-4c41-94e5-2cbfb57ffc23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44812b72-7e21-4cc0-87b6-9fd7f83a2f4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb9a8f77-65e8-406f-9794-164474f82c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc893233-9b47-4c67-af8d-21c71a212ab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be3150d2-3acf-4275-bf2c-65bdcdb0e1bf",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1227214b-f622-4451-92c8-ea41cabf19de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06f914a7-e9a4-488d-a2bd-b57dc4336d36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a817b0b-55aa-4e47-ba38-f9d1c1a034fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5be2deed-4898-454c-a6c6-51a765067dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d8707cb-a4f3-45d0-b17e-79e64c89c8ee",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f92167-fcc4-4ee7-93c2-e1987d68d806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "501aac01-1d17-400a-8ae9-ba95c72b83f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "facd679a-f5af-4f76-839e-1ca26f235dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d421fd9-7de2-446e-87c1-5dff04a59f5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea95e334-60be-42f1-8fa2-7b91e354105d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ffaa52-098f-429a-b466-e3cfad18b037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff0fb1d6-a37c-4142-bf95-a4a43abfba36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a02098f-69ae-46e7-ad84-be76f8172548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eabf2f17-0594-4a43-9f40-d3970696b97f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c34dde-e7c4-4a87-8564-f08151bf85eb",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f4bbc4-6c08-42c9-bd5d-2bae4c916419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1e404d9-6dff-4d32-84a7-b1e58d99f155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d16eb8c9-9112-4f71-8b6f-1e62f302facf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "36099170-028d-4bcd-873b-57e6c01088c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f52ddeb9-dea4-46d2-8b54-c2b5d6d9f3e2",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "202bc65f-e72c-4273-b2ed-153c898b356c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12b9db1e-e2a9-4cc9-8a6c-29cc33e28ba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59070994-e4ec-430b-870e-4ff8d1cd907f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f8e1f87c-38f8-4b54-b1e4-1baf73a69569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd221bd-4f03-4c0c-a1f4-d1fa1518df3a",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5760cc67-0789-4431-a8f2-4a34662f50e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a1d749c-0dea-44ba-a534-2bc60b4431ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f9559e5-dd06-4f1e-809c-6ffafa33c6b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "35796922-fcba-4a63-b849-dfe75b5c4417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79afc98a-4f32-48c9-b038-7a6c1419acc7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d9cfb8-9270-412c-b69c-7acb06cc6ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04de3ea7-5627-4ad0-82dc-38603004ed64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4809e716-09e3-4468-835f-8ea46aba4974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "079c99a4-7931-4203-8542-ff65619d92e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a3fcde-fd42-4cb7-abbd-103f3245fcef",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "535c87fb-0cdd-41cb-b20a-e21d9502cee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94ad03d2-8ffc-49a2-b461-a5f037a53ae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bbb7320-3acc-4d14-bb1e-4e49d81c2d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c475197f-0f85-4788-bb1c-c08d477a69ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a952efc6-1924-402c-8b20-d7321ec6c2c2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8042fa7c-9004-4723-9c8d-41fec6efaa28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82b03b89-8b02-4efc-887a-153dfda2ea58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0132a85-68be-4404-ada1-8a560b0b8d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e96c029b-d906-48ed-bcf6-df815b2f92ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92e6085f-c90f-4ba6-b360-53fa76d13b20",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b48622a-2d7a-41a4-9b82-c3b2066f6e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d49d6995-c93c-485d-8307-3131b9c9a0f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caaa67b0-2eed-4bab-b5dd-1bc0aa9b2f02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "02e8a3cd-6b24-454e-a979-889ea2cdec35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b53a29c-e24c-4bd9-bdf4-02ccbed4e05a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "276ca289-91b8-4c3b-9bd6-4df5ea8cef2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdf635ab-1f96-4b57-82bc-276a727622a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "509d94c7-5be1-452b-a7f2-d798e9ff4288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6befeac-7184-444a-89a8-48bc64ea5214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2899a0f2-2d85-40fe-a0e4-600fe95c71db",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "097d0003-c096-48c6-a2d9-695c49eff586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1853606b-ce1b-4d29-a036-e978e6e5284e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e42b89fa-ddbb-48a4-8bf6-5bf5e2268f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ef4db8d-a4b1-4f34-90a8-3cd33fc4fae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8754971-ccad-4a5d-b63d-7c861b3369aa",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ada2da-5968-4c0f-843e-a89681775d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2235393c-c2cd-4d92-b092-9e123bc3be5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a39845e7-6a60-4d2b-8114-fd126a167509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a42eebd-c661-4467-9c54-274ea81a4c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df4d0cfd-1116-4a18-80c2-a2b93c329346",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "757db53e-d532-4cfd-90c4-88c64ddd3a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a81a62ca-3611-4a5c-9ae5-be7c0cc93d60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf0d060f-8e1b-4595-a6cc-7337f811402a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5aa28632-2b8f-4298-a1c0-dce5b68f69d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2878346-1b78-4e86-880b-01be806d479f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c38f187a-521d-4f99-b14d-214834ce45d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d01d29e6-69eb-48b4-a0d1-27795ba2e021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb84202-608a-4acd-8f03-c55dbee43172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "74e6b9dc-61c0-425a-bab1-ca74b2d658be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adfbf4a5-8690-4e97-abad-a1edb854779b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a649c2-a3f0-4337-931d-93315909dc4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb0c87c4-aa6c-4b50-97b4-cf33a8c59192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab7c820f-c6ee-420f-9905-5a4095555e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "139a54b4-1c20-47bf-846c-d6c1034502d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f9a92b9-4ab4-427b-89f7-50f6ae2f86e9",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11256470-5d1c-41b4-aba5-694aaf523433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36c4e1b9-3443-4218-94ee-8120df1ecbcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328fcb68-c38a-4554-9fec-fdfb14e0be20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6326c1e5-f92c-488c-88c0-8088a911ad19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff853f3d-aaa2-49b1-a702-9b732e7d34bb",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a95dc58-d162-47cb-8a7f-852c622291b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "578ff84e-30d9-4018-80da-f87cbfe40417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7202632-81a2-4d0c-8ebc-282b5fa31085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "23bc1d3d-a29d-4bee-9764-3dd8ea1565e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcba89eb-531f-4410-9968-03998833d106",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39010c3e-eb75-45dd-8f12-b9f8d2e84d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "502e7af1-fde5-4aca-83b5-744f340fec63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac4e423-379d-4c15-a539-547c00a96421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "57d6dcd7-8395-4048-b10d-91f0eae346b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "469c703d-a13f-43a1-b3c0-affc439bfff5",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "670810d8-943c-4467-9f6f-9a112057cf00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb41483f-bffd-46ab-b331-7065abdba337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff8f5f2-ed6f-4bbc-b602-b6cb80ac2faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6230525-3e8e-41ac-8b73-0d320853f245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "162642b0-e3af-458e-a526-ee01fb483ce1",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f351fe-44e9-4bc6-80d1-8962c5a37c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b14edd63-24d4-4478-a825-81bba8e3fd4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a04b82a4-ee20-4a59-8e8e-d54934040ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f97484f7-8121-4bfb-b388-66b778aed7c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ad596e-3ff2-44c3-9ed8-4314a6ff7f01",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf93dfe1-a9e4-4411-9336-ae39341c6a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0185471e-3413-469c-8cf5-36706a5f8416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89830f05-cbb8-4b26-a1bd-9b9354f4a5b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "13a87880-2b0a-4403-ae6f-e39120ed91fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b12c4fa-025b-43ec-9bdf-8475b2b33194",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a8753f0-8aea-4b54-bcca-6a565cec1185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9d2cd77-58ce-4f6f-8d16-f002903ddd29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d345659-f5d0-4865-b3f3-634162f6d8f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b11c7120-c7a9-46dd-b42d-5a6d901b5ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d2397d1-ca07-4838-9656-cf02cda22059",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3615d7ad-03aa-49fa-b484-85af8dd00620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c22c4e51-922e-4c6c-9970-d6711634411d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8611c14-628e-4080-a35e-07aa0b2f95bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e63c7a05-4e00-441b-acda-8076e993c1f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "474c4c66-1ae7-45e1-a31b-9d559692fc68",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "502c4e45-457b-438d-bef1-1457ea9293c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c85e64f-2572-4432-a9f5-e1beb56b50c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e034265f-8c36-4fa5-9e05-95ffdd515d87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4c1a812-ec37-4a40-8bb1-1b3dde6b03d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba56a4f8-11b3-4b3c-9153-391e86235b08",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8369b70f-9dfc-4dbd-9bd5-0c3947255a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa4898f7-3b15-4a30-9c34-b71d6f2d0e62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c6ed387-798e-4ab1-8c88-9603d66a0126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb4d1c8d-b8c3-4d16-b4cb-75dde0577239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d353b7b4-0c47-4e01-a133-4cf62d69031f",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf006e8-07c9-4155-a9dd-65c3b98fbd52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55254e39-f527-4638-91c1-7ee243605149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a80bfa5b-ffc8-45df-802b-938defd3048e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "476fda2e-288c-4d34-8b95-15272259f9bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20a21828-57b3-4ee8-94dc-6fe177f87712",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cfd234f-c35a-4a51-a42c-80649478d173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa04ebae-cea0-40da-a172-897c78e449d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "609f55ec-f37c-4bd0-a925-3446531c8e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "13e603ff-f008-4320-b964-c4f521f418c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e487c4f-ac1a-48e8-bb95-c9a2adee20e7",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "944fa068-7bb0-4cc5-b5a6-3199667689d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e00afcf8-b4e9-45c4-bbc8-3f609a840390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "489d93c2-5141-46d9-b182-961ad40fe8e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "02b7017f-889d-453d-ad29-075587d35858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1005e8bf-de5d-4dd0-babd-dc71e11b6f02",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc3dc600-3af8-41c1-9571-525d690516a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a483bc4d-703c-486d-8fe5-6841e0db1e81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b4159a8-2187-4b99-bd23-cce2bb0c21e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e00c003-748d-4619-8ca3-11d83ecbcd1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c31f57-7298-4b92-9997-0ecb2ae78ce9",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ae1032-e5b5-4c1d-90af-eec3b6336b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e88e9912-b35d-4c15-85d0-3857bdc40a22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8cb37ce-88d4-47d9-86e5-89d174c3c283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4189253e-d8f0-401c-9acf-866c9c4ee6f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "362811f8-ca70-4ebd-90d6-94b2d81227c8",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d85be8-da7c-49e9-bf32-6cebd2ce0ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9247a748-b9df-487c-8da4-8f0ddb991441"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d39dbb8-d3d9-471a-8fa0-7c6a9366c858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0de61a6-9f7b-4912-bcc8-513d07fb6900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21a07aa5-c4e2-4b28-a749-20fd345d9b12",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d270a8-dac4-4155-ba92-7f0cf8d49bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aa05d9a-122d-496a-b7c7-f8892fb07c92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a6fbdcd-8c44-4c48-af79-5dfee1ea47cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1184f674-110b-4816-bf88-631c056a72be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3299ae7-d403-4e6b-a00b-44bb8200f4ed",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b3f53f8-f4f5-4ba7-9dea-07bb56b5ed9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba29a7b9-3956-4a19-88a8-ea05039f34bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d89a900e-f6c8-4a4f-b64b-e17a6cd9aa19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "62e6f5ff-0dbb-4c7f-abed-a526e904c445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d860ca9-44c0-4736-8605-ed399acd8809",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca24fb18-3aa3-468d-8aa3-e1c105ca4c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "570c2de8-f469-4331-b26f-59ed9fbafbe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b6930d7-eab9-4932-8bc4-cce30805e8b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dae97a39-f8ca-47a4-91fb-83ce501218b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0a4a928-b1e6-4b78-a1d3-3cfb6d3afbb7",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca6e7a1b-450f-40e5-bc40-e159714cf244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f92d659-8813-4c56-9ada-167656818f75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dba58dd4-1f46-4fc3-ad7b-ce9b60912371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "edfadd57-fc9a-4798-b749-5c57d765c411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34900b4f-4e44-401c-b14f-1d158c3f9535",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e661d36f-0a3b-4665-8c33-8caba4135891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d240502a-052b-4f1c-b756-3b20c41831c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad83f43-29bc-4393-8b75-c0a1ec91367f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3fbfffe-8b38-4470-b1e4-c6476467c3d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "279a89e8-1136-4e92-8667-46a17f839315",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e5f06d4-0c7e-4af5-91e9-7ac9ee2546d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24d1797d-d91e-4994-8109-bd50661c89a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "758704ea-b19c-4a43-9bc1-f38e6ff42b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d7745f5-0a60-4c60-8f8d-e0a49f39825f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c0284f-9195-4907-88dd-b1f2ec470050",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "619e241c-c016-477e-9c41-b8eb9f4573e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efb0ae99-5b25-431a-8e97-167c79c3f142"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "168eb9f6-e7e5-48f2-9c34-0d4bca22d8b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5bb79bc1-95fe-4a6f-a2a1-94f06a60c4d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e132147-53f2-48bb-a33b-5d95a37f0927",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b567ac97-5652-4c58-b0bf-a7418c1d8096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ee69699-312d-4df6-a94c-fe033d28c986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "236fb2e8-d175-41e2-bd78-f85a0a5d8842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9758c09-d1ee-4ced-8fc6-30949bee0cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c2edd6c-e4c7-49d3-a887-983b04916168",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc2f0c9-f1c3-4b5d-b95f-bd3012286128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2e0b71ae-4d7f-4bd3-949d-ad1876bdbe4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ce1467-a4d0-4af9-8aec-dec7eccccd19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8d4dc99-f147-4fff-b402-08d52674a57f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "138b3b23-88b3-4d94-a421-f0ed6d204a44",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dbedda32-d6b5-4b57-8bae-716048ffdf41",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "736959aa-634d-40b7-97b9-6efdba002a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2fb9dae6-c549-4210-8faf-f832d142d5b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ef6095-b66c-45da-9aa1-572fc5cea0eb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "9da78388-efb5-4fe4-9dab-88dbb4e63c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b3657c-82aa-4792-9c65-0ec7e2b9a0cb",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a6e3aac-6cfc-4715-afe2-77402f5321ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e876da20-59ad-4004-a502-435b95202002"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f966b1-5ba1-4afb-86bc-a762046d99cd",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "b24e868c-2c5e-442c-9b84-1f5f1b7d683e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5278a9e3-6368-4e4f-860f-e78b0f4dd114",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a032b626-5f31-4313-a728-bf4d8c74e6f0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b53455ef-455f-4f57-ae0d-247061410bf7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "64f6be01-0e82-4d5d-be18-49dc52bc5216"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "40afba74-2ede-4a51-beda-537769f28770",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "84407fbf-bd5a-4fb9-a952-47d11e3e4f50"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a49ce3dc-db07-4b18-bb1e-b3b178782773",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d2b76117-d70a-4c7a-a61c-5c1f431b23b8"
                }
              }
            ]
          },
          {
            "id": "03400cf1-ee1d-472c-a712-8f1c11a2c7e0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "96b6f523-d105-42be-a392-1e4a798d32e3",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a9d4413-be54-494b-91ba-977597723610",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json();",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json();",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json();",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2828d64d-1c63-4dc7-8215-7286c7a398c7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "77be8a9d-8ab5-414b-9b73-bf2a8c85333b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "893c9eb3-1bca-4152-be9b-70224d280b63"
                    }
                  }
                ]
              },
              {
                "id": "ba92363b-6116-4b75-8b81-9464c1c7b106",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b785927-dbef-466e-8e46-3d6d951610bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6fb16fd3-f443-4327-91ec-140459e73421"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b6bcaf5b-c394-47da-a0de-d21b4cd6fb4a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fca1e56c-fe0c-4559-8d36-9e4a07995caa"
                    }
                  }
                ]
              },
              {
                "id": "2c44bfd9-6a29-4507-8583-84fd966a25ae",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9df7f192-d66b-4468-a705-b466d19857da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json();",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b4886cf5-a7c5-4023-a8a3-38f551a5e500"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "33f1d35e-30c6-4828-9f3b-eff4db2b34b6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6459c1c3-7a5d-4761-923b-19681f025d99"
                    }
                  }
                ]
              },
              {
                "id": "8c0e7524-20bb-4020-8968-70222211dad3",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ce63390-b5fe-41cd-b2d9-b56a59f1be4f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "730f8286-834a-46a0-b1ee-5e90c12999b1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d2df01a0-5d1c-40a7-94c7-0ca46ed14287",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "17cf9b9a-9f3f-45b8-977c-22ecc00e2c73"
                    }
                  }
                ]
              },
              {
                "id": "067cecff-d539-48bb-a345-afcfcccc7498",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4895d7df-eeae-4bf6-8675-ab71815803da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ec9785fe-f48f-4d91-a68c-b1d087d69569"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "499652ea-4929-4e4e-b131-1e927c4461e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "53de8c6e-f287-4471-80b5-eb01520b656a"
                    }
                  }
                ]
              },
              {
                "id": "d0714ace-85ff-4a0e-a05e-66873dc447b0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8973ac6e-9e4f-4267-8d7f-db51fd8b82c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2f9a9df2-23e1-4c18-9116-c7d7b61c627e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "67793c9c-fccc-41bb-9845-935d2882329f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "783abe9d-a21b-47e7-a634-59bbee1140df"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "16978c9d-1c22-4373-91d3-7a92093f4e85",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "da61a898-3c4e-4fdc-931d-009e667d9c7f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4b963929-b3ca-450f-ae5b-8d6742806d66",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b0094d96-8db3-46df-842e-cf5bbb8be210"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "96055975-3276-43cc-b990-b2779ee4e75b",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "08d11417-4f09-4c61-a459-5dc6cbf11399"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4228b91f-55cc-4102-9e05-00b92b289720",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e0225e6c-445f-49d6-9fc2-4f902828e004"
            }
          }
        ]
      },
      {
        "id": "6b6acd9d-db88-4ed1-97ff-4211299041a5",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "dfb97384-5d96-4312-be28-9d634c5cf4ea",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0e72b52d-550a-433d-9cd9-913a4070f7f4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e257a9d5-670d-400b-9e76-c6f8523f4ad2",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "598e91df-b75f-4e0a-93a8-aae67577923f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f99bb42a-2b8c-46aa-9056-5ed07a8438f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de5cb8a1-5e48-42dd-b05c-3bc521923f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e48ed7b-3511-487d-ab4a-bfbde159977c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d480e6e-ba9c-47fb-b87a-57f657767f0b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "933251c8-7ceb-4120-812a-2d06e67513b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dfc8e72-db06-4544-a170-b0f724e03a2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9af7f810-b255-4072-89d7-d8df8028f6ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "eab96475-659f-499a-9733-2706a464045f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb3e4315-7f2c-4b5d-a6d5-4e14c48414b9",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14fb6896-a195-428a-9fc5-0f081c53511a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "185e93c9-1f7f-4f26-be6f-8fa14069af99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f4fabc0-99a8-4689-a70b-87c093090aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "73e5389e-40cd-4238-928d-ce818a95402e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e85fad7b-addb-48e1-b9ea-fad0c3be7baa",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b40f2f64-5a25-49b6-8a3f-04315a9f5966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dfcdc53-c05d-4122-a07b-da36ba16dc45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a256b2d6-f129-4571-b531-0f88174ec1d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "57b29fbb-a77f-4af3-ad3a-6b2e6c22f6db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a3ad01-fc15-470b-9712-2b071338b9b3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed9784e-84a5-4b8e-81f1-f73970248aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ab2b464-9937-49a2-a67d-b83b10474c84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "936a1f2c-a352-4dd0-9216-112cd7fcc703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b31cddb3-4823-436f-8c88-552f43550c81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd973289-75b6-4ed6-979f-d2146e9f272b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e589b685-417b-44bb-bda5-9a24eb73b0f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3efd60a3-b5ac-49b3-b0e0-5bee9dc264c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f241aee-c811-4ded-9375-35b1dd206478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6558df12-9954-4334-a470-456edd21b305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e6a9167-ea03-402a-9c96-b43969236f2e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2f04446-b31e-425e-86b4-2071c90814ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "959f8bc4-4db3-42e3-a264-5410525809cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e8a641-6ecf-4544-9015-d44ab4523156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "01407d01-7dec-4a88-bdcc-07ae51566612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4142af60-be44-454a-a222-1693a43d712d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edbbda0a-83ee-4f4e-9a84-40730881eaf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d33ccd42-274f-4938-9a54-7bfa603aa74b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "217a3c67-ae7c-404f-809f-ebda1e94ee43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "50845a8a-cf02-4f87-af27-3ad39212a336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b7c5a70-da29-463c-8475-0d366dbe9052",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1f522f-68b9-4abd-acbe-652d48dea34e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5dd0923-db2d-4f15-8066-c77c1906bb3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c4c5948-20fe-4703-b1d6-3096f6405b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecf18a03-d575-42af-8471-1064f2f24f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "403a2fb8-d13a-44bf-875f-92eb8e1550ca",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42fb0377-6388-40b2-bac2-6ab7220c47be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e90c926e-2816-4c1a-b004-03473480ab44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe26ba27-5818-477c-ba10-f27be362e79f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e481920-a452-4c86-b44b-4685a88026ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8626842f-890a-483c-a615-8bb7912a7c32",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b622dcb-27f7-42bf-9a63-b32b4b89050f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a15e961-35e1-486f-b783-1e68a93006df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44edb8c8-da1b-498d-be74-c05ef622b441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d34356c5-5804-41c3-b109-4a6feef1af62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6daaf10d-d375-40eb-851d-44aaabe51bd8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5fde41c-99b8-4155-8f7f-541e2d4328af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de5bfcaf-3712-4d7e-8d3a-2309ae312a2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "065f8a8c-e414-49c3-ae98-e7071deee519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "24b519c8-ce14-4f22-8ef4-93728cd17b07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b977c68c-e6b8-4431-9f62-4dd75e5eaa4f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "635df12d-cadd-49e8-be5b-32a8915554ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35e5b08b-abd2-4956-9158-10885043d743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c83c3de3-48a0-4655-9bdf-9a31e296d61a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "911a473b-76b8-44d5-b321-5d838b0bcd95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ce88df-5d0e-46a5-a448-954b540351ba",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf3e4a6-407f-4cc2-ba40-91c676b82ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f30ee028-92c4-4659-96d7-d750ee0e6190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc3edde-40e1-4a13-9f63-847fed9d933a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fdc2b03-1b9e-4b06-aabc-b6f83393d994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79666ced-22fd-405d-a1aa-010aa0770f72",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8da7329-61e2-44e9-ae8d-20ad85031a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99331416-a3bd-4a25-91b1-092185b33a8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85446647-f4c9-4a82-8c44-64e1bf3c8f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbc68605-d8cb-4a56-ba35-4e53a86259ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef69964c-36a7-4114-9e2d-7f5e21286262",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b68760d1-f9df-4848-9bce-d81689fd0bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "558a04ab-ea24-42a8-ad94-464e11dccd7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a12ca66a-ffee-4a89-81ec-0089d8e33af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "493a5101-3a21-4369-b89c-7754f0b4d037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1c622e-5fd4-48c6-9093-a9588ec39aef",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a820668c-1127-4d66-93cb-72db67ea93fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d81f915-45ce-43f2-a4be-bde2a0b79ac0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40daf75e-9334-4666-950b-be0a150800af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfb2f505-3eca-48fd-b70d-7a7b6dbf473e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6acb590e-512f-4814-8e48-7549eec4eef9",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f317958b-05a7-4793-b2bc-1d873d9eb3b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a64a5bab-ac17-4077-b228-36ccce455e37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b11e78-ca13-4e95-b154-8d98d2bc7d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "25bc0559-ea41-4afc-ba6e-8d3e7b559961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38f0b4a4-1e3e-48c8-9d3a-6b5a59cfaa8d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced3c572-9770-4edf-aa0e-40888ac4c4ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51105bf5-f6c8-429b-964a-b3a43ecea293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adf3127f-22b8-4ff6-b6f9-5fab69f52fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0db71a30-eaf4-4718-9b53-6d17e789799f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "851d357b-3981-4d3b-b96b-b76e4a170da3",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd15476a-d059-4786-8995-64822e6c79ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d50bfd37-13f8-44fb-92bb-26bf6d20ad64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab09b626-55f3-4e08-bf52-1bd3b6bb378f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6e4532c-ceae-4e96-9b78-6b29f8d4c5de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9febbf-53c5-4adf-96ac-9de6b1022c01",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff33445-60f7-4574-864f-9e6975c7c57e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f86a606-32aa-4a80-8f8e-5c999fcb4c37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d07316a8-969e-4d40-9ec3-6710bee5497f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3760fdb5-a840-4fea-a508-014a55bb8648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc028bc2-0f6c-47e8-9f7e-07ebeb97adf4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd47a3e8-33c5-4dab-b5fa-02136052845c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58114379-06da-436a-8a3c-065d9dc9ee92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d06bdb21-260f-4c4b-b223-479d43fc12a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f898289-6b3a-4036-a14e-7a100d44c0ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac2d3866-2f22-4114-8d39-0c7c1b43afcc",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b69688ab-d42c-4f31-a5b8-ba73a7779bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fc94a63-bc48-4a5a-9245-405ba24dd586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "465e8381-1f77-4221-b452-3845a859c02d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3010d48-c264-406b-92ba-8c01f65c73ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db250bc1-53d4-484c-965a-2b55a003c485",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b61b31c-224b-4b98-b12e-fce23498b20a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f82861f-e448-4333-89bd-e54c1608b10a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aba1f5f-eb00-4c4d-a206-8ec37298d301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb8feb93-04cd-4673-8b19-31d1a5e27beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0c0c12e-e47d-404a-afad-df4a4218caca",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ac82e2-50dc-4f2e-87ef-cfee7519b597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdb8e60b-7b6c-4573-bb3e-1f8a07c7bd81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "629550fd-224e-4d18-914f-9139a47118de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1f4308e-81c9-4d4b-8ae0-d3c1ee47cf36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3318e68d-d612-4d31-812f-5ace4631fee9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3be6af5b-6c49-4368-afc8-0e51904e6263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6df1c5b-f6f4-4dd6-ac53-6e65a1c1fa29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33b3fe9-3019-4b57-96c2-a88192ace362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce255f4c-df92-4f74-82c7-c2918454282c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a69bd8b1-d753-4dec-af87-f76a462ad4df",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da516613-bcd3-4ca8-8512-91b41e00b625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e53b576-c0a5-4591-ad68-bed721a6bef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe5fd80-0ded-44c2-88e3-c5e9702061e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fa82e84-f6a8-474b-82cb-3c6e4728ef4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b66e08-0adb-479a-90f1-c45b0da76f80",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d432c5-04de-46d7-a04f-d3fbf3a14616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a223fb9e-94d0-42d6-ba35-1a83e60aea68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de72062-ca8c-4a43-8a0b-810a0bfa78ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "224f16c7-6d0f-420f-9cbc-9b279924f895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a46a7e64-dae7-4267-ab0f-207b4e6df6d5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f653d38f-0ccd-4b6f-8835-ca328b6acee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11b802c9-ff94-4ebb-9d67-1ebd58f6a3f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ea96501-9d88-47bb-b3cb-1a2d0a56c500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29e8b6fa-49e4-420e-ad9c-4f63ad60420b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "269ff054-98fe-48e0-8b05-ae11452ffa0e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc1830be-41cf-4edc-8dec-e43e7d178bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e3f946d-7777-405b-9027-e6c9728a91b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37fae7a9-a144-463a-8f02-b71caf384b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bf58b5a-41ee-4e4f-80d3-626dece9fb00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f034ce1-8246-4f75-99ca-7a27b5f32c5e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04b3a4a1-3e85-45c4-864d-957243d51d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "590036ab-9f6e-4d00-841f-ba306e4a1150"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "947dd3c8-06d1-49d9-84d2-ee44247215b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "438e23b0-65af-4c34-aea9-7b4693e1e0ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d07170b-002d-41d0-8942-85a7f675bc7f",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d294905-3174-4bae-84e8-fd7be6e38b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3de5ce2c-8cad-47e0-8c7d-d89e0ad7c79c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d80c2aa3-c936-47dc-a2b0-b363d64eca5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d361c5cc-7d54-457d-be11-8c738225683e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c2ba0953-af75-4e04-a843-658c6ba38f3c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "172be641-b580-411d-a4f6-e79fdcd07b16",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7866d7fe-416f-423a-bc4a-88b16e5477ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2c4c513-22e9-45d9-b9c8-1e018cc1ed8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "453f250b-f0d9-4970-906e-6b27645b2fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f6169e74-9fb4-45b7-917c-038172d4e5ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4d8cec1-1714-456f-b1b6-caddd99d8678",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d4db45b-8f80-4d9a-96e4-e10c0605d2cf",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "ac9909f4-6892-4fe8-a666-f881febab567"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c07ae3e6-914e-4d73-81a8-eb90387e86d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb97c2ad-8433-4100-9f3e-649cc16727a4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1bc2efcb-3432-4ef8-b2e2-21d7a749db10",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32904561-1ec9-4c42-9028-4f305a071533"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d72d1859-c3cc-4096-9a3c-ba4e19d2fda2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ee374024-38e1-4f1f-91f4-edf8f0b31dc7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f67a232a-942a-4330-9fdf-96a194f345a8",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "26ff2fa5-72e5-4d98-a471-caa11fc001e5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b4994bae-76a6-42fe-b17a-51392c3d089c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4ac8e78d-e335-4f15-b712-c370ea966da9"
            }
          }
        ]
      },
      {
        "id": "abbd1717-5d6f-411e-843c-9bcdf114e158",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "1d39d7ab-86d1-4976-aad0-d5edf3ce7ba2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "56012aa5-4234-4cc9-a468-584e2ec458f3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "792ae28c-c529-4806-8397-59cf8e8efca8",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e82e6e-42d0-4f6a-9f9f-417578b6dcf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a23adb04-4164-44c9-b3c8-746a598f25c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f898ac81-d1bf-4e2a-86b9-d3db5891350f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fdf03c1-9a39-4f20-a8c7-6df4ba13ef7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e49dc29-ae22-43e3-a619-843d8743b04a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd5dc80-0bf3-48a5-bf34-46fdb68df124",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6a079aa-cce8-44b0-8964-abf46688d22a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac7b3980-c6f6-405f-9aae-785c3afbcc25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a843716-0e9e-46fb-8fcf-d452e25e6f33",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ebd717d-821f-470e-acfe-4cf8e630ed5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dffb897-2336-4c91-a48d-9e07d86fd02d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a5719f-8729-43cb-a17f-5cd1c86934c4",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5704107-4e40-4bdf-bb33-6699d83eaac9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80f3bbcf-a2f0-4a1f-833f-7b1186e38b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4467a051-51d2-4eb5-9c5e-16a79989c546",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e50de4d-2a20-418e-a6da-b48c3ab0d0e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b454471-a4a3-4e03-879d-879de5406ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcba80bc-ce9d-44d5-ad9a-629f069b305a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "729248a8-8cb2-4a09-9e1d-0784b9c51290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4264b0e9-af40-4666-baa2-28ff83980c4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0810ced0-0563-401e-9721-e4d53bcbd27b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "170f7375-5e3f-45d0-a727-08fd2a16d15c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b92b8e39-b950-4d05-981a-1f5cc8fa4d88",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6768c63f-0d09-424b-bf30-503a97797b8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ad0f13c-6ad6-478f-ba08-36594ba6a812"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "649d7cc5-2cc0-4a68-9013-828a77aec40f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fc44850-74eb-43fa-8283-5ba6cccab4b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d45d10a9-d965-4bd8-8b32-16bfd81b6cb3",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5986e580-9072-413b-89eb-4ff653368a97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40c87b74-e0a0-4fb8-b728-d03728207505"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41206cc5-aa95-4d2d-905a-8122cb354e06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2139b23-66cd-4ff3-bab6-dd32aa1a10a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f26e9b23-fb9f-480b-bfde-66f9d68cdcbe",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "464c539b-0a6c-471b-b8fa-88974f8671ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f460bfb0-4c39-45da-9e28-a20c326ac885"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a887bf-7c06-4e77-b1dd-717ee7f40436",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a621d9a2-44f7-40b0-9086-42577fa8cfca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5880c0d9-1adb-45c1-bfdf-bcef3bab38b4",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9609548-bbba-437b-8303-ebd66af57c7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c939d81f-45a0-4491-bf37-64f04149d25e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b65ada8a-267e-46de-9317-a90bf6dec6ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4e07c34-8371-464e-a50a-a69a8db8c40b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f617ac72-dd8f-4641-86ab-31d70b071ea1",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93dd36b8-e129-4a3d-bd01-20b8b2391600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "497dbcfd-efd4-4290-a99d-3c3484149580"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00950106-db66-4e85-bcc4-70130526f38b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17cbf63b-626c-494c-ab5b-8a4f31120cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89395772-95c5-4294-a085-9610f2a0b7c9",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3552da3-8ccc-4ea1-afb2-47e5e7f4d5b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb24b1a2-c1d7-42cc-ab23-eda5e53379ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0e41f0-3cbe-4abe-8a1d-33f8c0b65adf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c6eb400-bc11-4135-8c75-684cb4fe3258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8320dd7c-134c-4415-8dd6-137f6bcfea83",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b82bd56-9692-416c-9719-f2819be26b3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d89b4ed-1b8b-4503-8b80-04602a51c5f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34479c65-d7b3-4d26-a180-db2e712d8186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d645e1b-f269-44c7-b664-0a6b23e823ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb8050a2-73d5-4686-93ac-2e36fec13058",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1447865f-4030-4033-a69b-6d0539ac5b55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e094a892-4d0c-436f-a421-001541601ec0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a6c87d-1975-4b5c-a69a-bb34869d402c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e6a1c25-5d15-4360-8aac-ba76faddd38b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cae10fe3-cd7e-4200-b1a1-e7ea5aed8ba8",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abab2b10-ba6b-4884-84d0-b0d396dcc7f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7452545e-35b8-4256-b5cc-28463ea22244"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad67fa6-ac93-4a7e-bb07-1e7444a7c639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec9b88a3-b243-436c-8b07-3b73a0aa1747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "665c9236-5e2f-48f3-a820-d1a3628baf10",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "326f0bb9-5e57-4c1d-8f7c-365e48ff8aff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f8471a1-e075-4d4a-9be1-e8178e6e71ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b86424f9-2f3d-49a9-b59b-25a7e335fee9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9411bc31-2c80-4a92-801c-bb1c7bbb9a28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a54a2e-7a73-45df-bfe2-ffe6356da0ec",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "669cbfb5-47bc-4adf-b1e3-c7c8eef1a7d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "804f85da-e514-4130-b232-cd1897bd19ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c3c5b4-14f3-4992-b628-c34f8b1959f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcb51547-2a1b-440a-a8b1-e703c4abf3db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cc17458-20f4-4823-8bfb-e7147dc0855a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a96a0624-455d-41f9-b718-f35d4bff8b95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aeee235-f79f-4b9f-8530-10224e5fbd60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d7818c-8fa0-44c0-88b0-1861c88293fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47ef9392-3fe8-43a0-81d3-8ec64af56b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61ea1f7e-ba9e-4d27-8684-e2f565ae5ae2",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aa0a6f1-7c84-45cb-b3af-a13e997c9b9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16b32e97-a00a-4501-b88d-a35e05bb4291"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b85c9f-ff2f-4e48-9003-3fdf46a0b920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc58ecbc-bbe8-4fbe-bfc4-77dbd107f0e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ef5776-194b-4790-882e-efc369d594ce",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80fb983a-dcea-4cfb-82bd-1b7e4831798b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8be9adca-9719-4763-9031-f4a571f68b54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c85ad88e-be63-49e6-8feb-5cdc65ee5825",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "510c8bf0-0972-4ec6-8e7d-90f586affa03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41827183-7bd4-4b66-a2cc-403c9d611bee",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98e0fdbc-959e-4e87-8bf2-d8f2c76fa252",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8929275d-81f1-4675-b504-eb7b91364a07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9701c2e5-13bb-4dba-9846-90cbf6b54c19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c476c688-e017-42b1-99c6-b570b88ac444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "581ade14-2ebe-409e-a0bb-582fa6a23725",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cce47d8-b7cb-481f-8f87-d72a59e4c786",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4baca14a-d72d-4f96-a98a-6d73470351a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc09f5f-6ae7-4527-9ed4-36ddd2b93fbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2922a161-3091-4d92-b2dd-c49cf68f4fde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d2e8af-9cd7-4630-8dab-0663837e76cb",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab7f836-77b5-4768-8e3e-7d20e57094da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c290c89c-a411-49b0-949b-e34085367c21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee0b1880-5279-43ba-acd6-802548a0a205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15e6dc10-0bc1-4988-9ddb-70b53581aaba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2010ed3a-558a-48d0-b14d-0cd18b268192",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6cd8e48-fa41-47ec-afb4-3be08b6abe64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cafc5e91-c552-4882-9a68-6f3731cb6a0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f92040fb-0f7f-49b7-9b1f-c0c7e3b82aa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0a8cc9c-cd53-47fa-9ca1-8b8f823c4b3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3455f96c-79e5-49e7-96bb-378e25edc1fa",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "200aa84a-eaba-41c3-9981-84d93f35c5d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b685d4a8-7718-4c3d-9b9c-a4fbeafbb9dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd75ce15-4f78-40d1-964a-48c69fe497e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44ae1a71-a621-49df-939b-131de3d70eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e4469cd-3bc5-4e02-a620-60df9bcd131d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a69a5619-88f0-432a-b8f2-18f60da3bfcf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50d922d0-e10c-455d-b989-e698f085e513"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25efbce-1a84-441e-81bd-82b8cc6cceb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0321f92d-d954-4dd3-93e9-4aaca3c5cba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78a1dd6a-cb85-4d5d-b1bb-fccb71e2b8d4",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f943d956-d3c8-44cf-85be-5caf550d92a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07e05f4c-1c7b-4abb-bfd5-32d8abef6c94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "988c939b-137e-41ff-a3ac-8ec774979dde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83fde7f3-61ef-4104-a56c-e589f281e3c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b386d8a-c0e0-495c-9769-7d62a77a744d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f93fb7-8bb3-4e1c-b606-381f6b577946",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c111ec1-48a4-49db-85e2-e4fb658699ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f7195b-4c33-4ac4-ae63-622d2cb03870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf6d497b-d5bd-41ec-909b-6a25a81f9e7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81bcc08a-f267-4d16-beae-dd2d6fc4dd35",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "017dda7b-a363-4386-bd3a-6820bf51431c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c956c342-8d27-431d-812d-5408afd22d88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f8b198-8ac4-49b8-a6c2-68f7dcf861bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dbd2e7e-9a6f-4e9e-a40a-180b7f46b5df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c02e5936-f1e2-4653-a0dd-975d0e80323e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ae0e11-979a-46f6-bc39-eb011585412f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2156acf-18eb-4afe-8b0d-610b31e15202"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c7c3577-b067-401a-8de0-d7be15c44880",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ac8f42b-1f72-4b02-979d-8d95c62c466c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "421fd03c-9fe1-4009-a3db-dfdcc8007efa",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c51910-751e-49f1-932b-141d2d4eb397",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f359d6a6-4c9f-4227-9097-9f79794214e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4298b9ba-250d-4aa3-bf65-a717c197b1a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06f9328e-62f4-44ef-8bb0-af9a4d50885f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "603ac4f5-9920-40fc-a44e-7292b6d14854",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0cba03a-45dc-4be4-9986-19f6e4943c9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b72c08fb-330e-476b-ae1a-f94eb96dd8bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2500182-df8c-4fde-919e-0e226724a84f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d558eca-389c-4dd6-8055-f3f0f21d6911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c67eb2d3-7bdc-430c-864b-3c95cb73822c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "707f9492-19c9-4ffb-8756-29cf34a90792",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d022b559-79af-423a-afc3-c77bd1f65edf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02a115e4-ff1c-4e14-a0c8-e21ed47c727d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "567c62d2-fee9-4e91-81c6-8d11469ede2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6e6f396-6869-403f-b06d-9716c5202d9a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a0ac013-606c-4dbc-805d-91b58ef09848",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1ba1bc1-0148-45a7-8c59-7061c43841b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d585664-5726-41b6-9d6f-c39fc8bc635c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97507011-455c-4520-beb6-caaa7c59f4b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d073e044-f809-4f7e-8db3-3653282f2163",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bacf0c65-0347-4ac2-9066-0e80e9b7f5fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15aeec58-b1c8-40eb-994e-4404a8eda24d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be00fbf7-6cdb-4b17-8066-e8abd3048434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e5f36ce-83a1-4b6e-83a7-1542df69c3b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7338f41d-7b39-4c29-b7a5-5b18c64cc544",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "532c62e4-575a-467b-b27b-f1bd89e12c04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28e31170-2fae-403b-b899-c3653198d9b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c16836-163b-4044-bf9d-b46a59aa7cf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbc481b3-b173-4fbb-b507-fdb793884596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc1e4890-75c2-4cc1-99e2-b11bd3a6ba40",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ff94772-dcda-4b14-8063-8775da810c23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2546a748-bfd7-4420-8ffa-95a14637aea3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb78a4a-6bd7-45d0-857f-5200eb0d09bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff1816da-1023-4311-89d9-4fb35aefd855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b3eebe-1731-4b83-9579-ab427b67fa46",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72f66b3a-1df4-4214-b1a4-835a21e1ac6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b6db585-ea2c-41c4-819d-a58607a7a6b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34bc33ea-b601-4836-8cbf-42c6082420a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02a1b5cc-8f89-49c5-9644-ced36aa55015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bef9d2e-b5b8-4c88-91d8-7e691e9330fa",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c4fb19-7d83-4815-9d9d-3acdbe7bd487",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c08829a-dbd7-475b-9b3b-1749d27be33d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02c63389-9478-4464-8bc6-90e76823212c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d960ff6-c383-4d8c-b5c9-4149ad518e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e6e2afe-8ae8-4eab-a31a-ee69a0f22fbc",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4493aa2-2558-4f98-8d1a-e4caea2e2710",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ec50697-64de-4167-bd9f-a05b28d99290"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a74598-5363-4974-8309-1b8c3184a2c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72c1fabe-6269-4557-b1ab-99ad7e25ab73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2152d2dd-3595-43a0-8845-9e42805c57d0",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de3717d9-2698-46bf-a551-435c9bb28fa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a340b6a-9915-45c5-b875-fb6c0645bfb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b07fdd4c-49d2-4ffa-ae20-8fb2d8f4c98f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3249ea2c-df48-4542-b725-d12425144ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aceeb55-a2ae-4c85-a56a-15aa1d0706da",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47fbe2ac-2ea2-4802-9874-37925d22d52d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "316bde07-e86e-4478-8422-3ab722573e31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae34e78-a6d1-4d09-90dc-c57f688e42fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d28234a0-94c4-4462-8e0b-4e0573e9e82c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a64e24-3023-4649-a038-7ee857ed559b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea1fdbf-17e5-439a-a252-dda95559e146",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "747e1432-e018-4e1e-9515-f36addae4d0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97db233e-e5ba-4ff4-8e22-8d5902d34f73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d286e98a-6192-4a21-8d44-ca525e4ade5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8180960-b95d-4e65-8c96-3b4c63b9b157",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e42dd2c6-5bac-4471-adf7-01a6cdb49ad9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1667aa76-bbca-425b-9e9c-38dd7659251f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1bb4625-8e89-4c15-afe6-617b67ce5484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83c12273-64cb-4b19-ba93-68d25f6e7f0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c720f924-43fe-471d-af9e-38b0994b4436",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "379add33-fcc8-45b4-94f1-86bea883663d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bb078f6-bf96-411b-bca2-cfac945963b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b74875-e46e-4286-8693-872881546e51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb2f9442-a53d-48e7-b81d-c3f18b002668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc4a4e63-5fca-4284-827b-0512de8d9a5d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f7478a-2219-4483-89e7-6bc2ad591ab3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6a0b59e-dcda-4829-8af1-f4d4a791eee9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d0d74ef-2f8a-48ae-ad00-eb45babedb99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fa3d54b-4124-4a95-99d9-c9b618c84201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "741f111d-f4a9-4e54-abd6-e5fb22ee5e23",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a5b1ac9-4e25-403b-8a04-e88011c4e298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45289c04-71c0-4d8f-8eb5-9e141b00823a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "042b02e0-3726-44d3-8af2-2a85628960ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79a46a63-e9fd-4909-a532-4bd482f9595a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ccba26e-df20-4409-baf5-e5ef7ba742e4",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1bf6602-fb8e-4751-bfa9-c0cc4025fcbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c9be2a6-a41e-494b-8e17-4f7c13a7bb14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0223798-a71d-41de-a7b3-8242761f2eee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24882a7d-3e3e-4837-8117-4e9ab4d4c8db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77215217-2bc2-4ef8-845e-099ac5ba5d97",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c4ca87b-675a-4973-8728-baf37cad8bd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d119d80e-c04e-49d5-8412-dec7ed9b149a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c723565-baf9-47b9-899b-dcdd32a033b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80a5fe64-5d0b-433a-81d8-a8ebd81eef24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58706db4-1547-42ed-a62c-dd8284367565",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbfeff28-ef04-476a-b6aa-ad99ba0b5d36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7edc9ccf-e9ad-40c8-8138-87dda6cf3651"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d35d8f8-4e06-477a-aea3-05f71d515c71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47bcb754-100f-4e9a-97ef-40a1b3a3b3c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81396f6b-328e-43a0-95ac-c8b581fabee0",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e19495c8-5d85-4644-b015-e99f24225078",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88c4ec60-c9b3-4bbf-b0bd-059d592071f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ae42fe-ed25-4f7b-b00e-088d066c3f44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9db03f91-8eaa-46e1-8e6f-c7d3ba283877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2087060-43e0-42fb-9820-036b12127fd3",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc0a3f5b-d009-435b-87ab-441b2433873a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98321c2c-74d6-4e08-b355-405887e3f7d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7419b212-852f-41a4-9af2-d37a664990ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b37be030-8a47-441b-8f4c-6a5c0202d4ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c846217-8ec7-4311-a646-07453408750c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd12b3a-24b4-4531-8182-a2485bd79c2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5b81e0c-efa1-455f-9972-111dbc343d26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77454345-538b-4ef3-bcd4-c8253f25987d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63f81a38-d8cc-4c5a-9116-7e86351122a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1bf29cc-455a-4990-ba77-07562a021598",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca96c5ba-ca8f-493a-be40-1e0fcd78a119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6bfe49a-2738-4720-bf1c-1ce1cf5ffd7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "629da7c8-2de8-4d5f-bfb4-3dc28513317e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40d1d10a-f5de-4d84-8ea5-fa5513637ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84c8545f-440e-4ec2-9e54-f7c15ab08f4e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da3e553-09cd-4323-856b-9088a7c6ceef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d262de6-b9c1-44e0-86e7-bec058a53572"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a4b07d4-1b46-474b-9240-bb83f065b72e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f0073f2-2cb0-45b1-967a-2c5d1dacede2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5344731a-2238-4b45-a760-1d9a83733553",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb8e796-5eae-43f4-b527-1fbe34626710",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25dc7f0e-49cc-4a3f-8d8d-4248c572ef25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a24a30-a2d9-4089-b629-0a4a3fc836e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5274dc3d-2bd1-4e6b-aaa7-531884377615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e288683-11fc-4b4a-908e-ee9e9fbc1e99",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3144d3c9-433b-4be3-96e3-a0af5f7cdc15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4060ee30-c17b-4180-b065-78800842b5cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f4dcb8-1187-4476-ad05-412da1c2d27a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2257e5e2-694a-4702-8683-8d36a33dcf8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ec7e20f-a005-4c70-ad1c-738a2a012863",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40bcf850-5225-4545-a5fe-1c8bf11b72c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c02c4463-44b6-4001-acc3-bfccd5785ccb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc56e7d-e402-48e2-b625-952e98e06984",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acfab174-b6a5-44c9-98aa-594ad6777ab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e25ec4e-ebc3-444f-82bd-84cb1345f567",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "537e003c-aca2-498e-87f1-ae73d4c5fab4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50613de2-d6de-40c4-89f9-3278121988cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce6671f-db9a-47e4-b8d5-acbbb61d32d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d6b85a5-3265-4d90-99fc-c2dbe9538af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ce46ae-17c5-4801-b751-1fd19ac5d4be",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "948e0690-ed73-405e-b97c-7166883ee20a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67e30105-9894-4ba8-b66b-54286f797d23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be170ede-33b4-4fcc-aa1d-14ac83fddd3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cc95140-db8e-407e-a03d-6946ed2691fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48541fc2-8a91-4b10-acd9-9e94d7578ee9",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fe6ee8e-3c29-4433-ba86-6b47e77f77be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3a29ed1-4b7b-4b71-aa52-bb740b081e5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65cdad41-dd9a-4922-8eea-d235686e4e96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4513d345-74fb-4b62-8c56-fdb0a9bd7b7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03809484-c35c-47ee-b7c8-a3354cb94045",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb87095-8b36-446c-9e54-52778f976dc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebe5f59e-4d79-462d-96f3-20110e7260a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2734c5fc-42cd-450f-973f-9eb6bb9163e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a0c1730-4685-4627-af4a-0a7b3f3f2bba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3435af5-d0f8-4288-9523-e516b1ea7cb1",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "035fe70f-a012-4df0-8d53-37de54c57385",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5111147d-0c7e-4ab4-8d0f-be82c24ab625"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca3f3b1-aaf3-492e-95b6-467a563918d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45c6607d-8da4-4a44-b212-46f77068a47f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "287ae47b-a22d-49d2-8934-d0482fa2768f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f95981-fd2b-4462-a6c1-388f9da685e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0c843b5-de3b-4a71-b58d-041185a753c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da79d2bc-7628-4f3d-8236-3d84903154ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c594f55c-a76c-4f52-98dc-940cb5dbccee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07df9456-7854-4fcc-b68b-e9c36eb1f38b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c137f7f-18df-4b69-a94b-9758a850eb50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7af827c7-3b8b-4888-b69c-7370dcd7e91b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ec30bb-d6d9-4258-aa06-54d94c7c790c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9aad397-94a5-47a2-97f7-290cbf4a5017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a061549-8bde-4616-bbbb-dee1a3f3da10",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5372b3e8-8137-44ec-9f9e-d90f597e3755",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a38405f-1e35-4596-8bf7-9d47b4d91f51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d48351-5f48-4500-a5fb-0be055e84ae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10a8eea8-b844-4980-aec8-5850f755e186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6dd4e4a-a320-4d79-acec-89bca0dc0f19",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e247852-ed9f-483b-8340-fbbc65917a29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b04c87cb-1eb4-4077-950f-52b61e884e89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a1182c4-268c-42f0-b591-70fcaf23b69b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0909cd27-a7d6-4e0a-9faf-5c6bc455d47c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf951ee-860f-470f-aabd-99d0c61cb7f0",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c647318b-c220-4295-ad97-c04845ac2467",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8747117a-b13f-42c3-bbbd-f8ed8d3e1dbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca59c6b3-2a3e-42a6-9d01-5ac4085821cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36bc0c69-507e-41b5-a24f-e8fbbfdfced8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "892d696d-366f-4dd0-b468-6a089ec32f05",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc9405ff-f8b5-43f7-90b5-f411d5bb30dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9acb2b25-084e-4ab3-8cf3-29b9146c274f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f1b76c-578c-4d86-891b-c37251d2b817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb487fad-f857-4036-8812-379861c4349c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d17d8e6-0a63-4cdc-a38a-ac3fc14084c8",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "057b0a29-d4cd-4111-9785-e2abe8e60679",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be979975-66d6-40a0-a0a7-9fa413a412a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca3d15cf-db98-4e4d-a466-a9be146e91c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0abcb04d-085f-4bd4-9f03-b786d0433d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d35014-a6c2-4dce-9e9b-c61d37fac293",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb4f868-1de2-4d99-b536-0c632391c1d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcf14d81-62d4-4d9b-a670-f099fa3e4134"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70dec59c-e1d7-4c5d-83e6-02dca2ffe309",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "850b3bb8-f9e6-4e30-8a0d-c316cd237b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1744d59-0628-4776-bcab-53bb5c84a452",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a7dda3-484b-46ad-b7b3-321889a60dbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8226fc4-0dfa-4943-b8a5-9980a1e97cb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "263e19ce-7bfb-4023-92f2-4192226dff63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc5b3715-2246-425c-be81-fee19a2423e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f4e6b31-1e51-4ab8-9cd6-4d6a1573e2b2",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b59fd222-aa16-4703-b596-a742bc4d1e9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72258847-cc93-43e7-9712-12d85966a4d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f3b71a-3427-424b-bcac-30d8e768818d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66b9c8e9-9549-439b-b743-1a131df85fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfb2379a-f756-4c1f-8c65-e0aca572af8a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa54299d-5978-4dfe-bb9d-9c09ba175cda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "424bd53b-bbf0-4716-9810-397670b70db9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a488783e-33ac-4cbd-9839-c209d9e8b5a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d4e685a-6440-45a0-8a18-ff4740d3323a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "644ec063-8729-41e4-8a5a-2057c3f3ed54",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a91a5a26-e4db-41f2-96be-28390b7e3b99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abe839e0-b491-49da-ab57-b19068b49814"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb6a008-a8db-47fa-90ae-ea8730d7bd00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85db0101-9a7d-4d84-a1c9-28343cf6ab96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe4a6cd-a1d3-4cfc-97d0-15b7defb08a8",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da08eac3-a573-40a8-a079-bdb88de1f6c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b567caba-5cf2-4875-832d-f165b1c7427e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d3b6ff7-4d68-4fbf-943e-d10b5372e69b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "304ace18-fdca-4887-aaf8-0fecca7b41f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e43527-8ea6-46f7-842b-45e72837e6d4",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe75ff88-4dfe-4a0a-bec8-88e7f20de92a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04e16a68-e930-48ce-8a91-1ca32c311242"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e14edd4d-4987-4468-85d9-52df39cbf723",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eedd3c41-bcf9-40fc-9d5a-399e3dd58b95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b88cade-17d9-4f1b-8ec8-b3cef184840b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3530d7fb-b4e7-4817-8d6f-fc58819b82b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39602896-f27f-4fca-a764-204aedbe5e3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e970d614-bb3e-46e7-86a3-a660a91c8226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f165486-e190-4b15-b509-6326595dc5b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "787f7dcc-185b-4a97-a925-66c88246b08f",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f0103e9-1448-49a7-a090-7c1bae79d5d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c1a3829-1862-4bf4-bb8d-e1dbab44ae36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd6079b-3d76-4304-95ee-adf741713786",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67439999-31b5-4ddf-9fd2-856f2cc2ccb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c15a8ab5-5c29-4d21-84dd-7be82d61b95b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99085a50-f155-40f3-a9b0-e14f0c06f231",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71517c76-f6d0-4f08-b316-e794990fca2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "037d1c54-c048-4a4e-acdb-4ad8f272b9b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a80b9b8a-3d23-4b44-93b6-fd5168809d1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da8b95ba-45d8-4d6b-b174-7f806ad868c4",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "300e0dc5-81d7-4f32-93bd-cbf122885e0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34afa162-b2b7-4e89-abba-41bc6f0ebf61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1afcded-0ab3-44ce-bda1-f6c1656626d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e712ae24-a7a6-482f-b46c-ccbacbf6dc9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95fea4bb-980c-44e6-93a3-cd0286e7f3a4",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf1ec1d9-323a-4c92-9f6a-24a7832722e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5abab5a-888c-4a13-a436-24842e8fb7e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79cbda02-8c7f-4176-98e4-60957d07a3cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c84d4523-264c-4026-84b8-96e57caa253f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "323a04a0-adbf-441e-aa23-b3b3358809ea",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a41074bf-aaef-4e43-95b1-9bcc12f95488",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8cde655-f31f-4330-93cc-1ff0a89b3556"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cdc61e9-e643-44db-8b4b-db802b7dca5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79e5bfc0-0a91-4cd4-afd8-8141dce8c4ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ae09a6-aa0d-4985-b52b-609e2d6085ad",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee72e4c4-e71c-46b4-b259-513491899e9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16f05b87-c3d5-44f8-acca-74bcc0903dfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db376fb8-4bb4-4404-bc8a-11cde5076c30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "101696db-f6aa-4e56-99dd-7812fb496076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90a58826-79e5-49b3-aaf8-b688b70d2e3a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "556446fd-2fe6-4722-9155-5e5d9d3ef23d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0840f00d-1a3c-416c-9ee4-90ace76214fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e18f014-1b9c-45a3-89dc-28bcbb8a5476",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6df1e065-f43b-4c56-8334-dbaad777f687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9447aaf0-831a-4e5d-938e-a34b9104245e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd4b961-9fb4-47c4-bb14-978105040955",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ae99a55-36d0-436b-8af0-996008a12b17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19264817-4697-43aa-b495-43df0e75b976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "614e0abf-b410-42d0-9ca2-e2f3090e7e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd38613f-b96f-4350-9e50-a7f3f547f2c5",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd22b14-8b2f-46ba-8670-f27310396ea6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40d53617-76c9-4dd7-8ad6-9061a73fbc5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c3bb75-13fe-4e76-b4c0-1fa1c75a0af4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29ac0295-2130-49fa-830b-c44cefe443de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd9bd9c-fe73-4811-965f-af72650e2e31",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "797629fe-851b-4168-a8c0-c1a634ce1c6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e48ccb3f-198e-41d4-84f2-b809a33d8e19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae1ad1d-607a-43cb-90ad-88b2873c4a0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f29615ca-6aca-49c2-9baa-792f2cf3329a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bfbcbf8-d107-484f-971f-71a32288a28e",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b3594ef-ad08-401b-96e6-ed48285ddb22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "617ec658-6e2f-4f33-9da5-920465f8353d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d2790d7-93ad-462f-a5e7-2e545be46ac9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7676401e-0f20-447c-9433-da3dc79a4df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c6c2205-148a-4bb2-b382-85351d3bf48b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7744b08-1923-482b-bc20-035eec53725b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a1dec26-9c9d-46d8-b4c6-24bec3a10d8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8777039-72cb-4ae5-a676-2e572e2efb64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b847f12-2833-4086-815c-3b11fafec60f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a93f7b01-6597-4452-87c6-14d7bc4b50ec",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f64c818e-6d90-4bc8-b150-c65ea49d9537",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54b22d2c-6b02-4edc-931b-eff769ef7bbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f6462a-678d-44bc-8e86-c91742f2ba36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8960bc8d-1b40-4fff-8525-30277524c05e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e393c7-7ed2-40f5-b5cf-5945e7aad01a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0887f0cc-1245-476b-b5c0-54a987a5ce58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29687de2-61e0-4d0d-9354-91cef3576de5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f18e79e-a383-44f2-8d09-239ef20c6364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a70b80b-c4a7-42bd-9f2d-7ccd132fcce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c135e0-cf68-45c6-a59b-c428ad68fba6",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fbbcd60-6afc-4318-9834-7ad66bdb24b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0dd1e13-9b5e-4c0c-876f-f0ecae4bace2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0081c5a-8e3a-44ea-ad15-9693bc75ac2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39073ecc-6b06-4ec1-8e9f-3c055d23cddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "505f813c-a850-48de-8b32-dfc638aea6a7",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "064b1a12-e694-471d-b4fa-73ca5f9224db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccaacadf-6b6c-44fb-a6a5-4784957617f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d8ae2db-fd00-43c7-a333-201d66628e01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "175fe4a0-720b-4658-a9f7-08ef330ba620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de554383-348e-47db-9c43-8aac0798087f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de5190d7-d1ed-4288-b49c-92444a55a28d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67c5d797-772c-44a0-8fd4-6ad4e961aeb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "160ed092-2c24-482b-8536-a87a8153c105",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7fd4985-fc53-4a28-a92e-a7b4e521b6cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec2838c-d437-44c5-8269-854bd8278f31",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9950d986-4285-4b4c-9d31-e9282e94db3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71e996b7-3b65-44c1-bf93-0b636e8ed3a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "777a8088-1172-4375-a690-3f0a6e6ef6dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "217b1edf-5be7-4313-9098-5d3aebb81ea7"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "73e421c8-e8a5-4777-b9f0-024a60dfa8d8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1f887642-f3b4-4a1e-927a-3877332bd234"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b0afe07-31f9-44c1-a549-e68fc8f7e5b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e0c67757-cf10-4144-9758-3271eacfb613"
                    }
                  }
                ]
              },
              {
                "id": "d3699293-71c7-4278-a819-965de8710eec",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "72e1f710-ff80-4aa0-b497-3db3333f22c9",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a3eaaa-9eca-400b-8fde-d3bf02c4d176",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d0d838ef-8628-4f65-8880-47de1a06290f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "184fbda2-ec01-4809-b61e-90e461d7cee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "efab0ccd-2160-459b-a1a6-784a3e4937eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff1dba6-72ad-4521-9097-f578544215d1",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df6cc61-5647-4496-a5df-7d556f4c7e0c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b19d32ac-8aef-499f-9a55-4c19086a6d91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab162ad-dc4e-4d0e-8c60-af8d26611618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b6efe5da-73ef-4186-8c0e-509630e63c77"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f76534ae-f388-49f4-8c99-361f964d4c3e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa124c6c-0127-46ee-8489-fca275e30459"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "558b426d-637f-4424-8d45-e8be1e5f35d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "17bc73cc-b02b-4f4e-a2fe-9df62a0fc8f1"
                    }
                  }
                ]
              }
            ],
            "event": []
          },
          {
            "id": "89c973b5-3b4c-4ada-9a81-8a868e4a0a32",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cbacad02-8599-4b59-8e06-c254bd994097",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "473b9e16-4155-4149-a1ad-f13bba2c9ae8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1b85d21f-08be-4c83-8950-35a2fb42c943"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "def7c288-1b39-4905-99fe-a9051beeb9b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f077e011-82a5-4095-8f27-fb49693ba2d6"
                    }
                  }
                ]
              },
              {
                "id": "487c201f-3937-417b-9ebd-965c163ff5f8",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8c54fa3-5321-4c6e-be56-de84f2b82a59",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "895d3054-c6ab-4c60-a8a5-bfd90cf6cf0e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e114466a-b472-4a41-8b79-24dbb502a5c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a1ca55f-5bbe-486f-a5cd-048497fb4b96"
                    }
                  }
                ]
              },
              {
                "id": "dcb821b2-d8dc-4fb3-9523-4eb71953fec6",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1032d1c1-7d9a-4fcd-a1c6-ccc6818c8924",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a84f7135-b04c-49a5-8b67-feaa378c2295"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55afb9c6-aaea-463f-bdcc-166375f8b060",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a3c1dfc5-e1c4-488b-be05-b86811a43e9b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "570496d4-84bd-45c3-b94e-a8741463ca85",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "6907f734-9844-41ec-97fc-bae0e5cefc85"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6b232cc8-e37d-46d0-8d9e-0640254be899",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ec11076b-6b67-4d5c-a482-ada4bb70d8c8"
            }
          }
        ]
      },
      {
        "id": "14b1173d-1970-450a-94d7-9453256bb6a2",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f3d76d87-de60-4864-ad34-1d3fa63b0659",
            "name": "Negative Testing",
            "item": [
              {
                "id": "10e78853-2cf0-476f-af53-bd62efa32fdd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a69800a7-e034-4df8-93fc-dc1c93ea2556",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5784166-1841-4927-8998-937fac3531a8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3e9f4a97-1c00-4877-85a3-32476396e853"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f72c07c1-70e5-435d-ad0a-f46c24a470fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "567f9438-a144-4338-8ab8-1829c31d8917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74b05141-60cd-4c52-a288-d76fc79e517b",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb49d80-fdb9-4a9c-b3d2-36804b586dbf",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2bd95657-09c1-4d00-81e6-deb0d59cf67d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "111f0c28-546d-4705-85cd-95a6c6dbdcd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7832fb2e-f0d6-4635-aa65-c355501e1dd3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d5f323f9-cf73-459a-86c0-13308daefc92",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52c94e9d-9e17-4075-89df-7f4afa611096"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eb80bfe3-1ca6-4f84-be1d-1d09d6586634",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5bf42935-1ecf-477c-bb02-38b87e6a0676"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1de437e2-d701-4be9-8e35-fe6672611f9b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e17b9dd5-d6d6-4722-a9e3-8507de2d9b46"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0cba63c4-7437-4254-974c-98d3a543b162",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "962482c0-092f-4f3e-b3d7-492fd365b69a"
            }
          }
        ]
      },
      {
        "id": "86f64bae-43b9-4e87-939c-8cadb72f97ce",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "570972b3-f10a-4879-992f-71f8af421048",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d1a635cc-2269-49b7-b034-553a6daddac2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5c38d4cd-51a6-4703-b957-72ddd000de18",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eddfa92c-33f8-4f76-b1e7-dacfb41a43aa",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a9a2a552-f1a7-4ea2-8db6-ebf3bb4b64b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae4833f-8aad-449d-844a-d3b2b2a8debb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "044cdd85-499c-4730-bc37-50cce2d450be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e057b2e-234c-48d2-9809-db3788af2565",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c895ea9-db5c-4b44-abd0-2b0424c7bb2d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ce4eafba-096b-438c-8870-4455531524be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9344f4a-7634-4cb9-bdda-3e6dd70ce2ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "617e18d6-4892-4701-b96f-884bc2ab05e1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d6683f3-9111-4172-a671-b99091bd028a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "490d8fff-59c7-4c2f-93c0-d682c46458b5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e1693b6b-bdb6-44db-a9ff-1fd0f0c5c860",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d3a1b492-267e-4f3c-b78c-58ef1b96cafb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c5a8904f-2ccf-4830-a561-08c49ad87ce8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a72c22a7-c576-40e6-9206-aed682c3768e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e1a43d23-8173-4c0b-af1b-50f3df85690f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "53a5a797-d32d-459f-bb69-e3a43538d274"
            }
          }
        ]
      },
      {
        "id": "298a1991-bd99-41db-9e60-88be3748fea0",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "f1b9b626-b299-4054-8d95-f4618d18e304",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9c1ba5b7-7f6c-4b6a-9002-27f2498223a0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "19cb31a6-2420-43b7-8c99-d215c62120b6",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07b34aba-e3cf-4abb-934b-40527daaa6fd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b24206d6-02ab-46b1-b92e-3c2deed53b03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89658aeb-5c1b-490a-ac5a-4ad1015b18a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b8247b2d-237a-43f4-9781-d2067d59f8da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd2b07ff-8d61-4482-8070-3c8e1954bacb",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e77c502-cb98-45b0-8c14-b47b055949ef",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4b5bec99-ed7a-42d0-9067-a36348e37dab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d8c2a4-667a-4342-8a59-61ebfdc970c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "128b078e-6ea7-4de0-afdf-10b3dbf528fd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7707a402-365a-4a4d-8b2f-b0a52de40f05",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68a8137e-ee30-4134-a8e0-fda3e02979db"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ea006e4-7e7b-4f71-9a47-d8c7c781b5b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4036b11d-aa5c-454e-acbb-067dd8a72d73"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cd10fe1b-dbf6-49a2-8fa0-967102769825",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ad38f244-de51-4104-bcb8-97b79137888f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f628579b-9e87-4f4e-9a3e-1d39e47c5922",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eb8a8e0b-c98d-4448-81bb-a30a8ec6493d"
            }
          }
        ]
      },
      {
        "id": "ae7928f7-c495-496b-b4d2-8687814d1232",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3f017352-977e-4534-8ad9-2a409dafd7e7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "942c7ae9-3c52-4b57-8fff-61c364505ffc",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "fa983250-7d47-46f7-acf4-a507eb752b88",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9118a00f-5b95-43f3-aa23-55578e2020c6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f5f70655-8c36-4c65-ac25-cbf9cb4aa0c6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 505,
        "pending": 0,
        "failed": 6
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 443.68076923076916,
      "responseMin": 15,
      "responseMax": 6038,
      "responseSd": 494.92640674318034,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1667523091370,
      "completed": 1667523219708
    },
    "executions": [
      {
        "id": "b2aa1a65-d00f-4529-9507-907f03eb6baf",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "30b6c9ca-ede0-46eb-bad5-6530a8e8d42b",
          "httpRequestId": "f7bf9699-4dbb-48de-b27f-58cf4a8dc60b"
        },
        "item": {
          "id": "b2aa1a65-d00f-4529-9507-907f03eb6baf",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "cc642b4d-4eeb-4749-bc13-7e2d9c995acc",
          "status": "OK",
          "code": 200,
          "responseTime": 106,
          "responseSize": 0
        }
      },
      {
        "id": "164eab4b-948a-438e-a984-62671876384a",
        "cursor": {
          "ref": "3458f8ef-322b-4290-bb4f-c255c180915f",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "a097fda9-6b36-4eab-a9fa-cb92f18b3273"
        },
        "item": {
          "id": "164eab4b-948a-438e-a984-62671876384a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c8414e8f-3c2e-4d53-9e73-9164a1a43a05",
          "status": "OK",
          "code": 200,
          "responseTime": 15,
          "responseSize": 0
        }
      },
      {
        "id": "3985e84d-44dd-4a1d-aa08-c416a99dd273",
        "cursor": {
          "ref": "0a98710b-2677-4fc3-b5ab-1e7cca77960a",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "dd37647e-911e-4c4b-8f7d-e322ad8d4572"
        },
        "item": {
          "id": "3985e84d-44dd-4a1d-aa08-c416a99dd273",
          "name": "did_json"
        },
        "response": {
          "id": "f041f438-8a90-47ed-9dc0-c357d5045738",
          "status": "OK",
          "code": 200,
          "responseTime": 931,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ee4ed9-090e-4c6b-a26c-0eaa6618fc9e",
        "cursor": {
          "ref": "353bdb8d-09f2-4a96-89d4-160c985669e7",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "70ccfcf3-b7b8-4ca6-b2a2-439b5a2a2407"
        },
        "item": {
          "id": "94ee4ed9-090e-4c6b-a26c-0eaa6618fc9e",
          "name": "did:invalid"
        },
        "response": {
          "id": "898bbca8-be5e-44e4-a265-31c986faaaef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 772,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ee4ed9-090e-4c6b-a26c-0eaa6618fc9e",
        "cursor": {
          "ref": "353bdb8d-09f2-4a96-89d4-160c985669e7",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "70ccfcf3-b7b8-4ca6-b2a2-439b5a2a2407"
        },
        "item": {
          "id": "94ee4ed9-090e-4c6b-a26c-0eaa6618fc9e",
          "name": "did:invalid"
        },
        "response": {
          "id": "898bbca8-be5e-44e4-a265-31c986faaaef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 772,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8955d457-54dd-4755-9123-8b415145263b",
        "cursor": {
          "ref": "562fa31d-80a5-4c57-a21d-b0510b6bf162",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c6281599-8e27-4f75-8ff9-b6280dc6ff6c"
        },
        "item": {
          "id": "8955d457-54dd-4755-9123-8b415145263b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "19b53f3e-d8a0-480c-906a-03245fea3a19",
          "status": "Not Found",
          "code": 404,
          "responseTime": 596,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61893cc0-a0b6-44ca-9552-9bc476fa51bd",
        "cursor": {
          "ref": "c98315d0-ed9c-4371-adc6-d19d50b61d22",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "44648e79-349e-4357-acef-76b5d3de2aee"
        },
        "item": {
          "id": "61893cc0-a0b6-44ca-9552-9bc476fa51bd",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "ca0fa0a5-c113-4581-b07a-be7ffc59068c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 430,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ded6d776-0d68-426c-8205-f47247d566cc",
        "cursor": {
          "ref": "c214571e-40e2-4b29-a1ac-68098d601e71",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ed4b0850-90bc-4b8e-9702-bdb9d8bfd4cc"
        },
        "item": {
          "id": "ded6d776-0d68-426c-8205-f47247d566cc",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "f103f215-85ae-4c97-a8e3-d8a921fc8454",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feae8cee-049b-4ec5-982b-b048eabe6f6d",
        "cursor": {
          "ref": "2d63d534-4f6a-4287-94ff-c0e78ae139c8",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8be54f9e-f874-471f-b336-9a9fb8564d62"
        },
        "item": {
          "id": "feae8cee-049b-4ec5-982b-b048eabe6f6d",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "f770a285-ed08-4f48-98e2-7eee59d8db5d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 385,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feae8cee-049b-4ec5-982b-b048eabe6f6d",
        "cursor": {
          "ref": "2d63d534-4f6a-4287-94ff-c0e78ae139c8",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8be54f9e-f874-471f-b336-9a9fb8564d62"
        },
        "item": {
          "id": "feae8cee-049b-4ec5-982b-b048eabe6f6d",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "f770a285-ed08-4f48-98e2-7eee59d8db5d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 385,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e341d9-91c5-415c-b40d-e6613a0464f6",
        "cursor": {
          "ref": "236183ac-f51b-498b-97b0-88534dbb91f0",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b958c2e9-36c4-469d-a23f-347cb034e986"
        },
        "item": {
          "id": "c4e341d9-91c5-415c-b40d-e6613a0464f6",
          "name": "identifiers"
        },
        "response": {
          "id": "3741fcd9-a2e3-4791-ac0b-0f738d477aac",
          "status": "OK",
          "code": 200,
          "responseTime": 600,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a4287c-76d1-409e-ade3-0682f0290953",
        "cursor": {
          "ref": "dedefd0a-cfaf-4831-9f2e-045cfc3008e8",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "751f1c8a-a7dc-4a11-bf52-cb69594f664f"
        },
        "item": {
          "id": "b3a4287c-76d1-409e-ade3-0682f0290953",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9c456333-1cfc-4525-9586-73512ea778a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a4287c-76d1-409e-ade3-0682f0290953",
        "cursor": {
          "ref": "dedefd0a-cfaf-4831-9f2e-045cfc3008e8",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "751f1c8a-a7dc-4a11-bf52-cb69594f664f"
        },
        "item": {
          "id": "b3a4287c-76d1-409e-ade3-0682f0290953",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9c456333-1cfc-4525-9586-73512ea778a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83912953-54f4-4e15-a3f0-04571a869a18",
        "cursor": {
          "ref": "021b3fa1-6386-49b8-ac77-d8022e78f8c8",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "4be36dee-dae5-4952-8cc2-354abd4af62e"
        },
        "item": {
          "id": "83912953-54f4-4e15-a3f0-04571a869a18",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "0668f634-1917-43de-948a-ca6b52297149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a854ecd1-c337-43c0-ad33-98a4dc0da212",
        "cursor": {
          "ref": "33071034-c887-4638-88f6-651924c86b47",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "94b82aee-54b5-4f09-85ee-b99cd2f23b21"
        },
        "item": {
          "id": "a854ecd1-c337-43c0-ad33-98a4dc0da212",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "fcea3f0a-998c-4685-b566-fb5894b78260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41088c1b-87d6-4bc3-bd51-d08c301a38d0",
        "cursor": {
          "ref": "083501cb-47a0-47ee-9927-f52dd3524751",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "7e7a591d-a462-4997-8d1d-53e42220f080"
        },
        "item": {
          "id": "41088c1b-87d6-4bc3-bd51-d08c301a38d0",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "29abaa23-41c4-4856-884c-e9691f5d39b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ee05eb-7768-4ab0-95a5-322fa2f0c20a",
        "cursor": {
          "ref": "7da3577f-4c27-4fcf-aa0c-d10836500462",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9da7812f-020a-44c2-a2c6-852261b3728f"
        },
        "item": {
          "id": "35ee05eb-7768-4ab0-95a5-322fa2f0c20a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b2e6da28-3b41-460a-8a27-4cff6968a0f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 678
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a1ec36-9a28-4d41-ae6b-e91804d414fb",
        "cursor": {
          "ref": "b59fee68-027a-4f8f-973e-43cdc73f88b8",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "fde4e346-9060-4a5b-87a0-7b88a88c1a1b"
        },
        "item": {
          "id": "c5a1ec36-9a28-4d41-ae6b-e91804d414fb",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "55522d93-a8a0-43e3-ac51-ee5341bd95c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e30bd6c9-3458-4ac2-bdc2-4957d528da0b",
        "cursor": {
          "ref": "f8bcf7fb-93bf-4063-908e-8af2084b2597",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "4c2b71bb-2253-46ab-bc53-9d5d90d5e9b6"
        },
        "item": {
          "id": "e30bd6c9-3458-4ac2-bdc2-4957d528da0b",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e3ae7870-3c13-423f-a29d-eb08777dca24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4533afed-ad71-412c-9269-732dc868d43a",
        "cursor": {
          "ref": "d5d23374-5c72-44a0-a291-04adbd9e421c",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "af41e7e1-200f-4ccd-badb-b36c328d6eae"
        },
        "item": {
          "id": "4533afed-ad71-412c-9269-732dc868d43a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "4032e05a-d218-4f0d-be32-3f6f756ca2a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d5bd8f-a22c-4f12-a532-037b79b65d45",
        "cursor": {
          "ref": "c9ed7fa0-b69c-4e53-b808-d09dadabb31a",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "61b5553b-85c6-45b3-bc08-8ecbac52280f"
        },
        "item": {
          "id": "27d5bd8f-a22c-4f12-a532-037b79b65d45",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "5e97a14e-9296-4946-aa7a-1018e4b215a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 950
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "310e0762-f964-4c3b-b8af-daac02c99800",
        "cursor": {
          "ref": "ee91a67b-b632-490d-b8f2-da64a879e332",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f9f656b9-9bb0-4c82-b9aa-d1946faa594d"
        },
        "item": {
          "id": "310e0762-f964-4c3b-b8af-daac02c99800",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "620cf04f-87c9-408a-999a-470bc3453cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 947
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4d62d7f-6c86-40af-b615-d3eea0cbff33",
        "cursor": {
          "ref": "d4e316fc-86ab-46fa-ac8b-a363266a7fc1",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f627741c-24ca-4ac7-bd95-aca8bc8f3ff9"
        },
        "item": {
          "id": "c4d62d7f-6c86-40af-b615-d3eea0cbff33",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b2f821d7-cddc-4d85-bdf8-739ab8a56c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4feeac5-b1cd-43b6-be88-bc6e2a5bd6ac",
        "cursor": {
          "ref": "06e29732-dc14-4d8a-b5f2-9a07f9516aac",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3437960f-afdc-48a4-8b53-14388dddf542"
        },
        "item": {
          "id": "f4feeac5-b1cd-43b6-be88-bc6e2a5bd6ac",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "98427f2b-5b4a-4950-bd4b-22f463ff8c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1faa6865-860f-444a-b240-f88d2da84369",
        "cursor": {
          "ref": "bd352e84-e60b-4102-b331-685befaff65d",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e04dee5c-67f2-41d9-aecf-43c59b90c554"
        },
        "item": {
          "id": "1faa6865-860f-444a-b240-f88d2da84369",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b178a400-d081-49f8-a929-f7a97702e0d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b412426f-b105-4d00-88a3-3cdef36f96c0",
        "cursor": {
          "ref": "bbaaac14-100a-48c3-b662-befad4f19ba2",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "4f38a3d7-bc42-4e75-9192-e69fc52b1b4d"
        },
        "item": {
          "id": "b412426f-b105-4d00-88a3-3cdef36f96c0",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "09b40fa1-ed81-4158-b651-a27c2c536f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6276570-7ee2-405f-a4af-bd54ff5b8150",
        "cursor": {
          "ref": "b1ce633b-0e1c-40e3-8c2e-d4d4afd9b24e",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f68cd18c-83b3-4c1c-8d94-563c8ce39c6a"
        },
        "item": {
          "id": "a6276570-7ee2-405f-a4af-bd54ff5b8150",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e762850f-1256-49bb-88a8-b8f92faeb6e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a54cebd6-10eb-46a5-b0b1-a59bb114a4c5",
        "cursor": {
          "ref": "7c7a6b50-c221-4406-8a0b-6672542a3413",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "d5a4c20b-1f9a-4e8d-88a4-649fb5f094e2"
        },
        "item": {
          "id": "a54cebd6-10eb-46a5-b0b1-a59bb114a4c5",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "737a045e-0101-469f-b8a9-4aa4d546bddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d170ddb-5430-4a9b-97ff-9a52429906cd",
        "cursor": {
          "ref": "33e2998a-e4c4-46bb-8adf-45f7c7fd33eb",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "15129a7d-c2bb-4ffc-9a0a-689abf240ee9"
        },
        "item": {
          "id": "9d170ddb-5430-4a9b-97ff-9a52429906cd",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "9b0bd8b8-4830-4b24-bb97-bd390ecc820e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb24cfe4-6b3a-4584-b31c-0dd67966bd2f",
        "cursor": {
          "ref": "18f4d79e-59c8-4733-b54c-cdef9c337ebe",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ff7398f1-81d3-45cf-8884-1812aef11e82"
        },
        "item": {
          "id": "bb24cfe4-6b3a-4584-b31c-0dd67966bd2f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "26afad19-e9f0-4896-abe9-b6e0f6e67e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b72fbda6-0eec-44f6-b58f-3c625e4ff93b",
        "cursor": {
          "ref": "6b6f9197-1a88-4ad2-8bab-1682c2cb754e",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "5e8c3524-a560-4136-9bf1-8b5f1897fb58"
        },
        "item": {
          "id": "b72fbda6-0eec-44f6-b58f-3c625e4ff93b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8a82012f-cd27-4b04-9a3c-fe6716b767fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7af6816d-91ae-4d9a-954c-6c3849bba782",
        "cursor": {
          "ref": "94663fc8-098a-455c-ba4f-03ec44b72b30",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "5aac8e78-22c9-4d37-b249-a3aec3430514"
        },
        "item": {
          "id": "7af6816d-91ae-4d9a-954c-6c3849bba782",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "0899cc7b-e209-4f1a-bc78-7d73a43ca9f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5946970-65f7-4fe4-8ee1-d31312df365f",
        "cursor": {
          "ref": "6f37c033-3370-461d-a463-8c66b37ae285",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "206adf1b-1b4a-4c70-a558-103df3d2a710"
        },
        "item": {
          "id": "c5946970-65f7-4fe4-8ee1-d31312df365f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "1e8c5300-204b-478e-9d55-8f01bea834c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d5d142d-f150-4fb6-bfc6-b25c43bbb3a2",
        "cursor": {
          "ref": "53503de2-3688-4ccd-bdde-241e8d3f5da9",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c7e3df76-f4ff-4647-bdbd-e2d5566ba24d"
        },
        "item": {
          "id": "0d5d142d-f150-4fb6-bfc6-b25c43bbb3a2",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "5eed5d17-cfca-42a5-a9a0-ecb8a65e55ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e84c68e-01cb-4460-8312-8c257ea37646",
        "cursor": {
          "ref": "92b9ffd5-9e4a-486f-9edb-07679267dd00",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "5bbfdf34-ecff-4da1-930a-52bced955dad"
        },
        "item": {
          "id": "2e84c68e-01cb-4460-8312-8c257ea37646",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "b565afa7-2f7f-44e1-9196-7e4c9ac45b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e70d7a00-ce71-4848-83ef-6158769f534c",
        "cursor": {
          "ref": "6090dceb-fb9e-4e46-a3f8-06a034f85cd3",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "3bc12409-bc4a-4844-aee9-899757b5ac5b"
        },
        "item": {
          "id": "e70d7a00-ce71-4848-83ef-6158769f534c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "90422546-13dd-4622-b368-6a5581b22fea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d19c8a16-e0e8-40a4-9ff3-282ee237908a",
        "cursor": {
          "ref": "1117a97f-13a4-494a-9508-86b52d851bd7",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "5a18091e-ba56-48ce-a2ba-129fb9e87005"
        },
        "item": {
          "id": "d19c8a16-e0e8-40a4-9ff3-282ee237908a",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "50d82824-d668-4dc4-a2dd-43fa1b530c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c57c64e-5011-4424-bbfe-1a4e52e0930b",
        "cursor": {
          "ref": "efa9f260-dc1a-45c7-a1c3-4ea10b3791d2",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "25dbdcef-41db-4487-ba35-cad36c580b9c"
        },
        "item": {
          "id": "6c57c64e-5011-4424-bbfe-1a4e52e0930b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "0f973fbd-1583-4248-97cc-b328b5ce3c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc2d79eb-f4bf-446c-b9b1-525b1affc8e1",
        "cursor": {
          "ref": "88552452-ba7e-4496-9ef6-407cf22a9a26",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f0a91e5f-e8a3-4006-b8e5-3a4eb02c972b"
        },
        "item": {
          "id": "dc2d79eb-f4bf-446c-b9b1-525b1affc8e1",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "620de76a-602b-4c40-a5ce-3c1630994e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33d12ae-64c4-4f82-9eb5-5dd7b58b49c1",
        "cursor": {
          "ref": "bb1558ea-8802-4f0d-874f-1fc26d27bbd1",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "23a54eed-1401-4752-bf8c-0c6274e1c976"
        },
        "item": {
          "id": "a33d12ae-64c4-4f82-9eb5-5dd7b58b49c1",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d7479433-ff6b-41c3-8db3-f59b4f88e191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b8f38c-d114-43b7-8061-605a6e6149d0",
        "cursor": {
          "ref": "7c8f6e17-8c0e-408e-97ca-c508344921db",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d13afa1f-102f-4927-9d23-af58a872ad2e"
        },
        "item": {
          "id": "d3b8f38c-d114-43b7-8061-605a6e6149d0",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "eee94282-15d7-4d4b-aa8d-9879605f2e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e80e6d5-0b59-426e-8cba-2a04273838f8",
        "cursor": {
          "ref": "fb62d8a0-3d1e-4dee-ac8a-2ad69c596549",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3c9e24b4-2c21-4e5b-80b0-a46cc09b3176"
        },
        "item": {
          "id": "8e80e6d5-0b59-426e-8cba-2a04273838f8",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9460921e-0c0c-41d1-86b4-2bafdb690090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 428,
          "responseSize": 466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39d08df-7f87-4d43-aa1c-e840b4c1591e",
        "cursor": {
          "ref": "26c74096-5d82-4ac7-bf42-c2e44023d745",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f3dac00d-cd37-46cc-9b7f-6aaf44e413ec"
        },
        "item": {
          "id": "b39d08df-7f87-4d43-aa1c-e840b4c1591e",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "11c6f7f7-1b7d-4939-b916-83411c1360c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "831ac59e-0276-4c68-ad6f-87405926083e",
        "cursor": {
          "ref": "f55c74fe-e42c-44d6-a885-6158d752c0d0",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5c935387-e508-492a-9905-2ab87b10cbea"
        },
        "item": {
          "id": "831ac59e-0276-4c68-ad6f-87405926083e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d64fa58d-93da-4520-9197-2add38be6eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "149027dd-c4b8-4282-b5b0-5db44114a80a",
        "cursor": {
          "ref": "897be192-cf33-4825-ac41-9c32445c4cce",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "6ee47d87-9993-49ec-9e24-6bbd8c30ff89"
        },
        "item": {
          "id": "149027dd-c4b8-4282-b5b0-5db44114a80a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "bc9fdcc3-896b-47c9-911e-c3e57cdc37cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 892
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c8de71-4141-4262-a715-34f706ada09f",
        "cursor": {
          "ref": "d8ef031f-f40d-4273-aee2-b3a4a5414bb9",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "299d518c-d38d-41f4-9726-03d2c32d7984"
        },
        "item": {
          "id": "19c8de71-4141-4262-a715-34f706ada09f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a9df2799-aeb0-4e6d-93a3-a36ca3851b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6577dd8-4106-433a-b11d-04eeafaaf138",
        "cursor": {
          "ref": "f65ba63d-6d41-4e98-baf9-ecee4cc74cc7",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "48933db0-26f1-4238-b6dd-cab9cf3ed35a"
        },
        "item": {
          "id": "b6577dd8-4106-433a-b11d-04eeafaaf138",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c90a0c77-a1dd-4141-8262-43e175d335fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b74d714-be3a-4fc2-8126-11cf1f50f181",
        "cursor": {
          "ref": "2f2ab110-9597-4e37-811e-186644202013",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "bbbfb5a7-cb20-4c71-8b1f-9ba616ffc5d1"
        },
        "item": {
          "id": "2b74d714-be3a-4fc2-8126-11cf1f50f181",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a0c737dc-2c06-4481-9fc2-9dbdfc083e20",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 545,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acfba808-370f-4331-b6f6-632e847867b9",
        "cursor": {
          "ref": "3aa541bf-6e8d-4e55-be29-69eb8f5a2a6b",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "cc349627-6f02-4b9b-98ff-2c89b9ecd54f"
        },
        "item": {
          "id": "acfba808-370f-4331-b6f6-632e847867b9",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d68aca30-1c08-4ee2-83d7-03736e751bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de2b9207-472e-48e3-915e-19cdd1cb902a",
        "cursor": {
          "ref": "e9cc9b20-ea56-42ea-bcc8-547268d0a621",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "98032c01-5594-4939-9888-cba81f5d30ee"
        },
        "item": {
          "id": "de2b9207-472e-48e3-915e-19cdd1cb902a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b61b2f3e-fcc4-40b7-ba8e-b9bb1ef86ba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 1305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b6b4f0-ec8a-4171-871b-5a735dbd0299",
        "cursor": {
          "ref": "2db57d17-7c56-4f91-a51e-a39fc9fe29b0",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "169709ac-60b5-485e-9dc8-89eed1f8c01a"
        },
        "item": {
          "id": "97b6b4f0-ec8a-4171-871b-5a735dbd0299",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "42d0e7fc-17c9-4ff7-993a-d8d3242ba973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b53098-6109-437e-a99b-4a9a7b568aed",
        "cursor": {
          "ref": "adcc5fdd-7d5c-40d2-8941-7824f2516389",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "82da5b9e-0956-41df-8008-43948f6505be"
        },
        "item": {
          "id": "e1b53098-6109-437e-a99b-4a9a7b568aed",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1b6b4ed2-0997-4349-9b53-ac231c2d5b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "451d117d-dd4d-488e-98c0-1c912cdcdd36",
        "cursor": {
          "ref": "29b353e0-50ae-4872-88ea-a6a8941cade0",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3ad74481-ef2b-49bc-92ac-b466115dd047"
        },
        "item": {
          "id": "451d117d-dd4d-488e-98c0-1c912cdcdd36",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "16021cc7-8781-428b-8b18-78e9bd8a3423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a62489bc-16ef-4324-bdc2-569358c2a917",
        "cursor": {
          "ref": "e63502fb-f4a0-4709-9cff-d564bce7514e",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "1f851d84-1ad4-4899-a842-4a034212676b"
        },
        "item": {
          "id": "a62489bc-16ef-4324-bdc2-569358c2a917",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d9d6a0c5-7ba4-434f-a8a3-c074a075d759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 1636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b1d259-c51f-4f1e-9479-ff27465024e8",
        "cursor": {
          "ref": "0918e4f9-5d3f-4608-81d4-726622f51d28",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7a3e1b79-5309-4fdd-89ad-6267985f5053"
        },
        "item": {
          "id": "45b1d259-c51f-4f1e-9479-ff27465024e8",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "85baa452-41e6-414f-81e3-bcdb3b9195ec",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 460,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d14e9e-c82b-4914-8196-838882b4fd4c",
        "cursor": {
          "ref": "fe3fc5f4-5d43-49f1-8c34-fd473db4c5c2",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "8f66e606-40bd-4d00-b280-d1b686194bbe"
        },
        "item": {
          "id": "26d14e9e-c82b-4914-8196-838882b4fd4c",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e8368d51-25d5-4d0d-b859-e6b436ea7e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 524
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed10099f-9de3-42fc-aab0-eb38d1d880bb",
        "cursor": {
          "ref": "9144d97c-401d-49b1-86df-0d84ebdc6f07",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "4295a0ef-1513-416c-9a39-3261c76f6969"
        },
        "item": {
          "id": "ed10099f-9de3-42fc-aab0-eb38d1d880bb",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "6eb28149-8423-47f6-a594-eb2eef7e60ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 548
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf95c51d-272d-4186-ae44-6835fd48b6d2",
        "cursor": {
          "ref": "4fd1ecec-fc39-47f0-b38f-db765d783b30",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "15ca8fb2-2f72-4c69-ae7e-1c5546500886"
        },
        "item": {
          "id": "cf95c51d-272d-4186-ae44-6835fd48b6d2",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "74f4f206-d7bc-4787-aab3-8d533fe55c56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7892b6ce-30a1-4923-86e7-b4defec32f59",
        "cursor": {
          "ref": "d77939f3-4c77-44ad-a45b-c11d048a65bd",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ff98e90c-a185-4c66-a7f9-fc2676cd71df"
        },
        "item": {
          "id": "7892b6ce-30a1-4923-86e7-b4defec32f59",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "83fb14d8-1362-4e23-9f07-6c8d40200117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9390ef1b-b96a-4685-b2d5-2e8148b107be",
        "cursor": {
          "ref": "48b41827-b7ac-4635-8a5b-715129c8b03a",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "cf7c8c64-ddff-4e1b-8933-60768cd03044"
        },
        "item": {
          "id": "9390ef1b-b96a-4685-b2d5-2e8148b107be",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "3d15ed53-c1f4-4f25-bbc1-da6cea2ecd41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "786cca70-5ec7-4d49-af94-d4fa9dfaeda6",
        "cursor": {
          "ref": "16f91f71-cb44-49ac-827d-0e7dc6811db4",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b2f95736-4d13-4ec7-bcf1-c9a302560f93"
        },
        "item": {
          "id": "786cca70-5ec7-4d49-af94-d4fa9dfaeda6",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "385264b3-0160-49aa-bcb2-c9d2e4dbbb3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12d1451c-9e41-42f7-9814-c701e0b3cb19",
        "cursor": {
          "ref": "a67a1488-b065-4ae0-9f95-e0ac8d052fd4",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "1ea4fdc1-b48f-4356-b595-8f6e1a15909f"
        },
        "item": {
          "id": "12d1451c-9e41-42f7-9814-c701e0b3cb19",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "67ced6f8-0e67-48cb-95b6-d1201cbcb7cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e087d4-69d2-40f1-a44b-fcfbdc77023d",
        "cursor": {
          "ref": "df7cfa90-f99e-495c-8a69-2f2896670d54",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "2488fad2-07ef-4e69-b67b-6e328e45fa69"
        },
        "item": {
          "id": "e9e087d4-69d2-40f1-a44b-fcfbdc77023d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8b7f2918-f89b-441c-8076-ff5177e25043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be3150d2-3acf-4275-bf2c-65bdcdb0e1bf",
        "cursor": {
          "ref": "7199ab5c-ae40-417d-8ba5-dafd175f23c7",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "5b1d28b3-af2f-4c82-9496-1f05052a55c0"
        },
        "item": {
          "id": "be3150d2-3acf-4275-bf2c-65bdcdb0e1bf",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e2e8bafc-0bc5-45a3-a360-043b2b70c88d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d8707cb-a4f3-45d0-b17e-79e64c89c8ee",
        "cursor": {
          "ref": "27633670-76cb-42bf-8200-c5b497a4e034",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "3cb74466-cb92-4429-b16f-ab88624c1bd8"
        },
        "item": {
          "id": "5d8707cb-a4f3-45d0-b17e-79e64c89c8ee",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a4e381dd-3269-425c-8fa4-3a433aff6b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea95e334-60be-42f1-8fa2-7b91e354105d",
        "cursor": {
          "ref": "0f0e7463-3de6-40ea-b888-0d65189d7e0e",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ae92a5b9-5766-4dd1-b43e-09a8fe6b18a1"
        },
        "item": {
          "id": "ea95e334-60be-42f1-8fa2-7b91e354105d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "dd3a6965-72ac-4383-aaa8-79c9df27c4d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 826
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c34dde-e7c4-4a87-8564-f08151bf85eb",
        "cursor": {
          "ref": "30369d9b-14c1-41c8-b56b-3b0785fde522",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "18d6fd09-d803-4261-8335-02b9202aeb5c"
        },
        "item": {
          "id": "50c34dde-e7c4-4a87-8564-f08151bf85eb",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "8376ffbb-e675-450d-9b83-781db2bfc022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 828
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f52ddeb9-dea4-46d2-8b54-c2b5d6d9f3e2",
        "cursor": {
          "ref": "8a930d57-59de-446a-b41b-ff23365faa9f",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b3bab40e-a513-4d18-a554-40ac8c822a31"
        },
        "item": {
          "id": "f52ddeb9-dea4-46d2-8b54-c2b5d6d9f3e2",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "891b8654-aaf5-4221-8db1-0bda7fe3ea9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 841
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd221bd-4f03-4c0c-a1f4-d1fa1518df3a",
        "cursor": {
          "ref": "6903b49a-a6fe-46bc-bcfc-2a4ab30234b9",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "424250b7-65be-493f-8840-2d41a267a79e"
        },
        "item": {
          "id": "1fd221bd-4f03-4c0c-a1f4-d1fa1518df3a",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "517ae291-f50d-4d3a-9176-58bff1688a27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79afc98a-4f32-48c9-b038-7a6c1419acc7",
        "cursor": {
          "ref": "85379252-257a-430b-9133-a736f0326547",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d2c7dd91-eb64-43ac-9110-161532485b47"
        },
        "item": {
          "id": "79afc98a-4f32-48c9-b038-7a6c1419acc7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "c86c4caf-34e9-4355-805b-b436bc2a197d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a3fcde-fd42-4cb7-abbd-103f3245fcef",
        "cursor": {
          "ref": "5e4f1a2b-7ce6-4a20-bc24-7cc01109b326",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f2f04b50-5bec-4e15-beb4-fdbba12d4d45"
        },
        "item": {
          "id": "89a3fcde-fd42-4cb7-abbd-103f3245fcef",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "131d7df9-d3cd-4db9-9aba-957775e93890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a952efc6-1924-402c-8b20-d7321ec6c2c2",
        "cursor": {
          "ref": "afbb207d-5be5-4624-872e-1f1a11a40a32",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "45185dfd-3f24-4027-ba36-92372dda62ea"
        },
        "item": {
          "id": "a952efc6-1924-402c-8b20-d7321ec6c2c2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "e395eba7-a539-49a8-a7b9-4caa6a82ce54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 1320
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92e6085f-c90f-4ba6-b360-53fa76d13b20",
        "cursor": {
          "ref": "c36f80f7-9631-4e5b-bbe8-4c4bfb284c00",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3b36e5e3-2f86-4e34-9c0f-7ae61eccc044"
        },
        "item": {
          "id": "92e6085f-c90f-4ba6-b360-53fa76d13b20",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "fb570bf9-6e2c-4bf6-99e9-99f7b648875e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b53a29c-e24c-4bd9-bdf4-02ccbed4e05a",
        "cursor": {
          "ref": "ac1ec30c-57fa-4d41-8350-2ace5dae6ff1",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "78a7f53c-afcf-46e6-8259-115309ec80b6"
        },
        "item": {
          "id": "7b53a29c-e24c-4bd9-bdf4-02ccbed4e05a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "3ba98ea7-9a8d-42dd-8f66-3cea91a87424",
          "status": "Created",
          "code": 201,
          "responseTime": 4082,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:71)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:71)"
            }
          }
        ]
      },
      {
        "id": "2899a0f2-2d85-40fe-a0e4-600fe95c71db",
        "cursor": {
          "ref": "8c5e2db1-74f6-4039-b6ef-1047635c3600",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a14cf9af-c920-4fcf-a83e-790abb08df2c"
        },
        "item": {
          "id": "2899a0f2-2d85-40fe-a0e4-600fe95c71db",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "15e7938e-86b1-4e0c-8393-3f5939d95793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8754971-ccad-4a5d-b63d-7c861b3369aa",
        "cursor": {
          "ref": "e61210a1-25b2-4666-9e48-03fe66e11207",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "69134cc7-6559-404a-88e7-e235be4ddac7"
        },
        "item": {
          "id": "f8754971-ccad-4a5d-b63d-7c861b3369aa",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "aa75e170-0e3f-4fe6-b8e1-d76717936a6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df4d0cfd-1116-4a18-80c2-a2b93c329346",
        "cursor": {
          "ref": "bcf23d46-4507-4715-a133-18dcf0c1f534",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "7ada7e94-8b8e-4148-8d30-266e18d2425b"
        },
        "item": {
          "id": "df4d0cfd-1116-4a18-80c2-a2b93c329346",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "6fd0f844-942b-4f44-884a-f15dac4df587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2878346-1b78-4e86-880b-01be806d479f",
        "cursor": {
          "ref": "6cfd349b-6cbc-4b70-bf7c-923b2348dc9b",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "eaa20315-0fce-470f-8027-abaffe56bf92"
        },
        "item": {
          "id": "f2878346-1b78-4e86-880b-01be806d479f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "6bee6a7e-d56d-4df7-bc60-3fa3c67d712b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adfbf4a5-8690-4e97-abad-a1edb854779b",
        "cursor": {
          "ref": "302be54e-f676-4da0-bdd7-4675b2de74e2",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "a3435a51-6947-4b1a-9133-89dca90c1062"
        },
        "item": {
          "id": "adfbf4a5-8690-4e97-abad-a1edb854779b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "20a3561a-6d90-487f-a27e-446b76958900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f9a92b9-4ab4-427b-89f7-50f6ae2f86e9",
        "cursor": {
          "ref": "499c378d-611f-48fe-af33-c011734e26e1",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "47867223-e363-4544-b7e6-2d2f8b063f60"
        },
        "item": {
          "id": "3f9a92b9-4ab4-427b-89f7-50f6ae2f86e9",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "babf566b-e49a-4c91-ab06-b11b3e08c798",
          "status": "Created",
          "code": 201,
          "responseTime": 6038,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:77)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:77)"
            }
          }
        ]
      },
      {
        "id": "ff853f3d-aaa2-49b1-a702-9b732e7d34bb",
        "cursor": {
          "ref": "c06fae28-e838-41a6-83ca-43d757274f05",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "db74d0d9-3c5e-491d-a4c4-cf8f79162351"
        },
        "item": {
          "id": "ff853f3d-aaa2-49b1-a702-9b732e7d34bb",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "4f1d68d9-e97d-4504-afc4-a39db530ee6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcba89eb-531f-4410-9968-03998833d106",
        "cursor": {
          "ref": "46fa56dc-cda0-43d9-ad47-737a03c2d108",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "625138ed-d4fe-4986-880a-afffc24b9201"
        },
        "item": {
          "id": "bcba89eb-531f-4410-9968-03998833d106",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6c2cbc6b-0a0c-460e-b32d-c24e0543b6f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 771,
          "responseSize": 510
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "469c703d-a13f-43a1-b3c0-affc439bfff5",
        "cursor": {
          "ref": "56549c31-66a3-4535-a3fc-b594f9258138",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "bd71057b-ba71-435b-bafa-d2469241e6de"
        },
        "item": {
          "id": "469c703d-a13f-43a1-b3c0-affc439bfff5",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "64766860-f51b-40ef-ad71-ddbe32c7174c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "162642b0-e3af-458e-a526-ee01fb483ce1",
        "cursor": {
          "ref": "139b83ee-ba5a-44d0-827c-8d2dab7d047a",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6c84f39b-f82e-44d2-8eff-5d992edd9a46"
        },
        "item": {
          "id": "162642b0-e3af-458e-a526-ee01fb483ce1",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e0a9eb64-e393-48f4-a82b-35596a30544d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ad596e-3ff2-44c3-9ed8-4314a6ff7f01",
        "cursor": {
          "ref": "a626669b-0318-467f-be13-c73c3cad9d25",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "21cf6aad-2b81-4d30-9221-43612c63ca0b"
        },
        "item": {
          "id": "e6ad596e-3ff2-44c3-9ed8-4314a6ff7f01",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "172a6e16-85a9-4aa7-afec-d0c68601169f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b12c4fa-025b-43ec-9bdf-8475b2b33194",
        "cursor": {
          "ref": "3cd9bca2-3217-4cbf-817d-ab1bdb92c42c",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "7756dd3a-ab51-4bf4-8494-061328f24bb6"
        },
        "item": {
          "id": "5b12c4fa-025b-43ec-9bdf-8475b2b33194",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "2b00309b-4c9e-4b42-90b4-2a9deae271ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d2397d1-ca07-4838-9656-cf02cda22059",
        "cursor": {
          "ref": "ce1ddad0-6231-456c-aae1-0d230e8d96e5",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "e1386355-ec5b-4f2b-87c8-b51170e20b0d"
        },
        "item": {
          "id": "9d2397d1-ca07-4838-9656-cf02cda22059",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "87d9bea9-685d-4cea-8aa6-81631bf13e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "474c4c66-1ae7-45e1-a31b-9d559692fc68",
        "cursor": {
          "ref": "4fdcca76-bbf7-4a2a-9a00-d5e9735e50ae",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "efbb1bd9-1f20-4d99-bb83-f600b241a294"
        },
        "item": {
          "id": "474c4c66-1ae7-45e1-a31b-9d559692fc68",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "c20919ab-6262-42d5-ac79-9b1177396860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba56a4f8-11b3-4b3c-9153-391e86235b08",
        "cursor": {
          "ref": "c0409fe7-a663-4ec6-a46b-28f31cf13533",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5b8c676a-51f6-4c1e-8780-f4e36ba4e917"
        },
        "item": {
          "id": "ba56a4f8-11b3-4b3c-9153-391e86235b08",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "4f8bdee6-6519-45da-8fe4-e2de4ee33a6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d353b7b4-0c47-4e01-a133-4cf62d69031f",
        "cursor": {
          "ref": "0c358eb9-a92c-4575-a18c-6f84f7107d38",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "0c1376c1-cc55-4bed-9eff-e74b596c3944"
        },
        "item": {
          "id": "d353b7b4-0c47-4e01-a133-4cf62d69031f",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "87617900-fa19-45d9-aa11-777e8d9487ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a21828-57b3-4ee8-94dc-6fe177f87712",
        "cursor": {
          "ref": "ba7e71d7-ad6b-4158-96ec-d9185791fa5f",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "64a52a59-7fe4-4a46-8876-c8e1834ae191"
        },
        "item": {
          "id": "20a21828-57b3-4ee8-94dc-6fe177f87712",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "bfd6bee2-2e3a-4ea3-a340-bda2a6dce026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e487c4f-ac1a-48e8-bb95-c9a2adee20e7",
        "cursor": {
          "ref": "238f9a96-c614-425b-a6b0-27fd934f26fa",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "bfb22bd7-c185-4d05-b4e1-16858f02219c"
        },
        "item": {
          "id": "9e487c4f-ac1a-48e8-bb95-c9a2adee20e7",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "fe652fe1-4fd1-466a-9401-7fd310fd627d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1005e8bf-de5d-4dd0-babd-dc71e11b6f02",
        "cursor": {
          "ref": "53718fc7-0753-4646-a89d-2db760ecbf46",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "eeda803e-7df4-4176-aef0-9df8e1a19959"
        },
        "item": {
          "id": "1005e8bf-de5d-4dd0-babd-dc71e11b6f02",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "6bb68f18-d9ea-416c-a63e-3addc0bbb666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c31f57-7298-4b92-9997-0ecb2ae78ce9",
        "cursor": {
          "ref": "89983403-2449-4a5e-b98b-de848f49b1cb",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "19ba6ffd-b589-41e2-8720-548fb467dea4"
        },
        "item": {
          "id": "a6c31f57-7298-4b92-9997-0ecb2ae78ce9",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "1f3ccfdb-2cca-4654-a316-bddfd45fb8d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "362811f8-ca70-4ebd-90d6-94b2d81227c8",
        "cursor": {
          "ref": "9e951835-a138-4c00-a3b6-af83f6307798",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d4efbc60-26f0-4ece-bcb0-a1b9b7030f39"
        },
        "item": {
          "id": "362811f8-ca70-4ebd-90d6-94b2d81227c8",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3735b2ae-ff2f-499b-90c9-df67ed1f7735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21a07aa5-c4e2-4b28-a749-20fd345d9b12",
        "cursor": {
          "ref": "4b5e7ec6-96db-425a-971c-bd13f30b13e9",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "7be20a95-6237-43b7-8335-db47fc2c4f56"
        },
        "item": {
          "id": "21a07aa5-c4e2-4b28-a749-20fd345d9b12",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d8a6587e-2bee-4f64-96ce-9f5c81bff3a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3299ae7-d403-4e6b-a00b-44bb8200f4ed",
        "cursor": {
          "ref": "e82eeb19-bb10-43bf-8d42-3bf1ed1dc773",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "428566d2-2a73-41cc-8c3f-32e2f5c456ed"
        },
        "item": {
          "id": "a3299ae7-d403-4e6b-a00b-44bb8200f4ed",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "4d419169-beb1-4f87-b756-0a657f08e9ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d860ca9-44c0-4736-8605-ed399acd8809",
        "cursor": {
          "ref": "88c724ba-7994-4a82-881e-212b0fadb013",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "735c8444-ab94-4cf9-90e0-2666b5a825fb"
        },
        "item": {
          "id": "0d860ca9-44c0-4736-8605-ed399acd8809",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "846e9be0-2b4b-4e3f-9b30-6dafc7823cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a4a928-b1e6-4b78-a1d3-3cfb6d3afbb7",
        "cursor": {
          "ref": "de4baabf-8619-4788-b2e9-46cbbdd124c8",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "0e00219f-e4a4-49dc-8700-a178e56af126"
        },
        "item": {
          "id": "b0a4a928-b1e6-4b78-a1d3-3cfb6d3afbb7",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "3b97ef3d-24d2-44db-a11a-88126a8d9e45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34900b4f-4e44-401c-b14f-1d158c3f9535",
        "cursor": {
          "ref": "b943fc92-969b-4d0e-8069-859f84744684",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "aa24d390-7a0b-4222-9037-a6a51bfdb54e"
        },
        "item": {
          "id": "34900b4f-4e44-401c-b14f-1d158c3f9535",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "0eb6e588-d228-42a2-be73-210373eeb26a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "279a89e8-1136-4e92-8667-46a17f839315",
        "cursor": {
          "ref": "81c4bb39-5a11-4067-92c6-eff39ca7419c",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "0d729971-b757-4ae4-a21b-8bce363a39ea"
        },
        "item": {
          "id": "279a89e8-1136-4e92-8667-46a17f839315",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "1f9b7bc7-185f-47c9-ad21-76cc7c5262c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c0284f-9195-4907-88dd-b1f2ec470050",
        "cursor": {
          "ref": "3146d79f-7daa-4691-b2e2-353bc38e36dc",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b3969e3f-474a-41d3-9c95-3bc06d19a0db"
        },
        "item": {
          "id": "47c0284f-9195-4907-88dd-b1f2ec470050",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "98b48e29-2879-41a0-8770-b8484c11f71d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e132147-53f2-48bb-a33b-5d95a37f0927",
        "cursor": {
          "ref": "c9b8dd0e-73ef-494b-98c0-a1bedb18d621",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "0107cf16-43c3-4bbb-9ca4-c0691839aca4"
        },
        "item": {
          "id": "7e132147-53f2-48bb-a33b-5d95a37f0927",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "6d1f282c-8f7c-45b1-b2e5-eb9bc3cab55e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c2edd6c-e4c7-49d3-a887-983b04916168",
        "cursor": {
          "ref": "389afdf7-28e3-4fb1-8ce3-e57a9133c2c7",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d8477025-188a-4061-ad05-0122c9e2fe9b"
        },
        "item": {
          "id": "2c2edd6c-e4c7-49d3-a887-983b04916168",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "35e26935-dbfc-4d30-a358-5f8fa6336e6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbedda32-d6b5-4b57-8bae-716048ffdf41",
        "cursor": {
          "ref": "734d181a-df4c-4d09-89b3-48964ad0383c",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "9735624f-6abf-4b01-96e3-faaa454ee48e"
        },
        "item": {
          "id": "dbedda32-d6b5-4b57-8bae-716048ffdf41",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "9f49b4e9-bbd8-458b-a72b-f7d1d2d4b4db",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b3657c-82aa-4792-9c65-0ec7e2b9a0cb",
        "cursor": {
          "ref": "106de10c-6b14-4fa9-b1d2-0296ba3e59c4",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6b089aa3-5dc6-42d6-a32d-76c1374f19a7"
        },
        "item": {
          "id": "69b3657c-82aa-4792-9c65-0ec7e2b9a0cb",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "350b2ac8-6d46-443c-acac-d19097eb1e0b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 415,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b6f523-d105-42be-a392-1e4a798d32e3",
        "cursor": {
          "ref": "6ace4611-374d-414d-8ae3-08a62987970a",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "2216747f-83d2-47e9-9ca0-c62aeb5e4ff7"
        },
        "item": {
          "id": "96b6f523-d105-42be-a392-1e4a798d32e3",
          "name": "credentials_issue"
        },
        "response": {
          "id": "f29f639a-13dc-4319-a705-f2d491152978",
          "status": "Created",
          "code": 201,
          "responseTime": 1746,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba92363b-6116-4b75-8b81-9464c1c7b106",
        "cursor": {
          "ref": "753e49b0-96a7-4d40-a368-8268e96d19f0",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "7613e0e8-2fb9-4737-8674-c9d37274a0d2"
        },
        "item": {
          "id": "ba92363b-6116-4b75-8b81-9464c1c7b106",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "51b2b195-b666-4a8b-bbf3-e1a336155abb",
          "status": "Created",
          "code": 201,
          "responseTime": 1739,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c44bfd9-6a29-4507-8583-84fd966a25ae",
        "cursor": {
          "ref": "463e0406-43db-498f-8582-065d7dc4f7c3",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "8ea46dec-0320-4f0c-8139-83fd8bc87b4c"
        },
        "item": {
          "id": "2c44bfd9-6a29-4507-8583-84fd966a25ae",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "656df9b7-b574-4428-bb87-eb0a99cf286f",
          "status": "Created",
          "code": 201,
          "responseTime": 1814,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c0e7524-20bb-4020-8968-70222211dad3",
        "cursor": {
          "ref": "997543bd-a6a6-4534-a391-0e93948ccda4",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "31dbf30f-43de-47c5-9b71-fb7b3bf4900b"
        },
        "item": {
          "id": "8c0e7524-20bb-4020-8968-70222211dad3",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b789074d-7bf8-4c74-8277-b9788f4adc28",
          "status": "Created",
          "code": 201,
          "responseTime": 1799,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "067cecff-d539-48bb-a345-afcfcccc7498",
        "cursor": {
          "ref": "febb59f7-936d-4623-8b21-d2f651ed13ad",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "58d2c004-6e86-4573-8366-fba11c6df847"
        },
        "item": {
          "id": "067cecff-d539-48bb-a345-afcfcccc7498",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9722dd58-ce97-4250-9639-911c7144b2e2",
          "status": "Created",
          "code": 201,
          "responseTime": 1797,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0714ace-85ff-4a0e-a05e-66873dc447b0",
        "cursor": {
          "ref": "8429bc39-1301-4fa3-a947-bfff75496c0c",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "5d3726b3-5d6c-47c3-ad84-ef77bdfb3e36"
        },
        "item": {
          "id": "d0714ace-85ff-4a0e-a05e-66873dc447b0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b29077f2-1608-41a5-96c3-44bcdda25960",
          "status": "Created",
          "code": 201,
          "responseTime": 2323,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e257a9d5-670d-400b-9e76-c6f8523f4ad2",
        "cursor": {
          "ref": "c25b194a-d77f-43b2-8a32-9ddec6944715",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d7e3ed63-737f-463c-9a2d-28020a1ba474"
        },
        "item": {
          "id": "e257a9d5-670d-400b-9e76-c6f8523f4ad2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "79d5b0c3-ba59-4c9d-8415-8bbcb82c3958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e257a9d5-670d-400b-9e76-c6f8523f4ad2",
        "cursor": {
          "ref": "c25b194a-d77f-43b2-8a32-9ddec6944715",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d7e3ed63-737f-463c-9a2d-28020a1ba474"
        },
        "item": {
          "id": "e257a9d5-670d-400b-9e76-c6f8523f4ad2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "79d5b0c3-ba59-4c9d-8415-8bbcb82c3958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d480e6e-ba9c-47fb-b87a-57f657767f0b",
        "cursor": {
          "ref": "cba333a2-a0e2-470b-ac9b-e6c947c4a190",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "21af0392-be86-444a-a9af-f423c6692eb1"
        },
        "item": {
          "id": "2d480e6e-ba9c-47fb-b87a-57f657767f0b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d4e34553-4112-4c9b-a7e6-a47983b9e270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb3e4315-7f2c-4b5d-a6d5-4e14c48414b9",
        "cursor": {
          "ref": "bb25eef9-481a-4102-900f-577dc3d34717",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "2c6f01a3-4969-4576-9243-e7c075480879"
        },
        "item": {
          "id": "bb3e4315-7f2c-4b5d-a6d5-4e14c48414b9",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a7231887-dc9d-454a-8367-d877d23412c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 342
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e85fad7b-addb-48e1-b9ea-fad0c3be7baa",
        "cursor": {
          "ref": "df0dce12-33a8-4fcc-b534-9597f44085b3",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a302a47e-aacc-4290-91bc-0999c7fcd090"
        },
        "item": {
          "id": "e85fad7b-addb-48e1-b9ea-fad0c3be7baa",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2dce4b7f-7440-4fa1-a704-76bc31ec0c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a3ad01-fc15-470b-9712-2b071338b9b3",
        "cursor": {
          "ref": "9cf0eb0b-6641-4eba-80fd-9d238a8f1926",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c6699771-40bc-40da-9e5c-52ed417f446e"
        },
        "item": {
          "id": "56a3ad01-fc15-470b-9712-2b071338b9b3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "efafa376-6054-41f0-baf0-65914e6951df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 341
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd973289-75b6-4ed6-979f-d2146e9f272b",
        "cursor": {
          "ref": "b03b4163-dd0f-47fe-85ae-f880a9d17207",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d89f64e9-3b76-43e1-8628-b761b7285245"
        },
        "item": {
          "id": "fd973289-75b6-4ed6-979f-d2146e9f272b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "75552031-a48e-4c26-ac77-8ac66fe0e59e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e6a9167-ea03-402a-9c96-b43969236f2e",
        "cursor": {
          "ref": "8d67b779-775a-47e7-a024-a7326d26f93c",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "0029be94-96f8-4914-9dd3-82bc04039c94"
        },
        "item": {
          "id": "2e6a9167-ea03-402a-9c96-b43969236f2e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c0263b06-e344-4030-aa81-a9c97cb30464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4142af60-be44-454a-a222-1693a43d712d",
        "cursor": {
          "ref": "b72cf077-965f-4a84-a0c4-a76af350f606",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8652a956-69a0-48d9-84c8-79864b65f34e"
        },
        "item": {
          "id": "4142af60-be44-454a-a222-1693a43d712d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2955a94a-165a-45f7-8b4a-816b88592ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b7c5a70-da29-463c-8475-0d366dbe9052",
        "cursor": {
          "ref": "32202c8b-ddd0-41bd-becd-af833d028ae1",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "06802a95-7893-4d5e-8a53-31f0d4ea1c01"
        },
        "item": {
          "id": "8b7c5a70-da29-463c-8475-0d366dbe9052",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e6118fd6-e025-451d-a32d-474851fbb079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "403a2fb8-d13a-44bf-875f-92eb8e1550ca",
        "cursor": {
          "ref": "4f73154e-dba4-48d8-9048-1b575edc0621",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "60fa3670-5160-452a-a7aa-1c8dadeb3309"
        },
        "item": {
          "id": "403a2fb8-d13a-44bf-875f-92eb8e1550ca",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e6dadcf3-12d6-4b72-81cd-8f6c82c8fd5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8626842f-890a-483c-a615-8bb7912a7c32",
        "cursor": {
          "ref": "e0bb9bd7-a24f-4fe2-adc2-e21dfca007c8",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "8ebffddc-99b9-4014-9841-feda808e2e2e"
        },
        "item": {
          "id": "8626842f-890a-483c-a615-8bb7912a7c32",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "05c8955b-9379-4d11-94c8-4c0ab391c877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6daaf10d-d375-40eb-851d-44aaabe51bd8",
        "cursor": {
          "ref": "38c370c3-1788-4de0-b4e8-948116b49613",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "aa2cd054-5209-43ba-a7d1-377da4d74c43"
        },
        "item": {
          "id": "6daaf10d-d375-40eb-851d-44aaabe51bd8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "dde13ddd-5194-4d70-8b9e-e600e85d4df6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b977c68c-e6b8-4431-9f62-4dd75e5eaa4f",
        "cursor": {
          "ref": "2dea7e56-c526-4b87-ac97-50ef15a02d50",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "597eff7a-0398-49ef-91e7-6d8bfda425e8"
        },
        "item": {
          "id": "b977c68c-e6b8-4431-9f62-4dd75e5eaa4f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f96858e6-5b11-4435-8616-d422b9237d9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ce88df-5d0e-46a5-a448-954b540351ba",
        "cursor": {
          "ref": "6c36ea30-865b-4f86-a1d3-17fb143d39cf",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1bd5f58e-896e-4d3c-ae0d-fe3f9ed044a8"
        },
        "item": {
          "id": "f5ce88df-5d0e-46a5-a448-954b540351ba",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a31b2b6c-919c-434a-a27e-9f82cdc90995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79666ced-22fd-405d-a1aa-010aa0770f72",
        "cursor": {
          "ref": "bee78de0-e961-4b6d-a515-624e8e24b637",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1683566b-fe3c-4f64-81ce-1fb7ae01ebf5"
        },
        "item": {
          "id": "79666ced-22fd-405d-a1aa-010aa0770f72",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "dd8ff388-5216-4607-868e-d24b584da0a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef69964c-36a7-4114-9e2d-7f5e21286262",
        "cursor": {
          "ref": "02b6d889-9775-40f3-b403-3a476e6b100d",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "33c93d96-e99b-4582-b1f5-b9e75e387295"
        },
        "item": {
          "id": "ef69964c-36a7-4114-9e2d-7f5e21286262",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f8887986-76f6-44e4-8a24-4c0eef056238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1c622e-5fd4-48c6-9093-a9588ec39aef",
        "cursor": {
          "ref": "61696d2c-c3c6-44ee-b772-3b201d6458a3",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "83528ab6-6661-4e71-8690-34422fee4ea1"
        },
        "item": {
          "id": "8d1c622e-5fd4-48c6-9093-a9588ec39aef",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b536c4a7-060e-4ba0-a990-38f4a3351723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6acb590e-512f-4814-8e48-7549eec4eef9",
        "cursor": {
          "ref": "9304690b-8731-457d-8e69-1b5a2b5055bf",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "40a0b304-1977-44e8-a7b7-e85fedcebd60"
        },
        "item": {
          "id": "6acb590e-512f-4814-8e48-7549eec4eef9",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "cc72d27f-e0de-4ec2-ad14-4fe2d8193a56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f0b4a4-1e3e-48c8-9d3a-6b5a59cfaa8d",
        "cursor": {
          "ref": "18687980-577d-4fcd-a58b-d0fa24af5ebb",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "fbebc17c-4f94-4064-b8d7-f60c77f539c7"
        },
        "item": {
          "id": "38f0b4a4-1e3e-48c8-9d3a-6b5a59cfaa8d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "70557233-6fd1-4a7b-b191-4ae92ac5bbb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "851d357b-3981-4d3b-b96b-b76e4a170da3",
        "cursor": {
          "ref": "74d94dc0-fbf2-4434-8e7e-07009bea82ff",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "1d30ea3c-d4c9-4a43-a440-8d3833ecf426"
        },
        "item": {
          "id": "851d357b-3981-4d3b-b96b-b76e4a170da3",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c81b029d-1727-43e8-b9ec-507b87fb0ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9febbf-53c5-4adf-96ac-9de6b1022c01",
        "cursor": {
          "ref": "cb102110-93f7-4896-85ff-38d6f635099e",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "0f0c7d05-d388-4b2d-957a-4ff501c64b2a"
        },
        "item": {
          "id": "be9febbf-53c5-4adf-96ac-9de6b1022c01",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1426d299-6efd-48da-bd99-7e010569aba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc028bc2-0f6c-47e8-9f7e-07ebeb97adf4",
        "cursor": {
          "ref": "7907c570-21d5-4500-9629-9946c71cd5bf",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "83c83674-ecdf-4063-a82e-0caead88e787"
        },
        "item": {
          "id": "dc028bc2-0f6c-47e8-9f7e-07ebeb97adf4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6caff967-0d0b-48de-9e6e-0824decaf550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2d3866-2f22-4114-8d39-0c7c1b43afcc",
        "cursor": {
          "ref": "2c68e212-ea8e-424b-bdf2-e5017d352fb8",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "7e1d3990-4826-4766-aac5-dfb1eb9c33b8"
        },
        "item": {
          "id": "ac2d3866-2f22-4114-8d39-0c7c1b43afcc",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "1cada427-807c-4887-81f4-875d05e93d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db250bc1-53d4-484c-965a-2b55a003c485",
        "cursor": {
          "ref": "0318ed38-2621-4799-bebf-699be1039395",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "bee9a3eb-acf7-4b82-a3be-35e9c48ba9a8"
        },
        "item": {
          "id": "db250bc1-53d4-484c-965a-2b55a003c485",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e59d901c-22c1-4d7f-90b4-5eaf5e9094c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c0c12e-e47d-404a-afad-df4a4218caca",
        "cursor": {
          "ref": "d0acdbef-39b7-4d64-a5c6-199138025028",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "1bd8aaad-d076-470c-984b-f0fde799c16c"
        },
        "item": {
          "id": "c0c0c12e-e47d-404a-afad-df4a4218caca",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d68eb325-7fdd-45b7-938f-3a7611d4dd9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3318e68d-d612-4d31-812f-5ace4631fee9",
        "cursor": {
          "ref": "e4072adb-17b3-41fe-b9fe-909c74c24211",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "e7bd7174-8335-466b-99d9-b8bf7e9bd596"
        },
        "item": {
          "id": "3318e68d-d612-4d31-812f-5ace4631fee9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "671d65f9-cade-43ea-93ea-db09cf45daca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a69bd8b1-d753-4dec-af87-f76a462ad4df",
        "cursor": {
          "ref": "3306926a-675e-4e7d-b0b9-33ef1e142efd",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "08fd2ee0-c4f7-447c-8a48-420946880216"
        },
        "item": {
          "id": "a69bd8b1-d753-4dec-af87-f76a462ad4df",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b1bc00b9-88e9-478b-963b-496828b8bc0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b66e08-0adb-479a-90f1-c45b0da76f80",
        "cursor": {
          "ref": "bb3addac-007f-426a-84f6-002de6b6c5f0",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "9d58b1d2-b167-4287-bb14-51c9e66187ed"
        },
        "item": {
          "id": "25b66e08-0adb-479a-90f1-c45b0da76f80",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "18909f25-022d-43a0-8732-9c9e5bc8b749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a46a7e64-dae7-4267-ab0f-207b4e6df6d5",
        "cursor": {
          "ref": "278ed789-ea78-4681-a675-697ce908a2c5",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "20276562-92e3-4718-8a4b-c7bb731d19d5"
        },
        "item": {
          "id": "a46a7e64-dae7-4267-ab0f-207b4e6df6d5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e58da7ce-c830-4be6-beb5-00b68e13be31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "269ff054-98fe-48e0-8b05-ae11452ffa0e",
        "cursor": {
          "ref": "1b233fe5-b140-4653-bb96-cc9956e77fbb",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "0fbbdc60-b6c0-496d-be18-2c3997471655"
        },
        "item": {
          "id": "269ff054-98fe-48e0-8b05-ae11452ffa0e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "785a0ba2-dafa-4ed0-ae5e-50581700ddfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f034ce1-8246-4f75-99ca-7a27b5f32c5e",
        "cursor": {
          "ref": "6283036d-d3a3-4869-b1c5-16e0a393516a",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f35ddf41-719f-415f-ad00-b7ef57fb3797"
        },
        "item": {
          "id": "5f034ce1-8246-4f75-99ca-7a27b5f32c5e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f518e3b0-2305-4aa2-9fb4-6fb69261f30b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d07170b-002d-41d0-8942-85a7f675bc7f",
        "cursor": {
          "ref": "a5f29952-b07c-4c8e-a5eb-88bdce432798",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "1749d235-77a9-4acb-803d-efe92eace067"
        },
        "item": {
          "id": "7d07170b-002d-41d0-8942-85a7f675bc7f",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "6308feac-b85c-4e2b-9c1d-17f47f4b8b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "172be641-b580-411d-a4f6-e79fdcd07b16",
        "cursor": {
          "ref": "5ba18bd5-7b4b-42b0-8773-af01b96ffcd3",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "deaa7e24-5123-4915-b23f-ebeb2b4370c5"
        },
        "item": {
          "id": "172be641-b580-411d-a4f6-e79fdcd07b16",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5cda0f2f-96a3-40e8-a267-a4929c015111",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4d8cec1-1714-456f-b1b6-caddd99d8678",
        "cursor": {
          "ref": "ff18b620-0d16-4df0-8112-9fc695b8e57e",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "2fb66f18-911a-4ad1-93ff-b96fb332d0aa"
        },
        "item": {
          "id": "c4d8cec1-1714-456f-b1b6-caddd99d8678",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "dd54c782-4b3a-4542-85de-2e713124b320",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 433,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792ae28c-c529-4806-8397-59cf8e8efca8",
        "cursor": {
          "ref": "24db197d-1233-4b6f-bf1f-b9458e26b289",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "25b9db62-3d1b-4676-b81f-f6b8859e122c"
        },
        "item": {
          "id": "792ae28c-c529-4806-8397-59cf8e8efca8",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8d2b824b-22ca-4b9e-831f-cc12738dfb82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 206,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792ae28c-c529-4806-8397-59cf8e8efca8",
        "cursor": {
          "ref": "24db197d-1233-4b6f-bf1f-b9458e26b289",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "25b9db62-3d1b-4676-b81f-f6b8859e122c"
        },
        "item": {
          "id": "792ae28c-c529-4806-8397-59cf8e8efca8",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8d2b824b-22ca-4b9e-831f-cc12738dfb82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 206,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f898ac81-d1bf-4e2a-86b9-d3db5891350f",
        "cursor": {
          "ref": "b944ba7a-49f7-4ef3-b23f-3d2284d8f5e4",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "da0a54ec-07d4-4b24-aeda-7a02bd818c1a"
        },
        "item": {
          "id": "f898ac81-d1bf-4e2a-86b9-d3db5891350f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "b4d9eaec-dae1-4240-8d36-dabe784188f4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 210,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "9cd5dc80-0bf3-48a5-bf34-46fdb68df124",
        "cursor": {
          "ref": "2ae11a3c-0e61-4e4f-8cec-8f8e5fbc8282",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b6b610cf-3e16-44b7-8569-df7ac029fa78"
        },
        "item": {
          "id": "9cd5dc80-0bf3-48a5-bf34-46fdb68df124",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c5f1e3e5-857a-485e-8faf-69c8f00f61c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 221,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a843716-0e9e-46fb-8fcf-d452e25e6f33",
        "cursor": {
          "ref": "b5e63018-852e-47ce-88b0-c70d7fbf7576",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "476b60c1-9f57-4dd1-ae52-ba37e841b564"
        },
        "item": {
          "id": "9a843716-0e9e-46fb-8fcf-d452e25e6f33",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e929323e-a8c3-4a28-99b5-59ab75c53482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a5719f-8729-43cb-a17f-5cd1c86934c4",
        "cursor": {
          "ref": "8e014a1e-8c90-4ccc-96e9-5acff0aa3607",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "89001b02-b309-4090-b560-975333734a10"
        },
        "item": {
          "id": "57a5719f-8729-43cb-a17f-5cd1c86934c4",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "970ed6c9-a2b2-442b-b897-30aa3dce4bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 199,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4467a051-51d2-4eb5-9c5e-16a79989c546",
        "cursor": {
          "ref": "36bcabb7-a313-497f-a587-42f7456c8278",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "baf303ce-619d-4a68-ae36-1be47d346cff"
        },
        "item": {
          "id": "4467a051-51d2-4eb5-9c5e-16a79989c546",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "477a1d4c-d048-4adf-bc9e-ef6c46c46c19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 208,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcba80bc-ce9d-44d5-ad9a-629f069b305a",
        "cursor": {
          "ref": "566c3cba-e0b5-410c-9002-21b28a83e4a1",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6c8d5817-b469-468c-9d74-d7703aca2095"
        },
        "item": {
          "id": "bcba80bc-ce9d-44d5-ad9a-629f069b305a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "18ec0734-5cc3-49e2-93ed-1263af4a7d12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 200,
          "responseSize": 1213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b92b8e39-b950-4d05-981a-1f5cc8fa4d88",
        "cursor": {
          "ref": "e65cb30a-3ef7-457a-b1b8-044129f03679",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c081f575-39a0-4736-a298-8839d4c93141"
        },
        "item": {
          "id": "b92b8e39-b950-4d05-981a-1f5cc8fa4d88",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e92945c1-3378-4d11-a37c-2983495db903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 202,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d45d10a9-d965-4bd8-8b32-16bfd81b6cb3",
        "cursor": {
          "ref": "ac51dc84-4240-423a-b16e-a5f94c0dc0aa",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "41b47f42-3b20-4e72-9e98-fbe82bf24d84"
        },
        "item": {
          "id": "d45d10a9-d965-4bd8-8b32-16bfd81b6cb3",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "49bedb50-0c78-4dbb-9fda-e848b74e51f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f26e9b23-fb9f-480b-bfde-66f9d68cdcbe",
        "cursor": {
          "ref": "58d76fa5-978e-48ba-8055-bc0a70d1c7e0",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7f2a7938-8a02-471e-b0a9-c2e80cacea56"
        },
        "item": {
          "id": "f26e9b23-fb9f-480b-bfde-66f9d68cdcbe",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "9895e7b3-0e18-4ae3-81ad-4b7785785a56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5880c0d9-1adb-45c1-bfdf-bcef3bab38b4",
        "cursor": {
          "ref": "a67cdc39-2235-42c7-ba55-d4a76afa450e",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "bccb499e-3689-4041-8bc6-37e8a7328db3"
        },
        "item": {
          "id": "5880c0d9-1adb-45c1-bfdf-bcef3bab38b4",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "849f0930-b612-4190-9016-b9e43e65d992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1450
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f617ac72-dd8f-4641-86ab-31d70b071ea1",
        "cursor": {
          "ref": "13b93ac4-58c9-436c-95b7-858d6312869d",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "33aec8ec-9e43-491f-9436-9178478f8085"
        },
        "item": {
          "id": "f617ac72-dd8f-4641-86ab-31d70b071ea1",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "7b9882d5-95d5-4f59-95ea-4e889dcd4a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 1437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89395772-95c5-4294-a085-9610f2a0b7c9",
        "cursor": {
          "ref": "6b41c90d-1dbe-4b1c-9c87-998380a563f0",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f5792764-1cbd-4548-9194-ef729194a1ff"
        },
        "item": {
          "id": "89395772-95c5-4294-a085-9610f2a0b7c9",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6b38161d-fb97-4f4e-bee8-7ade71efdc20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 1690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8320dd7c-134c-4415-8dd6-137f6bcfea83",
        "cursor": {
          "ref": "6c182198-08d8-47c4-a4e7-4f64ccc59353",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2cdb035b-9124-470f-accf-b69b12a14e64"
        },
        "item": {
          "id": "8320dd7c-134c-4415-8dd6-137f6bcfea83",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b751d5a5-1c9f-40f0-a223-f722a78d9e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8050a2-73d5-4686-93ac-2e36fec13058",
        "cursor": {
          "ref": "616cbb5d-7958-4406-aa40-7795d09a6bb7",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "7eab757e-cc06-45e5-823d-d46cf3014d75"
        },
        "item": {
          "id": "eb8050a2-73d5-4686-93ac-2e36fec13058",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "dbe5c7d4-84bc-420f-9291-cf17a6f8a6b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 1679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cae10fe3-cd7e-4200-b1a1-e7ea5aed8ba8",
        "cursor": {
          "ref": "6d1f3cfa-1e68-4ad3-8c6a-984e1216781a",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "58ad1c5f-5245-498f-8359-02cc405b8e11"
        },
        "item": {
          "id": "cae10fe3-cd7e-4200-b1a1-e7ea5aed8ba8",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "9ed1dd4f-0e58-4cba-9cbb-97cd0015f6bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "665c9236-5e2f-48f3-a820-d1a3628baf10",
        "cursor": {
          "ref": "94454367-2d37-4799-93e3-b91b76012a62",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b591125b-4d19-4732-8d41-9a9479e377f3"
        },
        "item": {
          "id": "665c9236-5e2f-48f3-a820-d1a3628baf10",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e0276494-7e85-4079-950b-ea4d5d5630e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 1731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a54a2e-7a73-45df-bfe2-ffe6356da0ec",
        "cursor": {
          "ref": "c392c20f-95ba-4f2e-8061-ae222e452ef6",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "b1d6c234-0968-4e8f-8730-c30812c4707e"
        },
        "item": {
          "id": "49a54a2e-7a73-45df-bfe2-ffe6356da0ec",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "1b69ace7-2193-4ef9-b745-ff0eb299dac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cc17458-20f4-4823-8bfb-e7147dc0855a",
        "cursor": {
          "ref": "7687a7ac-f847-43fa-994d-0802a7fc2b24",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9e5c9ba6-7790-4d42-b9f9-11f74510fba0"
        },
        "item": {
          "id": "9cc17458-20f4-4823-8bfb-e7147dc0855a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "30df7541-7bd1-4b41-8fb4-ec56ecde77ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 1250
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61ea1f7e-ba9e-4d27-8684-e2f565ae5ae2",
        "cursor": {
          "ref": "248d8783-29c5-4ffc-ada3-73b91222f886",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5065284f-f422-4100-bb02-59c0d3c58938"
        },
        "item": {
          "id": "61ea1f7e-ba9e-4d27-8684-e2f565ae5ae2",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "40ef57cb-ece8-4891-9126-7b64dc25e329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ef5776-194b-4790-882e-efc369d594ce",
        "cursor": {
          "ref": "48715d28-4afb-4fec-b253-35865f31c621",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "18385c8d-e74f-4cd5-aaef-268d9654b6b1"
        },
        "item": {
          "id": "f6ef5776-194b-4790-882e-efc369d594ce",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "8f1596c9-a41a-4660-893d-5f6641c881ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 1249
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41827183-7bd4-4b66-a2cc-403c9d611bee",
        "cursor": {
          "ref": "ee4e5ce0-f07b-45f0-84b8-82eff26d346b",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "6869475d-4c20-404e-9036-c27a06921ea4"
        },
        "item": {
          "id": "41827183-7bd4-4b66-a2cc-403c9d611bee",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4023daf2-d04a-4a19-af59-81fa773ddbae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "581ade14-2ebe-409e-a0bb-582fa6a23725",
        "cursor": {
          "ref": "b3571829-c4ae-45ef-a6e0-7220427f3b51",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6b187842-68fe-49d3-be45-aa062721b24e"
        },
        "item": {
          "id": "581ade14-2ebe-409e-a0bb-582fa6a23725",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "5dbfd8cc-4f5b-4411-ba8b-e83a84fd4ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d2e8af-9cd7-4630-8dab-0663837e76cb",
        "cursor": {
          "ref": "594d3dbe-ba2e-4b67-af9b-f89ad11a7591",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "0772f7c3-b31e-4f27-8a29-f9a1d2feb930"
        },
        "item": {
          "id": "f2d2e8af-9cd7-4630-8dab-0663837e76cb",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a3a3b06f-6c1f-4523-8fb8-c47f27bc4d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2010ed3a-558a-48d0-b14d-0cd18b268192",
        "cursor": {
          "ref": "37b9a6b8-87ef-4c30-8971-17b160f3873c",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f3c6f5b8-5ee3-4a3a-b7dd-fd090f00219e"
        },
        "item": {
          "id": "2010ed3a-558a-48d0-b14d-0cd18b268192",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c26cce1b-97b1-4834-9a8b-a112a6382c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 194,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3455f96c-79e5-49e7-96bb-378e25edc1fa",
        "cursor": {
          "ref": "40a4de30-175e-4c5a-a752-7b5f9456c262",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "5bb4e5c8-b8c6-4203-acbd-a937b957f9d5"
        },
        "item": {
          "id": "3455f96c-79e5-49e7-96bb-378e25edc1fa",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "551981d2-aef7-4303-9057-be4318f9c79c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 200,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e4469cd-3bc5-4e02-a620-60df9bcd131d",
        "cursor": {
          "ref": "144822b9-79ec-4ada-b092-5ce8283f6d24",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "0b951acb-ab18-4ca0-b3be-6f08b0b81716"
        },
        "item": {
          "id": "5e4469cd-3bc5-4e02-a620-60df9bcd131d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "82bc08e1-b13c-4614-91b9-4a8d3dc6fd44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 216,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a1dd6a-cb85-4d5d-b1bb-fccb71e2b8d4",
        "cursor": {
          "ref": "f1cccc06-80bd-4ca5-81e2-762a646545ee",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "7695084f-4a0f-496c-bc0f-839970ad8d4d"
        },
        "item": {
          "id": "78a1dd6a-cb85-4d5d-b1bb-fccb71e2b8d4",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "252f828d-01cf-401d-97dd-ddf2c01ac26d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1239
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b386d8a-c0e0-495c-9769-7d62a77a744d",
        "cursor": {
          "ref": "8fba1847-2328-4a44-8b15-f35e85dd6e36",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a402be25-337d-4d9a-8491-8b135254577d"
        },
        "item": {
          "id": "3b386d8a-c0e0-495c-9769-7d62a77a744d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "050183b7-1838-4b4f-a8e6-a692a53f5c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 215,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81bcc08a-f267-4d16-beae-dd2d6fc4dd35",
        "cursor": {
          "ref": "6aac2787-20b8-4d62-abe9-2e86c7410473",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "6bfed2d4-b502-4633-9045-2810d76e6876"
        },
        "item": {
          "id": "81bcc08a-f267-4d16-beae-dd2d6fc4dd35",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "6a3bb211-3eab-4efa-aaa4-4683c82fe72a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 199,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c02e5936-f1e2-4653-a0dd-975d0e80323e",
        "cursor": {
          "ref": "4ae822f5-0214-41c0-86ec-bfe3aaf78419",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b9685527-8d4e-4d6a-9bdd-425db1e9228f"
        },
        "item": {
          "id": "c02e5936-f1e2-4653-a0dd-975d0e80323e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ccd3b34e-3838-4c1a-85ce-73555b4cf016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 229,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "421fd03c-9fe1-4009-a3db-dfdcc8007efa",
        "cursor": {
          "ref": "58deccb7-4bc7-4b11-9c4c-c0c3f2ef9a85",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "69b6ba54-6506-4d6b-bc4c-f69bac170caa"
        },
        "item": {
          "id": "421fd03c-9fe1-4009-a3db-dfdcc8007efa",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "602eb235-c0f4-4e36-a009-0be6e37352f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 217,
          "responseSize": 1255
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "603ac4f5-9920-40fc-a44e-7292b6d14854",
        "cursor": {
          "ref": "cf8f1bad-532b-4fea-8afb-02d9285346b6",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "5dd09ad1-b299-466b-94d1-bbd590121791"
        },
        "item": {
          "id": "603ac4f5-9920-40fc-a44e-7292b6d14854",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f2de18ac-cb4f-4a37-b70a-7d6b83a43f5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 227,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c67eb2d3-7bdc-430c-864b-3c95cb73822c",
        "cursor": {
          "ref": "1d2e351a-447c-4e21-8d2a-5359ab870cd6",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "bb13f068-b436-4a47-81ad-d77789bf8b23"
        },
        "item": {
          "id": "c67eb2d3-7bdc-430c-864b-3c95cb73822c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a2aeb1df-a82b-42de-bb23-aaa32c332fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1282
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e6f396-6869-403f-b06d-9716c5202d9a",
        "cursor": {
          "ref": "144ec0d7-02da-4e3e-84de-345ec5bfa270",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "bee2d02d-590c-4e65-8f73-94a6d3d1cecc"
        },
        "item": {
          "id": "d6e6f396-6869-403f-b06d-9716c5202d9a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "78d6eaf0-bf9b-4ef8-a524-3fa8fbbdeb05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d073e044-f809-4f7e-8db3-3653282f2163",
        "cursor": {
          "ref": "745161ac-17e5-4cc7-9a31-cd9d2439b8c6",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "921ed0fd-7fcf-41ac-89a7-a1df0ef0a575"
        },
        "item": {
          "id": "d073e044-f809-4f7e-8db3-3653282f2163",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "3e0e533f-5b35-48fe-ac05-da8916b7fc8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1668
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7338f41d-7b39-4c29-b7a5-5b18c64cc544",
        "cursor": {
          "ref": "4092f5ae-0c1f-407f-abb9-8a62498ce4e8",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e4cde4ae-1846-46e7-af03-e31b7918709e"
        },
        "item": {
          "id": "7338f41d-7b39-4c29-b7a5-5b18c64cc544",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "228d80f9-421a-420d-b28f-41def10bde8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 205,
          "responseSize": 1654
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc1e4890-75c2-4cc1-99e2-b11bd3a6ba40",
        "cursor": {
          "ref": "392a3185-9b3f-421a-a3c2-b902b0e90882",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "866a2cf7-a8bc-49da-b066-9c10ef4c46d4"
        },
        "item": {
          "id": "cc1e4890-75c2-4cc1-99e2-b11bd3a6ba40",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "0d2a0d99-e0f8-4e85-bd5e-96df9322e9cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 207,
          "responseSize": 1652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b3eebe-1731-4b83-9579-ab427b67fa46",
        "cursor": {
          "ref": "aa615b7c-d6d6-430d-9d04-9057f41cbe93",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "eeab84f8-e7c4-4e11-b89b-0ce6d2406883"
        },
        "item": {
          "id": "25b3eebe-1731-4b83-9579-ab427b67fa46",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ed3f741b-c0eb-436a-9196-90f2474359e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 208,
          "responseSize": 1653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bef9d2e-b5b8-4c88-91d8-7e691e9330fa",
        "cursor": {
          "ref": "7556ee5e-0915-4ea7-ab36-2be6aec29a27",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "6a74772e-05ad-4dd1-9863-959b51a379b0"
        },
        "item": {
          "id": "2bef9d2e-b5b8-4c88-91d8-7e691e9330fa",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "43c2a048-5c1c-415b-b40b-67d7bdae2bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e6e2afe-8ae8-4eab-a31a-ee69a0f22fbc",
        "cursor": {
          "ref": "95c9f671-97c6-4956-9e2f-f12c1c904444",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c4f6efcb-f8fa-4bd2-886c-9403d0045f1c"
        },
        "item": {
          "id": "8e6e2afe-8ae8-4eab-a31a-ee69a0f22fbc",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1cf7b5f8-cf7b-456e-a039-d5166335966a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 210,
          "responseSize": 2027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2152d2dd-3595-43a0-8845-9e42805c57d0",
        "cursor": {
          "ref": "5acc4925-1d1a-44f8-a9b2-81923f3707fd",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "8160887c-912a-4a29-b9e6-0ce5fa958984"
        },
        "item": {
          "id": "2152d2dd-3595-43a0-8845-9e42805c57d0",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "99474c82-035c-4f45-9b7c-d703de1cb83d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 207,
          "responseSize": 2013
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aceeb55-a2ae-4c85-a56a-15aa1d0706da",
        "cursor": {
          "ref": "d747a388-29cf-4ec4-a231-938b3becdea0",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d8b68439-e3a6-40c4-bfe5-2b9919a9697f"
        },
        "item": {
          "id": "8aceeb55-a2ae-4c85-a56a-15aa1d0706da",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "69222dad-2acd-47db-9939-e0685698fe45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 196,
          "responseSize": 2011
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a64e24-3023-4649-a038-7ee857ed559b",
        "cursor": {
          "ref": "014e81c9-ba98-40f4-863a-a8700ef92eed",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "dbc267a8-0d9a-4a70-bf3b-94f1d3ba7175"
        },
        "item": {
          "id": "e8a64e24-3023-4649-a038-7ee857ed559b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "1b3a0d53-f7cf-4d3c-a565-f95f21548a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 208,
          "responseSize": 2012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8180960-b95d-4e65-8c96-3b4c63b9b157",
        "cursor": {
          "ref": "49dd6f7d-3f43-4df1-a3b8-0c3c22d4afc2",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "30b91580-5826-482e-8ba6-53b8723b3d1e"
        },
        "item": {
          "id": "c8180960-b95d-4e65-8c96-3b4c63b9b157",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "9de77a54-a98c-44ac-aeed-e9178c4d92b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 206,
          "responseSize": 2033
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c720f924-43fe-471d-af9e-38b0994b4436",
        "cursor": {
          "ref": "3a8ecf27-9b9b-4be7-aa34-2f8fa1f2ac47",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e5267240-ee97-4efa-996b-729a303b2445"
        },
        "item": {
          "id": "c720f924-43fe-471d-af9e-38b0994b4436",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "536d337b-fcc2-44b7-a259-a09126bd66e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 204,
          "responseSize": 1237
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc4a4e63-5fca-4284-827b-0512de8d9a5d",
        "cursor": {
          "ref": "f582f8e6-08ef-4162-a8d2-a626336145e9",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "73169aa0-027b-4098-8d7c-46dd5a9b7492"
        },
        "item": {
          "id": "fc4a4e63-5fca-4284-827b-0512de8d9a5d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "668074ce-ab4d-43c1-9d45-77fa5a9e6966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 199,
          "responseSize": 1261
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "741f111d-f4a9-4e54-abd6-e5fb22ee5e23",
        "cursor": {
          "ref": "95a3f7b6-1c96-4893-bd88-d98db5b1ea0a",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "8874d05e-b1a4-48c7-b858-04e0c5fab161"
        },
        "item": {
          "id": "741f111d-f4a9-4e54-abd6-e5fb22ee5e23",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f15fc78c-e742-4978-baa3-326947b1e158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 217,
          "responseSize": 1242
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ccba26e-df20-4409-baf5-e5ef7ba742e4",
        "cursor": {
          "ref": "cc90c501-a073-4b58-82a8-6c3949a7023f",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "42f6344d-5938-4b02-b5ea-ed3e73dbfb59"
        },
        "item": {
          "id": "4ccba26e-df20-4409-baf5-e5ef7ba742e4",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f90230ca-0748-4faa-9e02-e0278eec814b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77215217-2bc2-4ef8-845e-099ac5ba5d97",
        "cursor": {
          "ref": "0bfa5627-e630-4599-b31a-f9007291a2d9",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "de5bf752-1024-4f25-a0d3-9630a2b8b8e3"
        },
        "item": {
          "id": "77215217-2bc2-4ef8-845e-099ac5ba5d97",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "cb8156ba-96d5-434f-9e95-a6a8656799f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 216,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58706db4-1547-42ed-a62c-dd8284367565",
        "cursor": {
          "ref": "1ac1a210-ca98-456a-b5ca-a9a429548a72",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "cb74a37e-8348-45e7-99d0-8aed0c4f0fdf"
        },
        "item": {
          "id": "58706db4-1547-42ed-a62c-dd8284367565",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "397ccb0b-797a-483c-99c3-acac38b215c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 216,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81396f6b-328e-43a0-95ac-c8b581fabee0",
        "cursor": {
          "ref": "01c47584-6409-452e-a9b3-9d978f56bff5",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "bc011ba0-11ed-4201-9413-1b5d37bbc1fe"
        },
        "item": {
          "id": "81396f6b-328e-43a0-95ac-c8b581fabee0",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b2f71cee-77ab-463e-bc46-a901abada137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 211,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2087060-43e0-42fb-9820-036b12127fd3",
        "cursor": {
          "ref": "f6fb5787-e6ae-42c3-92c0-a5d3cfc7d326",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "29a48522-1f06-4ca0-a05d-7ad4abbe0679"
        },
        "item": {
          "id": "a2087060-43e0-42fb-9820-036b12127fd3",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "aea8def8-6fa0-48bc-9082-1f1da989cb1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 224,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c846217-8ec7-4311-a646-07453408750c",
        "cursor": {
          "ref": "3a2c824b-7637-478d-8431-62738cadbf1b",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "31c9f6f4-467a-40d9-9351-fa8b57dbce16"
        },
        "item": {
          "id": "2c846217-8ec7-4311-a646-07453408750c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ba68a578-308e-47bc-af66-c8dc5ebe3e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 226,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1bf29cc-455a-4990-ba77-07562a021598",
        "cursor": {
          "ref": "6fd1ef81-70d8-46c0-a2ac-1804925bb234",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "771dd182-86b2-4421-9118-05c21ac976a2"
        },
        "item": {
          "id": "b1bf29cc-455a-4990-ba77-07562a021598",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "5843c8d5-ed70-465f-90d9-68fdedbfd34e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 210,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84c8545f-440e-4ec2-9e54-f7c15ab08f4e",
        "cursor": {
          "ref": "a2863ede-6155-4b4e-996c-d792c8343bda",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "3d5fd635-bb77-493c-945a-018ffdc62fc3"
        },
        "item": {
          "id": "84c8545f-440e-4ec2-9e54-f7c15ab08f4e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "9397de89-46c6-42b1-a922-d3e68c73e883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 207,
          "responseSize": 1538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5344731a-2238-4b45-a760-1d9a83733553",
        "cursor": {
          "ref": "af39326f-662e-4f18-8b65-209358a6c618",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "0b5e064b-cd48-4ed1-b16a-adbaf4c47c89"
        },
        "item": {
          "id": "5344731a-2238-4b45-a760-1d9a83733553",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "3ecbeda8-1a3d-43d6-b87e-ed20f86eb22d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e288683-11fc-4b4a-908e-ee9e9fbc1e99",
        "cursor": {
          "ref": "e7932f53-2ae2-49cd-bc4c-b5646d753c4e",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b2c6d795-00a6-4349-89c0-3be08ac9542b"
        },
        "item": {
          "id": "3e288683-11fc-4b4a-908e-ee9e9fbc1e99",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b00bb0c8-07a6-4a86-99e6-10a98da1cc94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 218,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ec7e20f-a005-4c70-ad1c-738a2a012863",
        "cursor": {
          "ref": "49f5954d-cd48-4b18-af02-dabb0b223727",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ee199992-0d62-42dd-a08d-355d2e02516f"
        },
        "item": {
          "id": "9ec7e20f-a005-4c70-ad1c-738a2a012863",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "3479cd5e-b797-4890-9b65-4313263654c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 224,
          "responseSize": 2076
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e25ec4e-ebc3-444f-82bd-84cb1345f567",
        "cursor": {
          "ref": "cc1966f2-20d8-4833-8f2b-1514a0174ba9",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b44b7c42-5958-4da2-94aa-3695b821aa8b"
        },
        "item": {
          "id": "6e25ec4e-ebc3-444f-82bd-84cb1345f567",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "6095b5c9-7438-41a4-98bc-ded083ed5b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 199,
          "responseSize": 2062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ce46ae-17c5-4801-b751-1fd19ac5d4be",
        "cursor": {
          "ref": "8ded38fe-5873-4bf2-83b7-13fa704085db",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "44502b72-6ad2-4f66-8ff6-0238542d772f"
        },
        "item": {
          "id": "00ce46ae-17c5-4801-b751-1fd19ac5d4be",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4fe7b6da-9387-42e8-a9ee-b1bd1ff8a4e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 2060
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48541fc2-8a91-4b10-acd9-9e94d7578ee9",
        "cursor": {
          "ref": "00770090-37f8-434e-8df7-5388bf344e85",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b79641db-767c-489b-910b-21d5f6c02fdb"
        },
        "item": {
          "id": "48541fc2-8a91-4b10-acd9-9e94d7578ee9",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "a3553e4a-02b4-439c-b26d-c21c2637bfdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 226,
          "responseSize": 2061
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03809484-c35c-47ee-b7c8-a3354cb94045",
        "cursor": {
          "ref": "1b35fa46-ee78-47e4-bc45-6e6e5926a1fa",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c3847b29-70c6-49c1-a20d-8c166db47daa"
        },
        "item": {
          "id": "03809484-c35c-47ee-b7c8-a3354cb94045",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a977ecbf-9a82-4793-8925-8e1c02dcefb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 211,
          "responseSize": 2082
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3435af5-d0f8-4288-9523-e516b1ea7cb1",
        "cursor": {
          "ref": "cfb4570b-9de0-4390-a475-6f4c046dc45c",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "ab893658-a527-43e7-ba27-5ba9ca4b35c4"
        },
        "item": {
          "id": "f3435af5-d0f8-4288-9523-e516b1ea7cb1",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "301be2c9-894d-4f27-bf77-a8579a1ba689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 218,
          "responseSize": 851
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "287ae47b-a22d-49d2-8934-d0482fa2768f",
        "cursor": {
          "ref": "2bd0eee5-84a4-4e6d-b08c-83356c5545cb",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d87a733b-0c68-43b9-8ea5-51c6d8679e07"
        },
        "item": {
          "id": "287ae47b-a22d-49d2-8934-d0482fa2768f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "9a3b0206-9d9b-4421-9570-53c9412deae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 222,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07df9456-7854-4fcc-b68b-e9c36eb1f38b",
        "cursor": {
          "ref": "138fa9bc-3e84-42a8-8f4d-e9282505176d",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ec170176-95c6-44a2-a652-041cff4c5a1e"
        },
        "item": {
          "id": "07df9456-7854-4fcc-b68b-e9c36eb1f38b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "720e4568-2cbd-46c3-a6a5-91d5716403b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a061549-8bde-4616-bbbb-dee1a3f3da10",
        "cursor": {
          "ref": "7f1973aa-1ef4-419a-b9fa-1a18e0514201",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d6472f1c-f580-4b40-9cb8-70a0cf1c3a95"
        },
        "item": {
          "id": "4a061549-8bde-4616-bbbb-dee1a3f3da10",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "abb0b297-cf80-4dc0-b211-6642606dedf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 207,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6dd4e4a-a320-4d79-acec-89bca0dc0f19",
        "cursor": {
          "ref": "26b62f5e-2b00-4694-8bc5-cc533a9a46eb",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "fdd95460-b580-46ed-8ef5-ff506d883ec7"
        },
        "item": {
          "id": "c6dd4e4a-a320-4d79-acec-89bca0dc0f19",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "92564395-f15d-470f-9ccc-9d111d4f80f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 218,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf951ee-860f-470f-aabd-99d0c61cb7f0",
        "cursor": {
          "ref": "84aff973-d7ea-4bee-9e7d-0d21945fb4ea",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "8383213d-7c74-49a1-894d-09bcbc45dd65"
        },
        "item": {
          "id": "adf951ee-860f-470f-aabd-99d0c61cb7f0",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d4273e50-1bce-437f-8989-0b97d2297b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 197,
          "responseSize": 868
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "892d696d-366f-4dd0-b468-6a089ec32f05",
        "cursor": {
          "ref": "8cf0349f-d619-4ca7-95a8-e10ea023ddd0",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0baf3f6c-bfbf-4de8-a2e4-2b6cdd311f03"
        },
        "item": {
          "id": "892d696d-366f-4dd0-b468-6a089ec32f05",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "dfabdce9-6285-4b0e-bbd6-de856f0bc111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 1209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d17d8e6-0a63-4cdc-a38a-ac3fc14084c8",
        "cursor": {
          "ref": "4d7b215f-8b8e-45f3-8aad-cbd5cc352b66",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f59a5906-f69d-4422-ad39-0ca009bab3b6"
        },
        "item": {
          "id": "1d17d8e6-0a63-4cdc-a38a-ac3fc14084c8",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b1518a46-494a-478b-8a61-1be9ec5862f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 199,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d35014-a6c2-4dce-9e9b-c61d37fac293",
        "cursor": {
          "ref": "203d413b-0a98-48c3-883e-ba48a9c6e2ca",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e8318d85-90d3-46a8-bf61-6e93c15186d4"
        },
        "item": {
          "id": "d3d35014-a6c2-4dce-9e9b-c61d37fac293",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "720fc1c6-008b-4246-80ea-69ee38b04177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 206,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1744d59-0628-4776-bcab-53bb5c84a452",
        "cursor": {
          "ref": "97441b53-06bf-4f42-885d-2bece10adc2d",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "47dbc769-1afa-43df-b639-7befe6649f01"
        },
        "item": {
          "id": "b1744d59-0628-4776-bcab-53bb5c84a452",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c589dffb-a7b9-45c7-9222-6077f1b1bcfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 204,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f4e6b31-1e51-4ab8-9cd6-4d6a1573e2b2",
        "cursor": {
          "ref": "3aec7e86-52a1-4df0-ac27-73cbfb678dfb",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "9d41b291-d6e4-43d4-ae8c-2e2e880d2462"
        },
        "item": {
          "id": "5f4e6b31-1e51-4ab8-9cd6-4d6a1573e2b2",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "184fd618-17a7-44da-bb6e-4d83528c3540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 217,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb2379a-f756-4c1f-8c65-e0aca572af8a",
        "cursor": {
          "ref": "3037410f-f756-4b14-ab3b-102cd9ab9155",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "7047627d-a440-41ba-b3b4-2150796d5031"
        },
        "item": {
          "id": "bfb2379a-f756-4c1f-8c65-e0aca572af8a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "cb2fe2e0-e61f-43da-9a51-7ff1dc0af4ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 212,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "644ec063-8729-41e4-8a5a-2057c3f3ed54",
        "cursor": {
          "ref": "9aaf741d-f108-4978-a9aa-a96cce420f8a",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ce395046-ee75-4120-9e42-74b007e3818b"
        },
        "item": {
          "id": "644ec063-8729-41e4-8a5a-2057c3f3ed54",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b2dd5249-167c-4f9f-87d3-4a2ca4f90d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 218,
          "responseSize": 1246
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe4a6cd-a1d3-4cfc-97d0-15b7defb08a8",
        "cursor": {
          "ref": "d5908f05-db49-463b-a729-7b7aed4983f1",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "52b64ade-9634-4598-823f-e861b056ae9c"
        },
        "item": {
          "id": "ebe4a6cd-a1d3-4cfc-97d0-15b7defb08a8",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "fc959b02-e262-43db-8f48-185f03f76f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 205,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e43527-8ea6-46f7-842b-45e72837e6d4",
        "cursor": {
          "ref": "c5caf4e3-0bc6-42ba-b646-b60bb002e104",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "db4b98a5-cb76-4951-9581-1bebe5fbf0e4"
        },
        "item": {
          "id": "02e43527-8ea6-46f7-842b-45e72837e6d4",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "293d3e8c-7a95-43f1-b454-9307a7ef84eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 207,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b88cade-17d9-4f1b-8ec8-b3cef184840b",
        "cursor": {
          "ref": "810b4e24-885d-4912-9c7d-1820340369cc",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b00118da-bc61-475a-b04f-a0f5711fc2dc"
        },
        "item": {
          "id": "7b88cade-17d9-4f1b-8ec8-b3cef184840b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "da96faf0-626a-40ca-9a45-8b1b2b29dd32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 210,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "787f7dcc-185b-4a97-a925-66c88246b08f",
        "cursor": {
          "ref": "21f510fd-259b-4f4c-aa7f-92ce94d5167b",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ba3d4960-2e7f-4549-bde4-f3998f65098b"
        },
        "item": {
          "id": "787f7dcc-185b-4a97-a925-66c88246b08f",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d53a96d5-97f1-41e2-a307-b2fb843aa99a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 225,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c15a8ab5-5c29-4d21-84dd-7be82d61b95b",
        "cursor": {
          "ref": "0d2f197e-c592-4a35-a83b-1241451052f6",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "80d1a6d5-84b1-4160-b714-be84e6010426"
        },
        "item": {
          "id": "c15a8ab5-5c29-4d21-84dd-7be82d61b95b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "39a9459d-2767-4b5e-aa2c-3d160f570c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 202,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da8b95ba-45d8-4d6b-b174-7f806ad868c4",
        "cursor": {
          "ref": "9cc58dcb-34d5-44ca-9d29-ed364ac2cfe6",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e422f800-5bb5-4ac3-8942-796ee3598a5e"
        },
        "item": {
          "id": "da8b95ba-45d8-4d6b-b174-7f806ad868c4",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "47f25014-ab3a-434d-b49e-985fb39b9760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95fea4bb-980c-44e6-93a3-cd0286e7f3a4",
        "cursor": {
          "ref": "d4f0c043-dca6-48e6-87e1-ccca5cb22942",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "105e2071-ab27-4c7c-a6aa-48bfe3a28b93"
        },
        "item": {
          "id": "95fea4bb-980c-44e6-93a3-cd0286e7f3a4",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "15c4d469-5322-4a6d-98c4-bc15094ea2d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "323a04a0-adbf-441e-aa23-b3b3358809ea",
        "cursor": {
          "ref": "632c2ae8-836d-4eba-bbb2-d20dd2e079bc",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "144e8804-acc5-44e7-bd95-e50856f8a6da"
        },
        "item": {
          "id": "323a04a0-adbf-441e-aa23-b3b3358809ea",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "c5c7132e-f3c0-4e63-87b3-7bf547c886c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 1135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ae09a6-aa0d-4985-b52b-609e2d6085ad",
        "cursor": {
          "ref": "20d05582-5efa-4659-af31-d3b7476f4eb7",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "5b8cb78a-1aa2-4bd4-8d20-ac79f98e3eef"
        },
        "item": {
          "id": "43ae09a6-aa0d-4985-b52b-609e2d6085ad",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e036b63a-ab1b-453b-bf45-f8ba32cc48d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90a58826-79e5-49b3-aaf8-b688b70d2e3a",
        "cursor": {
          "ref": "44714ebf-35f8-441b-ae41-b716624a5557",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "2cb41410-6ab4-4d6e-be6b-8ce6f2aa290c"
        },
        "item": {
          "id": "90a58826-79e5-49b3-aaf8-b688b70d2e3a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "1ecf43ce-75b4-442e-b9f7-7c5a3210a0e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 1206
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9447aaf0-831a-4e5d-938e-a34b9104245e",
        "cursor": {
          "ref": "da6216b8-7ab8-41c8-b57a-f521ed0a0882",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "1e7bd603-4ff6-4e0c-b925-7e93bdc5225b"
        },
        "item": {
          "id": "9447aaf0-831a-4e5d-938e-a34b9104245e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "5b638312-d2af-4cce-9a5f-a02659dfcfa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd38613f-b96f-4350-9e50-a7f3f547f2c5",
        "cursor": {
          "ref": "c9921da8-b279-46a2-aa60-a988ca06f889",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a5fb929c-ac6d-405f-9b04-4a57026e7a56"
        },
        "item": {
          "id": "fd38613f-b96f-4350-9e50-a7f3f547f2c5",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "99da6b20-0654-4cef-9faa-bb1347ee2f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd9bd9c-fe73-4811-965f-af72650e2e31",
        "cursor": {
          "ref": "27950dd2-5c2d-4742-a5f5-11746dcaf67b",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2e948efa-b964-4930-a26a-b8e201889b30"
        },
        "item": {
          "id": "dcd9bd9c-fe73-4811-965f-af72650e2e31",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "cf7b0e83-72c1-4106-b3a2-a184e0c1d16b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1096
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bfbcbf8-d107-484f-971f-71a32288a28e",
        "cursor": {
          "ref": "724b30f8-46e9-42a8-82e6-046a556cbd6f",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "3eeeb979-2b1b-46c6-a1b7-69b8d4397eca"
        },
        "item": {
          "id": "1bfbcbf8-d107-484f-971f-71a32288a28e",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "34ce19ba-a31a-4e2b-aa5e-7ec9775e67bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c6c2205-148a-4bb2-b382-85351d3bf48b",
        "cursor": {
          "ref": "47acbb32-b441-477c-b7d7-b9d4389c48c7",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "d1043715-1182-4492-9b6a-910261edfcee"
        },
        "item": {
          "id": "6c6c2205-148a-4bb2-b382-85351d3bf48b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "7dd85ce9-8e58-4301-8535-08e4e078b075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a93f7b01-6597-4452-87c6-14d7bc4b50ec",
        "cursor": {
          "ref": "3d0c97d7-e7f4-43b5-a7e9-aab28087d676",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "18336a32-5408-4bfa-9cbf-ac9b619d45e5"
        },
        "item": {
          "id": "a93f7b01-6597-4452-87c6-14d7bc4b50ec",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f2c87635-c67e-409f-b656-442797a554d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 711,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e393c7-7ed2-40f5-b5cf-5945e7aad01a",
        "cursor": {
          "ref": "bd2a8558-1615-4356-8452-a0ad9abd21e2",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "175ee13d-4139-419d-8852-61b4c3ea968f"
        },
        "item": {
          "id": "64e393c7-7ed2-40f5-b5cf-5945e7aad01a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e0222593-555f-4a45-a880-b101d3fc44d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c135e0-cf68-45c6-a59b-c428ad68fba6",
        "cursor": {
          "ref": "3963004f-0d62-48a6-95f0-7f6b58b002f7",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "8a0d0442-f1c3-4977-9ecd-a43537903111"
        },
        "item": {
          "id": "26c135e0-cf68-45c6-a59b-c428ad68fba6",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "7babb454-0165-407f-b905-dda97a548020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1225
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "505f813c-a850-48de-8b32-dfc638aea6a7",
        "cursor": {
          "ref": "34ad2efd-2c06-4d9e-a5d5-16ae2396060d",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b2f64132-5607-43d1-8569-d9bcf011cfac"
        },
        "item": {
          "id": "505f813c-a850-48de-8b32-dfc638aea6a7",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "dc46bf14-099e-42fa-beb8-fec31fe912e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de554383-348e-47db-9c43-8aac0798087f",
        "cursor": {
          "ref": "00c39b10-7cf7-4e88-b111-9dd1f4f00553",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "6d76fa09-2e93-4176-870b-db2e95de8317"
        },
        "item": {
          "id": "de554383-348e-47db-9c43-8aac0798087f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "1c3201c2-d456-49c8-9ea9-81864f6a392d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 205,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec2838c-d437-44c5-8269-854bd8278f31",
        "cursor": {
          "ref": "ab2ca800-8335-45c1-a106-e9f596eb9cb3",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "4f6aff3e-6577-428b-a271-55b3a4cc21da"
        },
        "item": {
          "id": "8ec2838c-d437-44c5-8269-854bd8278f31",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "9525a505-175d-4098-8ccb-7e35ce8ed758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 213,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e1f710-ff80-4aa0-b497-3db3333f22c9",
        "cursor": {
          "ref": "073cb6e9-e09c-4c68-9bfc-e4aaf8a4a7f5",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "31a60b55-5a65-4777-8372-1204ebbffcc4"
        },
        "item": {
          "id": "72e1f710-ff80-4aa0-b497-3db3333f22c9",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "1f35bbbd-b751-476d-b21d-3ac8a6c6b46b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff1dba6-72ad-4521-9097-f578544215d1",
        "cursor": {
          "ref": "ae2df945-f8d1-4d97-bf8b-1794ba51c8ac",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "61c61e1e-5fda-4a52-b1a0-bed6191ade92"
        },
        "item": {
          "id": "4ff1dba6-72ad-4521-9097-f578544215d1",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "8e4ad4ce-4332-41c7-929b-a4dc1ba5f38e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 206,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbacad02-8599-4b59-8e06-c254bd994097",
        "cursor": {
          "ref": "3ca9d91c-0884-4096-b5b9-1ba32fada06d",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "3f539449-9b8f-48fa-be5d-60b54f7ae88f"
        },
        "item": {
          "id": "cbacad02-8599-4b59-8e06-c254bd994097",
          "name": "credentials_verify"
        },
        "response": {
          "id": "36da4b4e-f1d7-41bf-8e4c-56dc8fd7e0c3",
          "status": "OK",
          "code": 200,
          "responseTime": 422,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "487c201f-3937-417b-9ebd-965c163ff5f8",
        "cursor": {
          "ref": "b53c81c3-92e5-4eed-84c4-1b233cd9c06e",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d22eeecb-a4a5-4550-a397-dafbf3c5ce30"
        },
        "item": {
          "id": "487c201f-3937-417b-9ebd-965c163ff5f8",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "d5f2390d-38fa-48f7-a3f6-cbf7b45d9651",
          "status": "OK",
          "code": 200,
          "responseTime": 299,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcb821b2-d8dc-4fb3-9523-4eb71953fec6",
        "cursor": {
          "ref": "ceeb3d0c-7dca-4a65-a5ed-191a82a7d82a",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "38fa307a-5053-45c7-b605-2ef7b44d216f"
        },
        "item": {
          "id": "dcb821b2-d8dc-4fb3-9523-4eb71953fec6",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b317ebd8-4bee-40b4-bcf8-909e8c9015ca",
          "status": "OK",
          "code": 200,
          "responseTime": 285,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a69800a7-e034-4df8-93fc-dc1c93ea2556",
        "cursor": {
          "ref": "dae3031f-9405-48a7-8387-f01f2d4d3d4c",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1509089f-07ef-4041-be6c-90bf20a75701"
        },
        "item": {
          "id": "a69800a7-e034-4df8-93fc-dc1c93ea2556",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "84daf8a1-c422-4afd-9783-37a17aed69c9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a69800a7-e034-4df8-93fc-dc1c93ea2556",
        "cursor": {
          "ref": "dae3031f-9405-48a7-8387-f01f2d4d3d4c",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1509089f-07ef-4041-be6c-90bf20a75701"
        },
        "item": {
          "id": "a69800a7-e034-4df8-93fc-dc1c93ea2556",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "84daf8a1-c422-4afd-9783-37a17aed69c9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a69800a7-e034-4df8-93fc-dc1c93ea2556",
        "cursor": {
          "ref": "dae3031f-9405-48a7-8387-f01f2d4d3d4c",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1509089f-07ef-4041-be6c-90bf20a75701"
        },
        "item": {
          "id": "a69800a7-e034-4df8-93fc-dc1c93ea2556",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "84daf8a1-c422-4afd-9783-37a17aed69c9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74b05141-60cd-4c52-a288-d76fc79e517b",
        "cursor": {
          "ref": "42a27ee2-c192-4fdf-8fde-830d6ed5f77a",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "0045a2d5-5638-4237-a7c4-6cea75022c11"
        },
        "item": {
          "id": "74b05141-60cd-4c52-a288-d76fc79e517b",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "3879399c-78b2-4afd-bcde-17b7215f6b2a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 202,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c38d4cd-51a6-4703-b957-72ddd000de18",
        "cursor": {
          "ref": "37886058-4c33-4e1c-b9df-206a49404f5a",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0e905f62-20cb-483b-b122-00883be8f2ed"
        },
        "item": {
          "id": "5c38d4cd-51a6-4703-b957-72ddd000de18",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "cf9e9131-bb23-4d3d-b1aa-308c48c65996",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c38d4cd-51a6-4703-b957-72ddd000de18",
        "cursor": {
          "ref": "37886058-4c33-4e1c-b9df-206a49404f5a",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0e905f62-20cb-483b-b122-00883be8f2ed"
        },
        "item": {
          "id": "5c38d4cd-51a6-4703-b957-72ddd000de18",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "cf9e9131-bb23-4d3d-b1aa-308c48c65996",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e057b2e-234c-48d2-9809-db3788af2565",
        "cursor": {
          "ref": "6cb15f3b-2408-4f96-88db-eb4d9d68e8a4",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7da44046-61eb-4f4f-994a-9a88c420d583"
        },
        "item": {
          "id": "2e057b2e-234c-48d2-9809-db3788af2565",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "38df2bfd-db95-4a7a-9cb1-2a5adb97afd2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 454,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19cb31a6-2420-43b7-8c99-d215c62120b6",
        "cursor": {
          "ref": "1d1a418c-8bca-4377-8e9d-952a4e7cd6ad",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c112624c-2857-44b4-9ed8-c98e74b366fd"
        },
        "item": {
          "id": "19cb31a6-2420-43b7-8c99-d215c62120b6",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e7baf05d-3cbf-47f2-ae1c-9a3a69aa5fc9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19cb31a6-2420-43b7-8c99-d215c62120b6",
        "cursor": {
          "ref": "1d1a418c-8bca-4377-8e9d-952a4e7cd6ad",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c112624c-2857-44b4-9ed8-c98e74b366fd"
        },
        "item": {
          "id": "19cb31a6-2420-43b7-8c99-d215c62120b6",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e7baf05d-3cbf-47f2-ae1c-9a3a69aa5fc9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd2b07ff-8d61-4482-8070-3c8e1954bacb",
        "cursor": {
          "ref": "6fd104bb-35e5-4bb3-8853-ec3a55d5c81b",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "f491958c-5cef-48b4-80df-fec85f53b0a5"
        },
        "item": {
          "id": "bd2b07ff-8d61-4482-8070-3c8e1954bacb",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "1f364f2d-1252-4a21-ab4d-4197e88a0de1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 452,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}