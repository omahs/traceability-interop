{
  "collection": {
    "info": {
      "_postman_id": "f5f17919-82a1-4db5-be95-0f985635313d",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "bf3f14f5-c721-4829-9435-783b0cc2845a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "9443fb31-b120-4e41-89a2-45639b837344",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cfe04496-f85b-4a05-bfe9-deeeba744800",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "bce2b2c1-ffd4-4cb4-8eae-94e326881a83"
                }
              }
            ]
          },
          {
            "id": "365dc602-d785-4306-861c-7d8dc8e3921f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "115f8975-3f28-4f08-bdeb-0807684270a2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9debd91e-47b0-4d54-98cb-76f141b58121"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b990a9b3-151a-496c-994a-146683cd184d",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "ba884080-3054-4ecc-8782-618dc90cf9f2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f92f3c31-8a08-4756-929e-1e0997a8ae75",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f0fd134f-32e5-4bce-94f0-d217e2181943",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a176f695-1be9-46d4-9922-007a39bfc47b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f6e32e22-be2c-47c9-97f3-27901a6b8b58",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6790d1cb-9800-4c12-8018-2c6bd0404146"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "89a71de4-7380-4c5b-975c-e56b6136b286",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "048c27eb-2588-4dd7-a1c9-bce1c9d38645"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0995243f-41b8-45f3-8fc1-2723419620e5",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3e4c2d9c-1b43-4497-9026-441ddca0116e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3ac47f63-2915-40cf-bf7f-54d8bed9fc59",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b0b9e0dc-55ed-4d92-9598-f413d3c65b0e"
            }
          }
        ]
      },
      {
        "id": "83434949-f2f6-4617-804b-e6691c9c53b8",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "37193023-d7a5-4c60-bfc6-b1428b2aa5d2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "857269c0-3f3c-43ac-b82f-caec08b837f8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c04aa036-c76a-42cb-927d-a969e90b86f1",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "816d5f63-0042-4a31-9e93-5dc948effcc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ae4e71a6-4cde-410c-aae7-e8d5ff3f6861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d96edc52-6110-4880-9b40-d02dee5f2682",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba524630-ff9f-4118-a078-262bc180e9d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "97f26d60-f7c9-4b6e-a74b-cb1b5b010f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c2c5998-aa4b-4bb7-a393-48bc2d27167a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd27907d-8222-45ec-b668-2968ead5b21b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "408478d9-c458-4d39-928c-78159e208c9e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "14ab6498-01bd-4a77-b456-04d7805bbb13",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b287ae00-5db4-46fa-ac06-d50d623f185f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b29793c8-c4bd-4c68-91f1-5fc940f2e5d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f49bdfaf-7cdd-45bf-a194-790919611128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a56dd03f-6798-4789-b44a-a467df85b703",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1bcf214-676b-4880-abe8-5b93063bc6d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2779c12a-b3da-4d3a-bfc6-c2e238349f0f",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f114425d-42ae-4816-b333-c204be12a99b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6d7ec5fc-6990-49a8-ad07-c7d29ae7438b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b0e57b1-1fee-4fe5-bfa1-5bbb7da0c70c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "597e05b6-9067-436b-ac4a-4b515e151d91"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f68c7451-a9f8-4916-976d-d2c1e8eb9f76",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3aff112a-47e9-4676-bff3-0708e8dcd6c9",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fbcdbd2d-9761-4ff3-b251-a5e5a3c93669",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "f8c2d755-7d28-4545-8cfe-df71e1bc56e7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a30a62a5-41ba-4551-89ee-b35021829336",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "03221547-2d7f-4668-8e57-36e2a1cc11c5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c9ce139f-c6f0-42c2-b725-1ea4ac2a6789",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "853369f4-55e2-4783-b4b1-81f05de690b0"
            }
          }
        ]
      },
      {
        "id": "d7268ac0-cb4f-4b18-af21-05988814f927",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b954668b-c55e-44a3-9289-a6cb836a9d8d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2fbf72f1-e809-4a90-86fd-56e447fc4e66",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "3af3a0b5-4fe4-481b-91ef-5be374edbe9e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac2f45a9-2147-4600-9930-31d528799993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab83b87f-eb35-4884-af40-3577a11ad6d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c74b24-05b9-465c-bb5c-73479700d64a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68f449d1-212a-44ec-813f-1f34e4bcc1a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5efbdc9c-0010-4525-a1c5-f7fd0a4f74d5",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3934fdc7-63ad-462c-87f2-319c593dbd05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e45dc83-8211-4315-a706-1d1a5db545a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1df5c611-88dd-40ea-8a7f-1d385bfa1b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e421ba31-74d7-42bb-b576-46dcbc9e0ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe40042-a9aa-4ec9-84e7-4a367f172c40",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de92fab9-b8b1-4bac-b9fd-cd194ddfb31f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "452b391f-913b-48b0-8f98-644316e48327"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "449349c8-2c6b-4fea-acbb-903886dce951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1791f255-cefd-4cb0-973d-390607d61428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b84110-48d2-4447-9381-a8a8972dea05",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "108ed821-1d6a-4fd2-8537-47b822d01886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91210c64-1084-41b6-9930-5a36ba12645d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e833d391-a09b-4a79-a813-a9423688744d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aade78dd-f5fb-4d23-bc04-e27f2e78fdfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7cc6ed-898a-4b9a-984b-1f2a44cf523b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5d29c5-fdc2-44ac-af21-1abb147a141d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d77b2e1-dc68-455e-ac88-9dcddc0bde49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5282b8ef-1005-44c2-8caf-6810e7924b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab0e4176-dcf1-4ba6-ba60-34ee4b4e8cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "506440f5-abaa-4e7c-ab1b-44f7c87bb888",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cfc9d81-06f9-4a5c-a122-a01aa742ea5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c5dd754-d56b-4c3f-a4f5-f6cad3be839a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b04e88f-1b9e-499a-a5ae-64d65a5e066a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3996dd67-885c-46af-8be1-9b653ff9f3c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7394dd5-b4b8-4a69-9d33-4cbfd01d661b",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf1772f-51c5-4a1a-8af1-e22caf33e426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ba9a31a-ea5e-4cbf-98fb-02091d85edc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ca856d1-8889-48d9-a303-4f907b97f0e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34065881-3cc0-4059-b062-765c08a8e2f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f0d30b-3ffa-4429-8b46-a8802be0ee67",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8570f0e9-693a-4f0c-b105-99218ed418a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c556f1e2-5696-4b05-8cd7-b4aa8da44116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b32e5216-cd0c-48ed-9be1-64b7120264ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8da8efbb-fed1-467d-a6a1-c888896d6080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2345334d-f4bb-4d0a-bb34-2099486cfba8",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8411a54f-c6ac-41a3-aa34-c1637533a23e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a97e2712-52fe-4cfb-a206-cf4603f5ad62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa0e67ee-8df2-47cb-b255-90b0f1aebac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19166c5d-d4f2-4ee7-9639-4a040861f753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed338c71-ff0e-4f31-805d-909a1b1f3b9b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "607b9d42-81ec-4876-9fb7-b3176143e00e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb3d84d1-e6f1-4ea3-ab9a-dea93d996662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e32c682d-45a0-463a-8d6a-647b2729abe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77295e07-24de-4e8c-a158-5433ee17a58b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad74e941-282c-42d2-a6c3-ca6599a1f55e",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be9d3d81-ffb0-4815-9de7-e925db8c5677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b6950bc-99d2-4c88-a4fc-85d5c0a9829c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c6a4fd4-1668-4c5b-8579-9b0ffb50d3ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ccc58622-90d2-4032-a74a-004468972026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50458fee-a014-4df0-93d2-98f86f9ce8a3",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fdce36c-920c-4907-86a4-1d85cfeb4a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31492982-9c89-406a-b3a1-ed8d9dcc2c73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea4e4b5e-ce03-4e96-a213-fe3bc6921ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e787f2c2-4118-49e8-bdc3-dd9ca3deb296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e487da30-5375-4b76-9b02-710365d374f7",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb93980-e2ca-4cc9-9bdd-d1c964238037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7137bfe-4d02-4cb6-b00c-8aa5861d7e40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52215f9b-aa47-4ec8-a563-f6d649bac1ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c53f287-a2eb-4df2-a184-873473aa3294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2518ce9b-b22a-4b97-957a-0c1fd18aeb97",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53617721-95cc-4215-b365-068273afd98e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3518b0b9-5138-482e-bbeb-50b73a53a730"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0752f7c-ffdc-4711-83dc-61c1af88f1d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d15605a-0822-4a8e-aeac-a88011fe4f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d62aab-3d97-4d26-bf84-9ce79d0c0ab5",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece9cbd7-0a41-467d-ba84-e14ed08533fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02a06a69-f182-42e3-8994-bafbdda8b030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a40454-7f3e-4dc7-be35-de7942217002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37d2e983-0ac6-4f65-a4a9-0e755d47d105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cee9841-c9ef-421a-923f-6e86de412770",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d240fca5-2bba-4dea-bf13-2848768bf2fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a1063b8-aa79-4b11-b4b1-2619b5c0452e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7beea6c3-01cf-4fb9-bee4-1770eb348839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd5599b2-fecf-4d98-973d-1f9e5c3e8bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a7a2ab-6662-436c-8004-8c2e95a954da",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f77342-eb64-46d0-819f-1ea666107916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0183c1a4-a02c-4e7f-af47-5a511cbc3e3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45873d5b-8a1b-4e7a-9099-f065722754bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29ae6220-fd05-4caf-8017-154becdf313b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fab9b02-2122-4d16-b2ad-e39ae7ecc6f7",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3968be71-2c61-4e81-bfdb-b20e370dc073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e41b8c3-fa43-42ed-984e-e114d1f2a0b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aba329e-7049-47f6-8a11-59785bd8051b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "17044415-6222-4476-a523-b3afe71167d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "771bb61d-993f-49ea-8820-6bbbf53a8088",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd31fa7-7895-449a-a7b6-4fdbcc34d268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "793b168b-8e30-4cbc-bee7-59a3a46cad83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3500bc67-24b1-468d-95da-e13d188a408d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "42c10bf8-942b-4906-9c75-898af8e9f65d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ddadc2a-a97f-4668-8db0-6d9ec92de828",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb92846f-e566-488c-9ab2-eacef2572331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a243015c-3250-4630-8fa6-e0b1c8c7eed9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52717592-e0e2-474a-95e4-e59ed005aef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e06d1e0-2aed-44cf-9306-83bbbd4302ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c01d85d-723b-4cd7-9db6-507e0c0abea7",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac32abe2-0837-400c-9210-c2a9792b3a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45a14a71-752d-489e-bdc4-df05e121c49f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "539e2036-b09f-4b91-9fba-49a3574c4f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "34dc6ec0-4ed9-4992-a72c-c526c3a609b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "782a1205-8af3-4ebb-89f1-4b4afc1fa288",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9afc240-e07e-4783-ae59-f14668589a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b00efe22-5517-4a51-ac5f-7a5f0a1eb25e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd5ecae8-7d46-4a96-a97f-540b18b3b9f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "287759b7-996d-43cc-8f81-0405cbb8c178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "080e815b-9d2d-40ee-8241-35d25df7c4d0",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e13ce12d-7b1f-4f32-8a77-1ea153f8c34e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f285a840-b916-4eaf-806c-0ac9a852dcc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d8cd88-7017-41b4-a3fa-670851e414d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eb3cc8c9-df5e-46a3-ab73-9600fc0f156a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34e2fc45-9067-43d0-a094-24410aa92edf",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f6f5ca-96b8-45d8-8c72-58ceacbdb6a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7900bdd1-9af5-4d09-b996-bb15bd37b702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46cfcc8f-2c7b-4140-99e7-32b9c8d20432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "893b5150-e084-4d43-afe2-f2662b227e1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63276d26-dae2-45a5-b57c-c736092b9d62",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80d9a733-b9bd-463b-9e78-e4497f587643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66083b2a-fa18-4c42-bfe4-962eb24e72b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c3d33a8-d0d0-43ef-83df-7884cdeb0d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d04e899-98c2-4876-94bb-ac3b102a208f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eed8eaa-88df-42c1-aed8-323b3e47a4a7",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc247e8-d0d2-4f97-a4f7-bee039d4abfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4554ae47-3fe0-48fa-88b0-ce32e437aa4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89d337d1-df69-4deb-84f5-c077e16da5a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2a193a3-6551-4a22-a836-e237431cacd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cc67dc3-280a-4d9e-b764-61ddabc32c50",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b93865-6c4b-468b-b57b-d92b6a04ab70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a8f3328-4c36-4f13-8e46-b2a580610572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dddddc5-cd70-4c69-a43f-73ecd023dd9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "925c63d6-7bc8-4206-94ed-056ea0bdc06e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd1f143-a36d-4bb5-8f1d-aa2d9a04068f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "264366b9-1a37-4455-a9b9-ab1b3627118c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b59a0d06-c392-4d57-9ed9-b3417a2c8889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bda9e20-1fdc-4aff-b639-555f092d9296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "72c1ceb9-25c3-4202-a7c5-81cde8bf99dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef54c0c8-bc6a-4ff9-b646-6d3d4c00771f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e8d6ef-a720-491f-9e60-6117e9849ce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b4ed02c-61de-4088-b84d-806d907df7ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f5582a1-ae75-4587-a4c3-f8b3b0e13b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd20c157-aa2e-4de1-9821-6a41cbaa1d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca4b397f-3c11-4139-875a-bfcdf7a344e7",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a5357ae-2326-49d9-9233-fe4404855231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3010481f-bae0-44a8-ad05-b60dbc5155c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72900315-a353-44a1-bf15-9a7742933eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "24007e8d-2427-4f32-9728-a1df6d488531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20206a7e-5c0f-404d-b9c2-c5d3503359be",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2bd911-5a00-489b-be0d-ae19b0fc5723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17f7bb12-6d6a-4e2e-92be-84e1e00546c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d93f83-3d41-4448-b00c-445f7dbf1667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "48c9d3b7-a8cf-4f59-8007-e354a5da950c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8921427b-e1b7-4a9b-a12e-ccf36607abbf",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "466946f1-da2e-4047-b3ad-9a71c9fe7796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3b04e08-ceff-4184-b13b-35ff90566a7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d3b848-77fb-4017-843e-f1e27425abe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "50753545-fe8b-4778-a843-fe04fb3e3a61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "189ecff1-8003-469a-929e-1447778535a3",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a20da6-f11c-4d58-8efe-89dee86590b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c93af888-0b11-4171-a60b-770e788342b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21463881-5aeb-44d2-a474-3e1bbd1d5024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d371ed0e-8882-4852-9638-6403a6ed1109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec7a019c-97f8-4639-92de-41f8778df358",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e03cce-3d6f-4adb-8ecd-3635552213e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72563e79-b1f7-41d3-adcd-7d7883d9d8a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fca94a9-d2c4-4521-b622-4f93efa08264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "75c00e88-15c0-4d19-a382-d928cc1fa59a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1231e76-a7ca-456c-b118-9abed6631d9d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef3ee187-cb9d-4c02-ae89-4c99f0e6535f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99a15c51-f487-4df0-a663-ceb429b35c7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de9a1b4d-6380-47a1-a08b-14235310a0eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "70dd794a-0a94-4940-b1f9-321dbf7c7fc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "797233f0-6fd4-41e8-ac49-1f79e39fea37",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7cb91b0-a5f2-4bc9-a8b2-fa04399fab05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7058104f-c9d5-4ad8-8759-0766d7c3a0e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a0edd4-b407-467b-8ed0-b002e0667344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "585e2a52-a581-46a0-b4c9-71e1a8473b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "901b584f-9da8-44bc-85cd-0f58f63cb21d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f51ab15f-18bd-4e91-86d6-bfb6d5624ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbb53517-d450-414f-b05c-d485927387e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df3a9d9-1996-4ecd-a886-d34cd625152c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d786d72c-6caa-4137-abc2-6909e3191db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6710f630-b356-46cc-bb82-4083aaf828a4",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43f8567b-53cb-480a-a316-d84d82f06e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a49444f-1320-4669-b52a-8039cfcc14ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c585e45-dabe-4687-af8b-92c89a4e647c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "679b6b30-c0ba-465e-957f-2ff406eed624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c1988b-1e86-4e9f-be74-1fdb1ab87916",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a8e58ee-ef52-4c04-a484-6598195edcb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e3a496c-1a70-4950-ae15-67fda0cb3d87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be34425c-9e09-4c45-b0b9-535be1c4f2dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd5e64ec-fa54-4993-9d29-39424b437a33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5daa525-3220-4375-9370-bc81525c3bab",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "babe9bbb-c713-4c96-afad-70b89cf0e871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4590e732-fd7a-419b-99e0-15f0d24bf7b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "158acfd4-6031-4d8e-8aa7-5a64fbb006f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae8cf4bf-5be2-49dd-b4f1-b4100d8abf53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "078a90d3-2cbf-4ba6-980a-ad9b5e194646",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff13330-eb93-44f7-ae35-3b280be7d14f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48bc520e-9295-4071-937a-26ed8c6eac82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d0c927-f240-45b3-a42f-089c33bb9a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5cd3b24d-05a1-4677-9c40-f97f42eb6a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52af244d-6dca-4e5a-882c-bab9b949d65a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b0f63bb-d391-4d82-857c-300968418f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a81890d7-3bdf-4d2b-85f7-4d28d3a94051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ee8972-5535-46b1-821b-12be10e5fe57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "293ab0d9-d13f-4681-b7d5-1cb28324e6b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "751d657c-b2ae-4366-903d-d946097e9dbd",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "762016d5-1327-455e-ab6b-4b75eb01c4a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73a2391f-79ec-43b0-8699-534bac28ec4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e5dfd6-60fe-402d-8f1c-f55eaf4e0680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9cfa65a0-70f0-4766-b133-91a5fbeefb9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "652c79e7-69ab-4c3f-bb0c-cce62af98dbd",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "413a836a-ea67-4e21-994b-1d1b272f1fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "943debb5-4cd4-4e08-9829-de8c26e655a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf57491-8c23-4462-9647-aeb81eea02fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfb63168-72f4-4184-82e2-3d5e9959d5bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886b2cce-0fea-4319-92fc-0c9426df3c47",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db46b1fa-ded4-4709-9c68-7febc348b498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "107158c5-2155-465c-8f38-99e5f729055f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc55bc2e-5588-437d-964d-1ec7ac1ec046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "02530de0-ef02-434b-849d-203f1b861ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ac52a2c-6dd0-4b69-9d55-500a549c4918",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93aa7028-54b5-4544-b9f1-b274b26ce87e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "531cf0d3-1135-4251-8f58-25c12306c33b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb44cbdc-23da-445b-a9da-2e0ec3d62c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d98767cf-9f63-47b8-9b24-0311d3c14d33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8573c97-9522-4938-a313-eb4ada2265ea",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fad98a2-5ab7-455b-87d7-bc8140dccadb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71d99e79-6c5c-4b4c-a046-43f7623bbd48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64772dc1-0f85-4a70-ae79-4e94c093982c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "45a50c30-4fce-4e5f-9d23-0a69099182f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8934935a-5713-4bbb-8902-4340a9832e62",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48791930-38df-418e-bf10-a235bccabf12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5077ac25-c696-4e60-b9e9-093a402614f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4249e8a-aef2-4a66-bc4f-8400552e7f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eaa9b4fe-6070-466f-aa76-f6135af8b002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f76a356-7693-49e1-9b9f-c9707600f67d",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44ec16e2-81e9-4dc0-aa39-5d6a1f08433a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e646b12-fdd8-4004-86a5-551e13cffa4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "392e619c-c5fc-4e18-a1b5-a83bb627f242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b14edc64-9943-40b6-b122-58994bc331f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e77c0e08-7c0f-4e2a-8ca4-858181c75f48",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3716e68-a607-49c2-89b3-478e0d1e6589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1560956c-a644-430b-82bb-d82addf36df0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "143a422f-9dc9-4790-bd63-dc170f7d041f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "560f1b24-b502-4ca7-b9ff-2f0ee9faa90c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f69ae093-90ee-4227-aee3-6b8b7196571e",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ac4a61-3849-4952-b01c-6b98c2268086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8531c140-a5e1-4ce2-90fa-2a7e2daac48c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1eccc37-4838-423a-bf3c-542aa9631ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "ced09bb4-c1b4-4eeb-b190-638498a3b114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a53a1b-57a1-4999-a261-3b59c96ca8f1",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd3ba27e-0bca-4f08-b61f-6db37ab8f2e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5906596-e18d-4fca-abf6-c4475b1f5c7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4939b43a-8000-4be1-9bd4-3e05f834c820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8aa8965-aeb5-41cc-a52d-c2f7de8aadf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc14c593-e7c9-40d0-8069-30f269a92829",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "560a872e-156c-4f9b-8b67-7ee570052b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "372d22ea-495d-492e-9ea3-ca00c850ebea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a11d224-42c1-40fe-ac96-3cd943938395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "abfcab7a-44dd-42c1-b0dd-e3294d41ffe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a9ee70e-16c9-4f4c-8e27-81c33e0e31ca",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b9d3f0f-a0cb-4d48-b03d-dcd70e9a140a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8efedf03-974e-424b-b978-cdbbcbd34d73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d239f013-87bd-49f9-be80-e0d46f2f6763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d46d7666-e562-44f0-a0f6-efdb2a40853e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22eb7cd6-f24c-40a6-8a78-04d23633317b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "771ce1b2-7a4e-4c3f-9b10-700360269284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4373781d-e438-4dbc-83fc-b1165283264a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df028cbf-50ad-4073-ad28-7aa30ab8e905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "91d8c755-5391-4262-8ab4-c521788efc11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdcad8b1-8b0c-40ca-900d-cd033dd542e2",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a41313a-77e3-493d-87ae-dffa20595b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b2e06da-c6a7-4142-bd65-e4e9ec21d284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe5a8706-b94f-4153-ab46-d61effa68c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "7cbf667a-7530-4a1d-9ddb-6d64b88288c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5371a02-4a48-477d-8305-f2b0a9cced80",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "334e56cc-0cb6-485f-8984-a07d32d95612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e07257b-97a6-40ce-ba39-9047ef33e86e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "340ce34e-9972-44c4-a64b-02683f607426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "33b3ae2b-5ace-40a5-be98-cb12287e1f17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23de7404-eeea-45ae-bb48-6d9f3b8ce9e9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc041a8-3ee5-4cb1-9d93-72a872809a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a6fe36a-b7aa-42eb-951c-923bd3cd8bf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea708210-cdd0-4fb9-855b-4b938fc5d92e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "742457a6-e13e-42b1-b76e-b2d47e4d1334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4544ff58-858d-404a-887e-0c65b3659d40",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "925586ad-7753-4736-a0bb-89f01b987b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa910dad-e5ef-40af-8be4-a4b3b208f7c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aa7e737-644e-4424-afa6-74e427b67254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e20e265-d252-47f5-83cd-2fa34edc6cd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8cee966-527c-4b12-835f-5b9e287f5705",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e742c062-36bb-4ede-9bde-102761bf81e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea2bb25b-1a1a-42e6-a84b-4083bf943579"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5f4fe6e-0226-498d-bd77-5cf92bee34b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6abe7109-523d-4522-858d-169eed45f8b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a302fbe-5526-491a-9d5d-178666069a90",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a43098-d639-48d8-b22c-314a16de3865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94f6a2ac-dad0-4c07-93bc-322bf6b7d7d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884f5785-dc20-4835-8980-b6755c74faea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd3901e6-411d-42bc-829c-638f1d233714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a6e00e-9a5b-41a6-8112-45bf5b0fd780",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81a043c3-5908-4783-ae55-0256677ae5c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c673bf15-8c8c-4045-b93c-2ba2c8230e00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb0cf440-9ea3-42f0-8b80-45f8fdf4cfce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "675ed85b-44f7-4085-b3b3-9fb8bc378b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e874af3a-e1c8-4099-ad51-dad25b727058",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0f478c-da71-42ea-b7d8-c55dde959cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a85d2bc-ed3d-4a8f-9360-962bf1602831"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b3cec6-2ad0-4e6b-aa2b-e8e7d27a70b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "84501cde-8394-46d7-be10-fcf8917c1414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8977600-6876-430f-8dae-cccdf17c0d17",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef3c28a4-c3ec-4fee-93bf-3f5c9f53de01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1d627ea-ee99-427a-b9a7-b40a77be52fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2173e121-7c8f-4825-be99-25d216a61c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "12b31e50-2472-410c-be92-068b86c91aaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "786ac2f0-0e34-4155-be2d-c7da7c456150",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e72a90-58bc-415b-aa0c-c4e7d9fa6782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e5b00a1-f841-446e-aa9c-eddf59a1c5a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c11b57-b980-46f0-9c72-5d64156a076a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d06b9270-4a2d-4425-b956-2c82a9d17898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b128f253-07b6-491d-a15e-f90418cc7e86",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35a7ab4-8bf6-4199-bf4f-7ce88d4c4e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9198380-d51f-4566-a293-e0bb3de1ecca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc190168-bb83-48ab-a380-9cb9454629d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ee58203-2fc2-41ff-b290-b01444f7af5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b845f136-d420-4101-a6bd-019e2cb93782",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cabdbdb2-785b-4e0c-afe9-e8f9256b9b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bdadff4-01df-4b2f-a653-871da296d938"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "381bc1ea-ef85-498d-b94f-192b455bb8b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "50360f37-eb27-4ab8-968c-7d9cdad40862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b19252a-120e-4610-bf30-60a7b0b1f168",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d59ab7e-66cd-4487-87ff-5e5861ada051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75c3fc43-9bb6-47b7-abb7-a849c1814206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4240df7-f653-48dd-abed-02fd7e5ddce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "272a3fdb-a5d0-4699-8df1-2432a215e2c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da177f1c-83af-4866-aa92-45e3e3929e9a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c23d84-63ed-4951-b82a-665ccd0f4297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f21357c2-ff95-4b3f-8f23-3473dd43213b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8d0505d-8fd4-43bf-9d23-1c5979c5e522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ba9a2e7-9904-4cd3-b8ef-794606e20de1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cced75d-e7ac-4a69-84ca-90e8ebd20b3f",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e500e5cc-3ab3-471c-8524-06a75e1a4022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc2d91a4-ac5f-4602-be99-cc5a6b442b81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7bcc8ab-fb87-4961-a69b-5af7892906e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7c5d9a7-928f-4308-ab31-9db88611deb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c43f8061-a94c-4171-b782-e0d99404ee14",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0995016d-4fcb-482a-a675-a621f650d4ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de1aa806-6cd5-4f1e-b113-046c55742247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d49cabe2-d679-4b47-a766-5a4a08cab9c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cc36c5e-5aa8-4331-bb67-6bed94c7db3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c694837-6b01-48e2-96da-a6152e48c73d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b68d2ae-90bd-40c4-b5d2-3e4ae2363e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d754e5c-76fa-48a6-a979-1771c6849046"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b72d7342-6168-4c2a-b1ff-244405da1e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "96ee9288-7c6a-400f-aadd-70f5c2b1e0ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3af8bf9b-c963-485c-afc2-310b860bba84",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e050abb3-ff83-41ef-8703-c78b57255317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9caa2d94-7f2c-42a2-a037-d206cefc2a03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75de72bb-b409-4b4b-b8db-1c2f6abaf739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "49c728a9-89ce-4674-bc61-491a69a1dd76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e781a3c0-dfb7-4994-acc0-114c018e2c72",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52bb9e90-655e-4c8d-85db-8619bbff97d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d161a9d-b756-4dd2-9d95-cdd8d965ecf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e2513a-cdbb-4784-a7c3-d514e4044a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0eead7b1-171e-495d-8e24-da1085ddfb18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "042e473f-cb69-465e-b116-6959bf84545c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "861168bb-8634-4027-864a-321b9a8f5fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ace9202-8e87-418f-b40b-44f4c317aa60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3775926-138f-4bbb-a445-b972380cb74f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "adc2978c-ce69-453e-af3d-7bdffa812066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4783315-8a3d-4564-ba14-230be4aa6614",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "675db8d4-f17a-4d8a-9a99-24087cdcf096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6f6b3d5-ef71-4f7f-a86a-6a5053cfab4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae324262-2862-47d3-8e3d-8d14cf8697c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8aecc724-b185-4046-9fe4-881b66f37af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f54fa333-3bf6-40e7-b06b-5e2ef89a7096",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d026f77-59e2-4ab7-b45b-ce4eb4a0eb84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f809e86b-7d59-4683-b163-687ff6c8b7d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "365d58e5-5df9-4844-aa0f-ae0e9e9c31d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c33cc4a2-1558-4cdd-b27b-fe7c6e89cbae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dcb436d-f0f6-4772-974f-3026b41ba4db",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acf2a982-a1c4-4cfb-a0a6-f7190d6a3745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1b0ec12-a171-4722-9a3d-5095edd29fbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a1f531-48c5-4db8-857c-89c800c3412c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d864e4d-bf02-4f14-bbab-d8581aaa50fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b51e83b1-9984-4960-8e2f-cf3f6709b3c6",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f3849f-fcff-482e-bd22-1b8cdba7bbb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18050510-f190-4389-9925-e7ffc013cd15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b39e224-85e0-4643-883e-47eb14a00cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb0b6076-9ee0-406c-9591-35752591edba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09fdb6b3-1690-4b22-b604-e20771e0baa9",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30826205-73ef-49bf-962d-850a71ab62a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e662de0-deea-4f34-891b-ab9a546761f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a09eb63-5668-45de-a2cf-caf16a72257a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "916b835e-d866-43d3-9e3c-c4ae9cd4bca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9bd3a32-9391-46e7-83fc-defb515858de",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0af9f476-34e7-48e6-abcc-8bef2d0131e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4ab3724-e2bc-460f-b393-364d32af2798"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "112b6338-0946-4b02-939f-dfcb594d4e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2151213e-077b-451f-b147-c3abe73f9f22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ef18896-bf1a-40fc-abcd-da08959b80f4",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34a770e9-5055-45fe-93f2-c2f0c4d6ea75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4729b236-a683-40d1-a222-fa17c0071dac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a79b4ba-86f0-4f1b-929a-3c95868e6950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "df75c1d8-b25c-4cb4-8de6-cc8c37c8f00f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e67cafc5-f59f-434b-8e14-bfa9f2ff2b0f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4f9e3f2-b909-4a73-98d7-29477de423a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5acccc6d-a31a-4a49-9233-29c823557ac0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d430b7-b01d-43a5-8b7e-f22a09a140ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb97f702-4487-48c5-84e5-f5e6f6f59c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "979072e8-bed9-4068-8f1f-871c69384c91",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f0cb448-4d30-4dd8-bde4-7d6246e7956a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "570ee047-53f2-40f2-8cfd-cc5c8da38c18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f1d84eb-969d-4b75-8d83-3332253a5a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "819f616d-f900-42f9-b79a-b113851d87c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "261860f4-1e05-4995-9441-6748b7ad933a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c03599b-4513-4529-8f88-3497bdf0d88b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4e6cea9-de2c-4282-9d6c-67b81ad4c48b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aafd5232-23ed-404a-afc3-8e2be0ce02df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b6f81622-8bab-44af-98fb-d07fcc46cba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d13ecdb-e17e-4138-a1a7-c62d3608a93e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3afe4ac-5d7d-4c0e-9f1b-04e671fbe2e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3348093a-add7-4b52-b9f1-085edbf88aea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c35af1d7-7892-46dc-a960-45a06aca8c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "52d69704-dc18-46d0-bc4e-84fac42ff9b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7acfdfa5-c9a9-42de-b963-f712110b56ea",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5bd3af9-7e6e-4776-ac38-2b940e11904b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9741aad-9180-47f4-88c7-9ef0edb2340d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b662093-42e8-4f8f-a33f-2e0c8eafb361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5cfaad0c-c780-402a-87d3-904091abdabf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbfe20e7-19e6-4250-b504-a287226e95ab",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43293f46-9937-410b-8a8e-62957dd730bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a6798e7-e6a8-46ad-8a71-a35a79f23c09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98c6916a-0e79-4429-b32e-3b319f860b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0ae2c20-6f79-401e-b7d4-933004624184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7e0226c-cba0-45a9-b53b-9c9d5a04d077",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d82d2f9-d791-4dc9-b4f6-700a4969a778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c311795-736a-46f6-ae93-608cf2ce34e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cbcfd03-1fd1-4978-901e-23093c8727ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2380daa7-fc1b-4c1d-ba75-a9a402733878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4947a7d4-4e85-400c-b26a-7f30bea709da",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7efc92c-9c6e-48a8-a6cd-55614040f76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efc644d6-1a0d-4a4a-8e72-83a22ca9f1dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd2a5d5-28e4-4341-a8c0-caac14200569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e17030c-f38f-4688-9fc1-609aa39169d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe7175d-1c58-47e6-ae77-b8bd8ba05086",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd973d0-4db1-4103-b0f7-491512230ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76e22b09-2b2c-4681-9e63-1b59c32105c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7660d82-e556-4eaf-882a-c330ba5cb5b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6cfd51a8-cdf7-4f57-bb0c-6be22124ab0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecce08a8-951b-4b40-80f0-210c9b340671",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d8a054-933c-44f4-8031-15112b97c65c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0730f415-0dae-4dc4-954e-a74e14a502dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5698b02f-032d-4e32-a163-f694654d1e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "27e4a4d0-6822-4e87-a4fe-9060c6ddcb58"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2338e50a-bb2c-4ccf-ab05-c010f166df7e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0466ac9c-5b2e-42e6-8e77-9d4a918360ba",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18430f79-48f4-4a21-a730-c4629cb965c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1122478d-f261-4f5c-aa0d-d0b6296f9b9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4b0f873-a3ad-473f-8a02-320827c028dd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "05f67f4b-7345-492c-b226-aec2f3f39843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d082d3ac-382e-465c-a898-7028de702681",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b47d9e8-bd2f-4902-9165-d8c2e4719c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1669f7d4-0d82-4c87-952c-3368a979b3bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb9ce09a-376e-4301-acf0-665e23b423e6",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "aa6ea951-1687-4d97-bb13-419e6572ab5c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9b49be6-d1b1-4ce1-a6a4-4bc79371c80c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "321a6103-93b3-4bc7-92b0-c2bff635ba21"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f3e8d8f-7d07-456f-95a6-2baa5c1e51a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "532f9a5a-33b6-45f0-8efe-8791deb4840a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1ed3cb37-8583-40f8-abde-87ca3fffd9a5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "821c9352-797e-41da-b77e-7bb07a49014e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3aa55254-482f-4b2c-a866-2ecf6ca16512",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3ad1dbca-c74d-491b-9ba0-b42c53a390cb"
                }
              }
            ]
          },
          {
            "id": "ef79ffe0-29b3-4784-bc41-dd93eee522eb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "71e2d414-aeef-4c10-9848-42b9850e5910",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "18b96623-2cad-4817-98ee-e287f793f97e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json();",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json();",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json();",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "32b3f9b2-9bcb-4b67-b6c0-7828c84d4413"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "694900ff-8e3a-408e-944b-04d2dbb37196",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4e47983b-5980-4036-b2d6-154543594399"
                    }
                  }
                ]
              },
              {
                "id": "f02858f7-79b7-4bc7-aac9-4b470d70680b",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a34a01bb-1fb5-47f1-a9b7-c8cef0cbbdaa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e4a13fba-9d69-4b29-b124-812ba165f650"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4bd07617-658e-4b26-a705-cdd67f48874b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "542cbf9e-63b0-4927-905f-5463bc36b3ca"
                    }
                  }
                ]
              },
              {
                "id": "718f754d-5a8c-40b5-a3e2-19227160ea11",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "284551f3-e571-46b8-9861-3140de7cd1d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json();",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4dc74f40-d67c-4235-a224-aa3a233f7e4e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a93f840c-163f-451b-9e36-568445a79ff9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6c1019b8-41be-476e-8555-ee3775205bc8"
                    }
                  }
                ]
              },
              {
                "id": "a345423a-78bd-4a6d-85b0-a9ccbf9a1a42",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a564cfda-cf6c-4087-8c7c-abe772c2ddf6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3973fdca-97b0-45cc-ad5e-0dbbbd14b12e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "094e430f-92a1-4653-bb36-c7ea0cb3f0e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "6cca7bda-967a-4479-9302-115e0ebb6277"
                    }
                  }
                ]
              },
              {
                "id": "35679488-f005-4549-8a12-09efd8828d4e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f505a5d7-11ac-49a7-902c-a46bac520d72",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "adb484b5-5631-431e-8f01-2a0bf20f0fda"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "008cf5e4-50d4-4c8b-b88a-6d89f12a66f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "a2634d64-a8e5-46a9-b654-a6a1005fb48c"
                    }
                  }
                ]
              },
              {
                "id": "9ff0af0f-2277-48a6-a29a-0c51c8475417",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "35ca95c2-e2d5-4ada-b069-ed3329bdca57",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4a65c8c2-3ff2-4e2b-b0ef-128c287e0efd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "52949f18-b59a-4220-88f1-7a5c3e7939f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d5ba0a61-1511-41ae-83e4-e6fa3251c273"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0b6cd9d3-2977-46aa-b1cc-3b80ef493c5b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ab100bd5-9b48-4c73-855a-0afb60899904"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a656487b-9fa0-47c2-8ba5-06ed14cb3219",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "13a8a734-ca9e-498a-b750-16b58e2141ce"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "24e8150b-ef55-4044-a739-ea8281d43780",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "545dc0d1-f964-4a10-a3a3-24d8e61e67fb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "93e5ddaf-ddcf-4697-a100-1f3edc3982cc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4056bfb7-93cf-4e3f-a610-5b16337c12c5"
            }
          }
        ]
      },
      {
        "id": "a7be0ebc-ed9f-47bd-931e-73854835e0c0",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f9b9a855-2ac9-4259-aaf4-f532f6f1a09b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b17bf4c6-57fd-4593-98de-7d93043a234e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "03f07966-e828-4ada-b50d-f113b3970b7b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b27ca9-d15f-4d84-8094-05c453accf9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c17e05b2-7382-439f-b278-304b4364441d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd8859ce-346f-4961-af38-90747eb215f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa9c45fa-efc3-469b-8a65-a256bf0ce461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7982916c-bd40-4fa6-aba8-cb373648c366",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a80aa49-e455-48d0-b098-83edae691986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c79ab6b6-cc71-4ff0-8f2b-eff9c9655de8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86c40642-f5b6-4c3c-a38e-9fe7b94aa977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "63c551a1-f086-4c0e-bff2-b5ee41924ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c636071-65d7-4f9e-9e35-848c8f1b3a3f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11fac7ca-c99c-401b-bd50-dcc784a72e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fab8483b-d779-4df0-8f32-c7d59d880204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07c98f68-9976-4e7f-a514-9f907785ef42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8b8407a-8a9c-4b9a-a33d-135a49c29f5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99c7c411-faf4-4e49-afef-9c00d64c8af5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a4a8da-e67f-473d-a59c-a6a3ecbdcdab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1460516f-bdc2-4f20-a1cb-0dd0e93bc95d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f8a493-0f8e-4d2a-be6b-a1c36c89a510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf2bc1c0-1c05-4eac-9d84-61188c67f6e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ed7c48-d1c2-4f87-87b8-c339e75ea618",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e97abd-6bc4-4fe3-b499-81c195346401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adf03547-267c-4e79-83b5-dda62b0eb547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29fa5fd5-f4e0-4b76-ad4d-d038f80c91d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "27dd1fad-382d-4029-9772-7b9bbad81868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f99b271-cfe6-4745-9749-aab3b81ad795",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83022129-4bac-4a69-9961-acd054c982e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30873e45-64bc-4a41-855b-9fe5d854102b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb48acc-9634-4a52-bff9-64826505f9c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8666ac8d-0b50-47d1-be32-f829cf12af33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d72bad-5478-4814-b9ba-e90c8970e79c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6649e74-85a0-48f6-957c-ffa2d2f8f599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c566c10-e4bf-4619-a035-5839b92d845c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb3cd8ce-bd0d-4eee-8bc7-058a4725f5d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc5a12e4-932b-4d9c-957a-9b2df9760b2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e23c57-2bf8-4b8c-8631-98e07d03b22f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b4fc4be-c5a2-4c6b-918c-2270ea2e9665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1f194d2-406a-42de-b55e-54bc28f4c337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa5840a6-dd6b-457c-a4bf-2a2c77e39808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "316f75f5-4a49-456d-8ced-d87ab7085ee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09acf091-2f3c-4b3c-9467-5c7d0873790c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "713585f6-fd30-4667-b4e4-869496a2fe5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72d1eb74-8b83-4a26-aaa9-6db2cb43ed30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2701ad3f-63d0-4c51-824e-702c0049d33f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f1c9e30-9a9f-4985-bd9a-30cc1ad24688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "573e7223-5456-4363-a4a2-fba5a5892fff",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "254418cd-c843-444b-b4da-3a2826dc6b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c23ff1a8-c8e0-4f4a-91ab-1d95c55d46f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "035db4c9-37d0-4970-a977-65cc76e91763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0cb2c1f-6ad3-411c-9432-ab87428ff925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d9ff72-fdc6-436e-b593-98d24a0cacaa",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f29023-9679-456e-a752-31130cb39af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0c2d489-0bde-4090-8879-44dbff7e27de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b29d685-d9ea-4418-b84d-a0038a59a5da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "22a5b493-b353-4c3f-9e8d-7e96dd5e9ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6419387-9eb4-4089-85e3-0e4f2abbf6a3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d740359e-f98b-48da-93cd-e821c03db6f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32f0959f-6b1a-45df-94b6-47071fb07be1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e19cfda-cd4d-4ccb-9c4c-efe87a90444b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "099c1e66-5cbc-462a-aa13-01983142cb34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29936f05-88ea-43d3-950d-ea25262b471e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b7a7f59-169a-42ce-8cf5-5e2c1f38c240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dc9817d-8b80-467d-ac7d-3f93423eff4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b4a1a4-2716-4c8f-8e83-8853938724d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "23778dee-3341-443c-b7e9-f076f7b8b212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da9c59e4-c85a-433a-a1e0-3c07c0f22771",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3301db8-2b70-42f0-ae50-3e397bdfd088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f155992d-ab38-4e32-8bd0-5feb585435cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe6b0481-fa76-4ba6-a529-aebcf105e150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddb7d890-1849-4513-af98-0cfefb407e19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8311768-a4bb-4b2e-98b9-9a9dc5b5573c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85593a82-5fc7-4ed3-99ae-bc0d19c204fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5561a9c-d3e6-4878-9e0f-5c3416017559"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0101744-d69b-4ec6-8233-7d853c290f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6dd8e93c-a974-4ac6-a224-d50fd177e6e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "894dcb00-dca6-413b-a10d-37ac5900f921",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5887b62c-939e-4df1-95d9-1c0228e78285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c588137f-cfc4-4ad9-a579-09a330e577e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cfaa660-5504-46cf-a3ee-54ea9eeaf9f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fce0bf8-38ef-4e41-bdf2-87c48d3cd6a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5756deb-371c-435c-9307-973d6aacd985",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae73d57-8148-4dfe-af69-95254d8f14bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7573370-4748-4dda-ad69-4a5ac74713d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d516d5e7-d5ce-4d2d-8bea-2741302020cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "32d251eb-e8c9-48a4-b5ef-66a735f03ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ba8e23-d09d-40db-87c5-8e335a66e005",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a8eff01-c8f1-4dde-95cc-fd2ea83c094f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e35c7a52-c6b7-4eec-827d-711289f040fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee106a7-6309-4eec-8f00-4f7f1d333bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffee9cda-20a9-4b5b-9d3d-5325c35ce7b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f3a745-97d5-42a0-a1e0-def3a566de36",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f975ed36-5d2c-4985-aea7-44d6742f60c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a745283-f707-4245-baf1-c7db813f859b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f509538-7d40-4da8-8ede-2f9775718132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90080652-e1f8-4e6c-903d-ec94dfb1e412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8637d73-a3f4-45e7-adae-67d65cfd6c38",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cabc37a7-fb13-4a28-9304-acf7b261d022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "071fef54-743d-4e18-a051-e1cfc3453618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6af67b66-2f9e-44f5-b2ca-01dfeb8d0bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e43f453d-75be-4f89-bb94-749a804359e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c67bc82-4e58-46bc-82be-d07f43d824b2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb414c1-434e-4bdf-b43b-d952d4147623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "439c2ec3-b5d0-4b8f-89e3-adeb59c24df5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa87c3d-b4fa-4346-8b5c-9d524e8a2d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cae2e1f6-ef2b-4002-aba4-45c4c945c53a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c3dcde4-a148-45be-862e-ad00a133b7ab",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77d15e90-f481-44ba-8ced-c72b03064000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5fdb6bd-d3eb-4129-bc53-a8cb22acca2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e7c5a3c-9ed3-41a7-b549-b83c168370f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "231b5fe9-6d45-4cd7-9d91-ec07f9d7f80e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c7399f-5503-4a72-b083-d256695cb7ae",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff489830-1281-44c9-80f0-f754e2b28094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3996e6f7-d53d-4523-9e60-912397e6c705"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee1f52b3-a6a8-4094-b4c8-ad546cff7587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45e07eed-9c1c-4c39-a117-1945ad0695e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "885ea786-ca74-4fff-b3a9-7ed36595971b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea543c66-3b1b-4329-a2a5-00829e323038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53010abd-cc91-4536-8b5e-e7ead6265882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb78f419-7bde-4196-aa59-a23ddfe1be5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b157ef5-2880-4207-a1b6-70f98335b81d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d079a6fb-6a05-4d57-a8a5-f5db4ef15bd5",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07579759-043e-4537-9b4a-97db9ef15cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "724524f2-3780-41c0-947e-2b8077ef6f0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1185f215-44a2-4d2e-b427-b4435aea0f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9138aec3-0510-4ccd-a46f-769ae4339032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14b8c861-ed62-47ef-a14e-4a7263067441",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "235999d9-8f41-43ff-81bc-9868f67cc9d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd4edba0-4bb5-4c59-8443-7b427ce503ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "371fe966-188d-4e21-bb34-0e4f5ebdda92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c29af247-1140-49c7-a078-f145b8c862db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55cf3018-f8ba-4940-9a7c-32cb0512de21",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dec5448-de02-46d3-abd6-c021e774ad60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1428b1f1-8bbb-4e9f-9ec4-7b518cc33041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "520de8dd-6ca6-42bd-a0b3-a12d8209ef62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95442c3b-8375-40da-8fa7-9fb7f66b6ea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81bcacea-a5ba-4245-9c97-749d3e094d96",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e1722de-140b-4967-9ac6-71a0ac4e3948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c4225be-de0c-4366-95cc-8e65c1764a8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c9fcab5-a23b-42c9-acdc-ab35bf3fe078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82401409-6705-4b56-aedd-16f5d0ad5df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab4c44cd-71f3-458b-a2c8-0e6338972409",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16bcc4d8-447a-4b11-a48d-84c5dbc46d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2800747-95ee-4194-9245-6815d83feb96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a914f47-af0e-43af-8479-4526e377fe4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f595abe-c3aa-4cca-9894-4762979f4069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80546f3e-84b8-43d4-b487-4f8837b50740",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6bef452-0413-494d-85b8-3705b4139bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "462df111-85d2-4a91-9664-be71a81ec7c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03918d62-6875-4e2a-bc1b-2398f7013112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18d03424-4c40-4f33-bdcd-acd3582f113f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aefa9ca6-26c9-41ae-9031-97cc80881d47",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af0b134e-c325-4c61-90bb-f514c65eebec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5fea717-d847-4bc8-83ed-51fa52352e75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c578e0ce-5e57-4d38-aaf2-0c4ba8368882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38d4c01b-a4fc-43a8-8d1d-a0f26a002f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70721f9d-2b91-42ca-b3a0-c582a8152581",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "847660e7-2e23-4a6c-bfd1-8e54932b7810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1bea292-5f39-4a0d-ade5-1ed8b1fe327c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e076ba-a092-4b00-9d71-30be19dd2517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6c28092-80d2-496c-915c-e4d28c9bb80b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a4521d05-6cf5-4c11-bc50-7c0309b7ce41",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e9602332-8851-4bc5-988b-74667c245f96",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e99af8b-481d-4f14-b5fc-25997082640f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad275da9-27bf-4706-9b56-48ec791af4ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "826078ff-bbd6-402e-a373-d4150795bd87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bd5ded48-ec0a-4a5d-9806-02fee6070bd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f3edad-12a3-4241-85ea-ac170211138b",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf363fe0-d665-4012-8bc1-cf05dbdb54a0",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "243d5f90-8c75-44cd-bdc1-29aa056bd308"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a5e3aa-9edc-41c7-9879-edee1cca525e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d131e9fa-7ed3-4d59-9ef5-887ddd46f035"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b3eabc9-1296-47b2-bc2f-1c99a74cddb7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "51249552-1cf5-41bd-b5c5-2094baf5d2b1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5afe6c3-8bbe-441c-a268-0d367c2fc080",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "64faa0e2-ca97-4f3c-b312-dc7b1243acdd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8fb9d85b-7977-42f3-b16f-74d0ad7689c4",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "411f9496-6768-452a-a347-3ddac43c91ad"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b5a736c3-d38c-49c6-beea-d8e946709761",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c2b516ca-1c6d-4fff-96d1-11c56e36ce02"
            }
          }
        ]
      },
      {
        "id": "bedda172-9ad5-4e2b-b88e-bc3072b77590",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f138682c-2985-4a33-b60e-11fa98be557d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f207627e-a8a1-4839-8a8d-de74f94123d8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b6d2180f-d6ff-4371-9acc-17d237b5f9a7",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64257579-14a3-4b6f-a467-d9fd09191b35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb5a01c0-e21e-4488-9e48-8b36c376e38c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b457253-a369-4a0f-99b2-6577db61a40b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b2e2ad-f75a-4ead-ade6-a36f574a4abc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69f4a2e0-0fbb-4bb7-b511-01b4757d44e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2920567d-5acb-4fd2-af65-1fbf5c98ac30",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d47158e-a8de-4067-b395-91ebb3c95d15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbca87fb-760f-4c79-acb1-baab320de458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c6c079-7b29-4f25-9709-8f13b10fdab2",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af258994-e132-47cf-92c8-e027cd9200f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "438a3958-4af9-4fc0-b512-1674feb767c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba722232-78c1-4d36-b3d2-fec7c71ed1fb",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d0e113-a95e-4b52-acd2-6a01d684b0f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b26ff88-29ea-4a86-bba6-020cf2a88126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d953afa7-7297-45a0-97b5-2115b1a7e98b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f078a421-5793-4689-b482-032b199c7966",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "510fb063-af6b-45f1-b2ae-bac3baf35d5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62fde624-5a53-4dc7-9c6e-2e69f8ea8c09",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d6d9d07-1391-4178-a841-e49381bebfc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba127b11-6a70-4bd4-83d6-0eccbf2a6b46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce67705-3b62-4bf5-8b05-a89b83e4f334",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d71512a4-008c-4fee-82db-c3bc3d5a85f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cd3f3e8-1faa-4345-9a3a-37031a0a1c3e",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac9f431-37e2-416c-aaa4-dae14e61c243",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c53525a-f7e2-4972-92c9-65e007713222"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7425561-e5cc-40a6-8240-b14531c07349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3569acc5-6ed6-456d-8e00-e6fbafe8a672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c3eba30-861a-4114-8639-c98b459180fa",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c19caa1-36f4-46b8-8a19-a90642e8f487",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3998810-539b-44e0-876b-416ef9ee9156"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c02eaed-9bfd-464f-8946-7ecbf71f6a0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81d24e4d-b39f-4b68-a35b-5dec189e7d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f0c00ad-697a-46bc-9d8e-fb4f4ffc14fa",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d6c4662-1ca6-4206-a982-cd90d75f2a32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9f4ea74-fdd9-4077-956e-fa904a8e5c6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c3b7cd-78ee-4e8a-8d06-6b9ac2a5c68f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f923f00-2c20-43c9-b3af-d2f428374e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a423870c-44fc-4137-9370-f74d92aabfb1",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ac7679e-cb2b-44c9-a4f0-1916ea623649",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42812c72-fa49-4ff5-97d0-900f538e5c70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ed270e-8537-4b82-8911-a6751dbdc0b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc345822-b0b7-4321-a8d0-8fc4235b04c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d00f6b31-0e56-45bc-bca3-23b184a34d84",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff9a563d-b42b-4f17-a847-e199d91ae4b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e9f2430-9691-4363-93b4-906a46282005"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bddcea5b-3998-410f-b267-3c5da87e6ff4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5c2eacd-ea24-4a36-b0b5-9994e6c37210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd3ee4a-5523-41c3-af0c-1dfb09695e16",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "562bc06f-5ad9-4204-9c0f-7d0b7da87414",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a43aa167-8e00-4ce5-8901-708a4449bc74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa69bf8-c3fa-45a5-8b81-802157ccb3ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df5baf55-31d1-402f-82c8-484ec7a21279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd444e2-eb95-4f87-81a1-87093bc5763d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de8494e-37db-4c33-b418-9a89bfa93b13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08154244-3ed9-4906-9c71-2432f5ae7fd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b59f905-ed63-4ed4-a6d2-c282de30a71d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96efa374-f812-4ea5-8004-081c53e75b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2506247a-b9d6-41d9-b983-1e5520839c85",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c8ef056-92bb-4d5d-8519-8eb8bd008678",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8b6356d-fc7e-4d53-b03e-7a923d232b7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "517fd697-c7b2-4d02-b7d2-ac7d809b1696",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b65d1b43-732c-4225-bfea-33e596e52681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "402e826f-384d-4526-8216-dc72263f53d9",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89aaaeb7-a014-40e2-a074-03a32c605463",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1850d366-186b-4a2c-9572-409341d7c993"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b013ee53-1fac-43bd-9af1-c1a67ed2cedb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a6b60b0-0963-4146-9722-0a7a2d5932aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed6ee8ed-1167-4740-8871-6bf19020496f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54de743-9891-4ab7-93be-173f031dc4ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df288f7d-eff7-4288-8f56-b6764e3a161a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e9f6a76-fdd8-4854-9048-9b55902cc6af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aaf997d-509e-4cc9-89ee-70a039d3264c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5bea79f-a7c9-40ca-8033-c99441de3ad8",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd182f4-b93f-4012-a1d7-19e29132ada8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80475f1a-5242-4fe9-8506-4d16f7d9b1a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1783ec65-618c-4f47-a0ca-90661e5b8a36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94576df6-f174-42f4-b74b-a6295479e773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8535dff-b7da-4425-865c-4cf2f4720322",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde971bf-8f19-4c98-90e5-6b81156f80b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eab28bf4-2230-4e32-bf80-72a3d3344d96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b219cd-2929-4d79-886a-6efb33b24cca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f8e193e-d816-462f-9f0d-997044c1c609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e05c7d9-2a1e-45a6-898a-a3768a2a6c6f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94cb6dcd-275f-4708-bfb5-73ac8b12abe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a68eb6d0-3018-45c8-b232-6f38ac7e5b46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78ad865-5246-436a-a68f-212bfb825db5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41ae5604-4fb6-4cbd-a68d-631b14fe2508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed93974-fb6d-4347-ba00-bb8e4cc3cc88",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6bba2c2-4f05-4e35-ab21-d6f1393c8479",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "126c8b03-6e6a-4f03-8034-321a6a373a4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "627d0265-9548-4c2f-9652-b3d93b176fae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75c45c7d-7075-4fe1-8dc7-d893b9df8c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc4af6ff-5600-401c-934d-fc7bf31498ca",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d35f8ee-dd5e-48fb-9895-6dace294d42b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1a02f88-639b-40e7-baf1-7a8a3fa57be1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b492bea8-0f89-4562-8ea7-83987f7930d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbeeabd4-c941-40a5-a64e-fe8865ccdf6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcfa31da-0864-4543-af71-aba82fc0e297",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af23a654-3cf6-4c4b-8861-b38eaf48c89e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baac24eb-395e-4368-a9f0-b6f1447d64af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58417c2a-f333-4396-81f3-935f990be486",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62350ac4-b3af-4c29-aebd-deaf75e1198a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61ffaa3a-e6e3-4c55-a4fe-0ef92546ea24",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5a558e1-5032-4862-a51e-5d55a0687268",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c75b63f7-4c6d-4643-9d6a-9ae319af87b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5c67061-dc1c-44b6-a03e-7fb50d5fd06a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73fff95e-f675-431f-9bfe-74ae5db036bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e83b706-4e71-4da7-8704-98e16e51ca33",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "700fe88c-edd7-4b59-9e29-3a311f7bbbf9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3726e3f8-1c6e-4b06-82f9-20991f7d82a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01fcf926-f6e2-4e29-b140-fe508b37ec26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a803874-0169-44e9-914f-e83de8703adf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe85230-c55d-49fa-b885-caba7c2abab4",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9c19a33-ad18-4e6b-88b8-72740a5a0c9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7f743de-7491-4309-b999-abfaeed0fa48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75314a75-13bd-4ffd-a048-4793c2f4c92b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f2aa805-a82e-4d85-b59d-37af57d4dc4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03dd561c-1b73-4b50-9a06-e51fd722492c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54158f4-f1b0-4b54-b0e2-3f9cf71192ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4558fe8-ee59-40ed-94c5-7cf073175d17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda4389f-0551-42ef-ac1a-b52a79452407",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85217762-dacd-4894-a5fe-6542b6a34af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52b3b77a-492b-4acf-9b1b-0fe52f0d8b01",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "065d0b52-2900-4509-b153-f622cb7adb38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97cd35ed-ee84-470d-bc26-864482836ac1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7452c9d-f689-4fcf-95cc-83d1d68fd577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f19787d-a149-4931-9a18-164fa424b67f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd5da10-cccf-4018-8bec-481fa086e9b0",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b14ef8e-98cf-49ed-8b77-8bf29732769a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc5fee5a-3e64-4aae-9af1-b19e5e79c72d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e81ec15f-9dac-4b8e-a43f-35612606a3bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c78d0c3e-95fd-4889-bb96-4d85cf34407b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63b0d31a-33d9-4ff1-ad5d-1a97c5dba863",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dbbaad9-250d-4591-a025-3ffbb6124508",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28d13e55-77cb-446d-b236-7507749d2608"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6cc6b8-8ba1-494a-a597-18b1f26af11d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb70d7dc-b101-4eff-902d-5adb73f535be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37bb2514-9dc4-462f-b546-198f9212bb1f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ab6e13-1717-4fef-babe-2c77642a58f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd38d276-31b4-43d1-b971-bc1e4417415d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d40a78-2b6d-493b-a6c5-26a035c3616a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e393e830-356d-486e-8398-95d3adc5d5ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46071a06-1690-49be-a9cb-ec4bd5ac2d2d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbf04c6c-2e0d-4619-98a1-8173aaa82697",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1afd0c6e-a9fd-423b-821a-1e559006010e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1203030e-f500-452f-b009-d347b019020c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29a96505-0f6f-4eb9-a1bb-d6e6973b85f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02020c8f-cfb2-411b-903b-4fe8dbf4dfc3",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20a8ada7-fa92-42f9-b6f5-20a8e959bfe9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b54592c-a069-4e90-9b71-1229befd4308"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e4cf17d-582d-4912-a6a8-ab28d5577267",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd974c88-f643-42af-af16-39c9e94c6c4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c691122a-dd38-4ed7-8886-6f1f8a2a027a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de75aa80-25dc-43df-8982-af46924476d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af3c0aab-9f5b-4582-956c-d603268cd324"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c9a6be-8bf4-479c-bde6-eb49fb2da959",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71b73e09-cd19-40e3-96a5-ba22188e27bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed5fed44-559b-44af-ba08-5a5c34330b0c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7f8413a-55c3-4cd7-b814-7be8ae1bcf77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7a55e51-05f7-48a6-a262-81147450ba62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f94fe80c-cabc-4e8f-913c-2a32195b9933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f9b7d14-b0fc-4d3a-bdd8-db00191b9377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8ff0b1c-5c5c-49ef-b1e3-b362f62d6bcc",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac0030fa-f2cc-4ec2-b357-26b0f465bc5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e218f1ed-eb0c-46fa-ba3b-e82ba6b0d689"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae45bc0-31dc-43f7-b30b-3c62207a9582",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eaef80b-0334-4b8b-b2ce-c9b579709c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90119647-f722-4424-88d5-19c0035b2967",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf859ca1-9332-47a9-995c-8093023d032e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fd594a8-63c0-41bd-a3bd-e774c8e5267b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d03d246-c82f-4657-a030-83bea42ee407",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4696f664-47c8-4226-8e47-3e8782ce4616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "355a3c5c-9732-4d44-a573-f72842304cf4",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b2e0249-c78c-4078-919f-a225d8668ddb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00a68aeb-a72c-4431-b511-499241db0cde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "546fd184-d6f3-4611-9bd5-6588bf0af49f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41272d69-c6ca-4a5a-b8df-daff814f6baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a5fd178-d72b-47ab-ac72-2fbd94735b3f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a212b82-b7fd-4a81-a758-c810cd9252a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56e9109a-b949-41bf-b6ee-ee10bac2315e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3bb047d-03a2-4fe3-8058-7c5ab52665c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da123a9a-271e-4cda-8303-87fcf5cc0602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc53a83a-a184-4d56-bc9d-fe6f5f10d589",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6cffdf9-26bd-44d7-8e7a-b2adadb2a480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0994ba8-060f-4a0e-bb5d-a0dfdf63ff36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf536af-8472-4075-8a48-76cf1d0951ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc36239d-da03-4968-9a37-3ada70e25373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4be196c-9220-4da5-88f7-a3436ad3fe66",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00938728-0d6b-4604-b8f7-2efcf0fdefab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4464248-a326-4977-b96d-ff326009283f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3363f219-ec31-45ca-947f-7eab83cc9a23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "024a71a1-bd33-4fdf-8ca3-119439009d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2abc98bb-6d8d-4821-8f35-2cc1d6d055ff",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "564df9e0-2561-44cd-8ba0-b4c8441acbc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b21f16d8-8f16-4785-8986-ef6e3efc22d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c142c1-c389-4c8a-bcaa-7ce7342de6ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c8e0d66-6ff2-4bb4-9dcc-f033cf4bc6f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca27af3-c614-40f0-a66d-094ba2d77750",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed425af-d8a0-4f15-b516-76ce490b9692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e82c5f2d-2b2e-4b12-9066-ea063fa1baec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf43f08-060a-415b-aa57-460bd5630775",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9e07fb6-081e-4a44-9bc4-3487cb5e598d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52067080-1ee6-414b-862b-aa4310ba0a58",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "092fe585-5190-46b1-803d-a8a68afbb2f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb9b17a3-2b2b-42be-a3f9-18deeba45c97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb85a172-b95d-4f39-9bd0-4c2121e59e9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffedae28-838c-40a9-96f9-fcc5fe721a23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b92e03-379a-472c-8b10-c60e66abd046",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e56b9003-7c26-4efd-b152-efb6a51761d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41af5291-97f8-4617-b067-78f25564f8ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb12784c-b34e-4aef-bfda-cd41d9b827d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84b9b26a-5d88-48b0-9617-2c041a82ffc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e681cd62-0792-417e-9f97-4ec9465f65ae",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9811b0de-3764-48b9-a987-30be7d5a4479",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17fc34b5-06e2-4be0-a7fa-40501ee6258d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c66999-256c-419e-a5ce-371dd96f9d1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1d93dc0-11ce-4ff9-831f-3fa54918c67b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a98790e4-4b28-4e28-b587-f54c4c10892b",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e5615ec-86a3-4a2c-badd-548aa6dc8654",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "450f51e2-24d4-43e4-9817-ab0992520c4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b2ee22c-a0dc-4f18-9750-8cfe4b52d873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8537bd8c-2b90-43d9-8a96-eb813af5fed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0292243-236e-4c6d-9b35-78aa00c1b841",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "943405a2-6320-402b-b428-70f566817d80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78717fa7-56c6-4bd1-9790-7e2c9eae4fb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd2de557-6322-43c8-a315-6c181b4df5ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "442c2a9a-09a2-4e56-b6a5-47fc40899983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c6aa30-4f0b-4fed-8ea9-7d30fba7b4cb",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e0de4c5-7766-4b05-9eaf-9741350516ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02d6c11e-5d8e-4a45-aebc-5937871d0cbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a69f59d-3ac4-44b3-9239-32f525c9df01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a10cd9c5-ea88-493a-97ba-de355504824f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4ffdbd6-223c-4a38-a591-008bbe72aa1f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea64dea5-618e-4d32-9401-cecaad0290dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2684f067-509a-47cf-80fc-8f21d40cf5d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7feafef-e651-481f-b6e4-9853f3ad1fcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef9b56d6-acca-48f7-864f-17c83fa58faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cbaa29f-3ec2-4d5e-ab35-412f96efddc5",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "952a0b58-8613-4ad6-957f-e2cad6f3c086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "189df0ba-e28e-4611-8d67-548075b66e6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba23c57-a49e-43c6-9b1a-5c2c8fc40597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e353b5a-d0d6-439c-8b5d-b8dfc8f37cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e483a8f-cc55-4c7a-9276-8a32fa552bb5",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4667d152-5336-4c16-81b0-e41a869dbc20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18dc1b6a-ca58-4f2d-a6ed-c63873c5f203"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2bca971-f5ec-45a3-9bc3-13e32416273f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0bded68-cd61-417d-b7f3-816496c14bf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cff995fd-74b3-4037-ae49-567cbec33ceb",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea97c2dc-16a3-4aca-9075-37a46843e588",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "050547c8-62cc-426a-bbcb-6b69c1d758af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c218f556-1059-4ab0-9ab7-1c12cfee7c59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c840881e-2f3d-4e94-8f28-48a14a889dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6fe269-23a8-4339-bf33-7ad555955559",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff63a9a8-e079-4ee6-a0ff-56b80f4a0fc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe664121-e952-4e49-ad26-0aa61fdc236d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b8e62e2-42ff-4838-a285-2d41d7f96be0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d41a7d11-f3b6-4ab8-b5d1-fd99af8af2bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e044d66-0e98-4623-8919-10a5f168a01a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0882c9be-1a52-4206-821a-d0d80ce39973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54ccc6d6-27b5-496b-9da8-a38462f4bb85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e852f1-5089-4bd8-939c-41f24164dfed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48740ee8-5103-406b-9182-3c3673ef60d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd1c9aa-8d31-426f-863f-de9db9bcdbf8",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d1ebc40-68d0-4be6-8034-db523c57f0e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5320a201-f9f9-4122-aa1f-83a028edb839"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2550e4c-19c3-4674-87f7-ce2cd3a31b7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cc95a5e-6b7f-4b7c-be94-027e9d0071db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b4ba8e-a7f0-4238-a3d0-02ed371be62a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3474f4bf-f972-4dc1-939b-f5dc1a3c1c2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b389cfbc-592c-4a2b-9922-dbe4338eb410"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a699c37b-2639-4744-a844-cfc1b85a6bb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20d32d3f-7ef9-46d2-bf01-9400342ac43f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab2838a7-17d8-4031-8fea-e998727af2cb",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ec86c3-b94a-479a-9390-ea59c96b2baf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9d66f4c-a7ae-4015-80cc-5781981a2375"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef1a4b2-aafc-46a9-b30d-35cbdd7a4453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4a3ead2-f2a1-4957-b554-c9bfdda640d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b16c84-8984-4a98-af5c-5d4dfcac5700",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b4420bb-d4a2-4383-88c3-f506f90186f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dedbc006-39fe-4d32-a406-8d5c36caba95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e51fb457-a389-42a7-900b-6933c28ed387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0454be8f-0630-4253-ac2f-5a96022201d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d85d9d3-db04-48d8-b5c0-a02767b55698",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97b47e57-9986-41f9-ab0d-7b27577cd755",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bd3fcb2-87d7-4998-bcaf-22d788960fe6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4165f43-515b-4254-832b-3737ba6afed3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "570d5ac1-45e0-4c2c-95bd-fd904396409a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b2e61cf-c89e-4403-86f7-ed283f9287f4",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb46464-074e-4daa-b7c5-a8a90e025416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71991cf4-c2cd-416e-bc3c-4d8f150804d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d97a25a9-644f-458a-8c37-e2b9e3bf1177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3edae173-b916-4e99-a6b5-a96456bf257b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "164c30a3-0028-4b49-858f-59c077dd4c2b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c94bd0bd-347a-43a2-b097-77873e41d05e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fec12c4c-3330-413c-927c-7e34fcebe26e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e150df-4a8a-40a6-9080-5f0a6119dd13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae8b3468-b921-407e-aafb-a0562873c336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c4385a-8216-442a-93a5-0c5dd874e5b5",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7c32d94-addb-4421-bcea-db283d61b389",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9896abbb-f565-459d-bdb3-79ee34d7a8ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d204f9-690a-490d-b712-3d90a1c23757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d55ebc4-1e5d-42ef-a7bc-14f450e9a4e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bde1d09-ca48-4412-ae81-2a3b11642ced",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "272ecb73-3b90-432e-8b84-02d158774445",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cde0a00-83cc-452d-800e-6a4db2f29b58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab6980f-b4ff-4dc6-956f-f1aaed8a3a68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f00d3d7-7fba-4414-9386-999b7374782c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "445069f6-2bea-445e-9b3e-f3efd3f5386f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c79dad3-fa2c-49e8-98e4-d056e976a179",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48b553ba-f57e-46d3-8d33-04a179d069f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bce8554-8fe7-42ad-bd12-6dad4d7651de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4b7b013-5593-4396-bfc5-a09d4dfb899a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ac51fed-c16a-4798-9b60-0e0891f7533a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1850f3f-e3e3-41ca-91cc-a0e3386c7140",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a87c41c2-6738-4319-818b-9fe766f1a580"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23b50119-4c9b-4ed1-a374-3ddc92349b1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e4043f3-49ae-4d1e-b953-6c01914e2fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9712b334-a17c-4d10-818d-b600537f7c50",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0251eb1-be48-4732-ad21-bb7732f7eca0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf21d577-795b-4971-9eeb-77a3c71202a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "646a85b6-e0bb-4d93-80a8-052d400ba59d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a502d361-3e64-482f-abf5-3d080bcd0e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6038f519-f6dc-4774-a8a9-19f8cd154c2e",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "199a0ade-6066-433a-bdd1-4710a37c0e61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f9f3be0-a2e3-462d-b0d1-6cc328f87ec1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e91d2968-a8e9-4bdd-9974-c3666e1bd3cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3629198c-745e-4ecf-a1b3-47bca4048660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c87547d-d3b8-40ce-8e33-1848e6eb22b3",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e16bc9-31b6-4833-9661-495b41f7821b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f24e2427-1a2d-44fa-b503-35f8cd0cf759"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16bb1e58-b96c-4459-afea-30ad7819f0fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28cb7296-095e-48b0-877e-72a8ca055ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9776592f-1d32-42cb-aabb-a24a1fef8f5f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "275b1070-7cf2-4528-90c5-ec0db9bcbee5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f14e7f50-67a0-4370-b203-0aa1eac2c197"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9880af3-5d93-473c-94b7-54a339fa850d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e07f2ee4-c3d2-4d73-ab4e-47ad0fa4dce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f914a72c-77f2-463b-bfd0-be823f5c16fd",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd3db08-0461-4024-b1dd-e3371f2bd50b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c11a8f8-f501-4fbd-afd4-1325a05676ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2f2f310-de90-4d53-9c97-cbc745cde290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c8b780c-778f-462f-99b3-bf88ee7441cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35437f8d-85e4-41eb-abd9-5cf19c9a766e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be552ba3-bda5-4346-ab99-c61ed478d45a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe7bea91-87f0-467d-bbb8-d85e048ac1a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de71da09-d143-4ba4-ab0a-de3d848689e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45f2d903-f09f-45b9-abfb-83b44d3a8705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f2936f-2948-46eb-aebb-87f447238ad1",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "951afdda-2e0e-4ea3-8222-c5f4a66d3f9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d8c833d-676a-46f6-994f-46452baa1f80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a2f3f1-3a85-49d5-a9d2-5187239a39bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba6bb53b-30d8-4d1a-bbec-035d7f132913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d267f3e4-b03c-47e4-bf7a-acd0c37d0cfa",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c2df8e7-8dd6-49db-9a90-bfce8bcb5727",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "249ee0c5-d5a6-4ed2-a0fb-7b4cb1a55551"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c581320-d3c2-45e6-b6b1-f492582bea93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20bd419e-d658-49a8-b936-a8d3711d1a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "221ac3e0-3dba-4c3d-95e5-cbc5361025f4",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f30c7b9b-2f38-4c65-8013-97d7efa2eef9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5fd5571-138f-4d20-b020-15cbcd3102b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd7b9a04-69b6-440a-8f7a-a13f718fb8fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6056a72-35a3-453f-a055-62f18a52e135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0826e302-295e-4cb0-a5a9-6bccc925f579",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25b9d86-5f31-4162-9704-065159997501",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9ffea0d-ca1c-4427-b3f4-d2f30e391cc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb2af2c-90d7-48c3-a46c-5403605ff3b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "538c8a18-253d-4870-9ece-dd0f4446a997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22beb837-d7b5-4cb6-8292-b1351cf42bd6",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c74feac-e866-400c-994f-9c49e3a62392",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c40f2418-54df-4648-bcf6-f3b95bbee508"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c019aa-28c7-4b62-a5d9-17227aa334a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db7f0032-ba41-46e0-bc1a-ad8efba3095f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b8951d-3c08-401e-89ec-1a9810c0a1c3",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e9b62ca-b1e0-428d-aad5-f7dfe922bd4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08cca257-1ace-495d-8017-ec42e7c89ca6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "099194f8-ec79-4d1f-bb96-d62e8a261b84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38540902-5e59-44f3-a7ad-a3e8faf6eccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bceaa28-78a9-45c6-909a-5fd12355ac39",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "280bf446-1ae7-4633-90cf-b52d0dda0bdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73e51d5a-db6b-4b83-82c2-0bae90ef468f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e5acec4-c942-47ab-8260-c8616554fde5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c69c3072-d329-486d-8bf5-7eb021123fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bba4e0d-2e08-4687-b639-67695b896d0e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9469abf-11e9-40dc-bc3f-524aa9d19dec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "337e058c-bfb2-450c-9bb3-fec775bcb3d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd7e5ad4-2e59-4da5-8189-9a8925949106",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de85c38d-284d-44a4-bd6c-456eef7c92f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28e6a5ee-dadf-461f-8860-9cc6651abd26",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae2d6aa-60cc-4666-9cc4-01ffe602cdbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0679b08-5f18-4415-be28-e2841d071ce4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "128e248b-5229-4f92-938a-9c445ad89c75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "889758b1-4537-4aee-b487-119afc9551cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e73385f5-cb35-44ea-bc47-5c4b410f3680",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2bade03-f165-41da-a49f-4b8456cb49c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f964d0f4-4d16-4ae8-bb2d-ca6034703cfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc9076c7-a86a-43a1-ab7f-a957bd80436e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93631360-6018-4c49-9689-542f2eb0eb36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58075fe2-f374-4468-8982-888fcb26e254",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "790d07f2-7fcc-413b-a8dc-481ffcc37300",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b65da6ed-f44b-4864-a3cf-ca8f1c19ee79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed4355d-0401-431a-a33d-9b8a73d249d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44292c3f-c0e9-455e-95e0-d3ab527c3a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54eef917-fba8-4ccc-984d-e29e5e5aea59",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d2972a-0d25-46f6-b2e8-796f023604bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69a26fc3-db56-40d6-8a04-c6e113a4573a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c645028-081d-4eef-9c68-141909eba578",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6be6a0bf-da5a-437c-abd7-d02a74a09639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6e6b269-8527-428c-b45b-70e0eb1b43e5",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "505e945d-2eb7-46ba-9b34-df229ece062c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "303a34d2-8718-4439-b361-ec4550f571ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59a70718-a798-4a48-a254-d7f3abf08380",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7564f917-0518-41d3-aae4-fe22358b86b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59800ce2-0817-42fb-aaa1-4bdc5bf272c8",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "590ed8a4-5248-4411-bbc2-de72a2ee4fed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "870bd7ae-dc95-49b2-809c-a0d4cb8646a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ecdde2-b214-44a7-b8d5-303a2b16423f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1412d3a5-6254-4080-8432-cfb6ba920201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "646d673d-4e22-49a9-968c-c4185e9002d8",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b4ef286-6ad3-456a-af1f-58967e908eef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "915913d1-8710-4568-ab09-98ecbdffa477"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c4e0ae-3911-4a45-8775-1d94fefbdcc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a6d4781-5d44-4b07-8ffb-36fd95d5bf42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83727b17-dd2e-4dda-bed0-d4c8f1c09160",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22fb76c4-5d48-408a-82f4-9da6a3c9d745",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5759572-210d-4a9f-bfec-9c6e1495cf4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a3787ac-93c0-4a84-8bf2-643ea286717f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef492947-28bb-4528-b282-d53befd235c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8869c4a2-829f-4d05-b1e0-028c06b0dc0c",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "285beacd-4148-4244-bcee-ecb07fc7bc07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a06afffa-0ba3-45c0-864a-12c34b226cbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f322f898-98af-420a-9bdb-9339a5721cc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "409cbc1e-c212-43d4-a269-f45b39178634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d8d1f8-26b8-488e-ba38-3746b8972f54",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33661ec2-2269-4e9c-9d28-c6286380a8e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ae9e92d-f68a-40d7-8e0e-5b5d7903346b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac31f14-a3f5-4ba0-9535-c08ebc459de8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45fae766-c64f-4f06-acec-96a769e1bbc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5e5f1ee-0ec3-4a0e-9c4a-a3154108027e",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e60603-d1d6-4b71-9b9a-f7812024ec9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9708f63-0940-4de9-9be8-f329de93e840"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28221969-65c4-47b4-a1f4-26e3a76f1fd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b0ff048-d5b7-489c-8756-3f06cb6faf17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f60050d-b221-4873-bc58-6b1ef10d00d6",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc9b839-d76a-47a9-aed2-d5ad85ffb5a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4782de43-bbcf-4009-8a3a-5004c21ab43c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d02a6da7-2912-43e9-825e-36fb28fd1a0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a59e63b9-aef6-4226-a840-4dc9b289cc61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c0394fa-f4d7-420f-92c7-a3a8f5bf02f0",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d8acef-307c-47d3-9ff8-65e951c5a67c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfca2707-60c9-4b70-8a0a-d6a5c68ca7c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f64dde-d25c-4b0d-8a10-33be998f7ec5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae168a9f-1f36-4b3b-afc1-24b99a5c634d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a28a8b-82a9-491e-a551-123650236d97",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41af9a41-c185-4717-abaf-2ac33d4e44a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5dbeddf1-2e46-4cb4-9d53-91a98cceade6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49880b7d-aa14-46b5-98fe-012034ff02fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac860dda-dde8-46f3-864d-22ce8fb552ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24974302-e039-4c6e-9f0b-7ed95172c34f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a430be-3a00-4bb2-bf13-5c1b27b1d391",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3eedb56-ca26-4f28-9e92-ac33aaad1c8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51278654-f463-44e2-bc97-2f78f80edbaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "482a89e4-369e-4eba-ab5e-4ee1d70ce198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be663c69-a132-43b4-93b6-dffed1eabe5a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1600345a-44cf-4ac3-b776-7e77cbac703f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b72deab-3ba4-4838-a807-17058ea3b590"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c1160fb-0f37-414d-99cd-b1e76b1ef2d2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44dd7aff-3269-46c0-8a9a-a465ebf78ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b283fb-61ea-4ad5-ae2e-f6e3cea391f7",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9960830a-35a1-4fa8-9768-e5f5df811105",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "563374bf-fb0e-4839-81c6-92e043c5c622"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2fb0bc8-0817-4eb2-9518-de1105965fef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65544dec-83b1-47e3-b723-83a9a64f578d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a5cc37cf-ed4e-4374-b8a2-39fc26202c9f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "22dbcded-a64d-4f99-84bb-0c097ddd3138"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "97de69c7-202a-484f-b60c-ad91dfa11a8e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ca81dd8b-3be2-4477-8dcb-8f186cf40668"
                    }
                  }
                ]
              },
              {
                "id": "0ca43dc4-3e4b-412a-98db-20ac3d4e2f2a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8e94ba2f-f5d5-42cb-bc3f-8336cf7668b7",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b990187-1559-4026-9879-57d8555227da",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7c0a72b5-2387-4046-ad51-80bf59bcf417"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb6ae43e-ee76-4cb7-8497-0fca75c3e21b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6bc63484-a9f2-43e1-b0b3-cc01bf52c574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fdc2d0e-77cf-416d-a1a2-ce6074cefd0d",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6da5b5e-546f-4062-b279-31010bd852a2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "dc83a104-ef5b-4e1d-ad32-2f9015fc7087"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea83ee7-d31f-422a-a6d2-289d4a96cbfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "abe53feb-33b0-4d83-98d3-fc1a0faedf1c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "07f2c447-3e5a-4bf5-a5a9-26acd31fe8e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4906511a-7d04-4ef5-be92-2e9484d3b035"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "06eabb27-dc89-4e1f-aeba-470b11950521",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dee91977-bbaf-49bf-9cc8-fc7299ad4c8c"
                    }
                  }
                ]
              }
            ],
            "event": []
          },
          {
            "id": "812a4f08-ae8c-4a62-97b6-f31065e8bfcc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a2164474-f998-47f3-9c69-8cb37ff35926",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7036a88c-72c3-44a6-b9cf-dc3b433cdda8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "69006dec-4c45-4321-96cd-796c30e2b7d2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "30376b5d-a7e9-42c9-b249-a11b414a5f0e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "947f4838-8eac-42ee-b7ac-672d4a6a574f"
                    }
                  }
                ]
              },
              {
                "id": "16052320-0068-4ae5-be7f-ba5e30270228",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0682d17-34bd-43c2-9762-f931a3ab6972",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eeb53e79-0248-431d-8c74-220c8db13163"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c7c144a2-5135-427a-bb52-5372b3aae532",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "00406e94-faef-4fac-a4c4-cc87e4a3ef85"
                    }
                  }
                ]
              },
              {
                "id": "bcddb86a-6f16-4395-94a8-3c97a2580e2c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d322014d-a472-492f-a358-33f7c3202a64",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8718fcb6-ecb8-4ffc-b804-571c965866c3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "44118e20-a963-4b73-8c4f-d9880178408e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d1d97509-54da-4df5-bfb8-3466c2217a80"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ea686e43-cfd3-49ac-a35a-83f0e748d036",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "ba84521c-9c89-4958-9c58-df9d8586ef44"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "43eea436-646c-4699-8053-f72b54ce6dba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "91ce2cb6-2b8a-4b1a-852b-34851cfdfdbc"
            }
          }
        ]
      },
      {
        "id": "668da620-4bc5-4ed7-8c8a-55bd85b59d55",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "0703b57b-5203-406a-bb20-a2368aa1a7c9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aa0faebd-9b39-4fa2-a454-a6133d872d67",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "16cb1e7e-5889-427c-89c0-b0a8c9dfe488",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0e88348-6594-4ee4-b6c1-a1ae1a789ec4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "edfc5f65-0c99-4b3c-8f1b-4d44c6027be0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "471a488f-fd3a-4822-9d4d-9a60731e25c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "50487abb-97cd-495c-b00d-403f8777ff05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca9162a-421a-4bb3-a500-de550cf0bf68",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c167e3-fd70-4328-91d8-31c0bbdab748",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9c779ed8-8dca-4852-b9ff-9dfaf9403878"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3999baad-8d7f-46b3-94f7-1cca54353e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d511f937-c35a-4f7e-8860-6015f53052e7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9dd2b577-5cee-48a1-9316-74870062908c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9572c3b2-c4ef-4ee9-a87d-7917d4fda783"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c869f44-8445-4236-b2e5-805d43a46f51",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3fbe1bc5-26fa-4b7a-9eb3-d90eff90fdd2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f578b71c-ccef-4409-8991-a290e9c194d6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "42b0fcc7-9822-4a71-9115-2a5421c0fe55"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "40cc6bec-ac77-4304-9159-7a3f2bbce13f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "824f1b90-69f3-4ecf-9f20-af7fd3bbb616"
            }
          }
        ]
      },
      {
        "id": "73839d68-61bb-4f86-9110-eb64e6164188",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "9317185a-e225-44e4-b902-e5bcf205e1b8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0d0e0d99-1397-4e81-a04d-e7eccc7e90e0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "220f82ca-b6d1-417f-bfbd-7776dfb8ed72",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82b575f7-2004-49db-96ee-9f3e26837337",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "129ada01-8c75-4ab7-877b-5eea11d5622a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "348bda78-b90c-401d-ab10-cd9a2ff9c7ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7fd3a07e-5a5f-40e7-8a0d-d0b122bf79fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b8d8bfd-5e49-4fbb-a7d4-2a6af80926e3",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5272519-2e70-41aa-bc73-cf8d18ce79c2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a84ad448-8d5c-426c-9003-9288c2008816"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "955ee5ca-a08f-423e-8d9b-424501634495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3226986f-0ea9-4681-abcf-6d0ad3c31202"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "230c8095-9d77-4827-82cb-2fda97cb3b85",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "601953bd-080c-4a28-81ff-210d96e95eb5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "54adc5dd-5ea7-4d32-aa2c-3a146bb9ee95",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "69e02711-a667-4672-a579-28aa9f1ad907"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fbeebb32-a6c5-4be4-8706-24bc85048b4b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "802a2eed-ddc0-4c22-9a24-b0944713c834"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d115d71b-93f2-44cd-85b7-dfc14642c25f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "62f65852-69b4-47c6-afa5-971aa8a51da3"
            }
          }
        ]
      },
      {
        "id": "cef32319-26d5-44ea-9f13-1fa0c2cabc72",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "2910fea9-302c-45d0-bede-66e36ef937f2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c4771a24-3d7e-4976-97a3-8d8ad4ee5dd7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "83f6020e-5605-4cf2-86b2-682b58613398",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c4abe2-4b12-4623-a340-55aab8335157",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "5730b35e-429a-4acc-a606-230a521385d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab21f3f-62d6-45b0-afa9-7cedd76ac1dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "18c486fc-da50-44a9-81be-c870f04ccc3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77a0df5f-3033-41e0-a40e-322dc8429e7d",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b807e1-e15b-4735-b3fa-1ed679ded956",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1efb2d38-42ef-4899-a9b2-8d45b2dfd7f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c961c8cc-8039-48c5-a54c-f467df376646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f233f5eb-1fc9-42b3-8217-8d6fd252ee70"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b182b49d-3247-4693-ba85-4b4662a44a38",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "779fc361-c34d-4724-b10c-4666b06fbeb1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4aad6f04-acf0-427d-83f8-58babf1b8ce1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc9e9ab0-f6b2-4195-8064-e00c2b9f3e75"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c04f307e-643f-4892-8a19-f25c1370ef84",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d05e87d3-2ba8-4d09-ab78-749e937fdfd1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f9cad204-433e-47eb-9cdd-0c6dcd1044b2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8689d982-3213-4f72-a974-0fdb61e7ac62"
            }
          }
        ]
      },
      {
        "id": "f686a9b4-704e-492f-b28f-6704168bd1cf",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c818c49c-9527-4685-9efb-ffd9eff3c337",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "85160218-d700-4fdc-a633-224ad6b207d7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "4e449214-436e-4ffb-9bcb-b7365ad111eb",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a40e6882-6796-4290-ac72-6bca2adf7461",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ce704baa-f330-41ba-89c1-579823968b7b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 505,
        "pending": 0,
        "failed": 6
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 476.2346153846156,
      "responseMin": 14,
      "responseMax": 2622,
      "responseSd": 368.20104608791763,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1667954773329,
      "completed": 1667954911203
    },
    "executions": [
      {
        "id": "9443fb31-b120-4e41-89a2-45639b837344",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "6510d12e-38e2-4c92-9505-bbbbd752870c",
          "httpRequestId": "6e395a82-51c8-4fc4-801c-27e8d278738f"
        },
        "item": {
          "id": "9443fb31-b120-4e41-89a2-45639b837344",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "51199803-02fa-4c3e-bfa8-758b7a5dbdba",
          "status": "OK",
          "code": 200,
          "responseTime": 103,
          "responseSize": 0
        }
      },
      {
        "id": "365dc602-d785-4306-861c-7d8dc8e3921f",
        "cursor": {
          "ref": "4bffdf45-e300-4ffd-995f-0f82fc21f084",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c135db70-3f76-4770-8c43-cd5f6c8a36f9"
        },
        "item": {
          "id": "365dc602-d785-4306-861c-7d8dc8e3921f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "491d865c-d4bb-4fcb-9a58-30aba10af0fa",
          "status": "OK",
          "code": 200,
          "responseTime": 14,
          "responseSize": 0
        }
      },
      {
        "id": "f92f3c31-8a08-4756-929e-1e0997a8ae75",
        "cursor": {
          "ref": "ffa7cbb1-5db8-4d70-8793-056fd447dd42",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "8049b5ef-221f-4bb3-948b-680f60679df2"
        },
        "item": {
          "id": "f92f3c31-8a08-4756-929e-1e0997a8ae75",
          "name": "did_json"
        },
        "response": {
          "id": "1409beca-a9cd-47f7-ba34-55168abe5a8e",
          "status": "OK",
          "code": 200,
          "responseTime": 502,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c04aa036-c76a-42cb-927d-a969e90b86f1",
        "cursor": {
          "ref": "ad426c64-96d0-43ff-84ef-795739a5d3cb",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "32fd23ef-45b8-44c6-ad62-a4fdbd1a397f"
        },
        "item": {
          "id": "c04aa036-c76a-42cb-927d-a969e90b86f1",
          "name": "did:invalid"
        },
        "response": {
          "id": "a2c15776-5e6b-45cb-954d-f95dc20c20c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c04aa036-c76a-42cb-927d-a969e90b86f1",
        "cursor": {
          "ref": "ad426c64-96d0-43ff-84ef-795739a5d3cb",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "32fd23ef-45b8-44c6-ad62-a4fdbd1a397f"
        },
        "item": {
          "id": "c04aa036-c76a-42cb-927d-a969e90b86f1",
          "name": "did:invalid"
        },
        "response": {
          "id": "a2c15776-5e6b-45cb-954d-f95dc20c20c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d96edc52-6110-4880-9b40-d02dee5f2682",
        "cursor": {
          "ref": "4bcb57c7-5946-4011-8a58-57a71c5bafb3",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "38c1e1f1-f623-480a-874f-afab0110abb0"
        },
        "item": {
          "id": "d96edc52-6110-4880-9b40-d02dee5f2682",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "67b740c3-fcdd-47a7-b895-c626e560c77b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 539,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c2c5998-aa4b-4bb7-a393-48bc2d27167a",
        "cursor": {
          "ref": "7007f20a-52bc-4dd4-a2d1-95c1d6216d68",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ce113460-445a-4587-b8cc-83db8955150c"
        },
        "item": {
          "id": "7c2c5998-aa4b-4bb7-a393-48bc2d27167a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "6fe17989-3390-4a0c-9428-bc8419be2d0e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 436,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b287ae00-5db4-46fa-ac06-d50d623f185f",
        "cursor": {
          "ref": "bc17a3c7-3ed6-40fc-b27b-b00712968bff",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d915ba5b-9b2c-4002-9af5-e2aa9e3a9521"
        },
        "item": {
          "id": "b287ae00-5db4-46fa-ac06-d50d623f185f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1fb01727-e10b-4b64-853b-60741909a076",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2779c12a-b3da-4d3a-bfc6-c2e238349f0f",
        "cursor": {
          "ref": "6223a2c9-ad3e-4c51-816a-6abbacb9153b",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "6b27b333-285c-40e4-9174-04c675f8f39f"
        },
        "item": {
          "id": "2779c12a-b3da-4d3a-bfc6-c2e238349f0f",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "21e8a81a-b21b-446c-94ea-c1f6470558ae",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 460,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2779c12a-b3da-4d3a-bfc6-c2e238349f0f",
        "cursor": {
          "ref": "6223a2c9-ad3e-4c51-816a-6abbacb9153b",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "6b27b333-285c-40e4-9174-04c675f8f39f"
        },
        "item": {
          "id": "2779c12a-b3da-4d3a-bfc6-c2e238349f0f",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "21e8a81a-b21b-446c-94ea-c1f6470558ae",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 460,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aff112a-47e9-4676-bff3-0708e8dcd6c9",
        "cursor": {
          "ref": "3411b7c5-6ecd-4e2d-854f-1f35507fc652",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "e21447b3-f166-496b-a1b5-827b85c5f199"
        },
        "item": {
          "id": "3aff112a-47e9-4676-bff3-0708e8dcd6c9",
          "name": "identifiers"
        },
        "response": {
          "id": "4e85b5fa-14b6-4e40-ba42-30b337fb89d6",
          "status": "OK",
          "code": 200,
          "responseTime": 674,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af3a0b5-4fe4-481b-91ef-5be374edbe9e",
        "cursor": {
          "ref": "aab12b71-6ee9-43a4-ae91-1a237157e9a2",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e9881289-a77c-4722-9ca0-a4a255a6477f"
        },
        "item": {
          "id": "3af3a0b5-4fe4-481b-91ef-5be374edbe9e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "cc7a1355-a24b-4e46-a0a8-59808a7ed2c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af3a0b5-4fe4-481b-91ef-5be374edbe9e",
        "cursor": {
          "ref": "aab12b71-6ee9-43a4-ae91-1a237157e9a2",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e9881289-a77c-4722-9ca0-a4a255a6477f"
        },
        "item": {
          "id": "3af3a0b5-4fe4-481b-91ef-5be374edbe9e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "cc7a1355-a24b-4e46-a0a8-59808a7ed2c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5efbdc9c-0010-4525-a1c5-f7fd0a4f74d5",
        "cursor": {
          "ref": "567e25de-9123-498f-a40b-69ab2f98131f",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "9ccc8dd9-923f-41d6-ae17-7a36b3d1fc53"
        },
        "item": {
          "id": "5efbdc9c-0010-4525-a1c5-f7fd0a4f74d5",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c5c9a21e-4aa2-4d1d-932e-cc645e9bf706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe40042-a9aa-4ec9-84e7-4a367f172c40",
        "cursor": {
          "ref": "4e4f75b0-6e64-451e-98fb-b534842dcde4",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e0c97c7b-3666-4c05-a097-ab0f3f725bcd"
        },
        "item": {
          "id": "fbe40042-a9aa-4ec9-84e7-4a367f172c40",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d944c5d4-b194-4d94-b5d1-f5f5aebe05b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b84110-48d2-4447-9381-a8a8972dea05",
        "cursor": {
          "ref": "f509f31c-9062-4e1c-a803-c5e80f3cc7c4",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9ef5edfc-3a39-4706-86e0-816ac33885ce"
        },
        "item": {
          "id": "45b84110-48d2-4447-9381-a8a8972dea05",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e62d9803-7c5e-4dd1-b12b-f8a716256955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7cc6ed-898a-4b9a-984b-1f2a44cf523b",
        "cursor": {
          "ref": "4e9e06fb-2835-4256-b6f5-74a75f75fdb6",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a73f7e6f-5049-4bb9-aadf-e67ee84211ca"
        },
        "item": {
          "id": "ee7cc6ed-898a-4b9a-984b-1f2a44cf523b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "dc7b72c4-9b72-4411-ac7b-4fd2f992667d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 678
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "506440f5-abaa-4e7c-ab1b-44f7c87bb888",
        "cursor": {
          "ref": "fb004c33-93b5-4ac3-bd2c-4e0306e68e1b",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "10c42a34-5286-4ba3-8111-8e50c48b18a0"
        },
        "item": {
          "id": "506440f5-abaa-4e7c-ab1b-44f7c87bb888",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "84f50ff6-f174-424c-ba08-5fdb21e27910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7394dd5-b4b8-4a69-9d33-4cbfd01d661b",
        "cursor": {
          "ref": "5b27e0ed-16ee-4d4e-8a67-df29cc8da899",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "318165ec-556c-4fa5-8031-562af90e33ea"
        },
        "item": {
          "id": "f7394dd5-b4b8-4a69-9d33-4cbfd01d661b",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "4e29dfb9-4dd4-4f8d-9264-b08e436cbe9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f0d30b-3ffa-4429-8b46-a8802be0ee67",
        "cursor": {
          "ref": "fa7cfcdd-caad-475b-b126-f0a70bbdd590",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "165c81bf-b1f9-4800-a85c-22a407f1970f"
        },
        "item": {
          "id": "d7f0d30b-3ffa-4429-8b46-a8802be0ee67",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "246a8ef3-65c0-40b1-9d19-812feb29a3e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2345334d-f4bb-4d0a-bb34-2099486cfba8",
        "cursor": {
          "ref": "9f474c58-164e-494f-ad25-76314e273d35",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "636978e2-9133-41b1-a32d-b3fe2fe6b48b"
        },
        "item": {
          "id": "2345334d-f4bb-4d0a-bb34-2099486cfba8",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "216fe7c0-c2dd-43e6-bbdd-cd110cd31de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 950
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed338c71-ff0e-4f31-805d-909a1b1f3b9b",
        "cursor": {
          "ref": "10028c09-7c69-4529-b6a2-01d03be02fe9",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "55156eea-cfdf-4ad3-a998-10d38d6f0f76"
        },
        "item": {
          "id": "ed338c71-ff0e-4f31-805d-909a1b1f3b9b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "fa9f3c51-a0d2-4456-a9d5-18637a0361cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 947
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad74e941-282c-42d2-a6c3-ca6599a1f55e",
        "cursor": {
          "ref": "4af6152a-abcc-4864-b16b-f4ed201c7553",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "fd06e7ae-f751-4556-80f2-7056cc99f303"
        },
        "item": {
          "id": "ad74e941-282c-42d2-a6c3-ca6599a1f55e",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ef740609-c107-482b-bd82-d9b92d4ac7ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50458fee-a014-4df0-93d2-98f86f9ce8a3",
        "cursor": {
          "ref": "952dcae6-507b-4f9e-ba24-2d7d6ddbbc4a",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d5895433-f58a-4e98-9594-e94af43294a5"
        },
        "item": {
          "id": "50458fee-a014-4df0-93d2-98f86f9ce8a3",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "5f13eeef-86b6-482c-ad77-3c277961d52d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e487da30-5375-4b76-9b02-710365d374f7",
        "cursor": {
          "ref": "963171fd-fe83-4d21-9427-58d98cdf47d4",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "73816dbf-d0c7-402f-877e-f7fc1a575bb9"
        },
        "item": {
          "id": "e487da30-5375-4b76-9b02-710365d374f7",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c04e661b-1c22-42cb-a708-4e02f384d4d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2518ce9b-b22a-4b97-957a-0c1fd18aeb97",
        "cursor": {
          "ref": "484727cf-fd9e-42b3-8627-f0d723c2745e",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "7af7912a-f773-4fb1-b829-335e6847f445"
        },
        "item": {
          "id": "2518ce9b-b22a-4b97-957a-0c1fd18aeb97",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "77049184-2c72-4b73-9021-834d7fa279cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d62aab-3d97-4d26-bf84-9ce79d0c0ab5",
        "cursor": {
          "ref": "eea7af5b-f6e3-403f-9ae8-9f40fcfd1857",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "163f6d9a-d3e7-4bd4-8cba-793708984880"
        },
        "item": {
          "id": "60d62aab-3d97-4d26-bf84-9ce79d0c0ab5",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "36a52efc-73bb-4484-a542-80074cac4d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cee9841-c9ef-421a-923f-6e86de412770",
        "cursor": {
          "ref": "0cf061c7-a765-4543-8f05-723b39e98cc3",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c4d70979-28e7-4ad6-a5a2-08683b8c3779"
        },
        "item": {
          "id": "3cee9841-c9ef-421a-923f-6e86de412770",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "de72d178-b56d-431e-9f75-c1b41a059fbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 429,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a7a2ab-6662-436c-8004-8c2e95a954da",
        "cursor": {
          "ref": "8b51cadb-1382-4642-88ff-1f80942d4bd4",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5d1eaf18-3803-436a-9a5e-991ae7448863"
        },
        "item": {
          "id": "09a7a2ab-6662-436c-8004-8c2e95a954da",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a6701a8b-3ecd-42e4-9ab2-97bc5d322dc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fab9b02-2122-4d16-b2ad-e39ae7ecc6f7",
        "cursor": {
          "ref": "90e9481a-e59d-44e0-9f3b-f5189cd5ccce",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e595a49a-a397-48fd-b395-5270c6806bb3"
        },
        "item": {
          "id": "3fab9b02-2122-4d16-b2ad-e39ae7ecc6f7",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ade6c5d4-cf11-44ec-975a-a849f3cdb8ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "771bb61d-993f-49ea-8820-6bbbf53a8088",
        "cursor": {
          "ref": "3c7da564-7185-49d1-a248-9a2e7885886e",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "3a149f47-55ce-437a-a992-ad442bd4bde0"
        },
        "item": {
          "id": "771bb61d-993f-49ea-8820-6bbbf53a8088",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "843fc391-9712-422d-a675-a89f2d09d64f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ddadc2a-a97f-4668-8db0-6d9ec92de828",
        "cursor": {
          "ref": "dd2181e4-15db-440c-92f3-a7972189d451",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "8e8ffbcd-5a6b-4771-9fdf-26ea74556abe"
        },
        "item": {
          "id": "8ddadc2a-a97f-4668-8db0-6d9ec92de828",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f5c8a50c-f75d-4376-9bbb-6de3cd674102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c01d85d-723b-4cd7-9db6-507e0c0abea7",
        "cursor": {
          "ref": "e1dbc7ba-c43e-4252-9230-5c00ec87510b",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "786fadf7-94fb-4aad-912e-0a7d7b66e246"
        },
        "item": {
          "id": "3c01d85d-723b-4cd7-9db6-507e0c0abea7",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "c2c5e25c-d1d4-4f51-a971-a71f887c1849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "782a1205-8af3-4ebb-89f1-4b4afc1fa288",
        "cursor": {
          "ref": "b25e2d0b-3854-4999-a232-9153b74882f1",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "2e717d6c-949b-4018-87b3-238446134733"
        },
        "item": {
          "id": "782a1205-8af3-4ebb-89f1-4b4afc1fa288",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "268cc7b3-f8fa-49bc-8f65-8e985e50eab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "080e815b-9d2d-40ee-8241-35d25df7c4d0",
        "cursor": {
          "ref": "1be4a7c3-a1da-40ac-9cc9-d1be887155e3",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "505028fc-485e-444a-a47b-d69a4c202fa5"
        },
        "item": {
          "id": "080e815b-9d2d-40ee-8241-35d25df7c4d0",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "1be0e1b9-8721-41d3-86bc-372217b0f76f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34e2fc45-9067-43d0-a094-24410aa92edf",
        "cursor": {
          "ref": "0ce83323-caaf-4408-a70d-d48fb02c10b5",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "635018f1-9952-4c11-8a92-ed74bdf5ae51"
        },
        "item": {
          "id": "34e2fc45-9067-43d0-a094-24410aa92edf",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d6d7e20a-ea67-4177-bfa6-28e359e2b608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63276d26-dae2-45a5-b57c-c736092b9d62",
        "cursor": {
          "ref": "bf6cfea4-e0cc-478b-8405-d59d920aa303",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ac039219-aeb1-48ce-86a9-064ec23cc07f"
        },
        "item": {
          "id": "63276d26-dae2-45a5-b57c-c736092b9d62",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "de8ec22a-11c4-4f37-a683-b6b3085fab60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eed8eaa-88df-42c1-aed8-323b3e47a4a7",
        "cursor": {
          "ref": "f94780cc-4e8e-44aa-9682-3b5c69058159",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "029d7a33-4283-4c39-bd74-ab16a2a529bf"
        },
        "item": {
          "id": "8eed8eaa-88df-42c1-aed8-323b3e47a4a7",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "9124e2f8-0e8e-4527-8095-289612039fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cc67dc3-280a-4d9e-b764-61ddabc32c50",
        "cursor": {
          "ref": "dc6b688c-0341-4ae3-bea3-c64b20db2e6c",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "20efa486-f0cc-4aa0-b390-682277580e48"
        },
        "item": {
          "id": "0cc67dc3-280a-4d9e-b764-61ddabc32c50",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "de9b7de4-9e6b-453b-bf34-06b2e07954d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd1f143-a36d-4bb5-8f1d-aa2d9a04068f",
        "cursor": {
          "ref": "8d8fe199-b9cd-4676-bb64-0831bca47f2a",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f1677ddc-ae6c-401f-b5ce-b32aa1488ab1"
        },
        "item": {
          "id": "fdd1f143-a36d-4bb5-8f1d-aa2d9a04068f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "042454d5-c076-4180-a798-32f8a09b5940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef54c0c8-bc6a-4ff9-b646-6d3d4c00771f",
        "cursor": {
          "ref": "92c72df2-3317-45ee-8f66-9877aa1bb359",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "65502598-0ce8-4938-9ccf-31da9a72234e"
        },
        "item": {
          "id": "ef54c0c8-bc6a-4ff9-b646-6d3d4c00771f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "528d6c85-90b0-47b1-baf8-51d388b073f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca4b397f-3c11-4139-875a-bfcdf7a344e7",
        "cursor": {
          "ref": "e7f789fb-f86e-4864-b829-ff8f4393242a",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "73ddbae6-5c46-4f54-b34c-35e58b2a947b"
        },
        "item": {
          "id": "ca4b397f-3c11-4139-875a-bfcdf7a344e7",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e0b97afa-7c73-4821-a5b4-0e5ce8de0842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20206a7e-5c0f-404d-b9c2-c5d3503359be",
        "cursor": {
          "ref": "e7e27248-a38a-466b-a720-9ff47a31e710",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f4d4b76a-85d7-49f3-b0de-baa07d38bcf0"
        },
        "item": {
          "id": "20206a7e-5c0f-404d-b9c2-c5d3503359be",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b10ace20-f8d3-41e8-9f3b-0c1bdd682f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8921427b-e1b7-4a9b-a12e-ccf36607abbf",
        "cursor": {
          "ref": "2e98df1e-fb63-43ff-b3a7-e11e70c2f511",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "e39e8876-83f5-46ba-8aba-893bf3b43716"
        },
        "item": {
          "id": "8921427b-e1b7-4a9b-a12e-ccf36607abbf",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "88c852f5-3e92-4799-81f4-55779cb3847f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "189ecff1-8003-469a-929e-1447778535a3",
        "cursor": {
          "ref": "bb1cbea6-5e69-4fe6-a32e-eadcabacfa31",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "0b20c5ba-5b29-4dd2-978b-646710cbd1ad"
        },
        "item": {
          "id": "189ecff1-8003-469a-929e-1447778535a3",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "c64ddbed-519a-4ead-9397-d9d57fe27e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 892
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec7a019c-97f8-4639-92de-41f8778df358",
        "cursor": {
          "ref": "d035a100-bb2b-4969-aaf8-e130ad855a32",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c83f4641-d25e-4eb9-8153-96fe30da7d68"
        },
        "item": {
          "id": "ec7a019c-97f8-4639-92de-41f8778df358",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "53181277-0210-47f7-9e9d-eb280abea3e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 791,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1231e76-a7ca-456c-b118-9abed6631d9d",
        "cursor": {
          "ref": "27d40228-9ac2-4979-92f4-99e4af7b1796",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "8b220f77-8325-415c-bb8d-6a68646b526b"
        },
        "item": {
          "id": "b1231e76-a7ca-456c-b118-9abed6631d9d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "2b3f51c1-64d1-4f05-b81a-81426ed57f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1301,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "797233f0-6fd4-41e8-ac49-1f79e39fea37",
        "cursor": {
          "ref": "c2cd276c-7961-4228-b31e-a8acac0d933a",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b740864e-defc-4982-838e-a8f7b4a34781"
        },
        "item": {
          "id": "797233f0-6fd4-41e8-ac49-1f79e39fea37",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "7bdf73b1-a1c7-40ef-9c70-419a4c32e83c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1516,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "901b584f-9da8-44bc-85cd-0f58f63cb21d",
        "cursor": {
          "ref": "527b2668-098a-4a68-8017-4c04e248522f",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "7ecacb03-2bf7-45fc-8705-0ac77db2899b"
        },
        "item": {
          "id": "901b584f-9da8-44bc-85cd-0f58f63cb21d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "c79e52f7-3944-4942-a29a-7c5e4e58182f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 942,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6710f630-b356-46cc-bb82-4083aaf828a4",
        "cursor": {
          "ref": "a8bf72dd-ef64-4df8-95cf-5fecc6df70d5",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "c83b8f05-5cbd-4b7d-9c5b-69af7c99c540"
        },
        "item": {
          "id": "6710f630-b356-46cc-bb82-4083aaf828a4",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5b8a2dc2-df39-4c14-9e1f-c73774efa568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1548,
          "responseSize": 1305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c1988b-1e86-4e9f-be74-1fdb1ab87916",
        "cursor": {
          "ref": "d1b6326b-d097-46f5-a9d2-8403c3017dd2",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "0e7d4818-71ab-46df-b224-c248bf84e016"
        },
        "item": {
          "id": "67c1988b-1e86-4e9f-be74-1fdb1ab87916",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "93ddcced-90da-4843-b5e9-9805ddf6fe62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1329,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5daa525-3220-4375-9370-bc81525c3bab",
        "cursor": {
          "ref": "12117ea9-a227-4581-a4ca-df81879e8b52",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3d122d4c-268b-4a6c-96cb-3772bb1417d9"
        },
        "item": {
          "id": "a5daa525-3220-4375-9370-bc81525c3bab",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a544ab36-0708-4f26-8275-cb44879e4808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1070,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "078a90d3-2cbf-4ba6-980a-ad9b5e194646",
        "cursor": {
          "ref": "bfbeec8c-678b-4c67-9144-547e8d620c63",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "876bff9f-e416-4c23-a146-4404c8eb9306"
        },
        "item": {
          "id": "078a90d3-2cbf-4ba6-980a-ad9b5e194646",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e99f5870-a3c6-453f-a174-39903c6f0077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52af244d-6dca-4e5a-882c-bab9b949d65a",
        "cursor": {
          "ref": "c78646bd-af88-4dde-8961-19868404d16a",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "344c869e-7e31-4689-b8fe-5284999b5c4f"
        },
        "item": {
          "id": "52af244d-6dca-4e5a-882c-bab9b949d65a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "2fb8b8f6-3ef8-43cf-a48b-3ae30b57686a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 1636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "751d657c-b2ae-4366-903d-d946097e9dbd",
        "cursor": {
          "ref": "3be2da9e-fc13-44c6-8304-f501b876615d",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "3d8d915c-4c86-4d0e-aa1f-146c40209a0f"
        },
        "item": {
          "id": "751d657c-b2ae-4366-903d-d946097e9dbd",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2b04fff3-f57b-4245-8e2e-76f106e2ea0e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 633,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "652c79e7-69ab-4c3f-bb0c-cce62af98dbd",
        "cursor": {
          "ref": "b44f0847-2e59-4ec3-916d-74e85f58dfd1",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "21bd7003-8c54-4de8-a03f-e67489703e36"
        },
        "item": {
          "id": "652c79e7-69ab-4c3f-bb0c-cce62af98dbd",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "7694f726-30ad-4a4d-b32e-6d2347f2eb09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 524
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886b2cce-0fea-4319-92fc-0c9426df3c47",
        "cursor": {
          "ref": "947c8d20-5a1f-4d47-ab07-85006180848f",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a4fa9ea2-c605-4613-b440-c5d8aeeb6d80"
        },
        "item": {
          "id": "886b2cce-0fea-4319-92fc-0c9426df3c47",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "1bc5bd90-bb02-4793-ac14-1c055ec40983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 548
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ac52a2c-6dd0-4b69-9d55-500a549c4918",
        "cursor": {
          "ref": "6e86eda1-0c30-45a7-8d61-0d0e20be4e5c",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "cca2664a-cb75-4586-8fd1-6a7203cdd471"
        },
        "item": {
          "id": "8ac52a2c-6dd0-4b69-9d55-500a549c4918",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a7a12e69-09c4-4bb7-992e-bd532f1a6cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8573c97-9522-4938-a313-eb4ada2265ea",
        "cursor": {
          "ref": "ba47e216-dc78-4582-8736-3e3fb8b77b89",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "030cd732-0a56-4ff0-8080-7bd1e1db7ba7"
        },
        "item": {
          "id": "a8573c97-9522-4938-a313-eb4ada2265ea",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a1f7ee67-1046-4ac8-b5e0-5cd11f1c451a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8934935a-5713-4bbb-8902-4340a9832e62",
        "cursor": {
          "ref": "1cbe32b0-a9bd-4170-b1ec-c7661d02297c",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "1fc01b76-3a35-4c21-9542-cb52c5932aba"
        },
        "item": {
          "id": "8934935a-5713-4bbb-8902-4340a9832e62",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "2d931714-98e0-4d9a-9db7-050f0cfe2cbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f76a356-7693-49e1-9b9f-c9707600f67d",
        "cursor": {
          "ref": "4952c058-f825-4001-920d-de76b6f55d43",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "fb8468ab-69e6-4761-8d5e-61d14932e7c2"
        },
        "item": {
          "id": "7f76a356-7693-49e1-9b9f-c9707600f67d",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d20c964e-2bc4-4200-84ec-307eb9ed3019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e77c0e08-7c0f-4e2a-8ca4-858181c75f48",
        "cursor": {
          "ref": "52539e00-fd7f-488e-9916-2bded4fd6189",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "48d96344-0268-4664-b9c9-ac12e81901cb"
        },
        "item": {
          "id": "e77c0e08-7c0f-4e2a-8ca4-858181c75f48",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "546f6f9d-1abd-4b4f-b719-875bebb5b141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f69ae093-90ee-4227-aee3-6b8b7196571e",
        "cursor": {
          "ref": "2860dcc1-383a-4ce2-8d89-2acc49ea57e4",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "b8d63998-87bf-4560-b10e-8c205f38c85e"
        },
        "item": {
          "id": "f69ae093-90ee-4227-aee3-6b8b7196571e",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a9a954ad-2d4b-4501-9f23-2412ca17421d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a53a1b-57a1-4999-a261-3b59c96ca8f1",
        "cursor": {
          "ref": "6afbd381-3df1-4062-bcdf-b2a3f489fb7e",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "44a8eb6a-ab7f-48b6-978e-cce9a04b14d1"
        },
        "item": {
          "id": "66a53a1b-57a1-4999-a261-3b59c96ca8f1",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "0bccd73e-bb26-4aad-8aff-59442714e9db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc14c593-e7c9-40d0-8069-30f269a92829",
        "cursor": {
          "ref": "3b4327db-877a-466c-9742-cd0836513b52",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "778a32f2-a598-4696-b6e7-6a448589de4a"
        },
        "item": {
          "id": "dc14c593-e7c9-40d0-8069-30f269a92829",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "75a17722-d815-4ff2-9536-fa4391c14ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a9ee70e-16c9-4f4c-8e27-81c33e0e31ca",
        "cursor": {
          "ref": "8188fca6-1415-4129-b182-ecee15b4e7b2",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "1f5eb666-af9f-49b3-8f55-79ade297ae7e"
        },
        "item": {
          "id": "8a9ee70e-16c9-4f4c-8e27-81c33e0e31ca",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ac5e975a-7b05-4ec5-b0c1-c4e692849877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 826
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22eb7cd6-f24c-40a6-8a78-04d23633317b",
        "cursor": {
          "ref": "4d7ced2d-7966-4ea8-883c-283a7a893bcd",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "3ed6fbd6-d798-4be2-87ee-eda571474426"
        },
        "item": {
          "id": "22eb7cd6-f24c-40a6-8a78-04d23633317b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a9d32496-13d4-4cba-a1de-7e8644e4e88d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 828
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdcad8b1-8b0c-40ca-900d-cd033dd542e2",
        "cursor": {
          "ref": "9877a443-4ccd-4019-a9ea-6f90a1d0c883",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9d20795c-dd7b-4733-b9e2-a121ca211b93"
        },
        "item": {
          "id": "fdcad8b1-8b0c-40ca-900d-cd033dd542e2",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "d1b49d9b-2d57-44bd-ac87-fd8fbbdbe21a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 841
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5371a02-4a48-477d-8305-f2b0a9cced80",
        "cursor": {
          "ref": "95edc2e7-6ea6-4a4f-971f-70063337c142",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "3010f527-fc2c-4f79-8a52-c47136c98f54"
        },
        "item": {
          "id": "e5371a02-4a48-477d-8305-f2b0a9cced80",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7e909783-37ce-449a-b315-5a430186ab5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23de7404-eeea-45ae-bb48-6d9f3b8ce9e9",
        "cursor": {
          "ref": "11248607-1a6d-4b64-ae3e-962cb4fbc9fb",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a7af79e0-35d6-41ae-8711-5aff78ac1de7"
        },
        "item": {
          "id": "23de7404-eeea-45ae-bb48-6d9f3b8ce9e9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "524a5a40-2b02-4ec6-a605-65a12c08e7e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4544ff58-858d-404a-887e-0c65b3659d40",
        "cursor": {
          "ref": "33b8687c-0f87-4206-a2de-fd9f5aa3513d",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b3d8b132-b8dd-4a0f-b2ec-11acbafb9101"
        },
        "item": {
          "id": "4544ff58-858d-404a-887e-0c65b3659d40",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "0c3a0dc7-90f6-45f1-9948-b8c7b5718e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8cee966-527c-4b12-835f-5b9e287f5705",
        "cursor": {
          "ref": "3de42cef-22bc-4858-b3b4-6281820b5450",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "0307d12d-954c-477d-ab1d-9f1892476111"
        },
        "item": {
          "id": "f8cee966-527c-4b12-835f-5b9e287f5705",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ed7d7e84-706c-43f4-8e47-d5f296038ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 1320
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a302fbe-5526-491a-9d5d-178666069a90",
        "cursor": {
          "ref": "ad3f0c63-708e-42e7-a158-f5eb50a7ac33",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "5f1b3be7-3849-4f63-a10b-09385a8cf970"
        },
        "item": {
          "id": "7a302fbe-5526-491a-9d5d-178666069a90",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "d8b326f8-efc5-41a9-b57d-31b4fb351834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a6e00e-9a5b-41a6-8112-45bf5b0fd780",
        "cursor": {
          "ref": "03b0b92f-e821-4e54-9ac1-32b51fedd199",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "26f6d20e-339a-4a67-9a69-0c82728ba75f"
        },
        "item": {
          "id": "56a6e00e-9a5b-41a6-8112-45bf5b0fd780",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a12583af-8e23-45d3-b9c9-f20597977e28",
          "status": "Created",
          "code": 201,
          "responseTime": 2037,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:71)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:71)"
            }
          }
        ]
      },
      {
        "id": "e874af3a-e1c8-4099-ad51-dad25b727058",
        "cursor": {
          "ref": "67d75c1f-836e-43c5-bb35-3e3dedecfcdc",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "9f1d368f-b21d-44c3-817f-8ad34e20143a"
        },
        "item": {
          "id": "e874af3a-e1c8-4099-ad51-dad25b727058",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "59c24ae6-74b4-4d8b-8625-92aa583ab336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8977600-6876-430f-8dae-cccdf17c0d17",
        "cursor": {
          "ref": "b39ac422-1721-492b-8d6c-30916484550e",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "bde8a450-2916-451f-9f7b-236687c5e733"
        },
        "item": {
          "id": "d8977600-6876-430f-8dae-cccdf17c0d17",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b617a5ba-0fd3-4a71-abd9-d41a286e7a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "786ac2f0-0e34-4155-be2d-c7da7c456150",
        "cursor": {
          "ref": "bced9ebb-4ec0-47ed-989e-38746d8c1524",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e3c017fe-754e-4680-9943-6b0adf2478f0"
        },
        "item": {
          "id": "786ac2f0-0e34-4155-be2d-c7da7c456150",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "7c9dd332-55b3-4230-b075-ff05ad2d1569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b128f253-07b6-491d-a15e-f90418cc7e86",
        "cursor": {
          "ref": "d8c2c3b0-1142-43d8-b44e-124dcbac799e",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ba3fb194-626c-4990-bea1-2fbdfdcd2a80"
        },
        "item": {
          "id": "b128f253-07b6-491d-a15e-f90418cc7e86",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "7b69b95d-55b9-4e89-93da-81d20ce0162a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b845f136-d420-4101-a6bd-019e2cb93782",
        "cursor": {
          "ref": "20c8e004-1bde-4ffd-a222-e1932acdbdfe",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "2fef79f9-4330-4236-a6bc-9e36a56617e3"
        },
        "item": {
          "id": "b845f136-d420-4101-a6bd-019e2cb93782",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "7be6cdec-693a-421d-a44a-f11d71a559c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b19252a-120e-4610-bf30-60a7b0b1f168",
        "cursor": {
          "ref": "bff8d186-54a8-4586-b0d1-256b4bee3dcd",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "c570ee95-0827-4002-9284-6ae266530338"
        },
        "item": {
          "id": "1b19252a-120e-4610-bf30-60a7b0b1f168",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "3ab5014e-b20e-4bd7-8edf-8579d07e555a",
          "status": "Created",
          "code": 201,
          "responseTime": 1985,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:77)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:77)"
            }
          }
        ]
      },
      {
        "id": "da177f1c-83af-4866-aa92-45e3e3929e9a",
        "cursor": {
          "ref": "8e59ef7a-f994-47b1-b482-2dfe24a46e0d",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c3127e61-b180-413c-b07a-2c94bdae6a8d"
        },
        "item": {
          "id": "da177f1c-83af-4866-aa92-45e3e3929e9a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f10560fd-1d87-4181-acd8-4bb9e779e17b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cced75d-e7ac-4a69-84ca-90e8ebd20b3f",
        "cursor": {
          "ref": "ecf744c5-f6ef-403e-a06b-dbe80e199e8b",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "10a80793-abcf-4c5c-96e1-a74a3fdf50ba"
        },
        "item": {
          "id": "6cced75d-e7ac-4a69-84ca-90e8ebd20b3f",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e063980a-263f-4c6c-9ffe-9500a2050b3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 510
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c43f8061-a94c-4171-b782-e0d99404ee14",
        "cursor": {
          "ref": "7c0c22ff-a97a-48f9-b545-f98b04cf0acd",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "17c01aa8-f0d9-41cc-87f2-174c00ded0e9"
        },
        "item": {
          "id": "c43f8061-a94c-4171-b782-e0d99404ee14",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "7f16dd8f-6f7f-4756-95ca-1ef409a731f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c694837-6b01-48e2-96da-a6152e48c73d",
        "cursor": {
          "ref": "ef25f31c-0fc5-436d-abec-a0837aec4ce8",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "66c137c0-b0ca-40ac-b8f8-796fb0415695"
        },
        "item": {
          "id": "9c694837-6b01-48e2-96da-a6152e48c73d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "749d8df9-6da1-4780-a2ce-0d74c1da5499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af8bf9b-c963-485c-afc2-310b860bba84",
        "cursor": {
          "ref": "b264b8b0-48b8-468f-a950-74b843b2f3bc",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "95eebe0e-26ad-4fb0-958a-6f2318619b8a"
        },
        "item": {
          "id": "3af8bf9b-c963-485c-afc2-310b860bba84",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "8eae0b75-2080-4d43-abb3-24f5183443cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e781a3c0-dfb7-4994-acc0-114c018e2c72",
        "cursor": {
          "ref": "c91947c2-f026-4017-ad1f-d0af3d35b491",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "4dd70e43-207e-40b8-b9cb-5f50fd04568c"
        },
        "item": {
          "id": "e781a3c0-dfb7-4994-acc0-114c018e2c72",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b50f1af9-3d56-48d9-a7e0-540aa7cf66fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "042e473f-cb69-465e-b116-6959bf84545c",
        "cursor": {
          "ref": "485afa2f-f1ad-443e-b952-00de5817861f",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "d6be06f5-d04a-4c12-b25e-14a74e773cd3"
        },
        "item": {
          "id": "042e473f-cb69-465e-b116-6959bf84545c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "9d7b992e-30ba-4d42-b63d-8865d533c382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4783315-8a3d-4564-ba14-230be4aa6614",
        "cursor": {
          "ref": "5548c65b-cde6-486d-abfc-e12007dba024",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b28d25a6-4da3-43b9-ba45-9029d98c0fc3"
        },
        "item": {
          "id": "e4783315-8a3d-4564-ba14-230be4aa6614",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "c7e93cc1-84f2-4b4e-81a6-315cd2987a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 712,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f54fa333-3bf6-40e7-b06b-5e2ef89a7096",
        "cursor": {
          "ref": "75384760-1c64-4c17-932e-298fe902fb5f",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "70424574-8d95-4bb0-b844-fa8c42a69d7d"
        },
        "item": {
          "id": "f54fa333-3bf6-40e7-b06b-5e2ef89a7096",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c99121d8-841a-4b88-b538-c89501ecb113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dcb436d-f0f6-4772-974f-3026b41ba4db",
        "cursor": {
          "ref": "2036d914-8f64-423f-a32f-6bb1182e3f69",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6ad6f03d-a62c-4591-990a-9d407af3d230"
        },
        "item": {
          "id": "8dcb436d-f0f6-4772-974f-3026b41ba4db",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "18e450d5-b6b5-4f17-8574-4c1e0e8e37bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 933,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b51e83b1-9984-4960-8e2f-cf3f6709b3c6",
        "cursor": {
          "ref": "f86cbc06-8a54-4026-9219-c8d249ddfa46",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "8dda9326-9c56-4ea6-a7ac-2170c19b0d59"
        },
        "item": {
          "id": "b51e83b1-9984-4960-8e2f-cf3f6709b3c6",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2f3582c0-a07a-4f2f-90c5-57cb23c61c80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 951,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09fdb6b3-1690-4b22-b604-e20771e0baa9",
        "cursor": {
          "ref": "df6a3e8b-35d1-44d8-8926-dbe566030a1c",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "dc8afb02-9bcb-4847-83d3-16fe6ada35d2"
        },
        "item": {
          "id": "09fdb6b3-1690-4b22-b604-e20771e0baa9",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d43a0808-ac7c-4e62-b66c-f97c1566d7e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1251,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9bd3a32-9391-46e7-83fc-defb515858de",
        "cursor": {
          "ref": "8ba09fd1-345c-4694-a73c-e2089afc68b3",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "379a46d9-f4f6-42ff-a48e-d9e793930ac4"
        },
        "item": {
          "id": "e9bd3a32-9391-46e7-83fc-defb515858de",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "9bab74cd-fba4-4074-9e71-640fef23e3cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef18896-bf1a-40fc-abcd-da08959b80f4",
        "cursor": {
          "ref": "f62a4b36-384b-4152-9000-e845306c31b4",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "7de25f56-4240-4bcc-a09f-38b33632625b"
        },
        "item": {
          "id": "7ef18896-bf1a-40fc-abcd-da08959b80f4",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b6b511ed-e918-4ac0-aeca-b2e514b8601c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e67cafc5-f59f-434b-8e14-bfa9f2ff2b0f",
        "cursor": {
          "ref": "626090e0-9061-44ae-9020-0a697999a876",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c584418d-2be1-476a-affd-ed6ab0e75a00"
        },
        "item": {
          "id": "e67cafc5-f59f-434b-8e14-bfa9f2ff2b0f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "d86c645d-da5c-4a4c-b942-63abb71f39ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "979072e8-bed9-4068-8f1f-871c69384c91",
        "cursor": {
          "ref": "e57ce9ba-a7eb-4df7-ba4f-c76b2abc90a5",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5395cf32-f7b5-4b8d-86cc-e70f6243ad6b"
        },
        "item": {
          "id": "979072e8-bed9-4068-8f1f-871c69384c91",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "044a7c18-302a-45bc-84cc-766001ced49f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "261860f4-1e05-4995-9441-6748b7ad933a",
        "cursor": {
          "ref": "7f4375d4-a9f1-486b-8bc3-6eb30a2e34b1",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "3ab84dae-bd12-41b4-ae0a-159c3b99dacd"
        },
        "item": {
          "id": "261860f4-1e05-4995-9441-6748b7ad933a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "0a5c0057-432e-4e9b-9e3b-d48b741c9ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d13ecdb-e17e-4138-a1a7-c62d3608a93e",
        "cursor": {
          "ref": "45a8a696-fa24-4e2c-8f4a-fd3ef7c90d54",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "3d540a38-5543-4306-84d5-f2cb17b683ab"
        },
        "item": {
          "id": "0d13ecdb-e17e-4138-a1a7-c62d3608a93e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "96dee873-d8c1-41e7-8a70-3e09b4697228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7acfdfa5-c9a9-42de-b963-f712110b56ea",
        "cursor": {
          "ref": "0a3ce9d3-faa7-47ef-9d35-f49228c19ee6",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "2ae03400-f2f6-4fc6-adb4-c1a3f85787c6"
        },
        "item": {
          "id": "7acfdfa5-c9a9-42de-b963-f712110b56ea",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "4d067563-82ef-4223-a5bd-6f2e4bd91c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbfe20e7-19e6-4250-b504-a287226e95ab",
        "cursor": {
          "ref": "31553714-3af7-463d-9dc6-d739b24771b2",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d3301016-a5d7-4011-913d-d7df5c97619b"
        },
        "item": {
          "id": "bbfe20e7-19e6-4250-b504-a287226e95ab",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "2a4e379d-8599-4c83-911a-949396e7bb46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7e0226c-cba0-45a9-b53b-9c9d5a04d077",
        "cursor": {
          "ref": "cbcdfc23-4f7f-4880-a4ae-56ddd747b7da",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "068af87f-e3f5-4b6e-a9ea-80f2a2f33a86"
        },
        "item": {
          "id": "d7e0226c-cba0-45a9-b53b-9c9d5a04d077",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "24c1963d-cb65-4dd9-82d7-9e958d306f18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4947a7d4-4e85-400c-b26a-7f30bea709da",
        "cursor": {
          "ref": "7cd11312-5b99-42f5-b19c-1129c3e51bc0",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "1a07e1f8-40d3-4a7c-9b32-870211827280"
        },
        "item": {
          "id": "4947a7d4-4e85-400c-b26a-7f30bea709da",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "eec39132-ec8d-42ac-963b-9e9aff51d604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe7175d-1c58-47e6-ae77-b8bd8ba05086",
        "cursor": {
          "ref": "43e5491c-e435-473e-8d70-9d60f374ab24",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c7c828a5-6d37-4f5b-9c33-e2d927a95b4b"
        },
        "item": {
          "id": "afe7175d-1c58-47e6-ae77-b8bd8ba05086",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b87116f9-9628-4c05-b079-faf5715ddd9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecce08a8-951b-4b40-80f0-210c9b340671",
        "cursor": {
          "ref": "22fcf614-613f-413d-88ae-263f3d32c3da",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "efaaa82f-d988-4661-a2bf-a4ebd0ceddac"
        },
        "item": {
          "id": "ecce08a8-951b-4b40-80f0-210c9b340671",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "37248551-81a7-494b-9018-dc63d7513462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0466ac9c-5b2e-42e6-8e77-9d4a918360ba",
        "cursor": {
          "ref": "b36509e6-f301-4f8e-81ce-dd3337499115",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "9040a4d2-c6c9-4018-835e-13abeb3f11e6"
        },
        "item": {
          "id": "0466ac9c-5b2e-42e6-8e77-9d4a918360ba",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d972f2e2-e048-4e99-9237-380855525200",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d082d3ac-382e-465c-a898-7028de702681",
        "cursor": {
          "ref": "0555edb2-7a4f-42c9-a258-4effa00fa53d",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a761c279-8dcd-4dad-89c0-3b5b13f0ccaa"
        },
        "item": {
          "id": "d082d3ac-382e-465c-a898-7028de702681",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "b80b526a-fc6b-4f11-ac72-a51485d7ab8c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 472,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71e2d414-aeef-4c10-9848-42b9850e5910",
        "cursor": {
          "ref": "07c5c104-8d60-4134-b044-0922371327c2",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "0bbfb114-d5cf-4506-a5b4-ce9ff15de90f"
        },
        "item": {
          "id": "71e2d414-aeef-4c10-9848-42b9850e5910",
          "name": "credentials_issue"
        },
        "response": {
          "id": "66f227a6-012c-43c4-b075-6e6b3f1789c0",
          "status": "Created",
          "code": 201,
          "responseTime": 2270,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "f02858f7-79b7-4bc7-aac9-4b470d70680b",
        "cursor": {
          "ref": "6a1d0aab-7d4c-414b-9388-98c5558f15a2",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "bd79661c-b871-4105-a8f4-beae3ffb8214"
        },
        "item": {
          "id": "f02858f7-79b7-4bc7-aac9-4b470d70680b",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "3a2f535e-6b69-4ca7-9ba7-e44321e19e53",
          "status": "Created",
          "code": 201,
          "responseTime": 1977,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "718f754d-5a8c-40b5-a3e2-19227160ea11",
        "cursor": {
          "ref": "7b9402cd-4eb5-4bf3-8dae-3681c7847940",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "8fe061ff-a452-4c0c-887d-1f6f1edd6521"
        },
        "item": {
          "id": "718f754d-5a8c-40b5-a3e2-19227160ea11",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7a0c4c29-e057-4b93-b1e0-12b87b28c918",
          "status": "Created",
          "code": 201,
          "responseTime": 2013,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a345423a-78bd-4a6d-85b0-a9ccbf9a1a42",
        "cursor": {
          "ref": "b86b9a51-fc41-4a16-9e18-9e095dd047eb",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "bbde10d2-76f9-4bda-a5b9-f331dc67cb17"
        },
        "item": {
          "id": "a345423a-78bd-4a6d-85b0-a9ccbf9a1a42",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "19ec4b3c-1513-4c8c-94c5-2a78f91327c1",
          "status": "Created",
          "code": 201,
          "responseTime": 1949,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "35679488-f005-4549-8a12-09efd8828d4e",
        "cursor": {
          "ref": "a2e19204-05b4-4d05-9273-ca2a2d385689",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "cfaca988-6991-4759-b10a-269bbe54be48"
        },
        "item": {
          "id": "35679488-f005-4549-8a12-09efd8828d4e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "8df3072f-cb58-488c-89e3-4c27d30a2d5e",
          "status": "Created",
          "code": 201,
          "responseTime": 2177,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff0af0f-2277-48a6-a29a-0c51c8475417",
        "cursor": {
          "ref": "0dc4bbbb-9594-4f6d-b601-dbb8e90616a2",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "5bee8201-c96b-4a36-b489-b9a03c32eeb2"
        },
        "item": {
          "id": "9ff0af0f-2277-48a6-a29a-0c51c8475417",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6dd4bcf1-264d-46c2-9b11-cda6b0e16aab",
          "status": "Created",
          "code": 201,
          "responseTime": 2622,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f07966-e828-4ada-b50d-f113b3970b7b",
        "cursor": {
          "ref": "6f2a3135-6813-408b-b3e8-23d2cdb8b2bf",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e1643663-42b7-445b-b941-d673b99fad8d"
        },
        "item": {
          "id": "03f07966-e828-4ada-b50d-f113b3970b7b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f1c31fc7-549f-447d-a19b-8ac2cf452b47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f07966-e828-4ada-b50d-f113b3970b7b",
        "cursor": {
          "ref": "6f2a3135-6813-408b-b3e8-23d2cdb8b2bf",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e1643663-42b7-445b-b941-d673b99fad8d"
        },
        "item": {
          "id": "03f07966-e828-4ada-b50d-f113b3970b7b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f1c31fc7-549f-447d-a19b-8ac2cf452b47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7982916c-bd40-4fa6-aba8-cb373648c366",
        "cursor": {
          "ref": "2db8bf2b-8ad0-4322-9561-617556ab02fb",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c9b2d520-95fb-4bce-aabf-6c35dfd35289"
        },
        "item": {
          "id": "7982916c-bd40-4fa6-aba8-cb373648c366",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f6b6977d-a1a5-4a70-afbc-880b8bea2e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c636071-65d7-4f9e-9e35-848c8f1b3a3f",
        "cursor": {
          "ref": "1bd19ff1-b012-4281-a066-38eecb697453",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ef8daef4-8035-46cf-9874-3246e714b111"
        },
        "item": {
          "id": "1c636071-65d7-4f9e-9e35-848c8f1b3a3f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "4fedba9f-c366-4257-b7fc-67e67a5a4bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 342
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99c7c411-faf4-4e49-afef-9c00d64c8af5",
        "cursor": {
          "ref": "a003d13a-e459-499b-bff9-d51f350d47c6",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "95416aae-d8f9-48d8-a7ea-99db056d2fc1"
        },
        "item": {
          "id": "99c7c411-faf4-4e49-afef-9c00d64c8af5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "dc698ef9-ba8a-4cde-a942-2aeb67a566fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ed7c48-d1c2-4f87-87b8-c339e75ea618",
        "cursor": {
          "ref": "358efedf-3753-48b3-a4fd-14218ecf6ab6",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "7e08b5cd-8788-49c1-b8ac-30f7a1446c99"
        },
        "item": {
          "id": "75ed7c48-d1c2-4f87-87b8-c339e75ea618",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a8c4e51f-1de1-4de8-a584-940de014c733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 341
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f99b271-cfe6-4745-9749-aab3b81ad795",
        "cursor": {
          "ref": "38fe8603-9155-41dc-8138-7290a61418d9",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2cd30de6-a4c1-430f-bdc9-22f3d42ee14b"
        },
        "item": {
          "id": "6f99b271-cfe6-4745-9749-aab3b81ad795",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "92109c1e-cebe-48a4-bdd8-99a8ac3b64e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d72bad-5478-4814-b9ba-e90c8970e79c",
        "cursor": {
          "ref": "f87981ea-3c23-4216-83e2-ed87f99b1614",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "747f4dd5-b222-46c0-abae-cf0ddda8d4e4"
        },
        "item": {
          "id": "80d72bad-5478-4814-b9ba-e90c8970e79c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "31f67a2d-bee2-4981-b45e-929e08f86039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e23c57-2bf8-4b8c-8631-98e07d03b22f",
        "cursor": {
          "ref": "fbaf3c7f-698f-4c49-8560-4a23555807e7",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "89c95bca-54ff-45fc-925f-5ad680b2fe17"
        },
        "item": {
          "id": "46e23c57-2bf8-4b8c-8631-98e07d03b22f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "06a854ef-6829-4a57-80ca-f5ef3bdb41de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09acf091-2f3c-4b3c-9467-5c7d0873790c",
        "cursor": {
          "ref": "7ee3c87d-2f00-4b99-bdc2-2714e17e9a20",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e4ea8a24-2967-4023-8f3d-c84d27ce2779"
        },
        "item": {
          "id": "09acf091-2f3c-4b3c-9467-5c7d0873790c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "66733a16-0a33-4b66-8ce2-9b295fe606f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "573e7223-5456-4363-a4a2-fba5a5892fff",
        "cursor": {
          "ref": "e31bfbce-250e-4bea-9c54-8d44ef1ba3d3",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "7e400ae6-6337-41db-ac0b-e14e534a703e"
        },
        "item": {
          "id": "573e7223-5456-4363-a4a2-fba5a5892fff",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1e0ca66c-e8f0-4763-8903-f552c54c96e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d9ff72-fdc6-436e-b593-98d24a0cacaa",
        "cursor": {
          "ref": "537897b5-843a-4a3b-af85-c2eecfd36cb0",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "fdba6e8b-c9eb-4bf8-a132-8e563be613a8"
        },
        "item": {
          "id": "d6d9ff72-fdc6-436e-b593-98d24a0cacaa",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1b2be268-1eaa-4e2a-bbe4-1700922b5705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 422,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6419387-9eb4-4089-85e3-0e4f2abbf6a3",
        "cursor": {
          "ref": "2a275f9c-a548-45fe-b2d5-59fe40fccf76",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "7bab44f5-7966-4eb6-8563-d4c7ec08ede9"
        },
        "item": {
          "id": "e6419387-9eb4-4089-85e3-0e4f2abbf6a3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "80c333a4-07c6-41c4-a4b5-d5b032456d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29936f05-88ea-43d3-950d-ea25262b471e",
        "cursor": {
          "ref": "90224636-2661-43eb-a058-0301798a9cf9",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "692bffdc-744d-4040-837d-f4a854fbc946"
        },
        "item": {
          "id": "29936f05-88ea-43d3-950d-ea25262b471e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ef5049f4-fc0c-4eee-9be1-6111ef74671c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da9c59e4-c85a-433a-a1e0-3c07c0f22771",
        "cursor": {
          "ref": "f2712d39-45b3-44c7-83b6-63ffeefb8827",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5f5c9a90-fb0b-443c-b097-1a301cab7d98"
        },
        "item": {
          "id": "da9c59e4-c85a-433a-a1e0-3c07c0f22771",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ef3b7054-0a9e-47e6-bd40-aa79ebd36280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8311768-a4bb-4b2e-98b9-9a9dc5b5573c",
        "cursor": {
          "ref": "b85f6dcc-cdd8-464c-a448-168bd1f05f04",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1c6975b6-49a4-4172-b2ed-0fd133d6e6b9"
        },
        "item": {
          "id": "a8311768-a4bb-4b2e-98b9-9a9dc5b5573c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1dce1ea8-084d-4cb3-b33c-6e9b171a0073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "894dcb00-dca6-413b-a10d-37ac5900f921",
        "cursor": {
          "ref": "dfefa59a-88b8-4d15-9bdb-36a41b81e7aa",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "6556eb7a-44a3-41c1-9901-fa5d7758d70d"
        },
        "item": {
          "id": "894dcb00-dca6-413b-a10d-37ac5900f921",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2259837c-f44e-4fed-87d3-186d529b3f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5756deb-371c-435c-9307-973d6aacd985",
        "cursor": {
          "ref": "228cac0c-803f-4773-9ecb-cb614dc6147c",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c5e8ba0f-0bef-4975-bc5b-28d61656dce9"
        },
        "item": {
          "id": "e5756deb-371c-435c-9307-973d6aacd985",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "30339b10-056d-476c-926c-36b84328fa55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ba8e23-d09d-40db-87c5-8e335a66e005",
        "cursor": {
          "ref": "553ea44b-9f7d-4057-bd3c-dfdfbc8a548f",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "80bd4bfb-a0ec-4b8d-ae36-3cd80e636a07"
        },
        "item": {
          "id": "55ba8e23-d09d-40db-87c5-8e335a66e005",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "cdfffdac-fc4c-4e90-b2c7-189958008306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f3a745-97d5-42a0-a1e0-def3a566de36",
        "cursor": {
          "ref": "422a9e57-643a-4b9f-93cd-02265dc4bc92",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ef446515-44eb-44b1-8073-7b2918e00696"
        },
        "item": {
          "id": "50f3a745-97d5-42a0-a1e0-def3a566de36",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "667852fa-4562-4f94-88b5-8ebe084235fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8637d73-a3f4-45e7-adae-67d65cfd6c38",
        "cursor": {
          "ref": "7d291435-fc4b-4fae-8f4b-7777e31185d0",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "217bc899-7869-4f83-a31a-5c59a903b65f"
        },
        "item": {
          "id": "d8637d73-a3f4-45e7-adae-67d65cfd6c38",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2f709b15-c3c4-4e06-beac-8d918caffd79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c67bc82-4e58-46bc-82be-d07f43d824b2",
        "cursor": {
          "ref": "8af88b7e-bc52-44cf-93f9-e6233b76dc1c",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "95e161a2-b95f-4560-8bb8-dac4778be80d"
        },
        "item": {
          "id": "9c67bc82-4e58-46bc-82be-d07f43d824b2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8ea0deb9-def0-4a83-b225-bb766bea8d76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c3dcde4-a148-45be-862e-ad00a133b7ab",
        "cursor": {
          "ref": "9c1672a7-4498-438e-90bb-a2f459288f80",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "6e50a5ff-73c5-45d1-b5df-7e1954c4030c"
        },
        "item": {
          "id": "4c3dcde4-a148-45be-862e-ad00a133b7ab",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e873754c-023d-45f6-80b6-533ef3dd939b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c7399f-5503-4a72-b083-d256695cb7ae",
        "cursor": {
          "ref": "ca6b10f6-4d70-47e0-8cf6-cde74cc26e55",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "5a1fe286-b196-4b47-bbef-d24d9d4093af"
        },
        "item": {
          "id": "71c7399f-5503-4a72-b083-d256695cb7ae",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "463502ca-7013-4c4c-b23c-77c57c98b32b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "885ea786-ca74-4fff-b3a9-7ed36595971b",
        "cursor": {
          "ref": "6404cf36-1ae6-4e08-9876-d3b31693aebc",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "37f89a0f-c2e8-4a12-99e4-4a0a152b5b47"
        },
        "item": {
          "id": "885ea786-ca74-4fff-b3a9-7ed36595971b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b20dea9c-d1da-4eac-864e-c0627bafca49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d079a6fb-6a05-4d57-a8a5-f5db4ef15bd5",
        "cursor": {
          "ref": "fa6c1448-bf1b-4867-8f63-b3870f0f1f2c",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "9d914075-2467-4fa9-867d-233421818025"
        },
        "item": {
          "id": "d079a6fb-6a05-4d57-a8a5-f5db4ef15bd5",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "72af782e-8bd6-4d16-8141-3332b04a677e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14b8c861-ed62-47ef-a14e-4a7263067441",
        "cursor": {
          "ref": "7541a313-dacb-4758-b822-8c1bf718b9c3",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a576764e-26a0-4ebb-887d-bd1e43abe021"
        },
        "item": {
          "id": "14b8c861-ed62-47ef-a14e-4a7263067441",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "047ac47f-17e2-4eb6-bd53-6c9ad560e962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55cf3018-f8ba-4940-9a7c-32cb0512de21",
        "cursor": {
          "ref": "cf3d8363-d6b7-413b-b29a-fc3a8fae23bc",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3b176753-e46c-468d-a9b6-177f657d4825"
        },
        "item": {
          "id": "55cf3018-f8ba-4940-9a7c-32cb0512de21",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "9525b997-2698-44be-b05d-718f05d7893b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81bcacea-a5ba-4245-9c97-749d3e094d96",
        "cursor": {
          "ref": "b768bf3c-58fc-405e-8bc4-385436643e79",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "bcc83df2-cd37-4c43-a039-4a9d5a0a7c0c"
        },
        "item": {
          "id": "81bcacea-a5ba-4245-9c97-749d3e094d96",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b0c80e0f-02a7-49e0-b010-4ebdb57d57db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab4c44cd-71f3-458b-a2c8-0e6338972409",
        "cursor": {
          "ref": "49a6d4d2-3421-403d-9860-275b6646f344",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "bcbc90ad-dfe8-46bb-b8ea-56c1fdc0ab2f"
        },
        "item": {
          "id": "ab4c44cd-71f3-458b-a2c8-0e6338972409",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ed53dc66-b941-42d0-9c34-73943541cf3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80546f3e-84b8-43d4-b487-4f8837b50740",
        "cursor": {
          "ref": "f899e1aa-4187-4343-be83-f32067a11761",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "12a926d8-c256-49f4-995a-3585b2335675"
        },
        "item": {
          "id": "80546f3e-84b8-43d4-b487-4f8837b50740",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a8626ff7-a308-4636-88b9-20c224c69c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aefa9ca6-26c9-41ae-9031-97cc80881d47",
        "cursor": {
          "ref": "079b9da4-68cb-4a3c-bee8-49c8f1971b4d",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b4e4c874-2199-4e39-8487-721f02aef1e6"
        },
        "item": {
          "id": "aefa9ca6-26c9-41ae-9031-97cc80881d47",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "988cea8b-5925-4696-8891-74530649b03e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70721f9d-2b91-42ca-b3a0-c582a8152581",
        "cursor": {
          "ref": "b263c48f-9f9b-40cc-ae90-73e9803a91fe",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "08a84153-70c4-409a-8655-56af51ff40a5"
        },
        "item": {
          "id": "70721f9d-2b91-42ca-b3a0-c582a8152581",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "69851c21-7ac9-4885-b37c-042427e7ba37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9602332-8851-4bc5-988b-74667c245f96",
        "cursor": {
          "ref": "4baba515-31f6-449b-85b4-4f182d42585b",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "97f17572-d5e1-4466-a668-346265b68a07"
        },
        "item": {
          "id": "e9602332-8851-4bc5-988b-74667c245f96",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "deb00a06-5301-40ec-9bb0-79aa6b419570",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f3edad-12a3-4241-85ea-ac170211138b",
        "cursor": {
          "ref": "896690e2-673e-4d60-a324-6c288c8ce504",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3444cee1-3a08-45c9-9503-baae010fc383"
        },
        "item": {
          "id": "96f3edad-12a3-4241-85ea-ac170211138b",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "423b9429-be40-4bc4-8883-4fdd9f3a61a0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 467,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d2180f-d6ff-4371-9acc-17d237b5f9a7",
        "cursor": {
          "ref": "e1928351-f4f1-43fe-91f5-83901a84a1fa",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "bcbfaa73-33b4-410a-bc23-63051cd68179"
        },
        "item": {
          "id": "b6d2180f-d6ff-4371-9acc-17d237b5f9a7",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9d841519-6bb6-4a02-acf2-d821606f9049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 222,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d2180f-d6ff-4371-9acc-17d237b5f9a7",
        "cursor": {
          "ref": "e1928351-f4f1-43fe-91f5-83901a84a1fa",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "bcbfaa73-33b4-410a-bc23-63051cd68179"
        },
        "item": {
          "id": "b6d2180f-d6ff-4371-9acc-17d237b5f9a7",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9d841519-6bb6-4a02-acf2-d821606f9049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 222,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b457253-a369-4a0f-99b2-6577db61a40b",
        "cursor": {
          "ref": "55eaf657-4f88-4e0d-adef-65571a101d1e",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "cb82da77-e4ad-4172-853e-415c22dbe88b"
        },
        "item": {
          "id": "2b457253-a369-4a0f-99b2-6577db61a40b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "08b57a5a-c624-437d-9b9b-539ece0cbc33",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 217,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "2920567d-5acb-4fd2-af65-1fbf5c98ac30",
        "cursor": {
          "ref": "a9840147-1972-48a3-b9cb-1da0554b9c27",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "63dfb849-c590-4435-9f42-cae3e8522a8b"
        },
        "item": {
          "id": "2920567d-5acb-4fd2-af65-1fbf5c98ac30",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "dc28d8f0-23d0-49a1-b593-80365ad8f43f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 212,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c6c079-7b29-4f25-9709-8f13b10fdab2",
        "cursor": {
          "ref": "98f44048-25b6-4030-a859-ec49a5b4653d",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b6c8dd29-3ffe-4649-87b4-0c420c45df94"
        },
        "item": {
          "id": "e6c6c079-7b29-4f25-9709-8f13b10fdab2",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "bc311ae4-69b5-404f-a52b-b44f623b95de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 215,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba722232-78c1-4d36-b3d2-fec7c71ed1fb",
        "cursor": {
          "ref": "d993404e-0a6f-4b9d-87c1-c4512d896ea6",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "4e34d7c2-9db2-4c19-b1d7-ad4aa373e24b"
        },
        "item": {
          "id": "ba722232-78c1-4d36-b3d2-fec7c71ed1fb",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "e7c22112-ea2f-4530-bd3a-4043cc426109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 220,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d953afa7-7297-45a0-97b5-2115b1a7e98b",
        "cursor": {
          "ref": "7a12d015-d908-44a2-959a-74a98ed94197",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d87d7a28-af2b-4d40-8194-e06d890384f7"
        },
        "item": {
          "id": "d953afa7-7297-45a0-97b5-2115b1a7e98b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8c099a68-3d89-4161-909d-611dd262b835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 210,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62fde624-5a53-4dc7-9c6e-2e69f8ea8c09",
        "cursor": {
          "ref": "6f12912f-05ce-4403-8d94-8f1bb677561c",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "309f8c9c-61e7-4bb1-8136-b9fdb018ca6e"
        },
        "item": {
          "id": "62fde624-5a53-4dc7-9c6e-2e69f8ea8c09",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "cd9a0ebd-ee3f-4bc1-b63a-ed3dc0eb69b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd3f3e8-1faa-4345-9a3a-37031a0a1c3e",
        "cursor": {
          "ref": "c5c16809-2e27-444a-9d12-391f5efc6c86",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "4c3bdba5-34a0-4a22-94ad-3250d92cb9d2"
        },
        "item": {
          "id": "2cd3f3e8-1faa-4345-9a3a-37031a0a1c3e",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "bb9a4af3-25c5-4f9c-bcf9-03f324ebde4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 422,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c3eba30-861a-4114-8639-c98b459180fa",
        "cursor": {
          "ref": "ca6fae6a-ba8b-4620-ba61-ad8937fcaeb8",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f707e29c-d061-4110-ade5-c7c6df0948af"
        },
        "item": {
          "id": "0c3eba30-861a-4114-8639-c98b459180fa",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "aaa2948f-f53a-45cb-8c48-a4a8e9173802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 941,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f0c00ad-697a-46bc-9d8e-fb4f4ffc14fa",
        "cursor": {
          "ref": "90058b46-ef94-45a6-94d6-2a45c192ff92",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "60ec1671-60a0-42a9-93f9-cf9ac7a4b325"
        },
        "item": {
          "id": "2f0c00ad-697a-46bc-9d8e-fb4f4ffc14fa",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1e631972-eeb2-4446-afb2-cfa955cee703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 926,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a423870c-44fc-4137-9370-f74d92aabfb1",
        "cursor": {
          "ref": "f2688d89-3242-4fd0-9da4-d0c8208d8799",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "510e74f5-c464-438e-bb2d-55aebfedeafd"
        },
        "item": {
          "id": "a423870c-44fc-4137-9370-f74d92aabfb1",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "75f0c2ec-29e9-42d0-a3a9-3af9b1f6d8ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 1450
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d00f6b31-0e56-45bc-bca3-23b184a34d84",
        "cursor": {
          "ref": "3095d857-9f60-41b0-af4c-ab814d7a0267",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5cad72ae-1870-4c72-9882-b512a6c0a0ed"
        },
        "item": {
          "id": "d00f6b31-0e56-45bc-bca3-23b184a34d84",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "203f1316-df8c-425f-a81f-8cd813240414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 875,
          "responseSize": 1437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd3ee4a-5523-41c3-af0c-1dfb09695e16",
        "cursor": {
          "ref": "6b06b524-2e4f-4877-a89a-ab8157747f2a",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "2b8d1234-7f9e-4583-9788-31acd1d7fb7e"
        },
        "item": {
          "id": "0dd3ee4a-5523-41c3-af0c-1dfb09695e16",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d6460a25-b2e2-4742-8436-d1431b2f9f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1176,
          "responseSize": 1690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd444e2-eb95-4f87-81a1-87093bc5763d",
        "cursor": {
          "ref": "1b5e5a39-4fab-451b-a2ca-a73521d46186",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a585c219-4007-4068-8e25-01f0d4da0c42"
        },
        "item": {
          "id": "1dd444e2-eb95-4f87-81a1-87093bc5763d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "2ac18bd4-0e08-43ab-b05a-3f25bd39e58f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 737,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2506247a-b9d6-41d9-b983-1e5520839c85",
        "cursor": {
          "ref": "02d37f08-c30e-4a2e-8729-0bb4c895b6df",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "56520171-5f33-4580-84cd-8d13b6010536"
        },
        "item": {
          "id": "2506247a-b9d6-41d9-b983-1e5520839c85",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "390fb77b-8f10-4876-9463-21e26d1b51bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 793,
          "responseSize": 1679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "402e826f-384d-4526-8216-dc72263f53d9",
        "cursor": {
          "ref": "37d03b33-414d-407f-88b6-6c419f402300",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "1a636840-f999-440c-98db-64a75bb51d62"
        },
        "item": {
          "id": "402e826f-384d-4526-8216-dc72263f53d9",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "7ad38cc2-4150-46e1-a11c-11dd07c374e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed6ee8ed-1167-4740-8871-6bf19020496f",
        "cursor": {
          "ref": "b520b8ba-4177-49d9-bcf9-acfa581895bb",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "7e014b58-5bea-453f-91d1-5bdae6bb67fe"
        },
        "item": {
          "id": "ed6ee8ed-1167-4740-8871-6bf19020496f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "209caeed-4f6f-4664-865e-58aafc1994a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 891,
          "responseSize": 1731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5bea79f-a7c9-40ca-8033-c99441de3ad8",
        "cursor": {
          "ref": "6eb09af2-b3a0-4313-bd21-1afc2b37f319",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "fbc4b8fc-6344-427e-809b-91e9afd6ec2e"
        },
        "item": {
          "id": "f5bea79f-a7c9-40ca-8033-c99441de3ad8",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "20cd53ca-59ef-407a-ba63-a8942f837066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8535dff-b7da-4425-865c-4cf2f4720322",
        "cursor": {
          "ref": "4b8abf81-8b74-4fb0-96fc-1161c34d1b7b",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "399f97f7-92a1-4753-85c9-9a27f87d663d"
        },
        "item": {
          "id": "e8535dff-b7da-4425-865c-4cf2f4720322",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "dcad8107-1e42-41a8-b247-ba735698f157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 219,
          "responseSize": 1250
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e05c7d9-2a1e-45a6-898a-a3768a2a6c6f",
        "cursor": {
          "ref": "54779342-f581-4b55-badf-a6892896cc88",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a4057690-1e1b-43ee-bd09-13a69e051c44"
        },
        "item": {
          "id": "4e05c7d9-2a1e-45a6-898a-a3768a2a6c6f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "1ffbd1e4-c630-4c05-9c3e-4e68bbb01155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 212,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed93974-fb6d-4347-ba00-bb8e4cc3cc88",
        "cursor": {
          "ref": "d46f0210-10a4-44f8-b369-8796b7a6ad8d",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d3033814-fd74-4aca-8c10-96fbd892a1f9"
        },
        "item": {
          "id": "2ed93974-fb6d-4347-ba00-bb8e4cc3cc88",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "976ad397-79c2-4962-8b2d-d56de7280b2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1249
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc4af6ff-5600-401c-934d-fc7bf31498ca",
        "cursor": {
          "ref": "c8f21102-565c-434d-89d6-c7ca40cf9eb0",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "5ee3f440-7aa5-4c39-951b-814fbb06e86b"
        },
        "item": {
          "id": "bc4af6ff-5600-401c-934d-fc7bf31498ca",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f4104e0a-ddb2-4aca-865d-4351da311333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcfa31da-0864-4543-af71-aba82fc0e297",
        "cursor": {
          "ref": "b4a58cc5-952c-441e-8a59-8d185ce7f625",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "4c921146-aa80-492a-a2a3-c197215272a7"
        },
        "item": {
          "id": "fcfa31da-0864-4543-af71-aba82fc0e297",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "2be9b384-e58b-44d5-ad9c-9675184fbec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61ffaa3a-e6e3-4c55-a4fe-0ef92546ea24",
        "cursor": {
          "ref": "671f2069-95c3-4a83-87e0-a5a694054706",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "06f7a628-2d18-4de7-bd04-99fc89c405ba"
        },
        "item": {
          "id": "61ffaa3a-e6e3-4c55-a4fe-0ef92546ea24",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "6d50566d-0310-44a4-ba7c-1952cc289b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e83b706-4e71-4da7-8704-98e16e51ca33",
        "cursor": {
          "ref": "cfc3219e-098c-4a3f-a54b-825d14ff045d",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "2cacfade-a13b-448a-81b0-74b48cb6b022"
        },
        "item": {
          "id": "0e83b706-4e71-4da7-8704-98e16e51ca33",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "239e00e6-a1b0-4e95-8f88-1794ce91174a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe85230-c55d-49fa-b885-caba7c2abab4",
        "cursor": {
          "ref": "92778765-84b4-4ca4-bb6e-8baf4bee1d3d",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "3d29be91-c36c-47b7-81f8-3afece3b0d1e"
        },
        "item": {
          "id": "dfe85230-c55d-49fa-b885-caba7c2abab4",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "9755dfb7-3551-417e-bc73-f48bd5f4364c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03dd561c-1b73-4b50-9a06-e51fd722492c",
        "cursor": {
          "ref": "c9422189-c64d-4a6e-b4bd-8518906a3e48",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "093db8e1-1c82-4dd3-a603-13e2ce18cdc9"
        },
        "item": {
          "id": "03dd561c-1b73-4b50-9a06-e51fd722492c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e1188abb-ea01-4654-8579-015f303192b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b3b77a-492b-4acf-9b1b-0fe52f0d8b01",
        "cursor": {
          "ref": "59a148c4-c79e-4f94-b12d-2d597103e43c",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "58df5da8-647e-4256-8d4c-b3c4170c7f29"
        },
        "item": {
          "id": "52b3b77a-492b-4acf-9b1b-0fe52f0d8b01",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "ede64a72-241d-461a-824f-a0feb7283626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 208,
          "responseSize": 1239
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd5da10-cccf-4018-8bec-481fa086e9b0",
        "cursor": {
          "ref": "ea99ecb6-1f1a-4ae6-852c-649c77f88d60",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "069a090f-1c73-420a-82f1-709d9d6ac3e1"
        },
        "item": {
          "id": "8fd5da10-cccf-4018-8bec-481fa086e9b0",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "fa871ad0-ef52-49b6-9222-cc55cef1176b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 215,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b0d31a-33d9-4ff1-ad5d-1a97c5dba863",
        "cursor": {
          "ref": "ec5db833-bbbd-452d-8d98-d84cffd78b2b",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "50b0c155-dff6-4b68-a142-b098cbbc7064"
        },
        "item": {
          "id": "63b0d31a-33d9-4ff1-ad5d-1a97c5dba863",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8b82e157-22f4-4e33-825b-fe10022b4eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 217,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37bb2514-9dc4-462f-b546-198f9212bb1f",
        "cursor": {
          "ref": "5f864f1c-acfc-4fa3-af8b-0ca103f6c1ea",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "66ee1cfb-6d4e-439c-990a-5fc69fc63ab0"
        },
        "item": {
          "id": "37bb2514-9dc4-462f-b546-198f9212bb1f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "5790c48a-7dcd-48a0-8714-b22ad7972ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46071a06-1690-49be-a9cb-ec4bd5ac2d2d",
        "cursor": {
          "ref": "21f977e3-4c6d-409f-af47-44c188aad02c",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8d5481f6-95b5-4499-a898-1e5165d8dfb7"
        },
        "item": {
          "id": "46071a06-1690-49be-a9cb-ec4bd5ac2d2d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "1dacf682-cc46-4e0d-b43e-803a08451418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1255
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02020c8f-cfb2-411b-903b-4fe8dbf4dfc3",
        "cursor": {
          "ref": "c270afa3-99dd-4548-8ce1-2c07970a42aa",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "64747505-754b-4a13-b6fd-17a3945eeef9"
        },
        "item": {
          "id": "02020c8f-cfb2-411b-903b-4fe8dbf4dfc3",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "9f48c55b-f0df-4bbb-894a-9d253572788a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c691122a-dd38-4ed7-8886-6f1f8a2a027a",
        "cursor": {
          "ref": "a697345c-eea0-4f49-8e57-8e91a71afbde",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "2c1004fe-9716-449d-9be4-97276af70280"
        },
        "item": {
          "id": "c691122a-dd38-4ed7-8886-6f1f8a2a027a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "4c023cd4-d886-4f94-bae9-9d88889f91a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 226,
          "responseSize": 1282
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed5fed44-559b-44af-ba08-5a5c34330b0c",
        "cursor": {
          "ref": "b00c06c0-1229-403d-a48d-018553cb6a3d",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "3e0371bf-7876-4404-9d27-3657273ed84a"
        },
        "item": {
          "id": "ed5fed44-559b-44af-ba08-5a5c34330b0c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "27ad9147-cda2-4bfb-b577-562a4a6ccddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ff0b1c-5c5c-49ef-b1e3-b362f62d6bcc",
        "cursor": {
          "ref": "b6e67da4-cf2e-4094-80e3-696fb1fc2df3",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "9eadaaf6-0680-4f9f-8056-14543d8524e0"
        },
        "item": {
          "id": "e8ff0b1c-5c5c-49ef-b1e3-b362f62d6bcc",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "755c3878-6b5d-4710-be29-a7bfbbd6b6fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 209,
          "responseSize": 1668
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90119647-f722-4424-88d5-19c0035b2967",
        "cursor": {
          "ref": "aca588b9-4101-4f89-9f7b-0712ed2c1e83",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c94a2067-ce81-4e51-8c6e-9b35b1eee62d"
        },
        "item": {
          "id": "90119647-f722-4424-88d5-19c0035b2967",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "fcf3e326-2747-4e12-b150-2fbae908035a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1654
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "355a3c5c-9732-4d44-a573-f72842304cf4",
        "cursor": {
          "ref": "58a890fc-3c97-4666-a052-b8d6bd292646",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "753212b9-1219-45e8-a95d-d9b9e14843a9"
        },
        "item": {
          "id": "355a3c5c-9732-4d44-a573-f72842304cf4",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "ce4dd7cb-a38b-4fa3-b0a4-d97b5a08baa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a5fd178-d72b-47ab-ac72-2fbd94735b3f",
        "cursor": {
          "ref": "8c9a3de5-2c4e-4c83-abf9-375463bfa7a5",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "845cb552-59d2-4edf-ac9b-1b310df7c612"
        },
        "item": {
          "id": "1a5fd178-d72b-47ab-ac72-2fbd94735b3f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ce845957-b4db-4acc-8e3e-91a8335309c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc53a83a-a184-4d56-bc9d-fe6f5f10d589",
        "cursor": {
          "ref": "dbea2049-41cc-4fb8-a25d-dafa77b60bf4",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "b7af781f-f56b-442a-a20e-f3303a341cd2"
        },
        "item": {
          "id": "fc53a83a-a184-4d56-bc9d-fe6f5f10d589",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "043bd983-a199-470a-9e5a-e9eacdb458e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4be196c-9220-4da5-88f7-a3436ad3fe66",
        "cursor": {
          "ref": "ea4d5457-f888-4cf1-a41c-3d146774b5b8",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c75cfbe4-573e-4b89-b846-51e1c5fe6a71"
        },
        "item": {
          "id": "c4be196c-9220-4da5-88f7-a3436ad3fe66",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "0fe8757f-1c7a-46c8-8c1a-8dbd7436dd41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 2027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2abc98bb-6d8d-4821-8f35-2cc1d6d055ff",
        "cursor": {
          "ref": "4fa9c8f4-e284-404b-977b-8c847d212f40",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e2e982f6-3611-4a94-9686-dc696f41daa3"
        },
        "item": {
          "id": "2abc98bb-6d8d-4821-8f35-2cc1d6d055ff",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "6e4b144f-1345-4714-aa6a-2a565ad89063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 2013
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca27af3-c614-40f0-a66d-094ba2d77750",
        "cursor": {
          "ref": "8b873720-fde8-49a7-af69-5b479d587525",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "7abdf85a-a6a4-4b52-9bc8-ce13c7745709"
        },
        "item": {
          "id": "6ca27af3-c614-40f0-a66d-094ba2d77750",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a2bb38eb-125c-4110-9e9f-41b372ce4841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 2011
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52067080-1ee6-414b-862b-aa4310ba0a58",
        "cursor": {
          "ref": "07644016-3702-40ee-8aa1-48f55b86e54a",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "47f81d63-0e04-47d9-9277-4d096e14d3e7"
        },
        "item": {
          "id": "52067080-1ee6-414b-862b-aa4310ba0a58",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "da322da0-1da5-4661-9938-bb1237378fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 2012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b92e03-379a-472c-8b10-c60e66abd046",
        "cursor": {
          "ref": "92d7d89e-f25a-4867-a39e-2ce672cfcbef",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a9e96d4a-1e7e-4e7e-af3c-937d5e712778"
        },
        "item": {
          "id": "59b92e03-379a-472c-8b10-c60e66abd046",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "1076f7de-29b9-42bc-be63-d293a05196f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 2033
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e681cd62-0792-417e-9f97-4ec9465f65ae",
        "cursor": {
          "ref": "630cff78-19f8-4747-86fa-abb545c951ec",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "4fa5ef61-7db4-45e6-a0d5-a35ababccdec"
        },
        "item": {
          "id": "e681cd62-0792-417e-9f97-4ec9465f65ae",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "bf8f8f58-f1bd-4fd6-b7e3-40ca11b2d5ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 1237
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a98790e4-4b28-4e28-b587-f54c4c10892b",
        "cursor": {
          "ref": "3058e0ea-4b40-44f4-bdf7-93baac657e7e",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "6035679a-fabd-48e9-abaa-979c7c683659"
        },
        "item": {
          "id": "a98790e4-4b28-4e28-b587-f54c4c10892b",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "2ee94f8d-0493-488a-ba68-dcc8d98124c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1261
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0292243-236e-4c6d-9b35-78aa00c1b841",
        "cursor": {
          "ref": "2e8efd1e-e47d-4a94-b508-cd33c5f5f343",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ea3c4501-45a9-4529-a25a-b402bfbc81a6"
        },
        "item": {
          "id": "e0292243-236e-4c6d-9b35-78aa00c1b841",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "3cb3b0de-b638-4626-8391-e0eb2eeea974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 1242
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c6aa30-4f0b-4fed-8ea9-7d30fba7b4cb",
        "cursor": {
          "ref": "2edba667-b490-418b-b30e-f6a94e5846fb",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "6e8f1a9a-8538-466c-b6e4-ff6e53f88661"
        },
        "item": {
          "id": "30c6aa30-4f0b-4fed-8ea9-7d30fba7b4cb",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b74e8d3b-4e97-48b7-9b59-7981ee202ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 219,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ffdbd6-223c-4a38-a591-008bbe72aa1f",
        "cursor": {
          "ref": "8ef670c3-83c1-4093-a947-ba0b2536fda3",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "14de61c5-58ea-461c-9319-7802ad4fdabc"
        },
        "item": {
          "id": "e4ffdbd6-223c-4a38-a591-008bbe72aa1f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "875c7d50-a430-4e5c-84c8-af9cfa97cad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 225,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cbaa29f-3ec2-4d5e-ab35-412f96efddc5",
        "cursor": {
          "ref": "4f3b75a8-45a1-4efb-acc1-95a2e1139aaa",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f9fb8163-555f-4f4d-b491-e6fc2bd64490"
        },
        "item": {
          "id": "5cbaa29f-3ec2-4d5e-ab35-412f96efddc5",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "79e97a04-c402-4f2e-a15d-fc3b344d925c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 226,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e483a8f-cc55-4c7a-9276-8a32fa552bb5",
        "cursor": {
          "ref": "3a213fc3-31e6-44ca-a8ac-dba0c7b9a3ab",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "289b39a9-709b-49b0-8eeb-a0ed119472b2"
        },
        "item": {
          "id": "4e483a8f-cc55-4c7a-9276-8a32fa552bb5",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "69a9b07f-7ca3-4b1c-9979-f00a556bda09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 223,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff995fd-74b3-4037-ae49-567cbec33ceb",
        "cursor": {
          "ref": "e6c990b3-9c23-4c1c-a302-205c15cdc91f",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5130dbd8-8eee-4d89-9969-7704661008d7"
        },
        "item": {
          "id": "cff995fd-74b3-4037-ae49-567cbec33ceb",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "9c87ad9f-9727-4892-84a3-9e9439492698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6fe269-23a8-4339-bf33-7ad555955559",
        "cursor": {
          "ref": "c98ab368-8a09-4cca-ac1c-ce632cd88470",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a188c5c8-8190-4a56-b8e5-b59fc2d0a60c"
        },
        "item": {
          "id": "6a6fe269-23a8-4339-bf33-7ad555955559",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "01c33c26-0b92-4a96-8d77-1b90f3d92a55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e044d66-0e98-4623-8919-10a5f168a01a",
        "cursor": {
          "ref": "b6e143bc-aaf2-4f48-8044-ebd5e59b0633",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "75325991-be0c-4aa7-a3ec-b2b53112b493"
        },
        "item": {
          "id": "8e044d66-0e98-4623-8919-10a5f168a01a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "aaaee73a-072a-4400-99c6-b12c7651e513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd1c9aa-8d31-426f-863f-de9db9bcdbf8",
        "cursor": {
          "ref": "7734bab1-c8d3-4144-988b-543b3f720b88",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "77d25c4e-ea2f-43bb-b4ec-8ecff5ab798e"
        },
        "item": {
          "id": "3bd1c9aa-8d31-426f-863f-de9db9bcdbf8",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "789950de-289c-4f8d-b6fe-a0dbeaaebbfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 1538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b4ba8e-a7f0-4238-a3d0-02ed371be62a",
        "cursor": {
          "ref": "0755c906-7110-44c5-8e16-f33039945292",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "1cd07e3a-15bb-4aa6-99ea-c66f87930af5"
        },
        "item": {
          "id": "71b4ba8e-a7f0-4238-a3d0-02ed371be62a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "d958337e-a2f9-4ec2-a1ae-57020e651121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 1539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab2838a7-17d8-4031-8fea-e998727af2cb",
        "cursor": {
          "ref": "8c513e68-0616-4bf5-a568-485b8e65991f",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "78cb92a4-9ab1-4789-8cd5-6ac9f71b1c6d"
        },
        "item": {
          "id": "ab2838a7-17d8-4031-8fea-e998727af2cb",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a334982b-831e-4b97-82e5-4ad333c1f896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b16c84-8984-4a98-af5c-5d4dfcac5700",
        "cursor": {
          "ref": "2256248c-90a2-4561-9f70-168539022230",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "4d40eb40-b5aa-47e0-bc6f-7f3e7f401f4d"
        },
        "item": {
          "id": "c2b16c84-8984-4a98-af5c-5d4dfcac5700",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "45a2153c-0243-4ba8-a804-9b1e2d5858f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 2076
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d85d9d3-db04-48d8-b5c0-a02767b55698",
        "cursor": {
          "ref": "37f2989d-be20-4bcb-952c-9d94d0a657c0",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "4b7f4cf1-290c-4094-9439-1f4265c81a8a"
        },
        "item": {
          "id": "6d85d9d3-db04-48d8-b5c0-a02767b55698",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f7c3be19-9c89-428f-a045-c66de3fb981d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 226,
          "responseSize": 2062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b2e61cf-c89e-4403-86f7-ed283f9287f4",
        "cursor": {
          "ref": "6d021dd3-9181-469d-9a57-a47e7deb8c7d",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "62c889bc-75e2-416b-bb40-cf99f0fd8a82"
        },
        "item": {
          "id": "0b2e61cf-c89e-4403-86f7-ed283f9287f4",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "061328b5-8ff0-427e-ba4e-7b0f53d9637b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 2060
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "164c30a3-0028-4b49-858f-59c077dd4c2b",
        "cursor": {
          "ref": "0ebc7f52-27d2-40f7-8b46-f23ddf8fea4d",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b88676c4-0bf7-42db-b720-11cce6adf0e9"
        },
        "item": {
          "id": "164c30a3-0028-4b49-858f-59c077dd4c2b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "52182f98-36c2-4b5a-a90e-600439386c2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 2061
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c4385a-8216-442a-93a5-0c5dd874e5b5",
        "cursor": {
          "ref": "78a9cb6c-1e99-4346-a79e-c1f37a967572",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "28410bdd-47ae-40cc-bbf4-a44a7ac9c75b"
        },
        "item": {
          "id": "53c4385a-8216-442a-93a5-0c5dd874e5b5",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "df7defbf-2220-4e1b-a738-07f25a4b4879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 228,
          "responseSize": 2082
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bde1d09-ca48-4412-ae81-2a3b11642ced",
        "cursor": {
          "ref": "10e3fef6-2d4d-49b4-8cc4-2881a230ae9f",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "350f9131-5027-4c78-bf64-eb549af97097"
        },
        "item": {
          "id": "5bde1d09-ca48-4412-ae81-2a3b11642ced",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "242e8017-9088-4aa2-a94a-501d8e6b774c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 223,
          "responseSize": 851
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "445069f6-2bea-445e-9b3e-f3efd3f5386f",
        "cursor": {
          "ref": "7495b6eb-cff0-4b3a-bc3d-3560ed2c8047",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "ca23bdab-3741-4500-8cde-8c3646a45bf4"
        },
        "item": {
          "id": "445069f6-2bea-445e-9b3e-f3efd3f5386f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "8f2651b3-13eb-4125-a17e-5d6ef37d1381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 226,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ac51fed-c16a-4798-9b60-0e0891f7533a",
        "cursor": {
          "ref": "4dfaaeca-365e-40e1-916d-64cc48c2ccd2",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a76c1b92-9c09-4113-bce7-c1f9c2d31c74"
        },
        "item": {
          "id": "0ac51fed-c16a-4798-9b60-0e0891f7533a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "370c58f4-8266-43de-a7f8-64c31b37c63b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9712b334-a17c-4d10-818d-b600537f7c50",
        "cursor": {
          "ref": "83e3ea2e-92f3-4b74-9f2c-87a632e58636",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "9607aabc-a203-4d75-83ed-c855b15ad239"
        },
        "item": {
          "id": "9712b334-a17c-4d10-818d-b600537f7c50",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ccd02d56-01c2-467a-a6ff-0688c8ff6db9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6038f519-f6dc-4774-a8a9-19f8cd154c2e",
        "cursor": {
          "ref": "2ad38a60-3e4f-42dd-81d5-93c8e650075d",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a164384a-277a-4f40-832c-883453e9a05b"
        },
        "item": {
          "id": "6038f519-f6dc-4774-a8a9-19f8cd154c2e",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "27f75804-b36e-4ec6-8d47-45539d111f94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 225,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c87547d-d3b8-40ce-8e33-1848e6eb22b3",
        "cursor": {
          "ref": "84b3c229-b04e-4089-87c1-d15b29af03a6",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "05b61201-c9ac-4f65-97c6-b5c484dea90b"
        },
        "item": {
          "id": "7c87547d-d3b8-40ce-8e33-1848e6eb22b3",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "bbd2f107-0d1c-4020-8413-192e02427938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 868
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9776592f-1d32-42cb-aabb-a24a1fef8f5f",
        "cursor": {
          "ref": "d05b09dd-a16c-4d6f-93c4-a6788d84feef",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "2b50a56e-1b1e-4668-b897-144b7631bbb4"
        },
        "item": {
          "id": "9776592f-1d32-42cb-aabb-a24a1fef8f5f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "0a98186b-ab1b-4e6c-a1f9-4a2a7444ab57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f914a72c-77f2-463b-bfd0-be823f5c16fd",
        "cursor": {
          "ref": "fbb999da-c17b-4279-828b-89966096755f",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "26bf2b8e-dc28-4f91-83ce-83fe648a88f4"
        },
        "item": {
          "id": "f914a72c-77f2-463b-bfd0-be823f5c16fd",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "eec23c37-222a-45e4-9f3c-0d512cbfcaaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35437f8d-85e4-41eb-abd9-5cf19c9a766e",
        "cursor": {
          "ref": "9e41b0a6-fee2-4df2-946b-1be45524e450",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e01bc34a-aad6-4228-acb0-0d0bd3884599"
        },
        "item": {
          "id": "35437f8d-85e4-41eb-abd9-5cf19c9a766e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "bbed4544-6aa5-4f28-b809-385d7f9d6b2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f2936f-2948-46eb-aebb-87f447238ad1",
        "cursor": {
          "ref": "94a4ded6-0ff1-4ef2-880a-b9e1d9fa0937",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "902e4a5e-c523-4b2a-8527-e4960921ed38"
        },
        "item": {
          "id": "13f2936f-2948-46eb-aebb-87f447238ad1",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "eed8b2cb-08fd-45f4-ad5a-51b591a3676a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d267f3e4-b03c-47e4-bf7a-acd0c37d0cfa",
        "cursor": {
          "ref": "9b14b277-a26e-406f-8306-27b6ecdd7a18",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "df2afc55-b593-4bf1-b395-8bf0460aa197"
        },
        "item": {
          "id": "d267f3e4-b03c-47e4-bf7a-acd0c37d0cfa",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "687aca75-d6d2-4a4d-a230-a127f81a95f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "221ac3e0-3dba-4c3d-95e5-cbc5361025f4",
        "cursor": {
          "ref": "813be197-0090-4039-9f60-241f0ec84c3c",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "936a8b83-a841-4fc0-a44f-e4e67c8366f2"
        },
        "item": {
          "id": "221ac3e0-3dba-4c3d-95e5-cbc5361025f4",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f5934351-4c53-4047-811c-d0926b224311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0826e302-295e-4cb0-a5a9-6bccc925f579",
        "cursor": {
          "ref": "c21521f4-5a8c-4c99-959d-f138fac3e357",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "bb42e3d7-d2bb-4022-9a67-fa203266cce2"
        },
        "item": {
          "id": "0826e302-295e-4cb0-a5a9-6bccc925f579",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "7e088ebb-03fb-4b30-a3fd-addc4b221800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1246
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22beb837-d7b5-4cb6-8292-b1351cf42bd6",
        "cursor": {
          "ref": "4556f21c-fcfa-4406-b0f3-26b0a41c4243",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "adcae153-58f1-402d-a525-09a99a60f080"
        },
        "item": {
          "id": "22beb837-d7b5-4cb6-8292-b1351cf42bd6",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "0859f449-eae3-4891-9361-49f902ae675d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b8951d-3c08-401e-89ec-1a9810c0a1c3",
        "cursor": {
          "ref": "943ee9d6-a29e-48d9-bcb7-0124354c65b8",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "77ff8764-983a-412a-beac-ddeffa0640e4"
        },
        "item": {
          "id": "f1b8951d-3c08-401e-89ec-1a9810c0a1c3",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "999cfff1-40cd-4ef3-bfcb-edbf6f226672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 220,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bceaa28-78a9-45c6-909a-5fd12355ac39",
        "cursor": {
          "ref": "785d5083-c58d-434c-bf2b-40b418a31a12",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b64973ec-9ed6-4f20-8dff-af612e250b5e"
        },
        "item": {
          "id": "0bceaa28-78a9-45c6-909a-5fd12355ac39",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7f06dd7c-45b9-475d-b6e8-59373a0bd194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bba4e0d-2e08-4687-b639-67695b896d0e",
        "cursor": {
          "ref": "dcb2698b-fcd0-4c7f-b556-1be290bd9f52",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "140e11b0-444c-419c-8835-86a6f8e1876e"
        },
        "item": {
          "id": "4bba4e0d-2e08-4687-b639-67695b896d0e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ad18a427-bf3b-4b3c-b7fd-e707b455392d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28e6a5ee-dadf-461f-8860-9cc6651abd26",
        "cursor": {
          "ref": "4596a7b8-d8f1-454b-833d-9aaf5a8c724b",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e8adecea-f032-44cd-9a15-ec2109d5b3bb"
        },
        "item": {
          "id": "28e6a5ee-dadf-461f-8860-9cc6651abd26",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "6e22a7c0-f5fe-42ec-8d03-5a381f94eb8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e73385f5-cb35-44ea-bc47-5c4b410f3680",
        "cursor": {
          "ref": "64ad58f7-7aba-4333-9614-28110319fc91",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "9d3bedca-0ba3-49bf-9891-95b47937a079"
        },
        "item": {
          "id": "e73385f5-cb35-44ea-bc47-5c4b410f3680",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c58b6383-dbbd-4ed7-9c52-c4dfcb087a7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 231,
          "responseSize": 1200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58075fe2-f374-4468-8982-888fcb26e254",
        "cursor": {
          "ref": "c384422e-77b8-48c6-97c0-f38e469b5b8f",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "0558e43c-8c91-4ca0-b5aa-1e014c2b3a29"
        },
        "item": {
          "id": "58075fe2-f374-4468-8982-888fcb26e254",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "acefbd0e-b4f6-4f1e-ae04-8c1acfe2d455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54eef917-fba8-4ccc-984d-e29e5e5aea59",
        "cursor": {
          "ref": "b4b3fae0-fcfa-4279-a4cf-a46dbc1e9460",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "61592986-314a-4684-85dd-bb553293a16c"
        },
        "item": {
          "id": "54eef917-fba8-4ccc-984d-e29e5e5aea59",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "c8e81377-ebbf-4868-9045-9a97027b3435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e6b269-8527-428c-b45b-70e0eb1b43e5",
        "cursor": {
          "ref": "500ff78b-362f-4258-83dc-d6b2f43c948b",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ff53c097-daa1-4964-91be-5a6989006521"
        },
        "item": {
          "id": "a6e6b269-8527-428c-b45b-70e0eb1b43e5",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "98880d3b-3734-4f50-9320-62abbc634773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59800ce2-0817-42fb-aaa1-4bdc5bf272c8",
        "cursor": {
          "ref": "6c8394cc-8f3a-427c-9145-938cb0052ef5",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "9e5b1aef-0d65-4a9e-8400-917e3e3e0c7e"
        },
        "item": {
          "id": "59800ce2-0817-42fb-aaa1-4bdc5bf272c8",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "91cc152a-be28-4d40-aca7-ae930578d0e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1206
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "646d673d-4e22-49a9-968c-c4185e9002d8",
        "cursor": {
          "ref": "838424f2-80e5-40ac-93ad-5d191e278638",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "c2a434e0-82ca-4588-86d7-4bf835d9f2b7"
        },
        "item": {
          "id": "646d673d-4e22-49a9-968c-c4185e9002d8",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "20c9344a-73d3-46ca-b8d5-4b1ab51a5218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83727b17-dd2e-4dda-bed0-d4c8f1c09160",
        "cursor": {
          "ref": "79d8dc1b-8269-4a72-b794-2ed7da4109de",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "27e6605e-7fe2-468b-86a3-d5fc576ea940"
        },
        "item": {
          "id": "83727b17-dd2e-4dda-bed0-d4c8f1c09160",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "77df9289-7406-4314-9e21-8b92946a54aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8869c4a2-829f-4d05-b1e0-028c06b0dc0c",
        "cursor": {
          "ref": "526daf22-4efc-4338-824c-02d22208d84d",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "216cc4e7-2b3a-4b97-bdde-36ae85e19f82"
        },
        "item": {
          "id": "8869c4a2-829f-4d05-b1e0-028c06b0dc0c",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "0938bef6-dcd0-4250-8fe7-5737401fc9e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1096
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d8d1f8-26b8-488e-ba38-3746b8972f54",
        "cursor": {
          "ref": "080dda85-e605-4a5a-92f5-3babde82e2e1",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "029052c7-8b96-4980-b9a5-34aff68b308c"
        },
        "item": {
          "id": "97d8d1f8-26b8-488e-ba38-3746b8972f54",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e4dcd1e3-ea17-4b9e-b5f7-9ec33c1d8f93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e5f1ee-0ec3-4a0e-9c4a-a3154108027e",
        "cursor": {
          "ref": "d4442432-543b-4566-99a7-83cd60900130",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ec75a0c1-4a4b-48f8-9adb-ac39a2723435"
        },
        "item": {
          "id": "c5e5f1ee-0ec3-4a0e-9c4a-a3154108027e",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "5ef88da7-03cb-4c1f-9952-b7a68e733d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f60050d-b221-4873-bc58-6b1ef10d00d6",
        "cursor": {
          "ref": "4a139f0c-b70b-4541-9c3a-24971360d6f2",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c5d4dbcf-9e29-450e-af9e-af74f0baa6dc"
        },
        "item": {
          "id": "5f60050d-b221-4873-bc58-6b1ef10d00d6",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "36f741e7-a0ff-4eb4-a255-fb5f30f7edfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c0394fa-f4d7-420f-92c7-a3a8f5bf02f0",
        "cursor": {
          "ref": "3be00add-4a05-461f-b914-e174029b523e",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "2083c081-ea4c-47fa-86e7-8d53f9b31c0d"
        },
        "item": {
          "id": "4c0394fa-f4d7-420f-92c7-a3a8f5bf02f0",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "5ec50be8-a802-4a65-8525-5e4b74565c3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a28a8b-82a9-491e-a551-123650236d97",
        "cursor": {
          "ref": "1bd3dd34-dc31-4b96-9d6d-73d8538c3bca",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c3730153-bc7f-4148-ac24-d12afa9cc416"
        },
        "item": {
          "id": "50a28a8b-82a9-491e-a551-123650236d97",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e57a0d89-1cf1-4684-8169-eee06ed1fdae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1225
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24974302-e039-4c6e-9f0b-7ed95172c34f",
        "cursor": {
          "ref": "7c0b0248-63ff-4fed-b4a2-14cc54393665",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f0ebf0ae-99b0-493b-8223-3fb6f96a6011"
        },
        "item": {
          "id": "24974302-e039-4c6e-9f0b-7ed95172c34f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "1eab0f4a-a844-40c6-8eb4-30cac52b5a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be663c69-a132-43b4-93b6-dffed1eabe5a",
        "cursor": {
          "ref": "475195e8-0642-4f6f-a04e-5443d839742d",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "5052f986-917d-4956-9612-b5ff7d73a3bb"
        },
        "item": {
          "id": "be663c69-a132-43b4-93b6-dffed1eabe5a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "af436b03-0848-48ea-b50c-5d3b23b42219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b283fb-61ea-4ad5-ae2e-f6e3cea391f7",
        "cursor": {
          "ref": "ea98936c-c217-4f05-8222-5b7f8715fdf8",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "0ec63544-d57a-4f83-a79b-b52d423ca436"
        },
        "item": {
          "id": "26b283fb-61ea-4ad5-ae2e-f6e3cea391f7",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "4b17c129-545c-4da7-b9b3-083461e0b33d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e94ba2f-f5d5-42cb-bc3f-8336cf7668b7",
        "cursor": {
          "ref": "40340b2c-3fa6-4bff-82f1-87741234647e",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "31b0aa8a-470a-4f1e-bd14-48038ea2a19c"
        },
        "item": {
          "id": "8e94ba2f-f5d5-42cb-bc3f-8336cf7668b7",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "2f330191-8bb9-4b72-adfb-3c494e8b701b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fdc2d0e-77cf-416d-a1a2-ce6074cefd0d",
        "cursor": {
          "ref": "01baf148-b376-49fb-9050-6d2bd624f45b",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "49230ca8-9ce0-476e-b6bc-619a60fce6d5"
        },
        "item": {
          "id": "2fdc2d0e-77cf-416d-a1a2-ce6074cefd0d",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "126f32e9-3106-40ff-9791-d9e6b32b9275",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 249,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2164474-f998-47f3-9c69-8cb37ff35926",
        "cursor": {
          "ref": "415262c6-0560-4cbc-9727-7e4dcc8f7359",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "2bc7f474-d062-4a05-a2b2-c8e15b48ef83"
        },
        "item": {
          "id": "a2164474-f998-47f3-9c69-8cb37ff35926",
          "name": "credentials_verify"
        },
        "response": {
          "id": "0df6b629-fb81-44de-90d9-655a524c1e01",
          "status": "OK",
          "code": 200,
          "responseTime": 429,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16052320-0068-4ae5-be7f-ba5e30270228",
        "cursor": {
          "ref": "1a1b23c3-a1fc-4a37-96d7-2fbba5c2b311",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "4f2efe55-7e65-47b4-b06e-d75627f41fab"
        },
        "item": {
          "id": "16052320-0068-4ae5-be7f-ba5e30270228",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "90a6bf21-4a30-47f9-b112-08a0a97be7e9",
          "status": "OK",
          "code": 200,
          "responseTime": 316,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcddb86a-6f16-4395-94a8-3c97a2580e2c",
        "cursor": {
          "ref": "9fa67ef8-1ffc-4579-9151-67ab906d3b9e",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "53371e18-c358-457b-b181-9083e65027b8"
        },
        "item": {
          "id": "bcddb86a-6f16-4395-94a8-3c97a2580e2c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "2f3eed3e-03a3-4303-aa22-1c83f7e09202",
          "status": "OK",
          "code": 200,
          "responseTime": 298,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16cb1e7e-5889-427c-89c0-b0a8c9dfe488",
        "cursor": {
          "ref": "b59985cb-3f88-402a-8909-4ebed4a9d936",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "fa62984e-0990-4ac2-b667-86edf5480e7e"
        },
        "item": {
          "id": "16cb1e7e-5889-427c-89c0-b0a8c9dfe488",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e7d5491b-2b34-4f1b-8ee5-0f98cb598302",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16cb1e7e-5889-427c-89c0-b0a8c9dfe488",
        "cursor": {
          "ref": "b59985cb-3f88-402a-8909-4ebed4a9d936",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "fa62984e-0990-4ac2-b667-86edf5480e7e"
        },
        "item": {
          "id": "16cb1e7e-5889-427c-89c0-b0a8c9dfe488",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e7d5491b-2b34-4f1b-8ee5-0f98cb598302",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16cb1e7e-5889-427c-89c0-b0a8c9dfe488",
        "cursor": {
          "ref": "b59985cb-3f88-402a-8909-4ebed4a9d936",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "fa62984e-0990-4ac2-b667-86edf5480e7e"
        },
        "item": {
          "id": "16cb1e7e-5889-427c-89c0-b0a8c9dfe488",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e7d5491b-2b34-4f1b-8ee5-0f98cb598302",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca9162a-421a-4bb3-a500-de550cf0bf68",
        "cursor": {
          "ref": "9beafd86-fcae-47a5-a1ee-7b1d65761999",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "50393e68-0465-4aa1-ba10-b2e8aceda019"
        },
        "item": {
          "id": "6ca9162a-421a-4bb3-a500-de550cf0bf68",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "3454e7b6-26a1-4270-a32d-e9452514a3f5",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 293,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "220f82ca-b6d1-417f-bfbd-7776dfb8ed72",
        "cursor": {
          "ref": "c7b7d2b7-4ee9-4712-abc2-dd1e071e046e",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b4b55588-76ee-4a41-a356-d707d3c04734"
        },
        "item": {
          "id": "220f82ca-b6d1-417f-bfbd-7776dfb8ed72",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "753f642d-43d1-4fc0-8e5a-7f102e87b8ce",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "220f82ca-b6d1-417f-bfbd-7776dfb8ed72",
        "cursor": {
          "ref": "c7b7d2b7-4ee9-4712-abc2-dd1e071e046e",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b4b55588-76ee-4a41-a356-d707d3c04734"
        },
        "item": {
          "id": "220f82ca-b6d1-417f-bfbd-7776dfb8ed72",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "753f642d-43d1-4fc0-8e5a-7f102e87b8ce",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8d8bfd-5e49-4fbb-a7d4-2a6af80926e3",
        "cursor": {
          "ref": "7e33571d-09a7-46c1-97c1-ed2446864e00",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f9204bf4-bd6a-48c5-9321-13a104465901"
        },
        "item": {
          "id": "5b8d8bfd-5e49-4fbb-a7d4-2a6af80926e3",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "0864028e-6fd1-451f-b933-7f8629898828",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 601,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f6020e-5605-4cf2-86b2-682b58613398",
        "cursor": {
          "ref": "9986d85e-48fa-4e79-9dca-1d628da8a7c0",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c1c93006-477c-4968-9e23-f6f7b31b9835"
        },
        "item": {
          "id": "83f6020e-5605-4cf2-86b2-682b58613398",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c8ed6f3b-f965-4ff5-a6ea-2770001efc05",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f6020e-5605-4cf2-86b2-682b58613398",
        "cursor": {
          "ref": "9986d85e-48fa-4e79-9dca-1d628da8a7c0",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c1c93006-477c-4968-9e23-f6f7b31b9835"
        },
        "item": {
          "id": "83f6020e-5605-4cf2-86b2-682b58613398",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c8ed6f3b-f965-4ff5-a6ea-2770001efc05",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77a0df5f-3033-41e0-a40e-322dc8429e7d",
        "cursor": {
          "ref": "7a74f3ef-631c-4cb2-b21d-630b3d04ee98",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "4ccc05b2-266b-47ed-b83f-1574591da51d"
        },
        "item": {
          "id": "77a0df5f-3033-41e0-a40e-322dc8429e7d",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "22988e1c-76aa-4959-96a0-0013f98bf9db",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 514,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}