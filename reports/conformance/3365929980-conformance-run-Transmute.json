{
  "collection": {
    "info": {
      "_postman_id": "f5f17919-82a1-4db5-be95-0f985635313d",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ae02bd2b-95cd-449d-8588-b7d78c9ca373",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b00d15f4-a4fa-4d03-8528-24282dfbb95b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "18a63774-28d3-42c9-a623-f9282d3a9bdf",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c69e435a-fa24-4882-b556-52480c52ef47"
                }
              }
            ]
          },
          {
            "id": "6ee0d749-cb7c-47b1-9173-fac699520c0b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2d846545-953d-4248-91cc-933c43c8a52e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e8efbcf0-5fef-4c88-b3ab-e9385794f1f6"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "fe416f13-b9f7-4ff0-b845-2feb13525fd6",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "cfe02799-d616-4ad6-a6f3-0f3509bae1dd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "76919977-fbac-4559-a8a4-081878a9452b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7929ab04-7180-4a94-a3ad-50808d4eecb4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8f1641e5-6040-40f4-b6de-de063228cc59"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0e4283b3-6ec2-4ca6-8039-c7d926deae71",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2a54450d-f15a-491b-b2f2-6ed631f667a4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2318de69-6bf9-4a04-80ce-0736b8c540c7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fbcab1d3-1e93-47e6-8601-863ed3bc1bf3"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "43f5228a-4163-46db-8c26-fdc74772d149",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "2b5921da-5aa8-4772-9583-05ebd2ebf036"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f94bab2e-35ee-47d2-afd2-2e2746a4619c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7d2215ec-eb68-47c1-ab29-e72f90b4ad7a"
            }
          }
        ]
      },
      {
        "id": "44112af5-12dd-4c1b-81ec-68e43f714611",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "e37e2f46-5fa1-48b7-8751-736354d60d36",
            "name": "Negative Testing",
            "item": [
              {
                "id": "22f14e0d-27e1-4a6d-b979-34c410ed0c55",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2ab1379c-cbeb-42a2-99b6-1bc1677c0269",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c444d4-8d08-47e9-aaa1-de06b6fef64f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2cbae8c2-79ef-4e4e-aa71-1f064e8a196d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "370b14aa-d2f2-4113-b233-7210516ac59a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7150ec7d-1565-4cfe-a99d-7d713b50758e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "03cddd88-054f-4e60-8ece-fbb46c951ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b36ee6b-37c3-4fb4-9d75-d7b8ecf36e64",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af710117-bd6f-4cc4-a3e4-1c968dddd36d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f27ffc9e-80e7-4572-8d2c-b7d8b16732cd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3c8ae70d-20e1-4cd7-af63-3511e6707363",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4cd18e42-7fe7-40ad-b059-cd67f3196edb",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d36c72-a262-44b9-9a92-cdeb97d98dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cf81b308-d4c7-423e-b552-450fd3a9ffa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86401652-8aa2-46ac-9006-cf38a9c5fd0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67a55675-674f-455a-bef1-d50bdc8a2b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "116ccda0-f140-4c8a-90c2-8f69540f2d26",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dc57813-1e93-45ee-aa3e-da5beb485eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a63257a1-1f17-4048-b564-1962ef569e8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ae3bfd-5e0f-4d91-823e-a0fb64b3c048",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "99312f0e-88e6-4a17-90dd-950f98c59cf4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "fff86a8b-f2e3-40c3-95dc-509d1610a022",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e2935577-afbc-4f40-84b2-3957d70cd91d",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f843d577-562d-48b1-be82-f7fa10856cad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a9b47eb3-bd4b-46ea-85a7-c44dbf65fd2d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7fbfead6-84fb-4d96-b884-353c8149c805",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "396ab630-25d0-48ab-8a73-06eedebb69f0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b6cfd8bf-7646-4a22-9bac-848040cef9e3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "900e96b6-4e7c-414b-a1d2-3055bc188f01"
            }
          }
        ]
      },
      {
        "id": "2b33b44c-0358-4671-9687-38eaf54d8379",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "94e8795b-5e1e-4400-ad6b-e78319ad615c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "df7a6e0a-a18b-4264-999a-8705e616338c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "1eb3d0bc-4c40-4646-b048-de3164d29dff",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb780f3-f4ee-4626-9d3e-42627fc2ffb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a5e27da-660b-4981-82ec-dd34152f0297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a418b81c-d98b-47b9-bdc9-ec251300ca5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fff9c143-d83a-4fc0-99a4-3c001db09d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3596edd3-ce72-4563-a4f0-b0dec11da8fd",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f2a711e-1153-440c-a99c-b1bff83bfff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21b9e061-f2b1-4a8a-a90c-25be9c4217a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ae3105-7d14-4b3c-ab8c-7bd4a230a0cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89d659f3-d767-49ff-af67-80a61f5eba94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2e71562-f195-441d-a597-f2a070c72773",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ed8fc2-e54a-4774-b457-d0b72f5c44ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb919be8-1dcb-4f93-a26b-e6128af058eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb9ce66e-7214-490e-a5ab-b10c23f6ba32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c6d75182-e561-46e9-94fd-10b0d0c19ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2acc7871-e87d-411c-8e38-a0637813f112",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88e72032-75f5-48d4-b89d-970766a4209c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f01b512-351d-4572-aefc-ba10b6d916ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b317345-217f-40dd-842d-fb1478c48a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68b3b4ec-7432-4c2b-81a8-5871562fb459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18caf679-5ee7-4a9b-a758-19da484fa81c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad78b09-65b0-457c-a8bd-265bae04f169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6be8bd82-f4c7-454f-87df-6288260f6f8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "521a2462-4ce1-4b79-861d-62fc13bb6595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8659b705-5bb0-4445-b103-212fe4cb06b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "871661f6-45b4-43f7-a21f-9afe6735ca93",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5756b54b-0778-41f2-be99-b05bd404de3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e9b00fd-464d-44e9-b988-1c3e286837d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb68475-dd9e-4f2a-a103-7a510d7c4772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9116860-b5a8-4d8d-a76a-aaca4ed5178e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d11bc53e-7ee7-47d1-99cd-c891348ae709",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d649de37-740f-460f-b94f-90a850bae9bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34d348de-96bd-4639-a03e-bbb821d6f708"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "356701ba-cf2b-43d7-8a3f-05647f55f77c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c15aadb-3f48-4ca0-807c-63f1cfafca9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fd3e87f-4fb8-43b4-a41a-b243868a76f7",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "094154bc-7f34-4200-9131-fcc5724caa79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc781e27-d428-464b-b4ec-2f328a323f81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb13de27-099f-4e55-ab46-19f91032ed3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9c28d9b-4866-4a79-a796-313a43eb81e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9966d8ed-b6a3-407f-852e-f69a9d04ec49",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59e9387f-4b5c-4961-b0bf-e537a02f5796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f426016f-9bc9-47fe-a413-8b769b8606dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7055e9e3-313d-4f65-8691-b006a2189e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d072aee-93e3-43da-b524-b27c18545abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef8b9ce-5a3d-436e-b8ca-e4bb3a80b730",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "927e0d3e-14c9-4bba-91c9-16673ae7e041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7633619-dbfc-44e1-82d7-c670d76695e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9836995-697c-4185-bd02-7c1076092edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "702f66c0-3796-4579-a15f-f34621754c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "159a8496-143f-4943-9c9b-066c6e509b52",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa74464-8fb4-4a7f-9507-08a003363d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe42a0e1-6f8f-41b0-9f05-895dfa5d7c73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "557c3cd1-fbe2-4212-81d2-d0cb4ce9b684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "144048b8-76ab-4a4a-b7c1-4e799aa2c666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34ce5c37-ba45-4f0e-9307-1535fb9ab322",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e16f7a6e-41a0-475e-ac64-ecda68d1f80d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfb37294-6c12-4be7-b37b-38dc288eae37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc61daf9-7939-446a-9ea1-38bb3e0df7d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a9c1718-d8b3-4c53-968a-87e726aea590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c319bbbb-3c4f-4835-95c9-5b6f186f975b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c22c6c4a-c56e-468d-92f3-8adf64e08f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c623d9a-f75d-4aaa-9e24-8706d0a080ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd47fc79-e01e-4938-957d-6ba1daf2e2bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c9f02e9-e20b-42ac-a669-921ae0d92794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7236ba4-f522-4a11-9815-41cb5275754a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e633d49-7257-40d6-8bf3-97a9fc7b6371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cca6922-b59b-463b-bb60-2eccc949b221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f04a95e-3e7c-406d-a8df-5888d90cfb09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71cfac03-03de-498a-a340-2088bc1d31b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e71d2de0-5589-4214-8517-79782be6e635",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eeee538-9db4-4d75-9abb-6a08e7b78ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7417d193-fe46-4c68-a3b7-1f9c159c3242"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db849c9-06a0-46c2-af51-3016ac48d8bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e3ffd88-82ce-4969-887f-0370efd2210d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03916fbf-0bda-4f46-b545-05e18e9d049c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2873d6a2-38f8-4371-8e85-d720c4272be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89175992-140c-4897-be0e-a65f0de56aaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4da93815-5581-4ead-af5a-c9a415df4b80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e1558bb-b51a-453a-8cb7-5c8c8417419b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7b6382e-4410-4df7-b671-b7b40ce4253a",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab260b14-c586-4107-8091-cf1bb170d838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c01414e-1f2e-44c9-927d-306c5067110c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e0b0fa-7582-4513-8b11-e4d8bd72d5eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "148684b3-e268-4402-b3c5-d83f59987e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b0d3e2-c1cb-413a-8c7f-a4627fd0fdb4",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1287788-ead6-44a0-a8e0-451c3aef84a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "574606da-050d-48b1-adf2-7c9820787534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e44d0efd-8580-49f5-9a87-48c3cd46c164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd231011-729d-441e-9d59-2f2d8b167554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb2b97f5-f005-48df-a069-4f636b917756",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "494a839f-c9d0-4beb-ae51-df2405f892f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46582727-afe4-47e6-83fc-469588e6618f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f1f15f-ecef-4ffd-9d3f-29c277da9cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "274772bc-28df-44f1-bc62-98581996286c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ccf64f-9d4a-4b62-a766-dc0d31da146c",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81580b27-1023-4792-9395-2d00daea9aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30f112a3-f76b-4448-ae86-562b2f078a3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3010952a-ffd2-449e-b699-228695d42b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3733263-d08c-4378-97a5-8deca028f92c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e498331-8e65-4f39-952c-4e63430c7f5e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9794cf0-2af9-4d9e-a0d6-0978f17045d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8993ae93-b8fb-4f7f-9276-73cefd227f1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1092f0dc-4fd2-4672-bdd8-b545c79b5267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "05ff19e7-ad46-45f9-baab-a12d8200e939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfb250fa-6317-4924-a649-dcd777ce23d8",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "107ae1f9-2cd2-4749-bbf7-398b80c89208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "599e7316-ced6-4365-90fe-e8112b3ed005"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede8dea3-1773-451f-9bc0-8312c2cb6f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5433758c-e1a9-4ba2-810e-f98eb9dbf661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2853a1d8-06ab-4e92-8c10-7c046fad2875",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "956ec6d1-0d5a-4f3f-a165-b37a5fad7f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9d05015-edb8-48d7-a992-5f6c70351d1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc1fc8d4-3519-4c61-8077-2474733f5494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c7999f3a-ca34-4291-b4dd-849811381058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93d4a19d-54b5-4c2f-822e-7b928992ab0b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53fc5ef8-c25f-4336-a009-c68a2ef80c36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6f1c249-8792-4dd3-8df0-29e11932f7e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e8fce3e-3955-42aa-9980-d96d95fae9cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e849eb01-c681-4550-8bdf-3f338008b6cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7201c91-3c63-49ce-b7d0-781229e14079",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ae413a-39fb-48ed-8e3f-44563bc4b9cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85ec0f2f-a604-4f92-9804-163bac1c5675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c0a373-072b-4605-b81d-33890f27f859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "283710e6-59cf-4541-bd40-900d3f137c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "445c4869-946b-4c1f-9ffa-5c184d36e943",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7630916c-b001-4ff8-a5a0-6c7b765c7e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d3587b4-f073-4bfa-846d-4cb59356b32c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b2ba5b9-6e56-4b18-8f45-f7303713691a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b33eda96-644a-4a00-9c69-9ae110d4bd96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ca29a0-c030-43f5-b769-905e9ccd568e",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a29f171e-3e80-47f1-9ab9-05a8ce59759e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1265276-2e6e-4241-a001-f04ec587613b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "801170ad-b8d5-4636-aa63-a8acc9108ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8cb4704-560d-4b3d-a911-3323555e3d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58617e62-9b33-496e-b348-613d5bbf1abb",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b503491e-1650-4272-bb68-259473ae3528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16f55b74-4bec-4061-b918-aef018d169e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19cd1c97-3b5d-4ed2-9e2f-f971e92af82a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "33a4748f-e04f-4f93-b557-19ec5e454eeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619aae87-55c6-41e1-84a1-383d8cea79ba",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce4368e0-47f6-4b01-9e90-62e2c0fed980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dca3435a-b7c5-48f8-a532-f7ed417be979"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd16dce-fc31-410d-890b-0c7c6d8ac71d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0abf2ba-a0c1-4bbb-ab1f-29157b7204fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1173de5c-2443-4912-ab08-bff66e56bbbc",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db1435cb-4912-4b6e-963e-db419c6383ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fcd2a5b-b9ee-4644-83d2-85ba04238651"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c8bc641-1729-40d5-aabe-ba099aa0a0b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ba48cd2-8fbf-4c35-94a9-b1d607aa782a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "101e64b4-789c-463f-9f75-c5ae6249a28f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3098d0fa-9447-418c-8ba5-3f9a058ade5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a56e5b4-02d6-4b4b-bcbb-9c98dc087963"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d08e7d-77aa-41c0-b53a-41ddf65539eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f779060-1e5d-42da-b850-30e4fe390a88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "848682e1-e663-4df2-9160-bec9019e8f06",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e870472-3c7a-4af6-a2d7-ecaec2a4a3b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6a97a57-db5e-4ac1-8662-eabc0d3af8b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c68b3a-9a2d-43ca-aa3d-71442e0aaef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b31a5346-85f7-479f-a08c-60401120cdbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "527da4af-efc6-44e6-afbd-df4bdf5bf629",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e63c45-1641-4312-95ee-1f4c174692d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6b09ebe-5c8f-49ea-98c1-31281a617e00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f952d6fc-3093-4d5e-92fa-cd25e7cb35ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cb7ecb5-0537-4016-82e2-1766a30f2cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf7dd612-fb4a-4402-ac6f-f3f64c039d77",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0a24feb-40ff-4644-9255-04a64528284f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34f63b6a-6fa0-4ce2-820f-1f87ef3de0c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c3e00a-7afd-474a-911a-ad05c6dcd1fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "302a5dd8-5212-4c33-829a-f96c0775a477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d73a5ca-459d-4030-9cd8-34a70067f18b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "055285c6-6fcb-4311-b24e-66b05e24a028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8731dab-c259-4d70-a2d6-ef3f760ef308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe4761e-6248-43e1-b862-21ae7dd03f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "81c10563-01f5-4fdd-bcd5-6f3c3d1b85db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a865c22e-c1bf-4fdc-9bb8-7391a85e85a3",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15946b34-5bbc-4eec-a6d0-ba4a1149fa7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "568f48e7-f8f8-453b-ad1f-45c32a5abfa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe51e214-0073-4cd3-9c58-ced355eba5d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c4fa31c4-9db3-47b4-8437-c64f2d98b055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7777cfb9-edab-4f47-b0e3-0cf0a0f11383",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "500bc8ff-abae-4510-bff9-8a4e4e3d26a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c6fb70d-77e6-411e-8f7d-b10e874f16ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ffdca4-0368-491a-9c7d-0c536b282fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9acbcce6-dd76-4993-8f7b-7c1df128837b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1475ea1e-b0f9-4cab-ac07-cd4a99edf30a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e73d474-1e0e-448e-b5d1-9954d2a67195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59ea8bc6-a1c7-474f-a879-e0f39ac51140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2a9b3f8-e2e0-4939-a6cc-43043655585f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9be460b6-ae7b-4dac-8a03-c0dbe366bc40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a961c868-b22f-4c39-a838-ff59a2fd5149",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e1f8d10-ea80-4b67-b608-c911960df3d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b2adbe2-d0c4-465f-a27e-635edf273d4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6973973-5d69-4ea6-b1b5-9c92fda92a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0cc83c09-c7b8-4d86-ab9c-03ebd95dfddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af96f2d-da4a-4b97-82fe-dbd50f8cb496",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abaf0d41-adb9-4333-891a-7ef7c35f6a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e53155c-2d8b-4dca-a997-aa2ea2ff6947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd9b5fd8-27c7-42e7-b3e0-72a9c44fabba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0c078ec-fa72-478d-b82e-7bca679bc072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8abd55e-e285-43d1-8929-60cae7f0228c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d058acd5-32c0-4191-81d4-803681696d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4078140a-4c45-44c8-b1cc-579725c7b555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cae1263-44fc-4bd1-9262-58978c885995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "19fd1424-19d6-46b2-9612-717234f7cd84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14668e4c-50d0-4ecf-bb78-27461b16cc7a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a16e6885-f786-4e1e-a617-6389bf02823a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afda9f6b-e0ff-4b77-a36e-6811fa7de17d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "965399e4-7d7d-458f-9752-44a63db2fd0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "4029b8e8-389e-44db-a67d-1858764da3d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "904b3112-a5a6-48d7-8209-b771c453fc2c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "add43cdc-323f-4a0a-94b3-3d23decc910d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d81fa90e-4377-40b9-b96b-615c1b7fd143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a661f44-6abe-4287-995b-1cb6d04813e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c3e8ced-2b09-4a7d-be8c-d2feb3149f37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ae55a8-36e3-4d96-9244-6480d7297107",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23b71fd6-4cec-4c43-9535-5b912df35a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42936e86-8018-45e2-b229-c866f8037300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eace13e3-24fe-4c5b-862b-81886b583868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "6506269e-356b-43da-bc54-0609f93b41f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bce4f935-2451-4a65-840a-b707844b8009",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17241fb3-caec-4315-acbc-2428e7fc5b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9ff2718-58f0-467f-87f5-a522b7560240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82a85976-3cc6-4daa-9605-ca00b343c16f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3566e9fb-9f80-4a7e-a818-5e5cf7c5079d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe65fa9-d320-48a7-85b2-f1f03fa9ad97",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a483af8f-552d-47e3-ba28-a6adc8f8de1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cc47405-d75b-4eac-8e01-8ba36a4701c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b1ecf9b-91af-4e24-840a-49a61adf584d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "df80fae2-3b51-4a78-8661-4f909b4a984f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "456fc4a3-0db3-4d2a-9a52-7e90f88a93ab",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a4f9c52-92ee-475a-ae4a-74ca2737f56f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da4d7b22-0f94-40d9-bdf6-4bac69f1af70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8492f9c6-c20c-484e-876d-f4137f5325ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fa69fde-6b5d-4116-aa54-c8f83319fed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd838fc-cfff-48ff-91eb-d35c469076e9",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41855c52-6c29-4c24-92d2-031a27635c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68f1de17-7c88-4940-8ec3-2411e43c314d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad20325-c5f1-4d52-b503-4d6e0239e674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dec3af92-e180-4ee4-a66b-b7688cd79b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c82f4aca-91a1-436b-8d6d-7a5662c90d19",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ed21f47-263f-4d3c-b299-6622242d5969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a58fccc7-0777-459d-bdc6-2401299fe5e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32fbd71b-b872-433c-9301-e15fc5a1018f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c14e0ae4-0e9f-4e2c-99f5-14868c7c651a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b293bc94-9a4f-418a-9ca3-69ac5e800ac9",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a7b849-a9c0-4791-821b-cacfa8e22128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84ebacc3-7966-48a2-a781-de522bd8f8a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8de4955-63d8-49b6-9a39-aab5e7129030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9e20d8bd-6db9-46a8-a439-f4c52db57252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ca1891-265f-43f7-a627-7efb4937c3c8",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f17017ea-788b-4753-ae42-edfa0916baf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f07a014-bf6f-4741-b621-72b010cdf43b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df213836-8b05-40b8-8b17-19447c03555e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf4c5e4d-1991-4024-99d1-a8d778656f07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd28e42-1f68-4ddf-abd0-08bcf13b4eb3",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc98c328-509d-42b1-a34f-2fc639fc4086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0269c1e9-cd63-495f-ba8f-2fa4a250343a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb119ad-fb36-4bc7-a0e5-2ee6ce4af905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3b8a459-8bbc-4eef-a1af-fa50ea21b38f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "975c7caa-2875-4623-9192-838408172328",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63162da7-375f-43ac-9b8d-6b06d510f627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b324def4-a57e-4aca-90b6-c878042979b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f16cccc-43bc-48d7-9b27-afdd46235748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a59c73e5-06d9-4204-a477-a1cde5c7e3d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb0feaf-fbbf-46ab-9a07-3cbfe75a8368",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b10b72c-0b45-42fa-b80e-5ca5cef9a1c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1c9b683-5dfe-4818-96f5-28ee57ef7720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62b5e3fb-a239-4c8c-9792-f04f9e6beffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d549de7-66a1-4b90-93ce-e2d72225a45a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe7abe0-477a-4347-8e5b-6a75e25aa5ef",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5755db38-8381-4f94-957a-1c3b34e9c951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8417bde3-fe01-4ed9-8913-371ae74efada"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e9dcac7-92ea-4a5e-90cc-4c2287f80656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c9a0ed0-0e76-437d-905a-917ca7d2d699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cbe907c-03f8-4038-bdac-40c6ae287a62",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce3f81c-3c74-4e10-8a54-f7b76d8f5f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cb2a4f4-313b-488e-905b-64d5f15b7ace"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e512a41e-1e9f-46f5-97a3-8f90f26fe841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "0f20d86c-8477-4d35-85bc-0fd288cc7677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8defa7db-4ef3-4947-b1e5-57ac021835a5",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "820fb50e-9fd2-48bf-9347-f9dbfd3ce36e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "702a7cdd-6e65-4e26-9a34-4064180b8225"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ff6447-b3ad-4b78-b827-a000e935696a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc5e5d4a-d79d-421e-a462-38dc1935a154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12872714-810b-4a6d-8e02-65ecf6387860",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b39965-5d51-42f3-9796-3ed11b69428a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abf4ce46-f144-4922-b23b-6d067375b575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34aa14ce-2bd8-4f77-b30b-b43b26254027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4199f238-bf28-49fa-a678-d9f59a9f8e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd606cdc-0103-43f2-8462-7d00eb8bd443",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7518cf4c-101a-4855-8951-58ac5257ef30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "560c7c2d-f503-4859-821e-65f1df3bacef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc18dd8-2e51-41ee-9f62-493c9b73327f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e270094-13cb-49a9-9a2c-d78b08d90a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b1056b8-07b9-481e-95ae-14cba5e6d542",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "377abc2a-334e-4a44-a3c3-c3f6d37c6c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2b3524a-2b9c-4b6b-947d-4b6e9fb921d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab18fb7-e903-4da2-9e11-6214dba78af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d43532eb-c405-484c-a35e-54322f893588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e80b82b-dd7d-40bd-b7a2-15c64aebdf03",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "095a7e77-0e2d-40d1-85cc-cde9c26b1cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6b590d8-9dc0-46e2-b6d2-14592f9ee21a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a24ae4-eb70-47d0-9725-66896b043457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "46d5f93b-5762-4940-85af-97a3d24327ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e6a6b27-719e-45ca-97f4-e33b8a63b6c4",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d805992-284c-43bd-8967-4de2e9b0a2bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35965763-4c57-425a-8ff4-9e3eb680ffe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "079cafb1-af8e-4666-8afd-0e877c1081ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b381e09-7bf5-421f-94eb-f87648f47577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f27c4d-282d-4883-a45b-d3ca3f472747",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ecd3086-cf59-40cf-a785-7c517e503e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93f29bf9-eeb2-414a-873d-036973eca100"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c953d62e-7c15-4c9e-8d64-543ba976d455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "07c4237b-3107-439c-b9e0-9737e93d70e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31dc8a87-89c6-48e4-a478-8c027c86f1ed",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab819955-31ea-4562-86d9-60caa31c91bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6951be08-8d9a-4cd5-b4e4-1b3d98a0fc02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a9e511-b243-4f5f-8ec4-864a31dc8d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bba5a173-1bac-42ca-9ff5-ae2e580c801d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "365f4f3f-013e-431e-85c1-4cd4ef2739f6",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e3a49d-480c-4ff4-a7be-06dd8396e61b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30bf92be-1dc5-4327-8762-15648a0c3f41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "036ff292-2b51-4e5b-943a-f0a937fd3a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5292cc8-d68d-457b-b6f3-6507f3cff047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f062aeda-0289-4f05-a4bf-81354d8d312c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b534e3-1374-4b69-8cc0-4e6f2c99f167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b0142ff-3aaa-46ae-8fd9-5b6cd231297c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dd5d223-6a28-4522-aea5-952993a74ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c8516ba-9c8a-4620-ad2c-0dff0fee475e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24cfdbf4-238f-4b45-b20f-2fd02e11c46e",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d9f82e-59ef-4c70-a39f-fcb138dc23f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09a39560-9bd0-488f-a55a-c543219649c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "984ab669-08f2-4513-996a-03e06a34a1d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "000ac623-6425-4d0d-bb4c-8ad8f303d334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f1e94b1-b18c-4e5c-addb-7ccb3a0467ff",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55b3c48d-8c6c-44df-8ad8-253901a63da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a59eb5c7-075c-494b-846f-02344a74ab8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d00cdce9-3596-4835-bdcd-f4c75366e9cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a329e5b0-8e28-4f76-b1be-c42176d8c35e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df709cf-4c56-48f0-b555-9fed8fa69fa5",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e63eff5-a7ea-480e-9f09-9dad96fe5f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ef30abe-4d03-4211-bf00-ab95a6954e93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b27ab15-9734-4bc1-866f-017dcf2806fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e13ad49-015a-4a29-86f0-786f218e495b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1755676b-08db-477d-bca6-d2bd627fe204",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f80bc3f-8a06-4854-bbad-01b77c6415a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a31c382c-5519-4a99-82ea-b649581d4094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f8322b-b14c-4c7b-a232-ae01c70dde64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0162156-aa0b-4f64-b16c-2c4cb3046138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60dbc0f5-29dd-460c-9f2a-fd7697f5259a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf5df121-497b-4d0e-85d1-2dcef56b8d87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b07f8a1c-de83-499f-a131-a41a78876f30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b902a70-0088-4b07-8373-54ffbe9034ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5fb6407-6173-41a1-887b-72a8e4f9f87e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6899b76a-9966-4d4b-8829-d4770bb5fab0",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fdb252e-2ee5-4ce6-b3b2-0cd00ab79d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e244aa8f-331e-4e71-9f1d-d8765bc6f4ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24adb7a-c1d8-4fc5-bb94-3208b35515cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "028a6b17-296a-4a27-8ad9-cdaf77940ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fee75e9-1274-4fae-a5fd-f20ef81c2f3d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b322dfc-c253-4dd4-a8c5-3515af5fd15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd5dbe44-2056-430e-80bf-3008c0511641"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "204bef09-e0e0-4aac-aee5-903fa24ad524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "46eba0d2-318e-4c9c-ab66-6d56cd8e8de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c9e56e1-240d-4f79-906a-41a092e25f3b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2a7dc9f-dc80-4a7b-92d8-a8b60333e6f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e4d605d-9aad-43b7-8429-290789ef7f61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4b1d705-8a47-4f2d-ac10-b57994e6b179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0734d507-996c-4fa2-8ca6-b845ada6abd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc127c1f-1ed3-4542-8ad5-c2bb8b622774",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc3706f-c28b-44d0-b65d-aebc662212fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "899859eb-aaae-479e-8ed0-7865e4bfb173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4e771e8-8c00-41e9-acb9-b226506331cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "062980fe-96ed-4e09-87d6-40897fbc94bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d76f6cd4-057d-4618-abe3-0306fcd5dd24",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3661b5bf-a7c7-4e29-ac8c-dbc3e3ca92ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64d41d42-aa3b-4a2d-b986-76e66ff73295"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a655ff3-cc82-414f-af93-7efb35d5db8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "00183ab7-ad85-44a7-b002-46a2334bfd7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daafd60a-5953-4a15-a7c8-85e3531ce063",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d67d1e3-11ee-4fac-b86e-c6dc69a44658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69866392-5325-4889-b886-f81e9fc9c634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "939f7a61-5dc1-4911-8ffc-8c8f549389ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8dd61f5c-7647-41bd-8526-51a6eae2266b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e26d3f76-1113-4de8-8719-ee351fcfaadd",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d16675a4-77ce-4049-8c96-38cd5e1d4a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b1c0e27-27eb-440f-8a6d-7a6eb1de5433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c713aad-1c08-4e01-aadc-05b3d0f36e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c38218ad-a337-4ac9-a3c3-a7ccde8a461d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c27134-a727-4bc7-ac6e-748bf1cb8ea3",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b51c5fa-c89e-4b72-adcf-4c8ff788b33b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96c50aa6-cdf6-432a-adce-e7e4220af074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c23ba7f-9dee-4367-9f26-e869beaa274b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c07c4aba-514b-41be-91b4-628cd95c1088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e87cb238-9087-4023-9360-58629295fe0e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "277ba49f-ac17-4d03-874c-063678aedfda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "168abac0-b749-4ba7-b1ea-0b22190e1826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73d871bb-0c16-45a6-9e59-27c35585603e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6d90c268-0516-4b69-a65f-f298a8a57465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5b9fb14-7c14-44d0-b46b-facb11252c59",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c22439-1f0d-4790-bd71-1ac05c8ba7a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "215250a5-5237-47fd-a17e-57d4fe8b50b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d177488d-75b2-4f28-a148-ed998acbcefa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab55af89-28b0-40fd-abb7-79823b025e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da1b271e-61e2-4c53-8802-a6097687e04b",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e05612-ad1a-4f55-be4d-494a477c68e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30dd52bf-a79d-4249-b243-996462e1f077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "469e4a52-d734-4c04-96a0-40a5b3f041a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "209c6f1e-ad99-4a7a-b781-77b5e68d9554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "320058f2-5f87-4ce5-aade-094c3759017e",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "152ed8cd-597a-4134-9e73-58598c5dab57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7533b02-75b6-429c-985a-860f4c34daac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd006f00-9925-48aa-9f5c-14e54d16b4f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5cea517-8f9b-4ef8-bd2c-d4c34fa6ae58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af6bfe57-e850-4725-83a7-dfc67b141976",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84075773-4287-4b5c-932a-98dc62e9e465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a38b3a6-9365-42ea-b9e1-f254ed59ad37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae5470e-c577-4c9d-aa6e-42ba0b2202a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e2f96eb-9007-4982-9573-43fe23f6cf0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef1f3e2-9759-4044-8ce8-28d9bf3db0c9",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c210fe-a2f3-4824-8a51-2ee9c938c706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae8c6062-b7bb-4ccf-bd36-d6c30efad42e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c36b7fc-3ae8-498a-abfd-0027f1ae265a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "68571213-8e04-4e9f-a24b-105585d725ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6f24baa-c356-4b12-875e-c073ff3db2a1",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed4192d7-0b39-48d8-81d1-6b266c82207b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc8ecc60-0362-4f63-96bd-0d963a201e82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7fced75-acec-4da7-8ac5-306405a1d077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5d8959c-e348-466d-83ec-1a2c9ccc5eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9cd55af-14b1-47e0-98ac-a92e97a7d847",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3401a5a8-28c4-410d-909f-c8c5acff4a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43ded81e-c6eb-487d-8d03-8c287f62acb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8841d68-4944-47fe-bdad-f6e7c92b2062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "10bac81d-d463-4ebc-83d3-4c399da1f8e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2076a95d-16f1-41a1-beb2-df801abaeb8d",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a48061e2-a819-479b-bf52-11f475f0babe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "693cd7ae-bac6-497e-9ed3-8da76037e31f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d77aa047-e1c4-4c4d-b240-1502fb0feac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f6089fe-c982-4940-8a22-5cd9eb725a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb4cda77-16a3-4f5c-8ae3-bcbdf76eccaa",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0af19c47-d0ea-4e04-8f88-cb101b17bac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "691f921e-b7de-4e04-a54a-ab6263b0c980"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "636e2699-dfaf-4eb4-bf27-550f4f47ff98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e1ac5ed-1503-4aff-a09c-c40f517e2628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ed3643-0686-46b6-bf4b-e7bd26b20101",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3700be-071b-4e3f-93c6-a7175e3d6498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6449f18-efb6-431a-96de-47b7cc240a4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edbfd466-e6a2-423e-ac8e-2e47bec518af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a6eea0f-d1ed-48d9-bd33-0b6f0a6bcd67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6b90089-e2f7-410a-af4e-8bb30dd0497b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a70ca122-a9ef-4924-befd-b4ba68fb3405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dec4215b-e860-4d83-bddf-384d6d1775fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc0487ee-95b7-4b79-81c1-b8a3aead0318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae2be064-3ba0-4ae8-816d-647a227ad91a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83ba9f5e-6a92-4996-a1a1-0951a6e031f7",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f88fbff4-4c58-4a78-b794-3e2d965cf1f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d328a40d-7c4a-4714-b9ac-ccb972c73793"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2612ecd9-9fe6-41fd-b181-2141e13552df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5989b201-3f8c-4e09-af36-d60285c61fde"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "da9a4013-9183-491f-bafb-899a873f0b1b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a2f67080-74e9-4982-9c76-fbd02c6b3f44",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "253262cd-b479-49e6-9227-4115712b986c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7a04b4f0-3e45-4232-816c-d5f231f52bd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ddb0da8-60cc-4f43-b713-cf277e23c900",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "b98a8dd7-98b2-44f7-8433-2740193bd269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb9c7673-6f2b-40ef-a527-352507a7c691",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc5299c-3048-493d-b1ba-804513d90669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "15539da5-d58c-40db-9f6a-3940b181b3b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd1c3e88-7d71-44c6-9793-5936f2a93969",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "8a041a93-28f3-459b-bbfd-8bcb97a6681c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41362195-b328-4288-9882-02e8723cbf4e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2733701b-6fe4-40ce-b996-7f53651295dd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6882a8ec-740b-477e-9e83-787e05662e16",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b4e7870c-56d8-42a3-b348-94ca595b3b47"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "74af05d3-7574-4267-838f-4be5145ddc1d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4ae9e448-3cf2-473a-b091-bc649ab6c145"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "96f187a9-04bc-4163-a466-ee8a98d87b64",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a1acaafd-43c4-43ef-9089-22340d863076"
                }
              }
            ]
          },
          {
            "id": "09b4d1b9-67e3-43c5-98a7-6f7085e54c25",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a7b1e5a0-17a4-4db8-9cf6-d6e7a97c7714",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2b0c5da-b4df-406f-b542-88f5266bb10e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json();",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json();",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json();",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ae4062b8-4437-4430-ac35-466089fee81d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "931d78e7-f4c0-450f-a913-392f2c7e10e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a0c00d6c-6b72-4a71-ab47-ba44df62fa02"
                    }
                  }
                ]
              },
              {
                "id": "4825ea78-6451-4ecd-930f-2584f08ac189",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dcddad33-0745-44eb-8ef2-8b150dcba14c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6263b67e-a3fc-4d6d-93ed-594948a235eb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3aa1dd3b-c5e8-4498-9f3b-0f1fdca8fd33",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1abedb55-37a6-4aea-ac0d-8bafc0866c53"
                    }
                  }
                ]
              },
              {
                "id": "43f27ec0-3ae4-4c46-8ce5-5e97dd68abe8",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c76134fc-990a-4731-bdbf-00df7c036b65",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json();",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e138faea-4707-4dc3-a015-5709d3dbb6c8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "227df9f5-8256-4545-95fa-994b6e1f7621",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9fd0cbf7-35a1-4dca-816c-f906ba3737f6"
                    }
                  }
                ]
              },
              {
                "id": "9f66e153-6941-46a6-a05f-3191bce02084",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "95dc7496-a2a2-4eb6-b176-4884736d67bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8d269f25-ac07-477d-9d60-1762ffbabbba"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2799cdfb-0b45-44a0-81a0-df1aa0687e19",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "0db0c786-e1de-4652-8414-aefe1f47ee09"
                    }
                  }
                ]
              },
              {
                "id": "3a1d49f7-d996-4f78-9a6e-fd987203cc25",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b02abb2-e221-4184-a36f-42c0e6a44cae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8c18394f-e8fd-442a-9b32-e66bfffdce81"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec85f75c-ecd0-42d2-9f98-fd3bb6a2d1a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "6fe663fb-de9f-4957-a082-891ce85c9cf3"
                    }
                  }
                ]
              },
              {
                "id": "444185b1-6253-4cf8-a6c9-705c4256c02f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8545b24a-fce6-4644-bac7-1abe790758e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3781b0a6-d6d4-418d-952e-81b8dbe8f412"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1378e8cd-9854-4cb4-8121-4365cef7f7cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c4775433-53b9-4131-8fc9-118a323bafba"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cd280f25-210c-45e4-bd87-688d086b3d31",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "62d7a273-442b-4576-9608-f7a6a1ef6ec1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f2bab106-b0ce-45fa-b862-a7b1da7e5fe8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3194a150-bb24-4bea-8439-415913f5d843"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c1db605b-5f45-4c16-a7f4-f7603dbb4c27",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "32003bb3-9912-4dad-bcd1-8496925dfe7f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7def9fa0-322b-465e-8d15-0e279d5f31c3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6db8c323-0346-4121-8d03-31c7eed20876"
            }
          }
        ]
      },
      {
        "id": "039c67d2-7869-4385-9a25-7a39147cd6db",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "60c81be9-24e7-4998-9210-0454cd170456",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ca4dd3b2-86bb-4efa-ba33-5cc84402a187",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "658a6f91-b2f0-4c1d-b2b8-dfcbbd9057a7",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "716ab229-6b45-4caf-8116-28e12d90ce8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4112119-b7ac-4b89-ac5b-4689d23ea1a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4669d460-523b-409e-b4a5-1b464828b2de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a44d544f-c7da-4396-94b0-6162c0b111ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04197258-62cb-4faa-9839-1ec22de9f6a7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aab5453b-1614-45e3-9632-cf230f384104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "244be800-ebac-404e-a408-0c53a28dd42b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b04bf6-04e2-46c0-8796-b1ee908a93f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "87919cb6-53cd-4aaa-919b-fcfff6071b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c97dc56-f49b-422c-bfbd-f8433b8d5750",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea76174-bf69-47d9-9906-ae0c060ddd7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c116d2a-1372-4477-904b-c3f979ced331"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b26b6df-c7ab-471b-82d7-a8e3903766e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "941438ef-d8f5-4aa3-86f1-782f73a548fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8649a589-c036-4b2e-a57d-c24c95d4e745",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ed83e3-8210-4fdf-89a4-5fd59cb851cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e50ecc55-ba59-4dca-8579-fd392e9a358a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0738f54-3456-4f97-bfda-0947239bffa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "12c4e1b0-b1ba-4e81-bfce-23fb39bbe095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76aed488-6996-4db1-bc61-2619967ecaf3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "913f63a9-2c90-4619-9da3-1ca5097685dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b7cc86b-a37e-4867-8c6a-4cda65ef0de0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8640fe5-66c0-4980-8162-a59f29d4f7dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "44371b02-f8d6-4f0d-946a-4511b938f126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8969755-fc9e-4f33-9b30-649cc8e7cf3c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b6ae1a-0e88-4153-89a4-de467f084eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab6863d3-a4f1-465f-b0d0-2ef0c06492ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f93e4522-99cd-475c-8213-e2c56780e5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "059a7d63-5b6a-49b8-ab29-84270d796f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc72be3d-6bf5-47fc-a5bc-79984d6a9b64",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd335501-c36d-45f8-a3fb-9e733b96bc03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a15697e-2aa5-484b-9af7-b16b9a8f80ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49cd6899-037c-4d11-8ec8-19be97c4fd03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d699e7a5-411f-4578-8ada-0389091606a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de46962e-5d70-45d0-aebd-8ffb9c983a84",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a8bcfd2-c3a4-48e9-99a2-ca47e4f74aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c432be1-4189-446c-a102-2021c6889796"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c20cc9-1fe9-4923-9ce9-7e172765788b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "efb4be5c-adf9-495f-9fff-01c4f1799129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74594c50-8e75-43f7-bb33-ba516d754c87",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "722fb964-8825-4dd4-be1f-79d0f6c1ede3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29c08bf7-a30b-4721-804c-61b79119817c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c25feb2-d3f6-47aa-be22-dd13b9c7a6ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c87aa48-7435-481a-83fa-648b40073163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c01dbf-b916-4922-afe2-4932a5db5e96",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d9610b-d920-4b68-bf5e-9d5abeef61ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "272b11dc-2c06-41c4-8d3b-08f1e1d18e8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14d89a40-43fe-4ef5-a6c8-0b6c11ca4810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a200d091-5ed8-49f3-9bfd-4b2d64b5508b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fea7bf9-57ee-4b2f-8974-15c676022bc8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15435f81-8cde-472b-8e66-cfbf7f3f5539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fe61be9-3ded-4c30-a21c-5ed42541f749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f45a12fc-b5b6-4571-ab55-d12739351869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1e8ff4dd-b746-44ab-8605-f92f410a6962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ef4948e-155c-43d6-9bc2-721581c2bb6a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dcc638f-9f4c-4e53-9ec7-de10538db232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d38ab6c1-f53f-4137-992d-2dcf13b21328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3268bef0-6aaa-45c0-baa4-d0f849073d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0dbf9e4a-bad7-4607-8ab1-4f4d84a284e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08d841e3-ee80-4e81-a582-bac360a8b741",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec78c855-3460-4e1a-9b3a-ceba4d82b650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f625fc05-c590-4417-80fd-1eac3e8413f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb89c56d-b4d4-4f69-8f3f-eb06a4752a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "20894335-7f21-4bfe-a68b-f510a78e8431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3b6c57-c3c3-4bf6-82df-ff920b15b897",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c35cb115-885f-46b5-8470-dc1443f97bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a2024a8-fae6-4e55-aee3-660c420aae46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "250097f9-0043-4942-854f-8fd550210550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8948973d-ce1d-44ad-beca-0557d7013283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6382f76-81b5-4bbc-b88a-e391b4cd1eca",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e751a76-d832-483c-bffa-9e752af0b4d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5318a60a-8aea-48f0-bd80-4bf48618c8bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64cd3138-2b76-4379-99cf-78806e11cf56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffd04720-eaec-4362-8508-b04d389b54a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd21277d-eb37-418f-9859-ac7dcbad576a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "658e017f-1807-4add-9ef3-b2eca220c33f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98a7d637-75d2-4be7-a122-c9dd328e4ac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c259b411-63f7-4469-baa1-63e8f5cf63c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9443dd6f-0e74-4d9f-9d03-c892c14bc001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaac018c-5156-44a2-a3d9-d9db17309de8",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5423c18-f6ae-4720-b975-066da06246f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7d001cc-f46a-4cce-93f5-d1f15d17797c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44849ad9-e99a-4786-a80a-51423d5050f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5cbbd1c-e3b9-456a-8e4d-e57e5e16b365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26ebf4a3-cfc1-499c-9288-1a109afa0f1a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "157c06a3-ea51-4fea-afa1-cc0c88496c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b048e74-3f76-44b1-aea0-6493e94c6f85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8366589-d6ee-4976-abed-f6830d7d42e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c913234a-ce69-491f-a671-2e91040e1903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6cfbb47-0b1e-4d59-8639-95f6030d2cb8",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff1e01b5-bc00-4e37-9937-b161ab6990f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "034dd270-79df-4475-9a44-a9f88450237a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d4337c9-7f81-4d73-acd5-28f8d29175a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c98a04f1-4f6a-4f48-bfd7-52d4ddf98ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ddc9fc4-a73e-4b38-ab11-22ca63b1d1a9",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd43988-034e-42c0-b0df-9c8d6d7796ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c51cab12-5634-42f3-8385-b34d0fc77fbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c35924-a351-40bf-9929-082ae2d4a85f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fedf5c9-91d0-4ce9-ab8f-4d708211c232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "961da124-9c70-4e22-9a5c-948db1020cfc",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f70a28-bf14-4b91-bb8f-487eb6bdf4a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5de60d72-839b-4d5f-bd54-0468c47cacdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f86aa7-d6d2-4d08-8321-d082f981582f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b189f23-9a01-4225-b123-a7a1b0866169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ed1dc2-e9ef-47ca-8b3a-cc788785eaa1",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aec6220f-816e-4bc3-a644-a303f598e9f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "964a68d1-69e1-4243-8a17-265ef38a26b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49bfc8bd-d476-42c4-bc88-e312904eac54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ea9fa81-8c03-4855-9d3f-20c3d44e05e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712bc0b9-8bd6-4df4-b776-91f8f2042e42",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc2f893-cd01-4079-9001-603976cd5d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e95ac99-bdf9-48b5-8543-be6f1e516640"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dfe369d-4006-440e-83db-0be9e001c35b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9d6ce84-bebc-44ab-ac8d-06c68135ad6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e821485-83c0-44d4-b6e6-b87efba430b2",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d006acd-dfb2-4cac-ad54-288d2932345a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8d9ff04-44ff-4324-bedf-3ffd10bd521c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5e0616f-bfc7-47c6-ad20-e43c2e0adcc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4c55e81-5f5a-4f82-b659-697ab19baab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8546fdcc-0c35-47ba-8184-6d5c52479d79",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f27c02e-4e95-4dc4-879a-008ec08cc193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16d6dd06-5aad-44c2-a768-f672055df7fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1506927-d4cb-4adc-94b7-40216c06a32a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c243d7bb-f0e1-402e-bd37-4b5a556d30fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d2616e-7601-4615-b274-be76a22673e2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2533c502-e917-4396-8a58-dcd668bfd318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6f268a9-d03f-4c84-b70d-f160d1e0f2b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b6cf766-ff9c-4113-8c46-38ced4a0d374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a55e141c-7fc9-43f5-a746-ced4c7908c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca8aacef-dcab-41d3-a38a-ff22cc8d1728",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c8f0af8-4a36-409f-889e-85cf02856fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e74ddd9-2c38-4887-a67e-edf019c65a13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0380fe1e-cf60-4e3a-93a0-3ad662df2a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46077f7a-bb8a-4a15-944e-825c3d2d7592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cc3002f-76a3-461d-b126-604d298761a0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc50a1a-654e-4d1f-bac4-c07a218d10b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c594a68-b325-46da-9b40-201ccf2cea49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e3914f6-2ce1-49e6-a6ba-beaf058b21b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d45e8b1c-4bec-418c-9a8d-e7f64129835b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf45cfee-0db4-446c-a3f2-cab21717f757",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aae6914-b12b-4780-8a30-c6c9c6b1b834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "453b8d2e-9853-44ec-979e-ef4cef651ea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0145fef1-ab73-4572-ba8c-4dec080f0c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ce25e24-ba45-479d-90ba-ba905ef3f3ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1050c2a5-e3f5-4143-bd9e-6cf7ccda75e9",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ed1cda-8bd7-4136-9d3c-ac6e0b7bd6d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8a18f6f-8ba3-4cf0-988f-0c2677f80dc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4439d86-d821-43a6-a3e3-6ae47e9b2d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f683de84-eb12-406f-ad3f-890a1c30fefb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b9691d9-22dd-430d-8f3f-51680285af90",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee2f93cc-833c-46a7-a974-0198615e2465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b02dd17-11bb-43c7-b0ff-12893bbff729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b7100f-11f8-475f-9400-b8b6db760343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94f85a1a-f838-414b-9798-6dede792fec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd9ed6a6-f4fa-4906-a14d-5b3132e2e9a9",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cc38441-e6b5-4cde-bdbc-60638bfd182d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7308d5b-e8c9-4d1a-8664-919489645266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ef6e4a-5b3b-46dc-9dac-bef500e10add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbe20629-5d85-4e01-908a-51fd00b58d88"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b2757610-54ac-4b0b-a4c9-2f62421465f1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "934ef6e7-d446-4cfd-b76f-0dffa27e06c4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "954ad4f9-218b-4f4e-9453-cac8f90d4496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3cb3994-8a4b-4194-8a3d-9ffb7b462543"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf790d5-7f70-4632-8cf1-fb2c3bc678b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5c5ab499-1fc8-4451-884a-a7a9410cfa8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac4da8ae-da86-48e3-9c52-7ae3b2a77c00",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a6a5fd7-372b-4566-9649-b3271fb473cb",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "7ee42afc-0362-4608-afbb-a8eccb74d99a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "070b3942-f1f9-4370-b436-38f1f0674c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d2b045e5-e5cd-4b1d-8ec5-3181bc7c3880"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c8f4cc5-09c4-468c-bda9-364e1e2eaee3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a1edbff0-edd2-40ca-b675-0e95f2e0c080"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8daee8fa-7060-48f9-b3d6-6eb813313c5e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "261074df-e348-499d-940a-bda700ff94da"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "458877a4-8204-475b-87c5-cb0e94d62944",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "60e1f5c5-059c-4869-a764-29caa84d2ce5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "04d9225b-1824-4513-9033-627feafe194e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bc2197e6-e371-4cbf-9df3-e78a98cdff6d"
            }
          }
        ]
      },
      {
        "id": "74fb8611-8b30-41df-837d-54c753aa14e1",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "bf49662a-0bcf-40d4-8f6f-3d3dd40dc41f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cdc658f5-c635-4a34-8bfa-735689c51a6a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bb4eb2c3-6a7a-4ede-ab38-9e24f5ffdbbf",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73154462-7873-4d2c-8b0b-0dfc4d64f855",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "606c923f-bb1c-43c9-8aa2-e56bed1747ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea7ffabc-f59e-4b16-9f2d-5c6688bddbab",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4471c00c-cace-4bcf-abdc-c66eb0758e9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc107593-3999-4f1f-92f8-d1481038bade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ffe8494-28e3-4129-9558-6e59f8f194b7",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd21b204-65bb-4845-89da-b33ddbce4a11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c22106e9-44f4-444a-a22d-9e872ccd6040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d52e50e7-3069-49a0-99b4-cd5f983d863b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c647a370-e0af-42bf-a211-e872bb9af874",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdabfb6b-d2d4-493c-b8c8-dc8c708d7ba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd467626-0698-4815-b06f-5ece985b2efb",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc0b026-b5d4-4301-b35c-b37bbd7ac07c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e2affe8-4cf3-4960-88ab-f7083d2eeefc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f48be7-8127-4e76-a6b9-2b11fa5de1d8",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9629cdd4-8b64-44cd-9a0a-981331b4f230",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78c933af-fd4c-4871-a574-f34f7ff3ae45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95048e59-4cc1-4240-b039-797ed9e015d2",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b97470e5-f438-492a-aa28-54c5b1c856f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99fbd276-c17c-4395-a178-0eedde44626a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "621a6c56-eaf9-408b-ab8e-a9a2ec60a621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82d572e8-356a-404f-b6fd-72c60beae20f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a8455a-ecae-464a-82c6-aa282cfc1261",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "833d3a20-f05b-45fd-8c88-ad79408256da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db4cd43d-6d74-4f5a-b50f-cf5d385f7904"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2204b62b-7b8d-47f4-b2b3-aee26a183a1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "662e26d0-ee9a-4da8-a70d-2cf79080c24c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "487e9bfb-ffe9-4ffb-9b57-100049dc6d7d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c00ec57d-3b95-4af0-8978-cd689bb90786",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29285777-3b92-4993-a073-1a06268d7b26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "055798de-1283-4222-a611-287e9c36671e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b1d0316-9511-4c33-ba31-ad958714f24c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e88d5a04-b2fc-4139-ac53-e997545c1d67",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c87907cf-d8e6-467b-b631-a5a90495bb7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab1d467a-c4cf-4789-8f77-d3e7926dbba9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a6addcf-2690-4fa6-b327-f768c162f54c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ee1c070-b26a-4596-a8d7-6572f844316b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb3b841-1326-4ba5-a321-431f3695c19e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3cc513f-b8a4-4bc2-bbf5-36f8b76582d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f364da0-a7ab-4047-897c-1a2d498e3a1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c542d8d4-563c-4ebe-a00c-dad37a8150ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "170fb030-a196-4387-b957-b6ed9295342a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43769b0a-c903-477c-b391-02f2c86c5aa3",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4964c0b3-f846-4190-995b-757fd13d95f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c29b3fb-6280-449c-984e-a4f46e9ab135"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0218099-080f-45ab-9780-dccd208e72a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab956fc7-6f43-481f-b4c1-f80f7ea3f17c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "663e1f9f-65b0-4c98-8866-591899615c0f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55efaf32-f09e-4a17-907d-c9875da3011f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb9dc00f-9194-49c3-82a9-14ee14f8cbde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d4f00a-64e6-404c-8e19-06d8bbd297e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f813b8f6-a343-4a87-8bb8-da2e3eadb60e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a76a64-7949-4fe5-86d7-ae19e0e66c00",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e35c6d6-9d69-4954-aee1-717f0196df37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2319b818-1017-48ed-a056-e03683afbf10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f528fd6-eb53-4bbd-a535-9a9afbb435bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "746d8978-a1ff-4dbb-8f2d-683288596984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fdf12f6-3b37-4bbc-8f42-f297d7051388",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beb6383d-eee5-40f4-851d-9f847dd62ba5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20f09b5a-91eb-433b-970b-3a0d9b8369e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c2ae791-ee69-48ee-a582-7c92ce874f67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1b05c24-672b-493f-b24e-11f40aef7816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "158520ad-4323-4a3d-8d3e-779fb4b0fce4",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80edb2fc-2370-4455-a4fa-152142177c4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79f77df0-14e8-4222-a7ba-351be79690e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38aabd4d-fc53-47a7-addd-7473760c60b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a51c9c0-68f7-4603-9ab1-732841939c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c6fa56-9310-49ef-8bff-5761e0adf6e7",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5465a0b8-f3c2-4766-91de-e24abe9fb205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5929ebe7-c45b-4b53-8f2f-dab2990905e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "913017ab-828e-4cf7-a3a2-7ca04fad5533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4b12cfc-6991-4fbf-9850-1cf6b3515194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ef13c1c-a134-4e3a-9207-d6ca5ed3388f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c96a62d7-15f4-406c-a56e-cef02a599042",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66e33ee7-516b-4b33-9c11-b52c2eb9b7c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d41331ef-bd6a-43eb-842c-936159301709",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27c0b339-58fc-4f73-a437-acdf619a36b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aded0a8-ec86-4dc2-a53b-2cd0904d9f16",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac850efe-60e4-43e0-92fa-769002b95c88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae7750ff-1383-4f81-adaf-2f3809a04b77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cebacafd-de33-4ac7-9b2f-cf8e74f7a8bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dbec9e4-cd09-4e67-809f-85d1d6c94627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b0fc373-55ec-4422-acd9-bb909c197ca2",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e29b206-971b-424e-837f-9e7730eb6ef6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9949133-01ab-4e89-89dd-1ad45620ff89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7015c6d-7604-456a-aac5-e1c2953228b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "328d9322-8b9a-4625-bcb0-70789080ef37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "044b2fa8-5b11-4f5d-95ac-49b8d279e2cc",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ab7d74-32c8-4eed-b344-def70685b071",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfbb1ba6-0341-4194-814c-2765425054cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad7f85d5-9078-4f4f-9717-12537d8a1516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3b54d06-f67d-44c2-9f95-24897b94aadf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77006332-5524-45a2-bde7-a4ca64c3813e",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af096c58-e04b-4768-a748-7a37112b7cd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90e09d83-4d17-4d4e-bff7-60e46b3a4dd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95906bed-89e7-45c9-81dc-e53bb6bdc9ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d291d17-7418-4864-9bdc-970ce9b59975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b86cce91-0bff-4a1c-9454-38ddb1a39d1b",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "602603fc-37e7-4b8f-a275-75c5e11283c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c85530f-1a39-4cdd-bf75-356fa919e4fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7867403-3b33-4a58-b8d6-0ef29782a2f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feb4c272-7af4-45dc-9804-e881a9012eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75839ec8-e181-42bf-871d-4274e7f56bb3",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b50a72-79a5-47df-8365-5d55dd20f25e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4dea482-ca83-4561-b253-af6fb6bfc04c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00846dbf-205b-4867-93ca-5345e84cd3e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e26df14d-4140-47d1-ace1-00082485229c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "859f1b9f-f14b-4d0f-b5ff-61e28b8847de",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4416a021-d0e4-4df7-b053-85dd16d55ad0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f233412-d472-4cb3-977d-430d1afe1096"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9542676-5e9f-44b8-8d5f-47e9c3d0e01d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12087da1-43bb-4ad6-8e6d-931daf8547b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acb676bd-fe74-4b18-9be5-d68a48cfaf01",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de944af-e4a5-4ecc-ae21-a7d757c5bd29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3541ea07-b273-479b-adab-38f9e7ed1170"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d20e2928-4580-478f-a902-2066851ccbb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64f71457-656d-41f2-be44-639215342bea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c32ae33c-27a8-4018-9629-2749fc0ed935",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3eed1e1-486e-415e-a6ab-8b7b87a36573",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39e60f1f-86a6-46f6-8e24-b3ecc4cfc12f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23aaa123-aa43-416f-9192-42c26f225836",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eadda231-c940-40e2-a07b-7c5a87b2df97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "841d7cd2-dcde-4382-9a76-ad30906c7d55",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf912067-4bed-44ba-9e70-7019f2dc72b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d4e4e9f-b059-48e5-bceb-14cfc8f0576a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97bdf477-21f2-4c2c-8b5e-e52193e8e09a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8154a75b-89bd-48b2-af07-2407507677ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b31391-6eb8-47a6-bce1-2f431910dd8c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e89c8f0-000e-43f9-92aa-9bde1e2905bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86a60813-4822-407c-a5f3-31a7d059ebd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14101ddc-f79b-4478-8564-edd82bbdb457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78c1d425-f535-43ad-8054-d761ca075e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebba19c2-a30c-4cd0-9835-dd6896804c9b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "025b59c8-3404-414d-a747-b76873a8cfff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0272a845-161c-471d-b6ac-2ad4ae7a911f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13ac09af-a7ff-46d1-bdd5-0de8a5f5b5d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90a2f705-d104-4314-9f90-c33466cacf36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd6b174a-a97e-4863-9cd7-a5fa540e79ec",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a68ef39-9604-4493-ae55-76d745fc3a28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e55c036a-8b06-4fbf-820a-ece35318e489"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c9a5ddf-b74c-4b0d-ac9c-40c047abc8dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77dcf909-a243-45e7-aa79-52bec42537f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca99b62-c4f8-4bbb-bf92-7dbdf2edc02d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "224d0ff1-adee-4e10-9688-11d1b8a48350",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "853d4d5e-e4d0-489f-b611-136699319ca1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b12139-fc90-4749-8471-48b09375c56d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cbc4823-9bc5-4d7e-aa32-f377fac3df98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2534b43-9a95-4e95-a9e0-e23f501aceec",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9166073f-2fe6-494e-992b-ffd76a5251e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44a59a94-664c-4feb-ac3e-63b0bf0953ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc66308-ce65-4f38-983d-6ab8d57479d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b8d5c0b-f098-4b0a-8b04-488e102cc819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "384921d8-2569-46da-a0a1-830bdd163919",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b09c4ff-171e-4e00-85a0-8628cad44e54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "415fd7c2-aa29-4af4-bc42-254b5bebca3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "876c4885-d54c-4709-a741-e7a95df69924",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65ce8d12-3b06-4526-adb4-b2db2d212312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef0c5d8-be99-418a-9c8b-47be046804c2",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67d29266-249f-457b-9248-67cf2e13f90f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "127ed0ba-800a-4ddc-aa62-8c39a4f174d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "351acf6d-524d-4e00-8ebb-8be90505f56a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77380dcd-f066-4256-9fa6-aaa12be49acb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c97fff91-49ac-4ff2-9c2c-ebcafbbca73c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45988ec0-89e0-49f7-a6ea-38b7f5b65c38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38b75cd6-ee03-47d1-b7a2-052a9d10bd47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcba88e8-7004-45d9-9f8f-b4d2104c4a9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e52673e4-df4b-46f9-b0af-61d27119dfcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b9a0d4-6486-419a-b208-e9caff8dfb9b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac21d72-061d-45bd-92b5-fdac9f7f7fbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f405019-32bc-4680-a6a4-884bf8e2f2a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd56834-9ba1-4c74-b1a6-6a5d30362c17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d14a27f-4cd8-4519-a5d9-c7c0ca7d55a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ebab2f3-870e-4ae9-8904-c68b13a622fc",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f14be22-3af6-4057-a233-f622d95bc6ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fa32db4-b5a8-45f5-ae40-b35d082e0d6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c30b91d-e27b-4bff-b7a4-2101441c66ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d7c0a1a-ff94-4ed1-a2b4-190d501ed350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "875a16ef-8710-4c01-934d-5cde712d5faf",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "793a299b-9dde-4073-a475-c7be95fd7a4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20a9251e-0b42-4f81-9689-5df2d7d4c4a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77bc345a-6049-4860-94bf-f9d5c559a251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "131acf7c-a9c6-41fe-a5d7-0585d6aed15a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15098e77-6a3d-4ac8-ae17-8b63bb6fb9c6",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82608adb-eb41-4c90-b21c-40084de5fc70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fa1c414-6c73-4f28-9cbf-85413fc3f505"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18dbe354-7d48-4375-bd28-0735b512c6f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6babf4ba-6422-4bba-8509-1b67e1dcfe91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a129ed7c-88e6-4577-a18a-1edfe02a80e2",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "839cf068-9dba-4b96-8fdd-58fe6a08f101",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b8c58a8-7128-4b48-8872-3decf9349485"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b9a7e76-baef-45a9-b1ed-287ca824a273",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbff1244-fb6b-423c-a6b8-1bb12dc9d905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c74012ca-b123-4f0b-a47b-d76da80fd45d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "921995e8-b180-466f-ae01-3ecb689e3163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae4eb475-4049-48c8-9e6b-6d3aa927bb21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a3dd51-e701-47c0-b91c-63cbb6eb03ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb769454-99c8-404b-aa44-1acd86cb00d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f14ba8c-5e19-43ac-89b2-d35b84dbd4d5",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e095376a-e372-4160-a496-ea094350cb14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d3ebfdd-3c07-4def-b8c8-2a1adddde36a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8581a896-f7ec-4fc4-a4eb-fb28db3a43ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9240bf2-8f2b-433d-a0b8-49605ddbd427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76113665-54ec-4187-af19-f8b622dd1192",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa77dd59-ca9b-4594-ad34-39cd24c8eef0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53782d7e-4820-4e9d-b5af-93feab841f08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a320c19b-52c5-4be1-a630-2fa091aa2696",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fd3a7f7-9656-4c94-8b54-aa5c70e96b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99cd8d40-7163-46de-8f4b-97a94646ff38",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c103a2c-f112-4fea-8746-896843a348a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec659824-7405-4bed-8a7d-ef0c71267a8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b3e7f88-5d9e-42e9-a768-b2a3747eb0a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95923ffc-49ee-45fb-a393-32bc6abfde2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22015ca6-6e81-40c5-a737-7a56b89da066",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5223f167-fd86-4b68-bcd2-608b82d9cf3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa2aa67b-98d0-49e9-84a6-4819f9c576db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0319977b-c9e5-43e2-ae54-24f90c309cfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d4c4361-689c-4f77-b925-bfc915c9cf26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57957be3-7f9c-4769-a4bd-0048d177906b",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623f7cf5-514a-4459-bb5b-19077494ce96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f72b539-f48d-4aac-8eb0-3be80270d4a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd32359-cf37-4c7a-aab3-887fc7b76486",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b9cdfb7-d963-4c8e-9fb5-ebe4dfa11086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8139b24-439d-4e55-af11-ca722a8315ec",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a3b09d-ebcd-4549-a0bc-b8cb6e503295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "091a1ac5-b41a-4dff-92fb-ff0549229e0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e1acc83-4a49-4bb2-8f74-ebf3458e1be0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f53d4716-7b3d-4abf-aa28-89cd0da152c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c41bdee0-a593-4668-94f6-c622ec8f4994",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "592941ea-2d25-4de2-bb22-49a3f4f540de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "147a4369-9c51-4449-94df-ff9f55f2924e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6a66292-ba00-40d6-ba27-538f0cb2f3f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8619aaf9-faf1-4d69-bf49-cf58aeac10ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82aeebad-4d00-4dda-86fc-5629287024ae",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f3b02d-8428-4c1a-b86e-955e8ee33466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af7ed718-f6e2-4731-8ed0-025e3b886e75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09335f88-68e0-4846-95aa-4576ebb943c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93b796f4-42b1-4ad9-94fb-4215aaf05311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3214d66e-3825-4014-90c6-e54a2b76a0df",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e778af-5bef-4987-b225-02bbb994f778",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb77423d-985a-4848-8200-7eafe01dab5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed3ff26e-416e-4241-8c6a-61ca5d5dc5a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70f1f7e2-19df-464c-823f-256dadd02b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f566c9-ceee-49fa-a6be-2e097818fa27",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76afbbc9-1be9-46ba-82d1-04803d7ce4d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b1ee0d3-890b-4e79-b2fb-902fc33d4da8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2956fd9-0136-4abb-9789-5a4a44cd2eab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d82afaa-4fc9-438d-b4b5-f9f3af77304c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab27196-bbff-4308-bf0b-3c4d48b533ce",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "516cb84f-9e49-43a0-ad77-2204ea3c99cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f50a4e39-a431-4201-971a-9412d10af1ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8909578-b6ce-4f2c-9b5f-0bb3e16790f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bd4039d-af5e-4962-82a1-d7fadeb89754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd77978-282c-4e8e-a780-72b5f0f860c4",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd2364d9-e115-43b0-aa69-38cd41f1eaf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b597141-c810-4943-8157-ece70fc48be0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "182c28ad-9dec-48f8-a411-840993ba80a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4538b58a-1c9d-4285-a3d3-aaa12674899d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26afdbcb-ab31-4018-8c3d-04ab85dd7165",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b3130e-48df-4cef-99fc-3e442ed44293",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fab3675c-5d88-4edf-b2a9-480936d76138"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6aaaf95-4127-417b-b7c4-30c50e1f4750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b7371f5-b348-47f4-a6c2-dfa3b19a0f02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09efc629-194a-45d2-9758-c00b5384dc9f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7edbab9-1077-4520-a4c0-a3da0f686864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b68a96f-490e-4f16-9d89-41c31ba2ef95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "540940d5-da8f-48e8-ba44-0e0770b5930b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3130ec9-a740-4292-ad45-3f28f1df34fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e4f472c-ea53-4f84-bee8-ed3dfe704dc3",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b1e07d-1749-428f-960d-e21f57150bf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f31a100-56fc-454f-967b-ebd70efa28ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7691be74-38f7-47b5-9b36-3d5f57656ae0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f41eda18-9296-49a7-bfbd-4b35f4b324d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c58e0b0-ea80-45c6-9963-25afab52780f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87af0978-2699-476a-b3c7-ef1565abe825",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a8a19a4-cdb5-4adc-8445-6087ca526a26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b7c3f18-358a-4657-be9a-cbc5a370e1b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0a2f7be-692e-4e21-82b6-537517445cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d844d53-3fca-4ae8-b819-9676ab50e741",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02fcb576-5125-4e40-9765-84eabb21a072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2ccfb37-2874-4a59-9c96-a4b734a5db5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a765210-a48f-4b85-be60-26ea938f303b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec7b08fd-a9ae-49f1-b78f-ea47c26f5c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44772138-2ecf-44c6-9350-1ebcb4dd673b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44237baf-6c63-43f9-9547-11e388b9f9c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12bb2b3b-7c29-4512-9cc5-6b7b7d0df250"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a9e173-3f84-4d09-9593-76bdf1d2384b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "765e3151-8df9-473e-a400-fb402607b3c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689e08c5-7da6-4940-899c-0bfaf1593e13",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a1b377-b3df-48a1-add5-35bcf0c8fbf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25390a12-4d0f-45ab-87b9-a72287179c13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d294739-7a1f-4504-9d1b-c3dfdebf183e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57b2cfb5-6ecf-416e-8b70-bfe6374ca31c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa151ee-c4ec-4ca9-9367-4351f91431ad",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "850244f8-4c22-464f-ad63-f84ec46b9bbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0736bbc5-b5ed-46d1-b7f2-c13b35a9253d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d58c23-fb1a-4448-adc2-179f4539b904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f1a3034-cc24-494e-b6dd-8193e139f9e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54cdd753-2ce7-499f-965c-a49f5b0ad90f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4751028e-a301-4d2a-91b7-4c21804b5963",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5d4b753-76ec-449a-9dc3-857de1e98a21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e579307-e419-4dbe-8424-3b97b2e23653",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e56b4c86-a56c-4053-b51c-43748ba0258f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "824d2742-e29a-4cef-a65a-d94871474284",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a08543e-f72c-4d37-a94c-79224073d212",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da152c17-131c-4120-80a8-7206698355a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e7bcb46-9089-45b6-a56d-cd316620824d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31a3b40b-b324-4d79-a3f8-2840aff98434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df796628-40d3-4b9e-bfdc-1ec94c80b66e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef45b4f-6928-4b20-acbf-f4e544e5754c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1acedfd1-3f4b-465a-81cb-1e34ee4c5852"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "704c2db6-1087-4c38-bd33-842537022073",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dda2925-49e6-4200-90b7-7752a914a142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a86a4a83-fe10-4998-af6e-caa257aa771d",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e483951c-152b-42df-b3f0-4bfa1b2a242c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1840c662-78d6-420f-9ec1-38184d011de6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac42fd8a-b0ce-4cff-9dc0-4537fcbb19b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36b806f1-ff66-4943-9f67-4c6e1134a294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df15558-1e26-443e-ac7c-22bb313c0c1e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "400ac90e-ba9c-445c-85f6-a86e6b12b260",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e1b45ad-2a71-4a8d-b9f2-7b5af7fb9efb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14e3fc59-6599-4f23-a82a-931294b9effc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e13f5c3d-ac00-400c-b7f5-4b05857c20ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a7baf5-4958-4fb3-96eb-872d31170b15",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27903942-2bcc-44a3-8dd6-824316b15632",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebc6042f-e4e8-4913-9d56-f1cb64c289b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cbbb9f3-48c4-477f-a394-2873b6d23ce9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cea4bdfd-71f4-4969-8b42-2d25da584d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33c6b15-c6b5-4d07-b768-fe10454bbba8",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad57e99e-33c8-496d-96ed-864ba395c717",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b255f393-8a1d-4070-8729-766f45902a75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ab47b45-ee7e-4cd4-b00e-9c1593c29923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5e0f440-cb89-4b1b-9cc3-bdcf88423408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22cc75c9-9cc0-4557-9139-076cad42b33f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c160049-f366-4f16-8260-79ee2da22ea0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5befdad2-8ec2-419e-bd1b-f62b834385ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82971a22-9713-4790-8efd-881c6d4d3377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2b023b1-34de-40fc-97d2-f8d841053c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d1f7366-e90a-41a7-8224-f820cda9eff8",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38cbcde8-bd81-46ee-b937-66b9fb204776",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21737f11-5ddb-4da0-a77a-aa25f5a0a9f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a847ba52-ef57-41b5-a642-39eb9865812e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63607d76-c94e-48ee-975f-88d1b18d0b07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ed5c58a-fb26-408d-aa29-3dab76696d5b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c1e116-5075-461c-a093-f0d6934380a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92769245-38e5-4e27-aff3-a522332aeb48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b7de9d3-3bf5-4c23-b9de-22c4e5f4cf31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c7cf236-e4ce-4caa-98e0-500fee200230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46bb2262-f75c-4eca-a745-a36459139640",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73db35ab-b196-457b-b69e-936ca996eb8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "342ab452-2968-4ced-98a6-57029141e4fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16deab27-2da6-4981-b8ae-6719efd9229a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "932c45a7-438e-43dd-95b2-2b2f30b0e8b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f27e5f8b-da8e-409b-bf15-e01fad6f8870",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d48bcaa9-35bb-4f8b-be7e-c9fa4c1747a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65901140-e442-4e21-bf8a-b457802953f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de185c4d-db03-441f-bb35-a58f86b19be7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9f13dc9-eebd-45b1-9397-e6da3befda59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26427314-cb28-48fc-965f-54227f82bf22",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a01c3171-3c00-441c-bd34-024633378dad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2bd5c05-a1df-44c9-bc02-e617f1615b81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d65ea22-6c85-4a0a-9167-f33ff4ebb763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e85c1281-8fe8-4bfa-8e0e-5f7a0a46d173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "416a6207-1445-45a2-8123-886ed298ce44",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aef970d-cc08-4c87-9fa8-36b6d2091fe6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d23cb093-dbda-439c-a90a-c8ed660565a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64f2be4-f976-4234-8d37-c5e1c5d07728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b745897-30ed-441a-9666-0acabf485c9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2996e7d-c12e-4726-afc5-3fde85e69dd2",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a097a31a-b4d2-42f9-918d-1e01fcca4457",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "216889fa-884a-4ae4-9e59-c4267a40f028"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "710af608-444f-4c64-91eb-b701def9fe57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a33abe8-ff16-4fca-b0fd-151c933c4297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e03abdc9-9332-4065-9237-705755a58734",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50ed2618-ed5b-4dcd-81f6-1ca3745abb9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "663ef4a9-c38b-4d39-852f-0b7fcffb00a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5544cd3-aa1d-4ea0-b3e7-29faa6ff989a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1268170a-a0e3-4984-993c-9e3852d8a2dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3991b98d-6ad1-497e-a9b8-d2c261047c8d",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b15fc54-ed24-4d54-ad9f-223ad066cc3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66d9e91a-e7b0-45e5-9e2e-48cb1bc91768"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aff3700-0c1e-48af-a1d0-b5a64da21275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fb6bd8e-7008-4802-b36a-a86b395d781c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95c104d5-ed39-4de7-8054-6b1c34c17c80",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e48793-dbd8-41f7-bca1-a338cee10d1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e635d957-fb54-437b-a4a4-b6fea3127452"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14789284-f866-44ef-b83c-b708c242f9a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cadc490d-3a5f-420f-b0a2-d56ff2aa097f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bed063a0-64d7-449f-880b-0d894a08081a",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af581ecc-1777-48ab-b533-a7f3b0d14708",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f883772b-ef2e-4535-b8b2-b20ddaaaa060"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71bcbe65-d403-4975-9464-272f3c81b071",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae48cded-6873-4477-93d2-399feaa315a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "241d600a-0ad2-433c-8e36-353e43863cc4",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f42537dd-1dcc-408b-8f1b-45fd909936a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4f7f0ed-082f-474d-8861-bdd1a7a40ff8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f5c2f1-6f20-4efa-aaa8-31405d936696",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46ec1643-7aaf-4de1-9c15-e80a5716cc32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7890a034-7659-4de9-ba3b-54506b6bcd1b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa8a1673-d66a-4a71-9c44-42452083cb97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33427a26-9931-47a4-8463-479733644ecf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a81d99-bf0d-40f2-b803-9b56e91cc0bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0baed43-4411-44f6-aa50-db11a65fb364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d15949-6257-49f1-a4fe-dedaa65fcfb1",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30400d31-4f18-4569-be54-925784184766",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4071d32c-9f19-49c2-8af1-98e1cd03e503"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3619861b-986f-4026-9013-88046c890ba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ced1d616-0f4b-45f2-918f-b30255815c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7811163d-a0bd-4eb3-82a7-3b015757e91d",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8825d211-b917-4d0b-b1c9-670f33ec12bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e4b1aaf-1fcf-4ce9-92b1-d0bd973dad13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc43fd4c-0184-4fc0-877e-143525e90d74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92c85f6c-e1a2-4edb-ab97-59f2e365d435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ed4f8b-eca2-46d5-8946-4de43fd311e1",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf0eb02-3cb9-4b56-b000-279f09da8947",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5989cc7a-385e-4c3d-bb73-11431e5e8cf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6b5bc1-aaed-47c0-8ad2-0d42f932a10d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a86dde60-7e01-4a8e-8362-53eb2416c6df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7149640-6955-4159-b326-69a0bb1a228c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51940767-9462-46f4-b04b-51ba24313123",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ff698e0-1135-4869-a696-21774e61535e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eedebfe-dfe1-4da2-80dc-597f9e0da993",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6159d611-cc39-4a3d-963a-7dbafc5c7cb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fb367da-6fa9-4c7d-81eb-e1259fcb375a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e70c39d-5b58-43d4-aeac-3ca26a28a4cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "503c9cbb-1b10-4b1e-80d6-a2f50d807a76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1dd936d-cf4f-4f95-9cd4-bfa629721763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a5e6174-41b8-46d7-b8b6-6b51f6b71447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec6db338-f7f7-4adf-9e98-9bbe4add70a5",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb293dba-01ab-4d91-8443-c888502f8e2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b93f6c60-89e7-4b27-9b78-7387d8afa543"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b449d4-2020-4e17-a8e5-83ba655fe221",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7bcc279-aa4a-49c1-a658-0b2ddc0f5e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1517dda9-22bc-4862-a198-f47c8ee9d941",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaeb420e-a1db-43f2-a435-bab2c5ee5a8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23b2ac18-85f4-4751-8029-d49b1ffe2193"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00a6f53b-b7ef-4f66-bb2a-f5804e10eecd",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4393d40-1b76-4ef3-a3d0-650a975f90e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b431c3a5-11d7-418c-b7e3-c9b3ab1b1250",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dfb906a-69b3-4236-82ec-76c9eed80c81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dadf5d11-3c88-4a01-a6a7-16d37d4a66e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a8907a-986b-4f0d-82e6-61dd625f9316",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd608b71-4320-4ec9-adea-f40a36636fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45857a90-34f9-4000-9a9b-7d567a6762f1",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00386705-0f73-4181-bc68-5ef1e93625f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3978ab50-3886-4e27-a41b-f111ed3a443c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44186a1f-f369-4b0d-9322-7ac36f646dc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "157ace46-2066-4db7-a85e-63e3e401226f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0b3b074-1caf-49a2-aa5a-5f5d2019fdc3",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c05ea9d-68c8-4aa0-b81a-d7d9cab1eac2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84d94656-b0e4-430d-85c6-7cb7a3918dd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "077aab53-15fd-4477-8603-a3e43cd21ba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40128e04-032e-48cd-b726-12ffc4d11ee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6df25bd-1c89-40bf-b434-4a0441a95d0d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75661df7-1278-4e9d-b0b9-d24d6e4bde75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "655a744f-2b87-458e-b00d-452ecca61f6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad601d4f-628d-48ff-82f8-db3c976d4c0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de03050c-81eb-4165-b7e7-82943aa0385a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6333b1fd-2391-4af3-ab24-09d97548fc84",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb5a7dec-9383-4a27-98ca-2ea0e98bc95d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87ce2d57-00e3-430c-ac1a-a005417e3e28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d62630d5-9097-46a4-a8f4-26ab6c037f73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a596f7d-6a6b-49ff-a4dd-6114426f3858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72185e5e-69de-4c93-ad30-1d2381cf45be",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aee7d6d-dd8f-4a9c-9d21-e4260a34ca4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d801702-135c-4d59-8d9d-203e22cba738"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f58cc0-097c-432f-9bc4-2bb979d75af4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70f1170d-9ccf-4391-ae84-d34ea7925991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a83303bd-0985-4eb6-8df5-131a9a9658a0",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab0ca45-dd8b-4c4d-9e50-d768f43740cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1477ec2b-0853-4348-aa27-f8957681ccd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f69069f2-0c78-4a7d-a267-5b9de7118921",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29aefbf6-153b-4017-b04a-d022f0817fe5"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2f99d42-21db-41aa-be4c-4c172026555c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fec4939a-5ec0-44e6-b0a3-2a9e913d5fa1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "79ad2f7e-972c-4318-ae32-600329fb50b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "49d523e9-0b90-490f-9e3e-df7bc8308747"
                    }
                  }
                ]
              },
              {
                "id": "26f36af0-5c51-4fbf-a152-f2918a5047c2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b58e9f85-0c52-49c7-8f97-2b2c8ba92ed1",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f4e5c56-36ad-4664-a1d7-b2033ac74b2c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7b48b2e2-0337-4e0b-964a-cfd819383071"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f7243a-59bd-4381-883e-038c3e1fc212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9f14ccaa-8964-4d55-a5ac-af1048718a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b34764-fa6e-4a2c-bbbb-d6a97ce1f68c",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb2a79f-a41d-4207-b5c1-95f594307240",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d773c1cb-c9b6-4d1f-8bca-dbf0f7642ab0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fbd1923-b932-458b-8194-5e47d9ffdd4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6268846d-793c-442c-8d7a-de326dcdc313"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1d00998-1f76-4ac7-aa4a-7b130f509f7d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "589fd413-554b-4ddd-8e76-d83a92d8f439"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e4267aad-1e8f-4459-874d-401e1385c1ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e45ee778-dc98-49af-8695-11bdf470ccd0"
                    }
                  }
                ]
              }
            ],
            "event": []
          },
          {
            "id": "c62047ae-dbf9-4f84-b0f7-5de9d1b7541a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a54ff0ae-cd77-47b7-8e81-78ae9d905c67",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "de2cf7d8-5aa2-4d94-96e6-1f2f04a5262b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "435d1c7e-6638-4331-984d-af44669201d7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d89b3e69-8799-40fd-a69f-171d52afb3db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93f127c4-7b47-4f0f-96b5-ab652ccf498e"
                    }
                  }
                ]
              },
              {
                "id": "cce1c6cd-910c-46ca-b5d8-9fb3c9ad741e",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ba9e4b9-990c-4387-98f0-1ae452e7266d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "15296374-189c-4bad-a747-5324d7e9fe98"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e8404ad9-376b-4683-98f9-05850550b8e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3148017f-12a8-4cb2-b1a4-1e9c36c8354e"
                    }
                  }
                ]
              },
              {
                "id": "96a0697d-d680-4c2d-910b-29ee04075679",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7403f48c-8707-41ed-8b63-ede85c988994",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0e251d11-ee4e-48a8-9afb-4ada5c13ab60"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bdc69bc4-eaca-4fa3-b1c8-2c4486094662",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "835b30fb-a464-4053-90d7-4f5eeb19eba7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "816973b5-638b-4c9c-bf37-c8e50d21dd96",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d0253afe-adc9-45b3-84df-00ae03176b82"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3d4aa967-9aea-4670-8201-559e106cf403",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "47f74a5f-fdd8-409a-87e5-2409323938e0"
            }
          }
        ]
      },
      {
        "id": "bd18ca07-4162-4d18-baa4-d9314ae2bb94",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1b8e8aec-2b88-4367-b8f5-8bb7f1544be9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0baf5fb6-a1f2-43a8-a835-5118557134ae",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c658c119-18b5-4d22-8eab-3e59b1f648b5",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c90b9f9a-6736-4d7d-a555-2c6f3cb8ff49",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8f3d1031-7a97-4be2-919e-b0179dccec13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d85503-e238-4520-b0f5-07dcadfc1b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ff96eb5a-95e9-4c4a-a813-9b396f66901a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86897805-0916-425b-a613-4698d9b241a2",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdba3593-9539-4b95-a576-a2984002c94d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "fe2851ca-9abf-4759-b93f-6a300ce733ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d8ecf53-1605-4ee2-b6cc-fd5cb73cd4e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a78c3dd5-460c-42cd-8dc3-78bbd61eda62"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f8d6e65c-3905-415c-839a-3fd94ecc3e42",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4efc525c-7952-4d2e-b307-5f588dce1b9c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a57dc03b-9d2a-4588-a5b3-cb7e264be5e7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4caa86d8-9baa-4cb9-937b-fc68818bb0f1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7e0380ff-d905-4d1c-981f-37988aa4233a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d804fc88-4441-411f-a518-faf41154c691"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3fa333df-9c9e-442e-bab2-732956f5e67e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2ba95358-930f-48c6-9d01-b65b8d3f7c4a"
            }
          }
        ]
      },
      {
        "id": "1ed037dc-0a87-46d2-8d77-d48a2c331c05",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "995b95f5-ca5e-49a3-af79-71a3f38b7d8f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "38e43ee3-8320-4543-9d99-dccce2695a81",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ec6f5a35-592e-4db4-894c-45c6c374100f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f14b7fa-44be-4320-8fe9-ec71af4494c7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "cc41b58e-f4c3-44c7-b1e8-6afebe3f9213"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "893efda6-fe20-48e8-9673-cfe43d03d740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "46fae83f-0d10-4759-92a4-e42554253343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c007c6fd-e3b4-445f-95ae-b571ea01585d",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a232ed00-6df5-4a6d-a260-81f514c36a6c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "81f971b7-315f-4817-915f-9d1f8bdec91c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da6f5b5-ac4a-4501-b5a9-860ca65482bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "02b4d214-d7d6-4ad0-ba88-ba5cd3153195"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "83c51468-cc1d-4ed5-8aff-fa47582a7cd7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cf9a3454-5222-4b22-88ef-057a1c400ba7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "081f6267-a154-48dd-9a97-5d9f4231e153",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "726ebb43-f619-43ef-8aa0-d92afdc5106a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fddf9545-0471-4cfe-85be-c6765f415693",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0c7b23cc-fd37-4149-bcf2-c90facffcff7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ab99dabb-2186-42a5-b64e-66d59ffd77af",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "01792555-31bd-4a59-a380-97971895c502"
            }
          }
        ]
      },
      {
        "id": "e8bf1304-9f25-4a67-887b-4306c3b601a9",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "f8c1710a-0c64-4906-a491-dda7157b7095",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b2246064-b1a7-4bb4-903c-a9c77c867a62",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ef6383e1-3b64-4626-a309-e8a030185987",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789303de-3e1c-4d94-83ef-e732f7281ac9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "dbc2c355-d44c-4225-887f-e182b081c830"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c24d2b0-5d09-418e-96fa-7c8cc63e528f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1290b564-c8cb-4f47-a345-e7010505c91c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65472855-ecf0-41bf-a6c9-bc89c75f5ac8",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "511fbcec-9b9d-474e-94f4-77f82122d2e5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a394e85f-99ba-4fa5-acd4-c1d850259c74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "606bb4c0-f78f-4221-aed6-369226991fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d120cfba-8153-444d-8cd2-1a04f1fe95b9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1d902aab-b21f-4500-a447-5e73137d1a51",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88607476-9750-41c2-8c12-4b962be07f4f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "22a3b55b-230f-4150-8753-c4f3e496bec2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b968349f-466b-4242-b9a7-812c609698a1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f9ef370a-4272-4e84-98a7-6ef73c25cb05",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "56cf6f74-8f66-4dc1-bf10-a2d057c97005"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9c7119f7-81ab-44ae-9bf8-11a4ee0ccbdf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b9e63429-6b1a-46b1-9e50-9c7d9f406c90"
            }
          }
        ]
      },
      {
        "id": "8696e337-5cb9-4b3f-a2e8-3d0359f465b5",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "be279055-ef77-440f-991c-0d48bc41fb24",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "68c774a4-8685-4fc3-84c1-406cd2738088",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a8fb8b3d-34d9-4b22-b9d7-7c5411623771",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "918e16f7-8c95-4fa4-8d28-5ea715d51a60",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "626bf5bd-14bb-4398-a8bf-154892fb84d5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 505,
        "pending": 0,
        "failed": 6
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 709.6307692307688,
      "responseMin": 14,
      "responseMax": 6402,
      "responseSd": 762.1075952551336,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1667264425794,
      "completed": 1667264621273
    },
    "executions": [
      {
        "id": "b00d15f4-a4fa-4d03-8528-24282dfbb95b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d5acab8b-5ce6-4f78-8b02-d68581bde412",
          "httpRequestId": "4d405209-c602-4fef-add0-c0000f937d74"
        },
        "item": {
          "id": "b00d15f4-a4fa-4d03-8528-24282dfbb95b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a65edc5a-e0ea-4f75-99b5-0953271fdd0e",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "6ee0d749-cb7c-47b1-9173-fac699520c0b",
        "cursor": {
          "ref": "909477c8-73fd-487b-b817-44150e53d35e",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "09460cc9-6352-4e9f-84d1-fde15be17923"
        },
        "item": {
          "id": "6ee0d749-cb7c-47b1-9173-fac699520c0b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "56872988-327c-4b08-9151-e46a62d1128e",
          "status": "OK",
          "code": 200,
          "responseTime": 14,
          "responseSize": 0
        }
      },
      {
        "id": "76919977-fbac-4559-a8a4-081878a9452b",
        "cursor": {
          "ref": "14895268-d4d7-4a3a-abc9-ac5ec6f6b997",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f3a22565-77d5-47f5-b4f7-ad6232988328"
        },
        "item": {
          "id": "76919977-fbac-4559-a8a4-081878a9452b",
          "name": "did_json"
        },
        "response": {
          "id": "abdd361d-44ee-443d-b7ac-8f618a6664a0",
          "status": "OK",
          "code": 200,
          "responseTime": 3414,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab1379c-cbeb-42a2-99b6-1bc1677c0269",
        "cursor": {
          "ref": "12bd5189-446c-484a-8021-fa0b29d5eec0",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5e532a0d-e16d-4268-aad7-8131cf538a52"
        },
        "item": {
          "id": "2ab1379c-cbeb-42a2-99b6-1bc1677c0269",
          "name": "did:invalid"
        },
        "response": {
          "id": "e2976777-6dfd-4cfd-9503-4e5b6aca410f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3358,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab1379c-cbeb-42a2-99b6-1bc1677c0269",
        "cursor": {
          "ref": "12bd5189-446c-484a-8021-fa0b29d5eec0",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5e532a0d-e16d-4268-aad7-8131cf538a52"
        },
        "item": {
          "id": "2ab1379c-cbeb-42a2-99b6-1bc1677c0269",
          "name": "did:invalid"
        },
        "response": {
          "id": "e2976777-6dfd-4cfd-9503-4e5b6aca410f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3358,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "370b14aa-d2f2-4113-b233-7210516ac59a",
        "cursor": {
          "ref": "ab19da1e-26da-46c4-86ed-ed643b61dfa2",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e567ae64-5a3f-4de5-b458-b7fa6054a837"
        },
        "item": {
          "id": "370b14aa-d2f2-4113-b233-7210516ac59a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "4719d85f-d499-48c5-aee7-3e95ed86e4a0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 3129,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b36ee6b-37c3-4fb4-9d75-d7b8ecf36e64",
        "cursor": {
          "ref": "68ae2b74-85e0-4588-b07c-8fc17cac27ce",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "64d668cc-dd7f-4817-be25-bc61f37b1577"
        },
        "item": {
          "id": "1b36ee6b-37c3-4fb4-9d75-d7b8ecf36e64",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "ce74ca6f-791b-46e0-bc2b-9897f8416391",
          "status": "Not Found",
          "code": 404,
          "responseTime": 3036,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd18e42-7fe7-40ad-b059-cd67f3196edb",
        "cursor": {
          "ref": "76d82691-6e37-4433-82d9-1d49ca21bfe5",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b8c3efd5-6780-4e56-a00b-a73d71235fa8"
        },
        "item": {
          "id": "4cd18e42-7fe7-40ad-b059-cd67f3196edb",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "511ad690-95fd-4131-a3ac-6dd8774ff0c5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "116ccda0-f140-4c8a-90c2-8f69540f2d26",
        "cursor": {
          "ref": "c018bd97-e345-40a5-a224-38eb6afd681d",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ea4a2d57-b708-4a0b-a2f5-0d442da266ab"
        },
        "item": {
          "id": "116ccda0-f140-4c8a-90c2-8f69540f2d26",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "4c27e591-1ea2-4118-91af-ea69545a4aa5",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 2865,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "116ccda0-f140-4c8a-90c2-8f69540f2d26",
        "cursor": {
          "ref": "c018bd97-e345-40a5-a224-38eb6afd681d",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ea4a2d57-b708-4a0b-a2f5-0d442da266ab"
        },
        "item": {
          "id": "116ccda0-f140-4c8a-90c2-8f69540f2d26",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "4c27e591-1ea2-4118-91af-ea69545a4aa5",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 2865,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2935577-afbc-4f40-84b2-3957d70cd91d",
        "cursor": {
          "ref": "3d052e7d-9956-41d0-8645-ef4e25f6018a",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "675b3e6f-d757-4aa0-a8a9-0aba6d368d20"
        },
        "item": {
          "id": "e2935577-afbc-4f40-84b2-3957d70cd91d",
          "name": "identifiers"
        },
        "response": {
          "id": "238532fa-ca33-4ab6-85c3-d21474bef38f",
          "status": "OK",
          "code": 200,
          "responseTime": 4495,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb3d0bc-4c40-4646-b048-de3164d29dff",
        "cursor": {
          "ref": "a81499a1-b6cb-4e8c-abeb-200e7a80ff51",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "22cf3efb-af4a-4507-a325-ceb0e67edcb8"
        },
        "item": {
          "id": "1eb3d0bc-4c40-4646-b048-de3164d29dff",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9b708688-9565-4301-a717-f846593f1818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2359,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb3d0bc-4c40-4646-b048-de3164d29dff",
        "cursor": {
          "ref": "a81499a1-b6cb-4e8c-abeb-200e7a80ff51",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "22cf3efb-af4a-4507-a325-ceb0e67edcb8"
        },
        "item": {
          "id": "1eb3d0bc-4c40-4646-b048-de3164d29dff",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9b708688-9565-4301-a717-f846593f1818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2359,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3596edd3-ce72-4563-a4f0-b0dec11da8fd",
        "cursor": {
          "ref": "e4aba894-f3a9-480a-98eb-5916e90f3233",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c1345686-4ff1-4822-891e-0611b2499e63"
        },
        "item": {
          "id": "3596edd3-ce72-4563-a4f0-b0dec11da8fd",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "96283bd6-b8f8-417f-8b38-4364af400e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2424,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2e71562-f195-441d-a597-f2a070c72773",
        "cursor": {
          "ref": "ec83f6f2-4b49-4e02-b8fd-986a83100709",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "58ac6aa9-4f69-4d3d-b438-3390f519de30"
        },
        "item": {
          "id": "e2e71562-f195-441d-a597-f2a070c72773",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "4ec993b2-b82d-4856-9694-83574a6d5a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2541,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2acc7871-e87d-411c-8e38-a0637813f112",
        "cursor": {
          "ref": "04dd00b2-840c-4c31-a752-5eeb6beb5e42",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "cb66fb19-23d8-4420-8211-4350ec6d6832"
        },
        "item": {
          "id": "2acc7871-e87d-411c-8e38-a0637813f112",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b292e17d-e160-4fe7-90a7-3092f123c752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2373,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18caf679-5ee7-4a9b-a758-19da484fa81c",
        "cursor": {
          "ref": "b01c4c74-896c-410b-a13d-ae365f032a81",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e4ab735f-906b-46ce-a732-1203457871f4"
        },
        "item": {
          "id": "18caf679-5ee7-4a9b-a758-19da484fa81c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "0ad3a29a-a1c4-413b-8f64-3dc573128bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2382,
          "responseSize": 678
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "871661f6-45b4-43f7-a21f-9afe6735ca93",
        "cursor": {
          "ref": "9a0ac94f-75c7-4f59-98ae-88bca443dd8b",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "2c1ccb0c-7e72-4da0-9c81-750aacea9644"
        },
        "item": {
          "id": "871661f6-45b4-43f7-a21f-9afe6735ca93",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "fdf1bb06-5cb5-4641-a367-11159c435c3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1854,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d11bc53e-7ee7-47d1-99cd-c891348ae709",
        "cursor": {
          "ref": "61e802b5-46d0-48ab-b1ef-eb624ee542c1",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a483f1ca-2638-4cff-9864-013dcd652fb9"
        },
        "item": {
          "id": "d11bc53e-7ee7-47d1-99cd-c891348ae709",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "dcee959f-6c6d-43b7-9a08-ab4f59c1e74e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 929,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fd3e87f-4fb8-43b4-a41a-b243868a76f7",
        "cursor": {
          "ref": "2eb0b83b-5970-453f-92ae-78844ac6a249",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "7c9014c2-2625-4857-b75c-e7fb3464276c"
        },
        "item": {
          "id": "7fd3e87f-4fb8-43b4-a41a-b243868a76f7",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c75693d0-d612-4afe-a582-bb9ca9f33a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 955,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9966d8ed-b6a3-407f-852e-f69a9d04ec49",
        "cursor": {
          "ref": "86ac0ce5-da95-4b21-912e-7c10c2723551",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "7e47ac72-b3ab-47e9-a77e-ea29df852a17"
        },
        "item": {
          "id": "9966d8ed-b6a3-407f-852e-f69a9d04ec49",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "08553f3d-cea4-472a-b116-fe5a8805f4c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1109,
          "responseSize": 950
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef8b9ce-5a3d-436e-b8ca-e4bb3a80b730",
        "cursor": {
          "ref": "deb5fb37-236e-480d-a594-d921c7dc94dc",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1ec38c48-e5bc-458b-b3cb-933702db2ca2"
        },
        "item": {
          "id": "4ef8b9ce-5a3d-436e-b8ca-e4bb3a80b730",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "18d9c5fa-327f-415c-a1de-cea8059b5af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1281,
          "responseSize": 947
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "159a8496-143f-4943-9c9b-066c6e509b52",
        "cursor": {
          "ref": "7bac90d7-083d-44a2-ad93-3e035bec429e",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "89bc313c-78ce-4e54-b731-9367a1ce7b06"
        },
        "item": {
          "id": "159a8496-143f-4943-9c9b-066c6e509b52",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "6cc8f9ea-34d8-4c61-847e-5a3d012689a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2292,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ce5c37-ba45-4f0e-9307-1535fb9ab322",
        "cursor": {
          "ref": "5517e759-964a-49fe-a845-9f9cd24784d0",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "fce4186d-a959-4f75-abab-533509d38a2e"
        },
        "item": {
          "id": "34ce5c37-ba45-4f0e-9307-1535fb9ab322",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e7aafc6b-b409-43cd-ae92-79e770e15d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1686,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c319bbbb-3c4f-4835-95c9-5b6f186f975b",
        "cursor": {
          "ref": "39a79744-4c71-4ecb-b336-4049971ef1ba",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "35a72469-cd3b-472d-839d-c7b5fbe65e9b"
        },
        "item": {
          "id": "c319bbbb-3c4f-4835-95c9-5b6f186f975b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "8865393f-0330-4324-8be0-ba95dd3542e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 734,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7236ba4-f522-4a11-9815-41cb5275754a",
        "cursor": {
          "ref": "870b3d9a-ae42-491d-8891-d6d626491ad8",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "781d40de-3eec-4703-81c2-116ddca6709b"
        },
        "item": {
          "id": "b7236ba4-f522-4a11-9815-41cb5275754a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "0d224875-859d-450b-a6e6-d0c93fc0fb27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1248,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e71d2de0-5589-4214-8517-79782be6e635",
        "cursor": {
          "ref": "e22c50b9-e606-49bf-8e9f-4bb6ef8d4afd",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "6a578b56-a35d-4dfd-932f-b757d4ccc3dd"
        },
        "item": {
          "id": "e71d2de0-5589-4214-8517-79782be6e635",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "8887e97e-b8a8-458f-b403-045b1bf9a3f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1195,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03916fbf-0bda-4f46-b545-05e18e9d049c",
        "cursor": {
          "ref": "3c52d19f-489b-4a74-9c9d-c59b04cd3322",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "7d62026c-30d7-494e-a74f-f3f7732975dc"
        },
        "item": {
          "id": "03916fbf-0bda-4f46-b545-05e18e9d049c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "dc2a8eae-82cd-4d26-aee7-5d15bdcd2ea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1129,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7b6382e-4410-4df7-b671-b7b40ce4253a",
        "cursor": {
          "ref": "4eeae305-778e-4f74-9d1d-eae1fab6b4c1",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c0ef26e1-0015-4aa6-821b-c5512ddb929d"
        },
        "item": {
          "id": "a7b6382e-4410-4df7-b671-b7b40ce4253a",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "489b19d6-c5c3-44b4-a80e-2b7a8e482f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1095,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b0d3e2-c1cb-413a-8c7f-a4627fd0fdb4",
        "cursor": {
          "ref": "bfb68d85-cbcb-4943-b93a-3422f21e3484",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "6bc86aa3-8b06-45f3-8134-441ba28d7302"
        },
        "item": {
          "id": "45b0d3e2-c1cb-413a-8c7f-a4627fd0fdb4",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ac3c5ede-5fb8-4925-9044-e1efc9a03935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1216,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb2b97f5-f005-48df-a069-4f636b917756",
        "cursor": {
          "ref": "800907f5-3289-440b-977c-979962b18661",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2670d831-aa7a-4ef0-856f-45ab283a5af6"
        },
        "item": {
          "id": "cb2b97f5-f005-48df-a069-4f636b917756",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "9e4911d6-fa76-4603-9234-273c0810f52e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 940,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ccf64f-9d4a-4b62-a766-dc0d31da146c",
        "cursor": {
          "ref": "b9a2e10e-7a8b-4358-8af4-00867c06ad17",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "78be9338-d838-4b70-9e24-1fa032a40873"
        },
        "item": {
          "id": "a4ccf64f-9d4a-4b62-a766-dc0d31da146c",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8d495f82-1dd2-41a9-ab2d-5ef624cfd85f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 857,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e498331-8e65-4f39-952c-4e63430c7f5e",
        "cursor": {
          "ref": "bb29045b-b93b-4794-828a-b3886445d286",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "8181c5bf-4cf1-4332-9062-dd1994eb5d9c"
        },
        "item": {
          "id": "0e498331-8e65-4f39-952c-4e63430c7f5e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "167b1b83-0149-4482-8f89-98112f440fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 951,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb250fa-6317-4924-a649-dcd777ce23d8",
        "cursor": {
          "ref": "20cdbcff-2c81-4895-8d45-aed7170787d0",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "698330ad-8b9c-4d66-b842-c8d1ea9c9bc2"
        },
        "item": {
          "id": "bfb250fa-6317-4924-a649-dcd777ce23d8",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ea75876b-0ef6-4b58-8c0d-994c903d6a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 795,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2853a1d8-06ab-4e92-8c10-7c046fad2875",
        "cursor": {
          "ref": "4e80d592-a6d7-4e90-86ca-ef63ee76c112",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e148074a-d8fd-4978-8d4f-f2cac361cf68"
        },
        "item": {
          "id": "2853a1d8-06ab-4e92-8c10-7c046fad2875",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "93632b89-e6ca-468b-b0d7-4ed22203f5bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1171,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d4a19d-54b5-4c2f-822e-7b928992ab0b",
        "cursor": {
          "ref": "17a6925c-8819-4ad9-ad61-82c4e5e115e1",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "168e838c-52c7-4bfe-b099-3925378dba33"
        },
        "item": {
          "id": "93d4a19d-54b5-4c2f-822e-7b928992ab0b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "f6bc3da9-217e-4cf7-9f34-ee04b363efad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1197,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7201c91-3c63-49ce-b7d0-781229e14079",
        "cursor": {
          "ref": "5eb43caa-343a-42be-900b-5a775e4bf228",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "81b5a3c7-9217-4197-ab68-75eddab63b8d"
        },
        "item": {
          "id": "d7201c91-3c63-49ce-b7d0-781229e14079",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "44c0e1cd-5b26-47ec-888f-4a396c2621f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1099,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "445c4869-946b-4c1f-9ffa-5c184d36e943",
        "cursor": {
          "ref": "b786dcc4-eecb-4e76-84a6-5c333c0498fe",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "1ca1827f-e9ad-4934-80ef-f4ee4bd693ce"
        },
        "item": {
          "id": "445c4869-946b-4c1f-9ffa-5c184d36e943",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "6104be96-5683-44cb-b16e-c6fedab6954c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 982,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ca29a0-c030-43f5-b769-905e9ccd568e",
        "cursor": {
          "ref": "5f57b2dc-983b-4d2d-a51f-93f2bdf39186",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6cbd4c8c-f0bf-4bd4-a89d-a65dc2caed6f"
        },
        "item": {
          "id": "25ca29a0-c030-43f5-b769-905e9ccd568e",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "24f7c69c-790e-4f6f-a424-984b451c1a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1403,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58617e62-9b33-496e-b348-613d5bbf1abb",
        "cursor": {
          "ref": "5feea072-19d2-4cdb-b225-8736ff6bc3f0",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e08eeef9-0e65-4f38-861b-2602dfa83eed"
        },
        "item": {
          "id": "58617e62-9b33-496e-b348-613d5bbf1abb",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e87c09ab-cf5c-4d97-ac4e-9cabccbc7c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1079,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619aae87-55c6-41e1-84a1-383d8cea79ba",
        "cursor": {
          "ref": "c50a3a97-73ac-487e-883a-ce3978007ecf",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d8a49e6c-5893-4598-bcf7-fdcf9d9030cd"
        },
        "item": {
          "id": "619aae87-55c6-41e1-84a1-383d8cea79ba",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "bf7cc435-8855-4aa8-9b3e-d4ffc6818434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1407,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1173de5c-2443-4912-ab08-bff66e56bbbc",
        "cursor": {
          "ref": "1eddf5a2-27f0-4ef3-bbe6-b37e7184ef99",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "38e68139-5668-4b57-b689-6107fa4a694e"
        },
        "item": {
          "id": "1173de5c-2443-4912-ab08-bff66e56bbbc",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "febb9069-3cb0-4642-a1ff-639ec0c85efc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1045,
          "responseSize": 466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "101e64b4-789c-463f-9f75-c5ae6249a28f",
        "cursor": {
          "ref": "556ab4ea-cd6a-4e9b-898a-ca54032ce9a6",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c6525afb-945b-4172-9c6b-5db37f5186aa"
        },
        "item": {
          "id": "101e64b4-789c-463f-9f75-c5ae6249a28f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "0ef26125-e601-47a2-8e15-9b1371d4d8ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1044,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848682e1-e663-4df2-9160-bec9019e8f06",
        "cursor": {
          "ref": "99bf9e38-0e20-40e5-b073-117efc5ff6cd",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5d64732f-b263-4c17-9526-e8c4ff8e1cac"
        },
        "item": {
          "id": "848682e1-e663-4df2-9160-bec9019e8f06",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "aa423b24-520f-49aa-9d20-07fb5b4953d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1239,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "527da4af-efc6-44e6-afbd-df4bdf5bf629",
        "cursor": {
          "ref": "1865af48-2b85-4f76-8acf-39fd5563a14d",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "44f2382f-0b84-4ad1-afef-21d7aeea0bc8"
        },
        "item": {
          "id": "527da4af-efc6-44e6-afbd-df4bdf5bf629",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "c3b4ba53-6a50-4272-9103-a4e956814657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 928,
          "responseSize": 892
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf7dd612-fb4a-4402-ac6f-f3f64c039d77",
        "cursor": {
          "ref": "2023d72e-247b-4682-8dd0-bfdd8eb60166",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "3c6eec31-dc97-46a0-806a-6e04d3a2f23e"
        },
        "item": {
          "id": "cf7dd612-fb4a-4402-ac6f-f3f64c039d77",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "ab7d628a-f5fa-4fb6-8882-cf5c0fe63885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 976,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d73a5ca-459d-4030-9cd8-34a70067f18b",
        "cursor": {
          "ref": "db966403-d1a9-49cf-8b59-cf455abd6dc0",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0272e1fa-bc62-4260-8042-bf531ec65fc8"
        },
        "item": {
          "id": "8d73a5ca-459d-4030-9cd8-34a70067f18b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "31cb9eff-f1a1-4ed7-abbf-b46afff17516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 990,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a865c22e-c1bf-4fdc-9bb8-7391a85e85a3",
        "cursor": {
          "ref": "0aebe33f-d5ee-4f27-a040-b51565031925",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "bfcbd20b-d406-41d0-8c43-bc4b2cd39470"
        },
        "item": {
          "id": "a865c22e-c1bf-4fdc-9bb8-7391a85e85a3",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "1c8a51aa-6e3e-43be-bd19-22dae8f63af0",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 997,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7777cfb9-edab-4f47-b0e3-0cf0a0f11383",
        "cursor": {
          "ref": "be965b81-1884-47bd-800e-4291b57a40fd",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "2dfd3aa6-82f9-483f-ac23-a039ccf53c66"
        },
        "item": {
          "id": "7777cfb9-edab-4f47-b0e3-0cf0a0f11383",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e0d70123-a6d9-4209-9ab1-c37c3bcaa7f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1279,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1475ea1e-b0f9-4cab-ac07-cd4a99edf30a",
        "cursor": {
          "ref": "76ab01b4-efb1-4dc6-9251-e6cf4a57eee9",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "577ebe51-6a9f-48dd-a46b-e6180a75c4f1"
        },
        "item": {
          "id": "1475ea1e-b0f9-4cab-ac07-cd4a99edf30a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "7516f10e-eaba-4e93-b139-a74c4ba6d749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1602,
          "responseSize": 1305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a961c868-b22f-4c39-a838-ff59a2fd5149",
        "cursor": {
          "ref": "f1f435f4-03b5-4380-9f2f-b0889cbe7216",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "35f1fc39-4224-49d7-b424-fb03e859db5a"
        },
        "item": {
          "id": "a961c868-b22f-4c39-a838-ff59a2fd5149",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c2d9f982-88ef-4d90-a134-9661a7eba073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1484,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af96f2d-da4a-4b97-82fe-dbd50f8cb496",
        "cursor": {
          "ref": "283c9c36-8c85-40f5-a3b0-52b33dffb27c",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ec4ea32d-0604-4be9-ab72-6ad3e0fe8f16"
        },
        "item": {
          "id": "6af96f2d-da4a-4b97-82fe-dbd50f8cb496",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "9ae3251e-991d-483d-9286-ff71d1be5d38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1311,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8abd55e-e285-43d1-8929-60cae7f0228c",
        "cursor": {
          "ref": "f3d70986-808b-4f95-91b2-39a535ba5862",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "2c634c14-1fcb-467d-9e8a-7d4cb1ebfa56"
        },
        "item": {
          "id": "e8abd55e-e285-43d1-8929-60cae7f0228c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "2aebe900-9a6d-416e-b256-1a56e791e807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1627,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14668e4c-50d0-4ecf-bb78-27461b16cc7a",
        "cursor": {
          "ref": "2f87d5bd-6e1a-4dfc-8ec3-a12b51837b27",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "2c630e4f-f41a-4842-9cd2-12a17f2f65c1"
        },
        "item": {
          "id": "14668e4c-50d0-4ecf-bb78-27461b16cc7a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "8a45e80f-0a2c-4147-8930-414a87baac07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1402,
          "responseSize": 1636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "904b3112-a5a6-48d7-8209-b771c453fc2c",
        "cursor": {
          "ref": "676d6b29-73c8-4159-a497-13da7c38b860",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0d2290b9-b738-4122-868b-d07a71835ecb"
        },
        "item": {
          "id": "904b3112-a5a6-48d7-8209-b771c453fc2c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "046e4e5b-9c77-4236-a168-6904cf22adb2",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1569,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ae55a8-36e3-4d96-9244-6480d7297107",
        "cursor": {
          "ref": "ecfcbf2c-d0dc-4f7f-a74c-f8b994449309",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "2227861d-0d07-4700-9cf2-91fb55f6924b"
        },
        "item": {
          "id": "18ae55a8-36e3-4d96-9244-6480d7297107",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b47a95d0-602f-4f08-bbdb-fc5aa70a3b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1448,
          "responseSize": 524
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bce4f935-2451-4a65-840a-b707844b8009",
        "cursor": {
          "ref": "3aa5065c-175a-4e85-8d8b-ddb420fac1b9",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "59b81de0-578a-40eb-bd66-6ad80708b9b8"
        },
        "item": {
          "id": "bce4f935-2451-4a65-840a-b707844b8009",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "471983ec-3c51-43c0-bda1-4a5cf64c278a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1449,
          "responseSize": 548
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe65fa9-d320-48a7-85b2-f1f03fa9ad97",
        "cursor": {
          "ref": "109ac3a6-cde2-4955-a517-689f4f1ad57e",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "5ffd54ab-a941-4ce7-b024-5778ab971f32"
        },
        "item": {
          "id": "7fe65fa9-d320-48a7-85b2-f1f03fa9ad97",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "9ce92938-af2e-4ecb-a646-b9f4e7014f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1258,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "456fc4a3-0db3-4d2a-9a52-7e90f88a93ab",
        "cursor": {
          "ref": "3ec99995-a2ee-4b1f-ac92-2c1180dc0747",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "0ca1631e-08d9-4fca-9dce-38693e2acc1b"
        },
        "item": {
          "id": "456fc4a3-0db3-4d2a-9a52-7e90f88a93ab",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b5cfbcef-e899-4848-8d68-f7751669a776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 927,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd838fc-cfff-48ff-91eb-d35c469076e9",
        "cursor": {
          "ref": "42dccdec-4143-4519-8d72-bcd68b601a63",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "493acd6b-60b5-4827-bd34-eda80137a968"
        },
        "item": {
          "id": "bbd838fc-cfff-48ff-91eb-d35c469076e9",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e1589802-8f86-4455-9f96-99ea8265f238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1130,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c82f4aca-91a1-436b-8d6d-7a5662c90d19",
        "cursor": {
          "ref": "c8497e11-4101-45a3-9d13-13118b629b57",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "36ce50e5-fbe8-4668-bfcf-b1b3d58d26f0"
        },
        "item": {
          "id": "c82f4aca-91a1-436b-8d6d-7a5662c90d19",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "97ac47ce-17b8-40f1-bb8a-dcf08eec8b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1300,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b293bc94-9a4f-418a-9ca3-69ac5e800ac9",
        "cursor": {
          "ref": "c959de65-171e-4a11-b0c5-e46a9ff2474d",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "0cd10978-3dca-4af3-b64b-9c50f144a8fc"
        },
        "item": {
          "id": "b293bc94-9a4f-418a-9ca3-69ac5e800ac9",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "437ce3a1-5e6f-4ee3-8cb4-c6f92e9a6f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1115,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ca1891-265f-43f7-a627-7efb4937c3c8",
        "cursor": {
          "ref": "7eb76599-1e80-4953-bb82-38ce203cffcd",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "78cddd42-ccd6-4a45-8ee6-c5e05d8279cd"
        },
        "item": {
          "id": "81ca1891-265f-43f7-a627-7efb4937c3c8",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a4d022f2-9a11-402b-bd30-2c655d2a8e68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1213,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd28e42-1f68-4ddf-abd0-08bcf13b4eb3",
        "cursor": {
          "ref": "b22663e2-e6a4-46ff-8d9d-fd86a8033f92",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "17a36211-8f70-4129-8fc8-7d25331ff082"
        },
        "item": {
          "id": "edd28e42-1f68-4ddf-abd0-08bcf13b4eb3",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "daf302d9-ec28-4919-bac3-a67973b948e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1242,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "975c7caa-2875-4623-9192-838408172328",
        "cursor": {
          "ref": "dc0a7426-2ac6-410d-8130-2f279eb40c17",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "02f56632-0e82-4b92-89c1-359901b2858e"
        },
        "item": {
          "id": "975c7caa-2875-4623-9192-838408172328",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f8684f52-3f76-4a0c-b122-066bbc94f444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1156,
          "responseSize": 829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb0feaf-fbbf-46ab-9a07-3cbfe75a8368",
        "cursor": {
          "ref": "f218176a-d278-4709-a096-f07c8dc5dfcd",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "14b0d42f-5bd3-434c-9578-d644974e8312"
        },
        "item": {
          "id": "0eb0feaf-fbbf-46ab-9a07-3cbfe75a8368",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "a2fcfa6e-384c-42d0-95fc-6caf65652889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 826
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe7abe0-477a-4347-8e5b-6a75e25aa5ef",
        "cursor": {
          "ref": "6d1b5bb7-e213-46fc-b9cf-6f8ff1843c5c",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "89e3d94e-50b5-4b09-b951-996f47a5465c"
        },
        "item": {
          "id": "bfe7abe0-477a-4347-8e5b-6a75e25aa5ef",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "6d72b788-eff5-4545-b0c2-311a01edc84d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 828
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cbe907c-03f8-4038-bdac-40c6ae287a62",
        "cursor": {
          "ref": "7ad8742b-49db-422d-afff-0ea2cff69047",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "68a06274-2477-4c9d-bbc0-90eea04210c1"
        },
        "item": {
          "id": "7cbe907c-03f8-4038-bdac-40c6ae287a62",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "7df28cff-aa58-415e-bed2-b6ae74fdc1e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 841
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8defa7db-4ef3-4947-b1e5-57ac021835a5",
        "cursor": {
          "ref": "40832f52-3a18-47f2-9fd6-74ca0219e53b",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "b76a0df4-b9c7-4fb5-af24-dd673fd0ab4d"
        },
        "item": {
          "id": "8defa7db-4ef3-4947-b1e5-57ac021835a5",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "5f1c22d0-7cd6-42eb-ae2d-b48b5a62b65d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12872714-810b-4a6d-8e02-65ecf6387860",
        "cursor": {
          "ref": "6569c585-4bd4-4110-9b6c-40c472fe5cbd",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "b7aadfc8-f747-49bd-8f37-8d8d945560b8"
        },
        "item": {
          "id": "12872714-810b-4a6d-8e02-65ecf6387860",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "0a644d0b-0c4f-47e6-b0fe-f8950e693b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd606cdc-0103-43f2-8462-7d00eb8bd443",
        "cursor": {
          "ref": "ddf71618-fa78-4045-b2ee-10501e82c154",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b2dd1dca-7f1b-4807-a3ed-6c5620d76677"
        },
        "item": {
          "id": "bd606cdc-0103-43f2-8462-7d00eb8bd443",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b646660a-4482-4141-bd60-2cc3aa946ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b1056b8-07b9-481e-95ae-14cba5e6d542",
        "cursor": {
          "ref": "ada75160-d34c-4830-9bfe-db6ea4f372d2",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "3d8ccb49-dc70-4de1-bb41-e2dbd8fb8ad5"
        },
        "item": {
          "id": "1b1056b8-07b9-481e-95ae-14cba5e6d542",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "cc7d33ec-be83-475a-a7fc-abb076fd4c8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 1320
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e80b82b-dd7d-40bd-b7a2-15c64aebdf03",
        "cursor": {
          "ref": "18690c2b-e874-415d-a574-6c0dfdc0c6b2",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f52b52bc-9c3b-4dbe-a527-04e73ebdce14"
        },
        "item": {
          "id": "7e80b82b-dd7d-40bd-b7a2-15c64aebdf03",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "066a640c-62ae-474e-9689-80bf414d408b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e6a6b27-719e-45ca-97f4-e33b8a63b6c4",
        "cursor": {
          "ref": "27da292e-913f-422d-a281-34073bf13c06",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "3a3d5310-6713-4922-8cb6-974b7fa50d9f"
        },
        "item": {
          "id": "8e6a6b27-719e-45ca-97f4-e33b8a63b6c4",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "dccd0bfb-b69a-4317-8563-9ce940827d60",
          "status": "Created",
          "code": 201,
          "responseTime": 6402,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:71)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:71)"
            }
          }
        ]
      },
      {
        "id": "29f27c4d-282d-4883-a45b-d3ca3f472747",
        "cursor": {
          "ref": "428c5cac-d249-4063-872a-3344cac75325",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a44edd63-dde5-4c28-8af4-5def275c7f6a"
        },
        "item": {
          "id": "29f27c4d-282d-4883-a45b-d3ca3f472747",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "92fd10cf-d80f-42cb-9844-8151967f0421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 888,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31dc8a87-89c6-48e4-a478-8c027c86f1ed",
        "cursor": {
          "ref": "8e77a968-86ad-4118-9ed1-861c03036f5d",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "1d7643bd-bb9d-4cba-8045-659678a8ac75"
        },
        "item": {
          "id": "31dc8a87-89c6-48e4-a478-8c027c86f1ed",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "97f7723f-65d4-458f-8132-0d7bf02dd30a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1112,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "365f4f3f-013e-431e-85c1-4cd4ef2739f6",
        "cursor": {
          "ref": "ba9883d5-db63-44bf-a099-40ec914d8779",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "19fc436a-2596-423d-88f7-13b51c8c13a0"
        },
        "item": {
          "id": "365f4f3f-013e-431e-85c1-4cd4ef2739f6",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "1cbbc5d1-768e-41e0-9503-bcd2869e6a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 758,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f062aeda-0289-4f05-a4bf-81354d8d312c",
        "cursor": {
          "ref": "f970f206-c9b8-4df4-a962-d7fb7a855d5c",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "edc4b57e-1eb7-47ee-a08a-bea0695f609b"
        },
        "item": {
          "id": "f062aeda-0289-4f05-a4bf-81354d8d312c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "454d0667-caa7-4611-9ac6-f46088cd1e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24cfdbf4-238f-4b45-b20f-2fd02e11c46e",
        "cursor": {
          "ref": "496285fa-ceae-48e0-a496-44f7fbbc5b91",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8c17a871-ef64-4913-b32e-bb9690082f92"
        },
        "item": {
          "id": "24cfdbf4-238f-4b45-b20f-2fd02e11c46e",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c6958147-1c71-408e-a96d-8295c9b8a012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1e94b1-b18c-4e5c-addb-7ccb3a0467ff",
        "cursor": {
          "ref": "ffb22cb0-28d5-4677-b1c7-9865cb56f300",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "7099c2e5-39c0-405c-a8ac-efde19e6c59e"
        },
        "item": {
          "id": "4f1e94b1-b18c-4e5c-addb-7ccb3a0467ff",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a6af71c2-ab23-43e3-b915-f53fc66a13d7",
          "status": "Created",
          "code": 201,
          "responseTime": 2061,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:77)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:77)"
            }
          }
        ]
      },
      {
        "id": "9df709cf-4c56-48f0-b555-9fed8fa69fa5",
        "cursor": {
          "ref": "852cf372-c038-4dbf-a828-eeb503e01a48",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "decaacb0-0e7d-4de0-a2c7-1b330e79dd16"
        },
        "item": {
          "id": "9df709cf-4c56-48f0-b555-9fed8fa69fa5",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "a55b074b-35ad-4742-90d0-f0a17e8cb506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1755676b-08db-477d-bca6-d2bd627fe204",
        "cursor": {
          "ref": "1452eb90-a4ac-49a8-8911-59951e30110f",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b61f64f3-c691-4417-84dd-6c58c4435536"
        },
        "item": {
          "id": "1755676b-08db-477d-bca6-d2bd627fe204",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "935a362a-7787-4264-bb7f-4c8ed9b5896b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 510
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60dbc0f5-29dd-460c-9f2a-fd7697f5259a",
        "cursor": {
          "ref": "92d5af7a-0307-4f11-897c-c0a730f6e0bc",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "5ab8b3a0-bfe1-45ac-91d4-fc2ada5b3ece"
        },
        "item": {
          "id": "60dbc0f5-29dd-460c-9f2a-fd7697f5259a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "16e37fa0-448f-454d-9154-a47aa4396822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6899b76a-9966-4d4b-8829-d4770bb5fab0",
        "cursor": {
          "ref": "771dd6a8-05e6-4a77-8d5c-4f9e2054e868",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ec8d7017-5ee8-499d-852a-7829bc594e26"
        },
        "item": {
          "id": "6899b76a-9966-4d4b-8829-d4770bb5fab0",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d0e5c917-4db6-4633-af7c-22ed908b1756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fee75e9-1274-4fae-a5fd-f20ef81c2f3d",
        "cursor": {
          "ref": "0a280433-2068-4837-9752-a184d64ad9f8",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "bf1c856c-0110-40cc-8037-c66fe6ad26d1"
        },
        "item": {
          "id": "7fee75e9-1274-4fae-a5fd-f20ef81c2f3d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c0f3a5a4-9aac-4edc-8fd8-1bf5f42287c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c9e56e1-240d-4f79-906a-41a092e25f3b",
        "cursor": {
          "ref": "258211c6-8ccd-4642-ba9d-ff240497d3a0",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6f238b9d-e07e-495d-8e97-8708b19b816d"
        },
        "item": {
          "id": "1c9e56e1-240d-4f79-906a-41a092e25f3b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "21545aa9-e4af-4f33-a5a7-b221b36b687d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc127c1f-1ed3-4542-8ad5-c2bb8b622774",
        "cursor": {
          "ref": "bd239a6e-8b3f-485b-8c08-7874f3e73bb5",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "103071d0-ef41-4b09-9ab6-d469dec15d18"
        },
        "item": {
          "id": "fc127c1f-1ed3-4542-8ad5-c2bb8b622774",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "795a5479-a223-4cc6-9661-97f83d632568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d76f6cd4-057d-4618-abe3-0306fcd5dd24",
        "cursor": {
          "ref": "f3db5c2a-6f39-4f91-89da-dcf4201b0552",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f14ada46-e237-415c-98f3-f47425f30a17"
        },
        "item": {
          "id": "d76f6cd4-057d-4618-abe3-0306fcd5dd24",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "c807a293-19c8-4a0a-8767-698f8146f97a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daafd60a-5953-4a15-a7c8-85e3531ce063",
        "cursor": {
          "ref": "641abf82-6aed-45f2-9600-e2ed08a728fe",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c78d1926-ab5e-488b-9ab8-028abeb8f6f4"
        },
        "item": {
          "id": "daafd60a-5953-4a15-a7c8-85e3531ce063",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "5c1d7344-132f-4b4e-b374-920fca80765a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e26d3f76-1113-4de8-8719-ee351fcfaadd",
        "cursor": {
          "ref": "efbef590-40ba-4e03-98ce-5ae766e7c8cf",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "259d726e-80c0-447b-add1-2894a47b3bd2"
        },
        "item": {
          "id": "e26d3f76-1113-4de8-8719-ee351fcfaadd",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "7a51490f-6eac-47fb-be47-252f0bbcb531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 429,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c27134-a727-4bc7-ac6e-748bf1cb8ea3",
        "cursor": {
          "ref": "f4ad8ddc-49f8-4653-8213-e064ce9e7dc8",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "98d12dea-bd4c-498d-918f-835d8503725f"
        },
        "item": {
          "id": "00c27134-a727-4bc7-ac6e-748bf1cb8ea3",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "e17fe042-be16-4c39-9da6-4212d755caeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e87cb238-9087-4023-9360-58629295fe0e",
        "cursor": {
          "ref": "6f7afea1-dfd2-465e-bc21-c45c6e1e4071",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b09f6674-4460-403b-a0e1-1989f5663730"
        },
        "item": {
          "id": "e87cb238-9087-4023-9360-58629295fe0e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "7aaddedd-01c7-4c7d-aca6-90637a5778b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b9fb14-7c14-44d0-b46b-facb11252c59",
        "cursor": {
          "ref": "680ffc0e-2998-4d1e-b9f4-ec6eaba6ca12",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "3c4d8ee2-a668-4985-9269-db425aabf49e"
        },
        "item": {
          "id": "a5b9fb14-7c14-44d0-b46b-facb11252c59",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a9e6f6ff-de57-40ce-8580-cff2f13993d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da1b271e-61e2-4c53-8802-a6097687e04b",
        "cursor": {
          "ref": "de688c56-fd1b-4205-9595-2ec83136ea41",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "63812054-d67b-4cb5-ad6f-9081989bc1c6"
        },
        "item": {
          "id": "da1b271e-61e2-4c53-8802-a6097687e04b",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "6e8b4050-72ce-409a-9ddc-ca119bc3e0cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "320058f2-5f87-4ce5-aade-094c3759017e",
        "cursor": {
          "ref": "f7e34903-a5cd-4c67-92fd-580e21a3ba12",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "6051f437-b979-46a4-888f-61eecba0fb85"
        },
        "item": {
          "id": "320058f2-5f87-4ce5-aade-094c3759017e",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "615ddcca-07fe-4857-88b7-3a4a2fad0e35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af6bfe57-e850-4725-83a7-dfc67b141976",
        "cursor": {
          "ref": "81f3fc87-674e-4a6d-8763-02c9329cf5f8",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "7f5d5148-4b0f-462d-81fa-ea29685db7ad"
        },
        "item": {
          "id": "af6bfe57-e850-4725-83a7-dfc67b141976",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "610235ad-4b5b-45f1-93d5-8e34f0915f3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef1f3e2-9759-4044-8ce8-28d9bf3db0c9",
        "cursor": {
          "ref": "e9988c47-34d7-4100-9a40-9996ff2be7c4",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "7ffc6395-c3f5-4d77-add1-a820585c73ce"
        },
        "item": {
          "id": "2ef1f3e2-9759-4044-8ce8-28d9bf3db0c9",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "52543a2d-0a58-4eb2-9860-9956795c0d44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6f24baa-c356-4b12-875e-c073ff3db2a1",
        "cursor": {
          "ref": "90132224-b4c5-4c89-9156-8852e199b41e",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "bd356c5b-f061-4769-ae42-34f3b710b8e9"
        },
        "item": {
          "id": "c6f24baa-c356-4b12-875e-c073ff3db2a1",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "769bdf3e-19db-4f7c-860c-e9786060767d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9cd55af-14b1-47e0-98ac-a92e97a7d847",
        "cursor": {
          "ref": "f1bfa650-224a-47a4-a004-6195b0779ad5",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "88dd4a40-717e-40e9-90c3-ac3e72361a24"
        },
        "item": {
          "id": "f9cd55af-14b1-47e0-98ac-a92e97a7d847",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "06cc3124-c750-450b-b48e-97f4c5302093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2076a95d-16f1-41a1-beb2-df801abaeb8d",
        "cursor": {
          "ref": "61f116ee-61d5-49dc-b72f-e253c75ffcc5",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a7947f54-c81d-4338-aa59-5ac506fba00a"
        },
        "item": {
          "id": "2076a95d-16f1-41a1-beb2-df801abaeb8d",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "5f66595e-0098-4d0b-86fe-912f2d10da60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb4cda77-16a3-4f5c-8ae3-bcbdf76eccaa",
        "cursor": {
          "ref": "0adeeb22-1c82-4840-8f4a-c0836409350f",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "41be3eb4-3533-4510-9bc0-0a0b8e46957a"
        },
        "item": {
          "id": "cb4cda77-16a3-4f5c-8ae3-bcbdf76eccaa",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ba01f883-91e9-4513-bbaf-71688763e872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ed3643-0686-46b6-bf4b-e7bd26b20101",
        "cursor": {
          "ref": "e922a475-98cf-4a5e-a31e-10c40df44934",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ea316870-66a3-4dc9-947b-4e296b77d2e7"
        },
        "item": {
          "id": "82ed3643-0686-46b6-bf4b-e7bd26b20101",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5de93e0e-1403-4f55-b07e-ad283bf5d321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6b90089-e2f7-410a-af4e-8bb30dd0497b",
        "cursor": {
          "ref": "d425c15e-d890-45f7-8301-b7c1f1461e55",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f4752bd2-351a-4b23-a668-133b8d4eb277"
        },
        "item": {
          "id": "e6b90089-e2f7-410a-af4e-8bb30dd0497b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "55be7e3e-179a-4dad-9feb-b3b2590d8889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83ba9f5e-6a92-4996-a1a1-0951a6e031f7",
        "cursor": {
          "ref": "d19fff39-018a-466f-a888-55165e3398b1",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b97bca94-973c-4bf7-b721-e7d73ff8cee6"
        },
        "item": {
          "id": "83ba9f5e-6a92-4996-a1a1-0951a6e031f7",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "1c710f4f-d532-497a-a1bd-bc2c7e7ce61a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 428,
          "responseSize": 673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f67080-74e9-4982-9c76-fbd02c6b3f44",
        "cursor": {
          "ref": "3f4cc8c1-91a9-43f0-8c16-98b562c35a79",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "596d1137-0588-4d88-82d4-c179f60c4858"
        },
        "item": {
          "id": "a2f67080-74e9-4982-9c76-fbd02c6b3f44",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "be896705-11f7-4f37-8a52-b21faf3aab98",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb9c7673-6f2b-40ef-a527-352507a7c691",
        "cursor": {
          "ref": "c2bf61c7-1dcd-4212-81cd-dc795dacbef1",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "5440da68-0dd1-4ed7-91db-9939561eb13d"
        },
        "item": {
          "id": "eb9c7673-6f2b-40ef-a527-352507a7c691",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "5c265757-0f7f-4065-a5dd-c7dcf5094a43",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 482,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7b1e5a0-17a4-4db8-9cf6-d6e7a97c7714",
        "cursor": {
          "ref": "44fe101b-62dd-4313-bc4c-644187acc0e3",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a9d381d7-2fb6-41c1-a7d0-521cb6e94a7b"
        },
        "item": {
          "id": "a7b1e5a0-17a4-4db8-9cf6-d6e7a97c7714",
          "name": "credentials_issue"
        },
        "response": {
          "id": "1751796f-7b42-4dbe-800e-b9d1eae43daa",
          "status": "Created",
          "code": 201,
          "responseTime": 1869,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "4825ea78-6451-4ecd-930f-2584f08ac189",
        "cursor": {
          "ref": "955a7c28-694d-4689-a759-8e310b54ec5e",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "2a5d178e-c95b-41f1-bfb8-0916226fdb75"
        },
        "item": {
          "id": "4825ea78-6451-4ecd-930f-2584f08ac189",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "31b1269c-2a26-43d5-a899-8bad4d11a2e1",
          "status": "Created",
          "code": 201,
          "responseTime": 1782,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f27ec0-3ae4-4c46-8ce5-5e97dd68abe8",
        "cursor": {
          "ref": "753e5219-47fe-423c-9660-fc50c5a9ae06",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "aa390228-2c68-435d-b967-b6268bb178aa"
        },
        "item": {
          "id": "43f27ec0-3ae4-4c46-8ce5-5e97dd68abe8",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "9d681d38-d336-47fb-8eea-3c1b933bf07d",
          "status": "Created",
          "code": 201,
          "responseTime": 1971,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f66e153-6941-46a6-a05f-3191bce02084",
        "cursor": {
          "ref": "9a3f493c-6db2-4acd-aeff-7e8bf4ad2a65",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "dbf6a608-2dc0-4acc-91d2-36ca5e22c263"
        },
        "item": {
          "id": "9f66e153-6941-46a6-a05f-3191bce02084",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "3ec02b2f-acdb-43b5-b4db-9c216d79d164",
          "status": "Created",
          "code": 201,
          "responseTime": 2390,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a1d49f7-d996-4f78-9a6e-fd987203cc25",
        "cursor": {
          "ref": "f4251c32-c178-4889-91e8-d41505e8a43a",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "9a50b329-ee4b-435d-a30e-6041a0d98bdd"
        },
        "item": {
          "id": "3a1d49f7-d996-4f78-9a6e-fd987203cc25",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "6f0870a8-436f-433d-bd11-d0604160050d",
          "status": "Created",
          "code": 201,
          "responseTime": 2592,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "444185b1-6253-4cf8-a6c9-705c4256c02f",
        "cursor": {
          "ref": "2f2bce56-0fcb-4307-854d-f5e52f241dac",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "65a853c0-8922-4405-b0ed-d87a9a5b8ee9"
        },
        "item": {
          "id": "444185b1-6253-4cf8-a6c9-705c4256c02f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "219ff3c6-d3ad-4c7b-9a5c-3a5c6f09af1f",
          "status": "Created",
          "code": 201,
          "responseTime": 2486,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "658a6f91-b2f0-4c1d-b2b8-dfcbbd9057a7",
        "cursor": {
          "ref": "0aadc776-932e-4d3d-a605-f6036568636b",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b43a13d1-a765-4659-a81d-63c12030447c"
        },
        "item": {
          "id": "658a6f91-b2f0-4c1d-b2b8-dfcbbd9057a7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e5908312-d89c-4b30-b4bc-6c64433f6fb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "658a6f91-b2f0-4c1d-b2b8-dfcbbd9057a7",
        "cursor": {
          "ref": "0aadc776-932e-4d3d-a605-f6036568636b",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b43a13d1-a765-4659-a81d-63c12030447c"
        },
        "item": {
          "id": "658a6f91-b2f0-4c1d-b2b8-dfcbbd9057a7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e5908312-d89c-4b30-b4bc-6c64433f6fb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04197258-62cb-4faa-9839-1ec22de9f6a7",
        "cursor": {
          "ref": "7f327b8c-5bc4-437d-a67c-666f2b5c0537",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "26adcd8f-585c-48de-98fa-daf405555593"
        },
        "item": {
          "id": "04197258-62cb-4faa-9839-1ec22de9f6a7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d77ff053-0b71-4d54-9767-29e4b22a3da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 429,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c97dc56-f49b-422c-bfbd-f8433b8d5750",
        "cursor": {
          "ref": "db34e828-5d56-454a-92af-b4e1e8d255b9",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "68915387-e0d3-485f-8261-f2614380d39a"
        },
        "item": {
          "id": "9c97dc56-f49b-422c-bfbd-f8433b8d5750",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7a255819-27f2-4505-836d-232d5c673357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 342
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8649a589-c036-4b2e-a57d-c24c95d4e745",
        "cursor": {
          "ref": "314f4bb5-71b7-4b21-8655-a859b20244de",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "1d785639-9453-492e-b006-bf4cab56b234"
        },
        "item": {
          "id": "8649a589-c036-4b2e-a57d-c24c95d4e745",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "30ddf881-4c09-44fa-9078-16ea9e37e2bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 839,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76aed488-6996-4db1-bc61-2619967ecaf3",
        "cursor": {
          "ref": "4cb2861d-4215-44ff-b907-4d569f8cceb2",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c77c1596-9a00-4077-9337-c57c5102813d"
        },
        "item": {
          "id": "76aed488-6996-4db1-bc61-2619967ecaf3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "40950131-9ac1-4d72-a18e-2b8ecaadaf8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 341
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8969755-fc9e-4f33-9b30-649cc8e7cf3c",
        "cursor": {
          "ref": "410b0b59-ebbc-416a-b0fa-ed490059eb95",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "36927e5f-f093-4c0a-ab9c-2549de7c5ce0"
        },
        "item": {
          "id": "b8969755-fc9e-4f33-9b30-649cc8e7cf3c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "415354e8-f597-4227-8d40-57f5e87718b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc72be3d-6bf5-47fc-a5bc-79984d6a9b64",
        "cursor": {
          "ref": "4fa5daa9-569e-4b17-be25-1f42d6bc2bdd",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "0b0c78e7-9367-4dd9-8853-64b156f111cd"
        },
        "item": {
          "id": "fc72be3d-6bf5-47fc-a5bc-79984d6a9b64",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9bdeb30e-72ea-495e-8b78-fd290f219db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de46962e-5d70-45d0-aebd-8ffb9c983a84",
        "cursor": {
          "ref": "108e44c8-dc48-4f8f-a5c1-25eb94a5f983",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "97203f9b-4726-44b1-be89-6a3295fd7168"
        },
        "item": {
          "id": "de46962e-5d70-45d0-aebd-8ffb9c983a84",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d2617a8d-4b81-4e16-b558-fe0c9609c852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74594c50-8e75-43f7-bb33-ba516d754c87",
        "cursor": {
          "ref": "c585ab1b-7763-4ee2-af89-7f464e9e549e",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3d643a66-197a-4a93-ae71-993c0e42710f"
        },
        "item": {
          "id": "74594c50-8e75-43f7-bb33-ba516d754c87",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1d5edefd-c5ee-451d-834c-dc1a826a498f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c01dbf-b916-4922-afe2-4932a5db5e96",
        "cursor": {
          "ref": "a726be92-0a81-4415-8b99-5746f5e1a65f",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e3004c55-8bc8-4371-8cf6-120b80d36456"
        },
        "item": {
          "id": "30c01dbf-b916-4922-afe2-4932a5db5e96",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "bcc11bc0-673e-470b-9426-a676c67a9574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fea7bf9-57ee-4b2f-8974-15c676022bc8",
        "cursor": {
          "ref": "28c10322-8362-412d-a37c-5043a6826d10",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "039d1653-5569-4e11-bb5e-0c9afca56d68"
        },
        "item": {
          "id": "7fea7bf9-57ee-4b2f-8974-15c676022bc8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d68705f4-9667-47f8-80c8-470954832d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef4948e-155c-43d6-9bc2-721581c2bb6a",
        "cursor": {
          "ref": "8510c0b6-9e01-4115-83b0-f720187733c4",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e62acc0d-befc-4e7f-b646-59da678775be"
        },
        "item": {
          "id": "7ef4948e-155c-43d6-9bc2-721581c2bb6a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4197cfa7-28fe-4895-a084-466129b8852a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08d841e3-ee80-4e81-a582-bac360a8b741",
        "cursor": {
          "ref": "8af25c7d-8d0d-456b-a635-4940c90e52fc",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "70ba1017-3feb-4921-996f-078c7d68d14a"
        },
        "item": {
          "id": "08d841e3-ee80-4e81-a582-bac360a8b741",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1f7720bd-1ee9-4b20-9704-717a8b8a5350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3b6c57-c3c3-4bf6-82df-ff920b15b897",
        "cursor": {
          "ref": "32954b65-b1e9-45d8-abc0-5ca6e83b7c78",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1a645dbb-8212-48b8-9a0b-8693db4d56f8"
        },
        "item": {
          "id": "3e3b6c57-c3c3-4bf6-82df-ff920b15b897",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "41fa9210-5397-4646-ba1d-9165dac20a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6382f76-81b5-4bbc-b88a-e391b4cd1eca",
        "cursor": {
          "ref": "fb54327c-f36b-467c-90fb-881269e90294",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "7667a965-e993-4136-89bf-baa7182acaeb"
        },
        "item": {
          "id": "b6382f76-81b5-4bbc-b88a-e391b4cd1eca",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "91aa4076-c491-4964-a337-4c98d6117ba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd21277d-eb37-418f-9859-ac7dcbad576a",
        "cursor": {
          "ref": "85aad3ce-9ca6-4e40-b1f2-b4a109cd443f",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "c5a86604-6dfa-4816-8b5d-6e0fb940c463"
        },
        "item": {
          "id": "cd21277d-eb37-418f-9859-ac7dcbad576a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c5fac020-b128-43e8-b6e8-8002d331a02e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaac018c-5156-44a2-a3d9-d9db17309de8",
        "cursor": {
          "ref": "7b56e70d-d160-4599-ab52-714220e34c12",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "7ecce64d-0aba-4a4b-b112-b1de618dcce4"
        },
        "item": {
          "id": "aaac018c-5156-44a2-a3d9-d9db17309de8",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5ba62116-0376-4038-be7b-f417e4c6d10a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26ebf4a3-cfc1-499c-9288-1a109afa0f1a",
        "cursor": {
          "ref": "5fadd146-9553-4d61-aa37-89064d586fa4",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "14108abe-19f0-4b7c-8a66-99eff4a68ee5"
        },
        "item": {
          "id": "26ebf4a3-cfc1-499c-9288-1a109afa0f1a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9faaca59-b900-4b36-8e95-94f66383d8c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6cfbb47-0b1e-4d59-8639-95f6030d2cb8",
        "cursor": {
          "ref": "56e00465-a499-40b6-8d1d-db0367824e7b",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "24769017-43ff-420f-9be5-65f291252207"
        },
        "item": {
          "id": "d6cfbb47-0b1e-4d59-8639-95f6030d2cb8",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b3def87e-c04a-4481-be56-5b9a9626190f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ddc9fc4-a73e-4b38-ab11-22ca63b1d1a9",
        "cursor": {
          "ref": "2662b4d3-0e20-457c-acf9-45077e135e75",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "8d003966-4c15-4585-8d18-030e2cf0b506"
        },
        "item": {
          "id": "6ddc9fc4-a73e-4b38-ab11-22ca63b1d1a9",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c4d84811-d157-4e02-9077-a6b144bbdfe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "961da124-9c70-4e22-9a5c-948db1020cfc",
        "cursor": {
          "ref": "d9c3697b-5790-4325-aa69-08b59ace7df3",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "250e4535-5ef1-417a-8ba7-362a77879a69"
        },
        "item": {
          "id": "961da124-9c70-4e22-9a5c-948db1020cfc",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f7aecb38-07fc-4e14-8c6b-180ea56e13ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ed1dc2-e9ef-47ca-8b3a-cc788785eaa1",
        "cursor": {
          "ref": "7f883887-f56c-4ef1-a764-eb6da3d8f0c6",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "cb0f383a-eb6c-45ce-94b3-d6543624436c"
        },
        "item": {
          "id": "60ed1dc2-e9ef-47ca-8b3a-cc788785eaa1",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a65cf8ea-c4bf-407b-999b-6ac6708c864c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712bc0b9-8bd6-4df4-b776-91f8f2042e42",
        "cursor": {
          "ref": "6c51de3b-bc88-40b1-a5f1-9689bdcfa004",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e7d98334-c962-4026-bf76-12a2274f6178"
        },
        "item": {
          "id": "712bc0b9-8bd6-4df4-b776-91f8f2042e42",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "69858505-d9f2-42ea-9a04-65778eb3ee20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e821485-83c0-44d4-b6e6-b87efba430b2",
        "cursor": {
          "ref": "fc963f36-1a8c-4749-82ec-a1e9d7b6f5b4",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ecb4ddfa-99e7-423e-a122-578f2d2f8b27"
        },
        "item": {
          "id": "1e821485-83c0-44d4-b6e6-b87efba430b2",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "cad950ad-7316-4889-a5a0-ce3c156e2050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8546fdcc-0c35-47ba-8184-6d5c52479d79",
        "cursor": {
          "ref": "851309d6-4f74-4b1e-b64b-c02aaf4e4e50",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "fb954f21-c4bd-44ef-a948-f39c2d8da102"
        },
        "item": {
          "id": "8546fdcc-0c35-47ba-8184-6d5c52479d79",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f938e620-6a5e-4911-a3f7-aba6ba1eca27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d2616e-7601-4615-b274-be76a22673e2",
        "cursor": {
          "ref": "6c19ee7f-aab6-43ab-b65e-0f7f67f5fc9b",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d1dc148e-9497-41d6-9ff6-48f3f9807eed"
        },
        "item": {
          "id": "60d2616e-7601-4615-b274-be76a22673e2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1db53b8e-bfcd-4401-b2eb-4aae9c576e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca8aacef-dcab-41d3-a38a-ff22cc8d1728",
        "cursor": {
          "ref": "73995d4d-aa26-410b-ab31-ad17da797e1c",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b08ed9b3-f4b4-4341-b1d6-e836d321dce7"
        },
        "item": {
          "id": "ca8aacef-dcab-41d3-a38a-ff22cc8d1728",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5ee90fe1-b214-43e4-bc6a-8e4b7e3205b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 429,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cc3002f-76a3-461d-b126-604d298761a0",
        "cursor": {
          "ref": "cad15145-2d4a-4120-a02b-bd4edbaa7dfe",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "1bb6a160-c6a5-4dd2-989c-efc2bdc4346a"
        },
        "item": {
          "id": "0cc3002f-76a3-461d-b126-604d298761a0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d4d397bf-c796-4ea1-b528-7ed25f0cf5a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf45cfee-0db4-446c-a3f2-cab21717f757",
        "cursor": {
          "ref": "be03c5b9-94e3-4ec8-b7cd-e62040516a74",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "5939b9c3-82ff-46a8-8b0b-2809560ee8cb"
        },
        "item": {
          "id": "cf45cfee-0db4-446c-a3f2-cab21717f757",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0ccee07a-0f5e-45f5-b92d-54ab34b37f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1050c2a5-e3f5-4143-bd9e-6cf7ccda75e9",
        "cursor": {
          "ref": "482f7937-4f65-434e-8529-6e4023ff027b",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "fdb81d38-83f0-4021-9c3d-a32ee9462525"
        },
        "item": {
          "id": "1050c2a5-e3f5-4143-bd9e-6cf7ccda75e9",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2c623e15-5d1a-4aee-9f5f-d69718729397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b9691d9-22dd-430d-8f3f-51680285af90",
        "cursor": {
          "ref": "c27baf5a-9a20-4dcf-8d18-c80df35c6569",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3cc58160-adb8-4e06-a2d2-c513d74d126f"
        },
        "item": {
          "id": "7b9691d9-22dd-430d-8f3f-51680285af90",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c8c3c7e3-c10a-4398-ab57-43b7225a6527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd9ed6a6-f4fa-4906-a14d-5b3132e2e9a9",
        "cursor": {
          "ref": "9794a543-4fc5-4897-bda2-78cf8caaf9b4",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ede16b2a-c0ca-4e4f-86b8-8197919fc614"
        },
        "item": {
          "id": "dd9ed6a6-f4fa-4906-a14d-5b3132e2e9a9",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "37f04dae-c4dc-47fa-8c27-ac1a22106533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "934ef6e7-d446-4cfd-b76f-0dffa27e06c4",
        "cursor": {
          "ref": "f018caae-1789-4e05-82be-e6eee9ecf3d9",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "1373899d-2554-40c5-a551-9ba1be65dfdd"
        },
        "item": {
          "id": "934ef6e7-d446-4cfd-b76f-0dffa27e06c4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "38229075-8b03-414b-9b3a-fe867bb0533a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac4da8ae-da86-48e3-9c52-7ae3b2a77c00",
        "cursor": {
          "ref": "3bbf8fa2-172e-4945-a807-c1030b0e9cac",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "6b131313-d079-4a8d-9d73-aa9f60ce5bb8"
        },
        "item": {
          "id": "ac4da8ae-da86-48e3-9c52-7ae3b2a77c00",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "0298960e-4bd1-4b49-8c65-60f84ac1f7b9",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 589,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb4eb2c3-6a7a-4ede-ab38-9e24f5ffdbbf",
        "cursor": {
          "ref": "7701ce26-d3ae-4219-a106-24bc5bd9818d",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "bd2274a4-67f5-427c-ac1c-0434c2b03963"
        },
        "item": {
          "id": "bb4eb2c3-6a7a-4ede-ab38-9e24f5ffdbbf",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8d4abfc2-27c0-4463-a02d-8313d23b4e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb4eb2c3-6a7a-4ede-ab38-9e24f5ffdbbf",
        "cursor": {
          "ref": "7701ce26-d3ae-4219-a106-24bc5bd9818d",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "bd2274a4-67f5-427c-ac1c-0434c2b03963"
        },
        "item": {
          "id": "bb4eb2c3-6a7a-4ede-ab38-9e24f5ffdbbf",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8d4abfc2-27c0-4463-a02d-8313d23b4e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7ffabc-f59e-4b16-9f2d-5c6688bddbab",
        "cursor": {
          "ref": "235e61f9-376e-4d6d-a71e-dbe853d0daee",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c2c0a889-aac0-42cd-accd-f44fff711561"
        },
        "item": {
          "id": "ea7ffabc-f59e-4b16-9f2d-5c6688bddbab",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "613b626a-69bf-4877-acd4-5b218bf825d3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 234,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "5ffe8494-28e3-4129-9558-6e59f8f194b7",
        "cursor": {
          "ref": "09dbdd09-2acb-41f0-9599-b1ea273b09d6",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "bb7b7b35-238e-4d72-afb5-4ce588beec71"
        },
        "item": {
          "id": "5ffe8494-28e3-4129-9558-6e59f8f194b7",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b335e2b8-d87a-45b4-a023-923c16525c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d52e50e7-3069-49a0-99b4-cd5f983d863b",
        "cursor": {
          "ref": "7904fd3d-0f4f-4364-800b-71d9ef9eb583",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ac801a59-4491-4607-8acc-0b43d17ee8bb"
        },
        "item": {
          "id": "d52e50e7-3069-49a0-99b4-cd5f983d863b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b468bf7a-b289-445e-bf84-a3edd421426b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd467626-0698-4815-b06f-5ece985b2efb",
        "cursor": {
          "ref": "bfd9339d-6b25-4a3e-b5bd-82f939db7669",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "8a5a59eb-be99-4ee7-9561-3b40128beb52"
        },
        "item": {
          "id": "fd467626-0698-4815-b06f-5ece985b2efb",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "121e8b3e-39a1-4ffe-94e4-ae71024e11e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 227,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f48be7-8127-4e76-a6b9-2b11fa5de1d8",
        "cursor": {
          "ref": "e2e06e89-5540-4f0e-be25-8cbdd83a137c",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "430cd002-500a-4cec-a6a5-198b24448ade"
        },
        "item": {
          "id": "c7f48be7-8127-4e76-a6b9-2b11fa5de1d8",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "e20e34f8-4313-4208-9d65-84fdda9ff72c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95048e59-4cc1-4240-b039-797ed9e015d2",
        "cursor": {
          "ref": "d343ba3a-6eb0-419a-a864-d2c96e1e6ee5",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f5993be0-0b3f-4179-b5d9-32286bccaf01"
        },
        "item": {
          "id": "95048e59-4cc1-4240-b039-797ed9e015d2",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "8de5a21a-9adc-4c7f-8ae9-33748568af2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a8455a-ecae-464a-82c6-aa282cfc1261",
        "cursor": {
          "ref": "88dd8727-5f14-499d-918f-524274254b35",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f477d1a9-9d30-4e0c-a492-1ee55e16b07a"
        },
        "item": {
          "id": "50a8455a-ecae-464a-82c6-aa282cfc1261",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "178da707-5b62-4240-a2ca-eeec8b5a8e14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "487e9bfb-ffe9-4ffb-9b57-100049dc6d7d",
        "cursor": {
          "ref": "5c92eee0-6e3d-4cdb-b615-0e1130f62060",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "430961ad-00d5-4829-9cbb-540709060997"
        },
        "item": {
          "id": "487e9bfb-ffe9-4ffb-9b57-100049dc6d7d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9ac73d71-198a-4945-bc5d-dcc30b547fea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e88d5a04-b2fc-4139-ac53-e997545c1d67",
        "cursor": {
          "ref": "cfccf9fd-e6e2-4db1-b0fc-bb37cb60829f",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "9ca75100-704b-43dd-ad71-eee87dddbf9d"
        },
        "item": {
          "id": "e88d5a04-b2fc-4139-ac53-e997545c1d67",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "710e5fa5-0cc3-4d5e-a9a7-351826f43ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb3b841-1326-4ba5-a321-431f3695c19e",
        "cursor": {
          "ref": "cd5e53ce-2e64-4891-b7cd-24c9015f37eb",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "14216d99-2b25-4058-b94b-c207de746dab"
        },
        "item": {
          "id": "9cb3b841-1326-4ba5-a321-431f3695c19e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a9d7cb4f-d947-4df8-8703-e454773be4c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 834,
          "responseSize": 1450
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43769b0a-c903-477c-b391-02f2c86c5aa3",
        "cursor": {
          "ref": "d92837ba-97aa-4630-a3c3-91c4b7ae4725",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "edda029b-3f61-4a0b-8f77-762569c32089"
        },
        "item": {
          "id": "43769b0a-c903-477c-b391-02f2c86c5aa3",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "44eb99cc-ee81-49a1-9033-9f85bcd87b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 1437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "663e1f9f-65b0-4c98-8866-591899615c0f",
        "cursor": {
          "ref": "ae58652a-53cd-46b3-8b1f-5821c79ac332",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "36513ce6-be74-42f8-99f2-47fcccb5543a"
        },
        "item": {
          "id": "663e1f9f-65b0-4c98-8866-591899615c0f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e4c06622-48e6-494b-bd32-5d9d2b07cbef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 1690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a76a64-7949-4fe5-86d7-ae19e0e66c00",
        "cursor": {
          "ref": "3912ac92-6faa-49cf-b469-4d34af08b0c8",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "413e0a99-95ba-41ec-aa24-388e7dffb75b"
        },
        "item": {
          "id": "04a76a64-7949-4fe5-86d7-ae19e0e66c00",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "4ad3eb84-b337-4fe5-90a8-33a8308fa2c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fdf12f6-3b37-4bbc-8f42-f297d7051388",
        "cursor": {
          "ref": "5144ef1c-eb38-4602-98ab-64fddc16e2d5",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "7bbfc818-ffc2-4368-b48d-2e16f5cefe58"
        },
        "item": {
          "id": "9fdf12f6-3b37-4bbc-8f42-f297d7051388",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f67c3579-fcae-4aef-9f80-571e7af5154f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 1679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158520ad-4323-4a3d-8d3e-779fb4b0fce4",
        "cursor": {
          "ref": "263aca1e-49f8-4ebe-8891-7a5ec52d2de0",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d2cb272e-2658-446d-bd18-a71796715842"
        },
        "item": {
          "id": "158520ad-4323-4a3d-8d3e-779fb4b0fce4",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "488ab8e8-4e6e-4b0b-964e-88d18918546b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c6fa56-9310-49ef-8bff-5761e0adf6e7",
        "cursor": {
          "ref": "9626b074-e36b-4db3-858b-6893ac403595",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "cc3e846f-15fa-43e2-8230-55aea8aa18f7"
        },
        "item": {
          "id": "a0c6fa56-9310-49ef-8bff-5761e0adf6e7",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "99447190-a907-41a7-82ec-d8c0e65e4522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 1731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef13c1c-a134-4e3a-9207-d6ca5ed3388f",
        "cursor": {
          "ref": "7ffd6524-0956-42a3-8747-a718e6deb935",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e2dd169b-0789-4fbb-a214-8b595ad5b7f6"
        },
        "item": {
          "id": "7ef13c1c-a134-4e3a-9207-d6ca5ed3388f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c6af6650-25af-488d-bf2f-60845d0db557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aded0a8-ec86-4dc2-a53b-2cd0904d9f16",
        "cursor": {
          "ref": "dc306b90-3de2-43eb-9c31-d1951b1f3cce",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ed39cc41-1d2e-45c2-95db-74cd7914bee3"
        },
        "item": {
          "id": "9aded0a8-ec86-4dc2-a53b-2cd0904d9f16",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "81916fa4-97a4-4ae9-8c78-d0a05bea9a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1250
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b0fc373-55ec-4422-acd9-bb909c197ca2",
        "cursor": {
          "ref": "5f3b58fe-0e14-4e7b-bc3a-4fd703403aed",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "4417b7d0-02f3-4e32-b884-0abe592cdf0b"
        },
        "item": {
          "id": "8b0fc373-55ec-4422-acd9-bb909c197ca2",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f4d836b9-b672-4b95-8323-00763a42b15d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 203,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "044b2fa8-5b11-4f5d-95ac-49b8d279e2cc",
        "cursor": {
          "ref": "402665ab-d28c-48c9-aac8-492650056a4e",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "67f85c64-b621-45ed-8326-d6f8cb9a3e01"
        },
        "item": {
          "id": "044b2fa8-5b11-4f5d-95ac-49b8d279e2cc",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "6bf336e7-5f50-4143-96a1-d55c4205e39b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1249
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77006332-5524-45a2-bde7-a4ca64c3813e",
        "cursor": {
          "ref": "b6b8a8e5-e22f-4f44-b0f3-484451bb8ad0",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "859826a4-724f-4fda-b762-e9a54f643ab3"
        },
        "item": {
          "id": "77006332-5524-45a2-bde7-a4ca64c3813e",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "10ff8b89-de24-4995-863e-bafdae7d0538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b86cce91-0bff-4a1c-9454-38ddb1a39d1b",
        "cursor": {
          "ref": "871b900b-6f9e-4708-9710-70320cd01d45",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "ddd4d7c4-56dd-4227-970e-19e0cf749305"
        },
        "item": {
          "id": "b86cce91-0bff-4a1c-9454-38ddb1a39d1b",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c8cdf45c-8dab-4613-a808-9e6ba2bbbaa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75839ec8-e181-42bf-871d-4274e7f56bb3",
        "cursor": {
          "ref": "9112fbb5-ade0-4168-978a-b67dd7b98ead",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "9bdea3d7-96d2-4421-8709-6804257c0151"
        },
        "item": {
          "id": "75839ec8-e181-42bf-871d-4274e7f56bb3",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "22439950-1ed8-47cd-a013-84dd18dc120c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "859f1b9f-f14b-4d0f-b5ff-61e28b8847de",
        "cursor": {
          "ref": "e6047845-158d-48d6-b5d7-57e6d36ebe73",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "39f9c8d3-1b47-4677-9900-b8b4a191ae3a"
        },
        "item": {
          "id": "859f1b9f-f14b-4d0f-b5ff-61e28b8847de",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "05bf1d2b-79af-4d09-b210-847abc9a4751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb676bd-fe74-4b18-9be5-d68a48cfaf01",
        "cursor": {
          "ref": "2b437f40-9b7b-4bd6-b7ad-132f78e32ac1",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "7fa0a382-8219-45f7-bcb9-79d2e220c914"
        },
        "item": {
          "id": "acb676bd-fe74-4b18-9be5-d68a48cfaf01",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8f516abf-64d8-482f-a907-afd8ea3ddc25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 215,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c32ae33c-27a8-4018-9629-2749fc0ed935",
        "cursor": {
          "ref": "cec8c9b4-aabe-42fa-a354-ced054b41bb1",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "75c0ffff-850f-4a6b-a6be-d3336fb64a9f"
        },
        "item": {
          "id": "c32ae33c-27a8-4018-9629-2749fc0ed935",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "56c47356-3db6-4e00-a260-689b19734945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 223,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "841d7cd2-dcde-4382-9a76-ad30906c7d55",
        "cursor": {
          "ref": "0580465d-0f21-432c-aa48-a7e6694d089e",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e5bfa413-d6cd-43eb-8bf2-02b0877aed32"
        },
        "item": {
          "id": "841d7cd2-dcde-4382-9a76-ad30906c7d55",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b38b0917-07b9-4aa2-ac71-61a2b929407c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1239
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b31391-6eb8-47a6-bce1-2f431910dd8c",
        "cursor": {
          "ref": "20776672-1a4b-4661-b8aa-cd3075db30db",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "3e4eb792-5fdd-45de-a944-8b83d97e66ea"
        },
        "item": {
          "id": "80b31391-6eb8-47a6-bce1-2f431910dd8c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "33da0584-74c3-485e-a110-30cb0ffe1186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 230,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebba19c2-a30c-4cd0-9835-dd6896804c9b",
        "cursor": {
          "ref": "f730761b-451a-4396-92c4-c558d9edf9dd",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "34b40cc1-cf94-4b12-8b71-fefd817efcf8"
        },
        "item": {
          "id": "ebba19c2-a30c-4cd0-9835-dd6896804c9b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d52ca97e-5e39-4d80-9e84-dfc78db2a6f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd6b174a-a97e-4863-9cd7-a5fa540e79ec",
        "cursor": {
          "ref": "560ca3fa-2d94-461b-9034-9e51b01493c8",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "ae5cbe8d-7a67-4bcb-9c63-5e184a3d9609"
        },
        "item": {
          "id": "cd6b174a-a97e-4863-9cd7-a5fa540e79ec",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e574c854-e8a7-469d-9344-7d85b0b0b428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 222,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca99b62-c4f8-4bbb-bf92-7dbdf2edc02d",
        "cursor": {
          "ref": "ad35d71b-26d8-427b-9d72-ff25e4f2d6af",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "03b0ccf8-3c0a-4388-a376-eadee29eed1a"
        },
        "item": {
          "id": "9ca99b62-c4f8-4bbb-bf92-7dbdf2edc02d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "29ddda4a-f6fa-4930-b570-ddc797b61af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1255
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2534b43-9a95-4e95-a9e0-e23f501aceec",
        "cursor": {
          "ref": "fffae22f-7f87-4d47-b5eb-502b9cb72241",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "105acd03-17a9-4fb1-820c-fb568e8477a5"
        },
        "item": {
          "id": "d2534b43-9a95-4e95-a9e0-e23f501aceec",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f7282abd-54ba-45a7-8e0d-4accc0789e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 209,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "384921d8-2569-46da-a0a1-830bdd163919",
        "cursor": {
          "ref": "a461f417-a025-4fd3-84ab-9c4d46aa8aeb",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "0d93d193-3d94-4f3e-bc86-fb4fee63f250"
        },
        "item": {
          "id": "384921d8-2569-46da-a0a1-830bdd163919",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "63735f38-df4f-4995-a7b2-1265afaaca11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 212,
          "responseSize": 1282
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef0c5d8-be99-418a-9c8b-47be046804c2",
        "cursor": {
          "ref": "a417589b-6c7a-4d99-ab33-2395abc88de5",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "7b99900e-3677-4b2a-be70-77d559a90dc0"
        },
        "item": {
          "id": "4ef0c5d8-be99-418a-9c8b-47be046804c2",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ae649005-75c7-4977-b00b-2aeed2394878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 219,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c97fff91-49ac-4ff2-9c2c-ebcafbbca73c",
        "cursor": {
          "ref": "ef945239-2afe-42dc-9833-5897b51a2387",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "78b266ef-c227-4d3a-88f5-0a1ade782894"
        },
        "item": {
          "id": "c97fff91-49ac-4ff2-9c2c-ebcafbbca73c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "77d15b79-0d2a-4c3c-8917-6a08e7bd872d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1668
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b9a0d4-6486-419a-b208-e9caff8dfb9b",
        "cursor": {
          "ref": "de83e2ca-8a70-4805-8045-2ddf3363c060",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "95e577bd-982d-4f85-a400-9cbf2d6be0ec"
        },
        "item": {
          "id": "01b9a0d4-6486-419a-b208-e9caff8dfb9b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "fdb47263-3c29-48a1-ad75-865d1457eb93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 220,
          "responseSize": 1654
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ebab2f3-870e-4ae9-8904-c68b13a622fc",
        "cursor": {
          "ref": "df442ce7-0ecd-4236-8299-8a19feea8725",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b6e1eb24-b93f-4622-b9ec-6d80a0d9d0a6"
        },
        "item": {
          "id": "5ebab2f3-870e-4ae9-8904-c68b13a622fc",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "48fc3674-18dc-4190-9c3d-b5e7146e1114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 222,
          "responseSize": 1652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "875a16ef-8710-4c01-934d-5cde712d5faf",
        "cursor": {
          "ref": "23f8171b-9558-4dfb-9ba2-2404c70cb20f",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "46e530eb-02ec-473b-823c-86dcc4c09849"
        },
        "item": {
          "id": "875a16ef-8710-4c01-934d-5cde712d5faf",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "097df700-9bf6-4b7d-b781-61cf2b972ca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15098e77-6a3d-4ac8-ae17-8b63bb6fb9c6",
        "cursor": {
          "ref": "53471b9c-1b04-49ca-b8a2-0bc787645ee0",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "981deb42-7615-4d5d-bd73-4422a29237a9"
        },
        "item": {
          "id": "15098e77-6a3d-4ac8-ae17-8b63bb6fb9c6",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "98f94230-99ed-4473-b701-a43be07e8992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a129ed7c-88e6-4577-a18a-1edfe02a80e2",
        "cursor": {
          "ref": "1f60d493-9b80-43d9-91c1-f43d221e4e4e",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "7e014b58-7271-4c17-972d-dd9c40395c6b"
        },
        "item": {
          "id": "a129ed7c-88e6-4577-a18a-1edfe02a80e2",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "0063a9fa-96c7-45fa-9ac3-3effc47cbada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 212,
          "responseSize": 2027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c74012ca-b123-4f0b-a47b-d76da80fd45d",
        "cursor": {
          "ref": "9300486f-c5c9-4325-874d-f5b28b448a57",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "df062605-857d-4c85-8ac8-09b20060da30"
        },
        "item": {
          "id": "c74012ca-b123-4f0b-a47b-d76da80fd45d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "5b6238b0-ff70-4de3-b401-7c1f9d18167e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 2013
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f14ba8c-5e19-43ac-89b2-d35b84dbd4d5",
        "cursor": {
          "ref": "dae57190-b6de-4e8c-a849-b2fb85725c85",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "9b053a60-11d7-4a1b-9cb2-29ac910e0017"
        },
        "item": {
          "id": "0f14ba8c-5e19-43ac-89b2-d35b84dbd4d5",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "aceac768-fa14-4652-aa62-11008dbdf2a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 2011
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76113665-54ec-4187-af19-f8b622dd1192",
        "cursor": {
          "ref": "ec351ebc-1bf9-4ddc-b84a-cf1ff1714d7f",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "055fc97b-bf06-4329-a5ca-99c6299d33df"
        },
        "item": {
          "id": "76113665-54ec-4187-af19-f8b622dd1192",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3502dad9-0e68-493d-bb1c-7c84ad373477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 2012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99cd8d40-7163-46de-8f4b-97a94646ff38",
        "cursor": {
          "ref": "cad5dfdc-9119-430b-9dc7-f84e01374e61",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d11a9e6a-3423-41b8-bd22-27f15bc414d8"
        },
        "item": {
          "id": "99cd8d40-7163-46de-8f4b-97a94646ff38",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "9d484304-050a-4f98-aba6-590245502931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 220,
          "responseSize": 2033
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22015ca6-6e81-40c5-a737-7a56b89da066",
        "cursor": {
          "ref": "cbbc34d9-9ea2-488e-bfdb-a195e5852374",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9660d703-5c21-4d03-87f0-ae96f6c3f80f"
        },
        "item": {
          "id": "22015ca6-6e81-40c5-a737-7a56b89da066",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a4c3e8b3-d3e7-4b69-9899-e759a81b7bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 203,
          "responseSize": 1237
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57957be3-7f9c-4769-a4bd-0048d177906b",
        "cursor": {
          "ref": "4b965cbe-aa28-4e98-9f13-5dcc65ca6019",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "365b41fc-746b-4348-9890-057899bb60ff"
        },
        "item": {
          "id": "57957be3-7f9c-4769-a4bd-0048d177906b",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "cd8f9511-7897-4789-82c2-b9e9466a5cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 219,
          "responseSize": 1261
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8139b24-439d-4e55-af11-ca722a8315ec",
        "cursor": {
          "ref": "a6b32e66-b580-48cf-a4fe-089abd9735d2",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "768c8ec7-e3e9-42cd-9b6d-4a5110d346bc"
        },
        "item": {
          "id": "e8139b24-439d-4e55-af11-ca722a8315ec",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e05db785-b592-4f00-831f-1c57e86a4ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 1242
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c41bdee0-a593-4668-94f6-c622ec8f4994",
        "cursor": {
          "ref": "c765fd7c-1dbe-405b-962f-fc0d4b310a21",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "dba6d50a-bc6e-4f65-85de-6d66ea0c13ea"
        },
        "item": {
          "id": "c41bdee0-a593-4668-94f6-c622ec8f4994",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f42ff3d1-0182-438e-90d6-03e3bcadf6b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 222,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82aeebad-4d00-4dda-86fc-5629287024ae",
        "cursor": {
          "ref": "b15ae7c2-d3e2-448b-a4f3-c8ee70b964fd",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "6804a3bc-adce-475f-afb5-f541da876b8e"
        },
        "item": {
          "id": "82aeebad-4d00-4dda-86fc-5629287024ae",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "cb202f36-5d44-465b-9083-35a2de7c3960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 211,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3214d66e-3825-4014-90c6-e54a2b76a0df",
        "cursor": {
          "ref": "c0907c81-d7f9-413f-8652-5a02f44c530c",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "524df525-72cd-46cc-919c-a34807b43969"
        },
        "item": {
          "id": "3214d66e-3825-4014-90c6-e54a2b76a0df",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f2cebbcc-c402-494d-b6ba-60d50db5c251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 206,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f566c9-ceee-49fa-a6be-2e097818fa27",
        "cursor": {
          "ref": "afc8e7fb-ca92-49e6-abf0-b020b4f164c7",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "b835c8b9-8c64-4d76-800e-8763988ee747"
        },
        "item": {
          "id": "f0f566c9-ceee-49fa-a6be-2e097818fa27",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "345b3e2f-47c8-43a6-a5df-d0ffe432dae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab27196-bbff-4308-bf0b-3c4d48b533ce",
        "cursor": {
          "ref": "8ba090d7-3408-4607-a9a1-aefa1cf678f5",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "af1ca983-3b84-446d-ae95-49058627525f"
        },
        "item": {
          "id": "cab27196-bbff-4308-bf0b-3c4d48b533ce",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "3201af3c-1648-49a3-b46e-900d31824331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 226,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd77978-282c-4e8e-a780-72b5f0f860c4",
        "cursor": {
          "ref": "355c8b30-6b82-40c4-b98b-586708e05077",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "110e3801-b1a0-470a-8247-01f054efb688"
        },
        "item": {
          "id": "2dd77978-282c-4e8e-a780-72b5f0f860c4",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1eaaccdc-dd04-4d0d-9abe-f0c768e196a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 209,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26afdbcb-ab31-4018-8c3d-04ab85dd7165",
        "cursor": {
          "ref": "2ba0615e-145c-4a8c-ae14-c99fd76e2690",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "82499ed4-0823-4ade-86bc-0d4ae215ba95"
        },
        "item": {
          "id": "26afdbcb-ab31-4018-8c3d-04ab85dd7165",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "65ae565c-5c88-4cb6-82b9-af9d59bcb74d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 223,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09efc629-194a-45d2-9758-c00b5384dc9f",
        "cursor": {
          "ref": "b846c07c-40b9-4663-8351-6ad4b5855dc1",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "1d01199a-edf9-41ee-9a10-76721aa3b1e3"
        },
        "item": {
          "id": "09efc629-194a-45d2-9758-c00b5384dc9f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "2de0108e-5d97-42ac-ba22-5efdb2e326ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e4f472c-ea53-4f84-bee8-ed3dfe704dc3",
        "cursor": {
          "ref": "70c132d8-5187-4f5a-97f9-0e123c98c967",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "023cec7b-d993-4a1c-9dd5-b3ed7ef83b40"
        },
        "item": {
          "id": "3e4f472c-ea53-4f84-bee8-ed3dfe704dc3",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "9d662ee8-4b39-4609-928e-dca63d161723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 1539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c58e0b0-ea80-45c6-9963-25afab52780f",
        "cursor": {
          "ref": "3244ef6a-f4dd-4b63-a4f2-8dacac1be773",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "20d492d9-abd0-49dd-80ef-a5d86b74888a"
        },
        "item": {
          "id": "8c58e0b0-ea80-45c6-9963-25afab52780f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b5015f3c-3278-449d-b6ca-61081fc24046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d844d53-3fca-4ae8-b819-9676ab50e741",
        "cursor": {
          "ref": "3280c388-dc53-43fc-92c3-62c0c60842c4",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "680e5917-e73a-4f94-8ec1-ff226b0d9933"
        },
        "item": {
          "id": "1d844d53-3fca-4ae8-b819-9676ab50e741",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "12251d74-7f0c-49ff-bcf7-464dde3f1b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 2076
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44772138-2ecf-44c6-9350-1ebcb4dd673b",
        "cursor": {
          "ref": "9187bacb-91ec-4448-8cde-7ad2cdcad927",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "a5867e95-3117-4439-b1c8-f05f518baba8"
        },
        "item": {
          "id": "44772138-2ecf-44c6-9350-1ebcb4dd673b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3a0f7875-2f22-46c3-a48e-c39f20cc3002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 2062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689e08c5-7da6-4940-899c-0bfaf1593e13",
        "cursor": {
          "ref": "0d0cce1a-1740-48a1-9960-8be1f218f148",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "9a971a3e-692a-479a-b00e-abd2c9af2879"
        },
        "item": {
          "id": "689e08c5-7da6-4940-899c-0bfaf1593e13",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "6c215a27-fea6-4e25-872b-0153578d3b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 2060
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa151ee-c4ec-4ca9-9367-4351f91431ad",
        "cursor": {
          "ref": "65c9ef6f-db68-4118-88e8-4b66d3b596e7",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d3748456-6f67-4cc5-96bc-5410bc81bf4b"
        },
        "item": {
          "id": "1aa151ee-c4ec-4ca9-9367-4351f91431ad",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "777e4a22-33e6-498c-980a-859da309dc27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 869,
          "responseSize": 2061
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54cdd753-2ce7-499f-965c-a49f5b0ad90f",
        "cursor": {
          "ref": "94567fec-cf11-4d1b-bcde-3b0bd7511fe4",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c199526a-fc59-49d1-bb88-c3b17f44ef84"
        },
        "item": {
          "id": "54cdd753-2ce7-499f-965c-a49f5b0ad90f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "893d4727-5344-47e4-a26f-ff47304ec947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 2082
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "824d2742-e29a-4cef-a65a-d94871474284",
        "cursor": {
          "ref": "4df689c6-bc0b-459c-b843-1310fdf1187d",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "46f2feea-807c-48be-b073-bdd2481338f4"
        },
        "item": {
          "id": "824d2742-e29a-4cef-a65a-d94871474284",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b6119537-92c5-4544-af43-d35e3aba3194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 868,
          "responseSize": 851
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df796628-40d3-4b9e-bfdc-1ec94c80b66e",
        "cursor": {
          "ref": "c1098988-1139-4463-8448-05db0e8fb766",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9b5c62e2-6f95-46c6-a85d-ceda9719544e"
        },
        "item": {
          "id": "df796628-40d3-4b9e-bfdc-1ec94c80b66e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d4a8f8af-a310-49f2-8d10-48ad0108084c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a86a4a83-fe10-4998-af6e-caa257aa771d",
        "cursor": {
          "ref": "93860db8-4fac-4d5b-9065-7f7647adc1b7",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "f748229e-35cf-4a06-8cda-e9b661e2779e"
        },
        "item": {
          "id": "a86a4a83-fe10-4998-af6e-caa257aa771d",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f13be74e-360a-4b6a-86b8-fa04b506a966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df15558-1e26-443e-ac7c-22bb313c0c1e",
        "cursor": {
          "ref": "1722ff5d-e880-4dd9-85cd-36d807314928",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b9f9004b-5225-430e-8109-6ccf81945a92"
        },
        "item": {
          "id": "9df15558-1e26-443e-ac7c-22bb313c0c1e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "58515d0a-5c63-4cdb-a114-7917838854ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 229,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a7baf5-4958-4fb3-96eb-872d31170b15",
        "cursor": {
          "ref": "7c680b0c-752e-4178-8eac-effea6b67870",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "5ac5aa13-700e-4b4c-8689-e0dab2f4a769"
        },
        "item": {
          "id": "94a7baf5-4958-4fb3-96eb-872d31170b15",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "2e86a853-ef9f-46f1-9e35-3d22075b075e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33c6b15-c6b5-4d07-b768-fe10454bbba8",
        "cursor": {
          "ref": "506f174b-d029-45b3-8fd8-4bacae0fe6e0",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "fe684cf8-ad3f-4e82-9adb-57028b1d58dc"
        },
        "item": {
          "id": "b33c6b15-c6b5-4d07-b768-fe10454bbba8",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d04b3125-61f5-4879-a56d-d228684b9b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 229,
          "responseSize": 868
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22cc75c9-9cc0-4557-9139-076cad42b33f",
        "cursor": {
          "ref": "e9e53fba-fb87-4a67-a9c8-dee1bd40cfb0",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0e2a6a7b-5a81-4e85-8486-a2f6cf9d7487"
        },
        "item": {
          "id": "22cc75c9-9cc0-4557-9139-076cad42b33f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "3d71d94b-a1ef-4501-80aa-b1bf1730510c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 213,
          "responseSize": 1209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d1f7366-e90a-41a7-8224-f820cda9eff8",
        "cursor": {
          "ref": "be98abd0-4041-4009-b1ae-aeb1162b1c5c",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "01a4b6d9-5131-4899-96f5-916abab010b2"
        },
        "item": {
          "id": "5d1f7366-e90a-41a7-8224-f820cda9eff8",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "17abe0ce-1c7a-41c8-8fa3-7e0b4a8b2cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ed5c58a-fb26-408d-aa29-3dab76696d5b",
        "cursor": {
          "ref": "0af02a09-629b-4659-a54d-03e6c915bebe",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "cb98329c-d4ab-4dc4-bb58-0e431a7d41f6"
        },
        "item": {
          "id": "3ed5c58a-fb26-408d-aa29-3dab76696d5b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "cf72a5ba-501a-48ca-8c23-3fba6e7196bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 219,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46bb2262-f75c-4eca-a745-a36459139640",
        "cursor": {
          "ref": "384d210a-d434-47ae-9f56-f356c394d904",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "5e07735f-e434-4ff4-aa88-a074b90adea1"
        },
        "item": {
          "id": "46bb2262-f75c-4eca-a745-a36459139640",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c061a82b-0aaf-47b1-8929-8b03c0bf9e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 210,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f27e5f8b-da8e-409b-bf15-e01fad6f8870",
        "cursor": {
          "ref": "c0464ecd-bf37-427d-a1cf-844a009a3fdc",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "7664ff6a-5ee1-411d-94e2-18d16c226a81"
        },
        "item": {
          "id": "f27e5f8b-da8e-409b-bf15-e01fad6f8870",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "48ca1b34-22de-48a9-a4aa-5335241526cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 207,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26427314-cb28-48fc-965f-54227f82bf22",
        "cursor": {
          "ref": "5a878441-fd37-4c04-aa30-a5125681f0a7",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "64309c36-40ae-4416-a528-6ee7ea26c493"
        },
        "item": {
          "id": "26427314-cb28-48fc-965f-54227f82bf22",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "995e1b7a-9dea-408a-9884-0e501144b2a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 201,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "416a6207-1445-45a2-8123-886ed298ce44",
        "cursor": {
          "ref": "15e964eb-06c0-429a-bb5a-1b31d5b5f7b9",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "b0e23d26-23c1-43a9-83c3-4fa0f4d128bc"
        },
        "item": {
          "id": "416a6207-1445-45a2-8123-886ed298ce44",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2c1ddad7-ba94-45d4-8e2a-fbca8ea2fa1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 217,
          "responseSize": 1246
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2996e7d-c12e-4726-afc5-3fde85e69dd2",
        "cursor": {
          "ref": "eb24f8da-052f-4a73-a1d8-44ef06b4a32f",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "e843b352-7015-4b78-bfac-40b33f76dde3"
        },
        "item": {
          "id": "d2996e7d-c12e-4726-afc5-3fde85e69dd2",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "8aa0a859-d283-475d-b8e9-a3d98d6f53b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e03abdc9-9332-4065-9237-705755a58734",
        "cursor": {
          "ref": "881885f4-cb17-42fb-962f-a84939ac7ca8",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "44e6ec4b-e7c5-4bc4-9203-35e0e6ce33c1"
        },
        "item": {
          "id": "e03abdc9-9332-4065-9237-705755a58734",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "72057bc8-2adf-4f59-997a-4ce35f65c7cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 207,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3991b98d-6ad1-497e-a9b8-d2c261047c8d",
        "cursor": {
          "ref": "2f977cb1-17bc-4203-bc0f-dfe5e9ec3783",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "4de31f26-5bc9-4e02-92b4-2bee7bc47dad"
        },
        "item": {
          "id": "3991b98d-6ad1-497e-a9b8-d2c261047c8d",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a38a94d5-6729-484f-973b-4689c2294e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 213,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95c104d5-ed39-4de7-8054-6b1c34c17c80",
        "cursor": {
          "ref": "ff699399-19a1-457e-8970-4c215b1cec41",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9b14e85c-2fa4-48df-85b5-2cba718def9e"
        },
        "item": {
          "id": "95c104d5-ed39-4de7-8054-6b1c34c17c80",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "6845e742-6fae-48b3-84d3-5016eb2b3db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bed063a0-64d7-449f-880b-0d894a08081a",
        "cursor": {
          "ref": "4ffa6085-d3b6-470f-86d5-ccfef5ff22e1",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "8de59d0c-4bdf-499d-8e2d-6c57ffd59bee"
        },
        "item": {
          "id": "bed063a0-64d7-449f-880b-0d894a08081a",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "dcc37e5b-8f3e-49ef-a419-29ccb7527dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "241d600a-0ad2-433c-8e36-353e43863cc4",
        "cursor": {
          "ref": "3c73cf7d-1345-4b7f-a49f-489092d138cf",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "55042d78-9c74-4631-9555-c87494c49486"
        },
        "item": {
          "id": "241d600a-0ad2-433c-8e36-353e43863cc4",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "87e34211-22af-4ef5-a745-c822d8e2adb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7890a034-7659-4de9-ba3b-54506b6bcd1b",
        "cursor": {
          "ref": "b37217e1-52da-49c5-a265-e7618a87f151",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "feae575a-717b-4582-a4ca-101285184872"
        },
        "item": {
          "id": "7890a034-7659-4de9-ba3b-54506b6bcd1b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "51d483ce-e530-4ee0-851c-b215755e0c64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d15949-6257-49f1-a4fe-dedaa65fcfb1",
        "cursor": {
          "ref": "2c7abfd1-fe10-437c-b7e9-59b6dc068634",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f14c9e46-a430-42cf-9f66-d9600259999f"
        },
        "item": {
          "id": "21d15949-6257-49f1-a4fe-dedaa65fcfb1",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "92575718-3dd8-4601-971a-f7b44a3ed48f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7811163d-a0bd-4eb3-82a7-3b015757e91d",
        "cursor": {
          "ref": "05d81c57-1dc1-4825-98c4-3c237be40fa8",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "27ecc4f1-3ebb-4c26-83c8-86e0664a4138"
        },
        "item": {
          "id": "7811163d-a0bd-4eb3-82a7-3b015757e91d",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b3205eb6-f7ef-444b-9987-01c21526262e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ed4f8b-eca2-46d5-8946-4de43fd311e1",
        "cursor": {
          "ref": "42371da1-4b3f-4a93-9065-59a56b80f6ae",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a78cdc20-db22-4dcc-9d54-e69d328074fe"
        },
        "item": {
          "id": "90ed4f8b-eca2-46d5-8946-4de43fd311e1",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a12194e3-2635-418b-8988-a21595c7cc91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 215,
          "responseSize": 1206
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7149640-6955-4159-b326-69a0bb1a228c",
        "cursor": {
          "ref": "cb1f49b1-3742-4f9f-b1a8-0ccdf222a16e",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "2d1e5cff-7ffd-4238-bb36-7d0f2ac24301"
        },
        "item": {
          "id": "e7149640-6955-4159-b326-69a0bb1a228c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "5ad45ca6-a4a1-43db-bf64-60d6a5e95411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fb367da-6fa9-4c7d-81eb-e1259fcb375a",
        "cursor": {
          "ref": "70a32207-a923-40c3-bf65-9ef4b6edb8f6",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "62fe9d7f-423b-4b37-a802-1f2360a50679"
        },
        "item": {
          "id": "2fb367da-6fa9-4c7d-81eb-e1259fcb375a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "667e6c9e-967a-4435-a869-214e33a69007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec6db338-f7f7-4adf-9e98-9bbe4add70a5",
        "cursor": {
          "ref": "e15d97eb-0c49-40c0-b3f6-fdd81ccd3bdc",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "988ec13c-36f0-43f5-aad5-65d27ca8ce7d"
        },
        "item": {
          "id": "ec6db338-f7f7-4adf-9e98-9bbe4add70a5",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "8c642057-3779-4628-84dd-d484dae73ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 215,
          "responseSize": 1096
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1517dda9-22bc-4862-a198-f47c8ee9d941",
        "cursor": {
          "ref": "2e34e7a7-5c0a-4c7e-9ff6-5c578b3b3bb6",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2eaa2c89-9fe5-434f-aab9-16cbed785f7c"
        },
        "item": {
          "id": "1517dda9-22bc-4862-a198-f47c8ee9d941",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4f5dcb9d-7cfa-4ab3-9491-50f7f6a0d025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 209,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b431c3a5-11d7-418c-b7e3-c9b3ab1b1250",
        "cursor": {
          "ref": "c7cef2be-2d39-4dd2-82c9-2b5dffdb8d9b",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a6849097-1975-4307-81af-c9e64b0ea276"
        },
        "item": {
          "id": "b431c3a5-11d7-418c-b7e3-c9b3ab1b1250",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "3b397fd0-dc4d-4180-a216-8a52fca90309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 222,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45857a90-34f9-4000-9a9b-7d567a6762f1",
        "cursor": {
          "ref": "d6c70ac8-69ce-4702-9f30-7abf09004dbf",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c57a2d42-c66f-44ca-abaa-e09e498e697d"
        },
        "item": {
          "id": "45857a90-34f9-4000-9a9b-7d567a6762f1",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "a7245fa0-a432-4395-b263-3a84a65b8c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0b3b074-1caf-49a2-aa5a-5f5d2019fdc3",
        "cursor": {
          "ref": "f627887c-cb3a-4038-92f2-67f2f6400336",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "df5137bf-3407-49b9-b65a-12f34f8a4c4d"
        },
        "item": {
          "id": "c0b3b074-1caf-49a2-aa5a-5f5d2019fdc3",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "dd7e4a3a-9c96-4c68-8d4a-7a59c4b281ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 219,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6df25bd-1c89-40bf-b434-4a0441a95d0d",
        "cursor": {
          "ref": "64c895a2-7791-4f28-82dd-3b2f81e80604",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "58f0a64e-5f61-4e73-bd32-79c2adad2259"
        },
        "item": {
          "id": "b6df25bd-1c89-40bf-b434-4a0441a95d0d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "91a3edc7-9412-4a68-bfc5-ad92e35b2c1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 222,
          "responseSize": 1225
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6333b1fd-2391-4af3-ab24-09d97548fc84",
        "cursor": {
          "ref": "445a0c0c-4ffd-464f-a045-82cd2f3be576",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ec092757-8e22-4602-a754-8e97b7311c36"
        },
        "item": {
          "id": "6333b1fd-2391-4af3-ab24-09d97548fc84",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "2ab4f59a-a7df-4f7d-ba1a-b6c691a5c4ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 224,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72185e5e-69de-4c93-ad30-1d2381cf45be",
        "cursor": {
          "ref": "6c62c518-94d5-47cc-b881-679946535aff",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "bf55eda5-92a5-47ab-b87b-2359840c0526"
        },
        "item": {
          "id": "72185e5e-69de-4c93-ad30-1d2381cf45be",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "f9e2c11a-03d4-4066-9b5f-d98b44ae0732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 208,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a83303bd-0985-4eb6-8df5-131a9a9658a0",
        "cursor": {
          "ref": "94fbfaab-3eff-4d85-ad8c-922ec26236b3",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "98fa305f-1e92-4195-a741-4a15cedeebe0"
        },
        "item": {
          "id": "a83303bd-0985-4eb6-8df5-131a9a9658a0",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a87b513b-05ee-44d8-96b1-a497af92e755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b58e9f85-0c52-49c7-8f97-2b2c8ba92ed1",
        "cursor": {
          "ref": "b556e6ec-564c-498b-b2eb-3393d00c5780",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "61ea744a-2e29-427d-ab77-2311f4c7eb6c"
        },
        "item": {
          "id": "b58e9f85-0c52-49c7-8f97-2b2c8ba92ed1",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "f1d11b4a-f706-4d24-9415-b59f121e85ac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b34764-fa6e-4a2c-bbbb-d6a97ce1f68c",
        "cursor": {
          "ref": "65c147f4-55a0-49e6-8750-f7261b982bdb",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "594e2b7e-303e-4c19-b769-53a80f182eca"
        },
        "item": {
          "id": "12b34764-fa6e-4a2c-bbbb-d6a97ce1f68c",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "3aa29409-ab97-447e-84ba-1ca9e52dc85f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 259,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a54ff0ae-cd77-47b7-8e81-78ae9d905c67",
        "cursor": {
          "ref": "71977bac-5d3e-4bd3-ab82-e0615cabd715",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "5574ba94-498e-434a-a85e-849e8205955c"
        },
        "item": {
          "id": "a54ff0ae-cd77-47b7-8e81-78ae9d905c67",
          "name": "credentials_verify"
        },
        "response": {
          "id": "bf303e2b-f9e4-4717-bc78-bc8e66a18422",
          "status": "OK",
          "code": 200,
          "responseTime": 398,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce1c6cd-910c-46ca-b5d8-9fb3c9ad741e",
        "cursor": {
          "ref": "2d5ed7bd-c9b6-49cd-bed2-10d14a3ae7ca",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ac7c5194-5529-443f-a987-90163f514a09"
        },
        "item": {
          "id": "cce1c6cd-910c-46ca-b5d8-9fb3c9ad741e",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "f9109eee-4d65-430e-b496-731aac14f8e7",
          "status": "OK",
          "code": 200,
          "responseTime": 309,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a0697d-d680-4c2d-910b-29ee04075679",
        "cursor": {
          "ref": "820a49ba-d8a1-44e1-b3b5-966e78ae6565",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "8929de1e-6988-4c38-8977-d6644d49160e"
        },
        "item": {
          "id": "96a0697d-d680-4c2d-910b-29ee04075679",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "509bfce4-eb91-4fdb-a18c-f03d9c6b2656",
          "status": "OK",
          "code": 200,
          "responseTime": 319,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c658c119-18b5-4d22-8eab-3e59b1f648b5",
        "cursor": {
          "ref": "4db8ee50-2e06-4b6f-8b7c-aaa276a030d4",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "14b4950f-9490-498d-991b-a2a615dccc01"
        },
        "item": {
          "id": "c658c119-18b5-4d22-8eab-3e59b1f648b5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "05729d5e-bc82-4c9d-b7ec-ce07b9525831",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c658c119-18b5-4d22-8eab-3e59b1f648b5",
        "cursor": {
          "ref": "4db8ee50-2e06-4b6f-8b7c-aaa276a030d4",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "14b4950f-9490-498d-991b-a2a615dccc01"
        },
        "item": {
          "id": "c658c119-18b5-4d22-8eab-3e59b1f648b5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "05729d5e-bc82-4c9d-b7ec-ce07b9525831",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c658c119-18b5-4d22-8eab-3e59b1f648b5",
        "cursor": {
          "ref": "4db8ee50-2e06-4b6f-8b7c-aaa276a030d4",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "14b4950f-9490-498d-991b-a2a615dccc01"
        },
        "item": {
          "id": "c658c119-18b5-4d22-8eab-3e59b1f648b5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "05729d5e-bc82-4c9d-b7ec-ce07b9525831",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86897805-0916-425b-a613-4698d9b241a2",
        "cursor": {
          "ref": "2d513aef-29b6-4df4-a4ba-7ce7d8bc85fd",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "27e3949a-6dbf-41bc-9acc-01f4fec0556a"
        },
        "item": {
          "id": "86897805-0916-425b-a613-4698d9b241a2",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "1cd09f09-5650-4639-a94f-6a9bc57e62c3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 209,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec6f5a35-592e-4db4-894c-45c6c374100f",
        "cursor": {
          "ref": "4403ebdc-1032-4b06-a956-ffb57c955507",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "927c056e-0f2b-4700-bf37-60cdeecb9af7"
        },
        "item": {
          "id": "ec6f5a35-592e-4db4-894c-45c6c374100f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "3c8b7751-5777-4c75-9b91-5ef069082e02",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec6f5a35-592e-4db4-894c-45c6c374100f",
        "cursor": {
          "ref": "4403ebdc-1032-4b06-a956-ffb57c955507",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "927c056e-0f2b-4700-bf37-60cdeecb9af7"
        },
        "item": {
          "id": "ec6f5a35-592e-4db4-894c-45c6c374100f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "3c8b7751-5777-4c75-9b91-5ef069082e02",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c007c6fd-e3b4-445f-95ae-b571ea01585d",
        "cursor": {
          "ref": "bbb8f250-2a40-4db0-9cdf-7e2db27c964b",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d9bc4104-8f88-4a98-8382-59360621e5be"
        },
        "item": {
          "id": "c007c6fd-e3b4-445f-95ae-b571ea01585d",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "0221955a-af3d-4277-81e0-296735fae162",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 433,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6383e1-3b64-4626-a309-e8a030185987",
        "cursor": {
          "ref": "bc770984-4a9c-4bbf-b19e-6b36a38e63e2",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "cf251143-f85f-4026-9c82-f98dafa82ada"
        },
        "item": {
          "id": "ef6383e1-3b64-4626-a309-e8a030185987",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c0ff2e5d-554b-40c1-bba0-abb12f7f62e6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6383e1-3b64-4626-a309-e8a030185987",
        "cursor": {
          "ref": "bc770984-4a9c-4bbf-b19e-6b36a38e63e2",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "cf251143-f85f-4026-9c82-f98dafa82ada"
        },
        "item": {
          "id": "ef6383e1-3b64-4626-a309-e8a030185987",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c0ff2e5d-554b-40c1-bba0-abb12f7f62e6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65472855-ecf0-41bf-a6c9-bc89c75f5ac8",
        "cursor": {
          "ref": "e8d7164b-6c99-438a-b391-461760e131f2",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "6df0a870-e0cf-47eb-9848-e2a299587f11"
        },
        "item": {
          "id": "65472855-ecf0-41bf-a6c9-bc89c75f5ac8",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "8be9a4d7-1525-445b-880c-0fe7d69f823c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 450,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}