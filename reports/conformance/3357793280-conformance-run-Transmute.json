{
  "collection": {
    "info": {
      "_postman_id": "f5f17919-82a1-4db5-be95-0f985635313d",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "4f7d92e7-20a7-491c-ac75-89a82ef8dd21",
        "name": "Clear Cache",
        "item": [
          {
            "id": "81a1a415-abf6-4c24-9f3e-24436c9de519",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1a002fc1-1de5-4876-b462-06a07fe54eb9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "419ac37c-d46e-4068-be2b-f880624dfce0"
                }
              }
            ]
          },
          {
            "id": "268eb42c-2cc5-40f7-bf1c-de5d7243952f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "601d0565-6051-4888-9022-895b62e08868",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1941c286-ac0b-4204-a651-3c087448a909"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "645ada4f-2ca1-4a82-b348-2813c0c2f79f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "7740061b-5b98-4cab-bc17-b53248769000",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c4342fc6-f625-4450-82d7-ce8af75bc0a5",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed58f685-54cb-4a12-9199-5e0f74d7f83f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8460635f-b16b-49e2-be83-fa414264b5c6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "be063469-f628-45b6-9478-641d3c81a850",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c277cee8-dbbf-4139-b574-9d22282761a8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "10adb302-b569-4814-b1ae-859b580eaf58",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6af3c6f1-2e8e-45fc-b5b0-687d27be5fd4"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0e1f0ded-edc1-4fed-a4cd-eeddc431d145",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "2190e6a9-c08f-4d50-b426-d3e1432524c9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3d8f2261-d266-480d-b057-a93497066988",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "014894d0-6f7d-45e1-a345-43713ad380f1"
            }
          }
        ]
      },
      {
        "id": "a6d830d1-6ba9-4fb8-bdf1-189ac6e740ef",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ae6f9e47-b4e9-46be-a166-556b300e8854",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f7ca8b02-8a60-41f2-9079-1ca3a6cbff25",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "02ae7719-9052-4319-94f2-81e61a7d87d2",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22db83e8-aba0-48df-9901-110a451a5f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b431186c-60e5-4b14-b3b6-ae7a73f45f09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6adb97b4-d55b-401b-974e-325a927956be",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98959726-bfb7-498d-8f9e-e122fd2654b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d7de2b6a-54f3-4f1f-9319-7f0a919d93b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b876c1cf-1829-4143-8193-247d1a76dc57",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "830d8f85-e072-40e4-a6f3-15dd852ef9f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "de7faa25-3db4-4bf3-8a0e-3ac840d6788d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b530c689-f031-49c1-bfd2-b5b93e0e74c0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9b18a772-53ff-4e4b-8b51-caa3e80266e0",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6405b438-da35-4f54-83bb-4d1e41b766f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d2ae5f96-2133-4c03-8ade-74d1dccede16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "953813d0-0937-4945-96c8-d1d9c7b01bbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccc63772-72af-4933-90c1-add15b97cbf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe7a0a45-095e-42f4-b830-b4a934847dab",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac52a73c-7f41-4177-b70c-3283edded98c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "63ee51da-4899-4312-ba21-2baf0d8fd9f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b672764-5188-461f-ae6e-91e82fcac1fb",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "8355acb6-3b32-450e-aa9c-6eb7f90fc483"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "20a5d9b7-df5d-4d12-907c-cc6070b0fae1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "16f400a5-b750-48ef-aad8-87199830cf1e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7db37d5c-3746-4837-9d82-79c42fa65809",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a3e121d2-d879-420d-894a-d0e18fddaa2d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "38743f21-27af-4398-af57-3e705f18b94a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "d0385c51-57a3-4537-93e4-afb6b31294cb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0d5f347e-a361-46a2-937a-f6e037282e00",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "818e02a9-346c-46e6-9c41-82d99c5871d4"
            }
          }
        ]
      },
      {
        "id": "0a24327b-652d-4167-a694-2c4357874344",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "531f14d8-9f64-4335-97c4-6ba0694970f3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4b51f9a1-82d3-4468-9c77-77c6078f6322",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "bef494c2-bde9-440e-bc63-f0de9693fdb6",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e34ef02-cb0a-4073-b7d5-763a916c2454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68320f2c-a91a-431c-bef0-485f5803191b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6dbb5fe-dd71-4973-aebf-e5724ccefde2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb186c0a-f90e-427d-89da-29ecc9b7ca75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f7000f2-0477-4141-baf0-7bd5d2332a08",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a47398fc-4ad3-43de-b147-b15aad1e3c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a5e29c0-2173-4cec-8d2d-cfc5cb2dcf5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac89ade6-24f8-4908-9364-79b5e0aa3943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1a0c17b-5262-487b-a418-0a0aaba94aa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f2b9a4-2f5a-46a4-a060-a77383c233ee",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0a8971c-1d78-4cb9-84f9-d13371274040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1510ebb-e391-400b-9887-cea65c594551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bed8f6b6-dce3-4d4a-9073-6c21383f7479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7af4d291-6f0b-476e-920a-ff5d3656fa7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20a764cf-a958-4c42-b0b6-5cf12f1f6f3a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0738b8d-b42b-4ca7-b22b-580c8ad87e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a63864d-4152-4bfe-b5e6-ba82baaee887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "679f530f-bc81-40c8-a473-9114f1872f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e7b7f81-e82a-49e2-865f-e2eb99c82c01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "299cf427-a0db-4591-adbc-4befceb76bd5",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b90051f-f9ed-4db6-ae4c-cea55906e0f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "625fa585-c898-4393-99ab-cf564f7f2ae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c3a8edd-cf31-4afb-a523-1d08023ca5f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b367bbf-9f0f-4b04-878c-984ca99e99bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "295f101f-4658-4520-aa8c-259a7dd57634",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac4f0c1-fe9a-4a31-b1de-26fc01cb07b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c47eabc3-ed1f-48df-a195-15dbed42e780"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cbc4903-7216-4fbe-a5f6-1a93bb3931ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0f2470a-5ee0-4a06-8a2f-8af09563da89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc03b498-5a2a-4cc7-989b-60c7bc25033b",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d19cc06-12ae-47da-815d-d8aa5c229ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63d834c0-ca81-439e-b18b-852c256ee378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e616489-5a89-4bd5-84a3-a0d94be4c23a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9673fd4c-39d3-4da8-9143-3c7534176f35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48bbb391-e3ef-4aa0-a54a-b1bed9ada67a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ecb21ec-c1b8-4d60-bcc3-cc0a376c5b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02b511f9-5fe5-4e18-93cb-7fad2c6ec342"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "621154c8-b1ea-4411-ae60-238c00742e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06de80a7-327a-48dc-86b3-08d7671b1fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a34e18b9-2b32-4cac-8d1c-d47da953b745",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a64e44e9-46d2-4013-9dcb-0326ed9f47c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fd89087-3e33-407d-b723-2485d3ed2766"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a716ae58-caa0-4dab-b635-2ac3f493186a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "345c7e3a-96ff-409f-9ca0-d6354db9696d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8472c02e-351d-4ea2-8a20-f9309642d358",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a2a4045-2b2a-4ff1-b38a-947ef1b7a44d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84cb3294-57a2-47d8-aab4-0049e567fdad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a69215-8a94-4460-8903-b9fd363ea8f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f4c9855-2ae8-4ac0-9721-3d047a9f3f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8808946-06fe-4c9b-80e3-d56452d636b1",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb2ffe4-51a9-4afc-9362-200be51f1ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afc39f53-4e5a-47ca-8da7-ad25b9ebecc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26990068-5bb6-4d02-bc8a-50fa92b0080c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d4a79ac-66bd-48fd-8bb2-b9d52639e1f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec33d7da-8444-42cd-aa19-2267674655ef",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c3346f-8493-4111-bfe0-ef3c014ba0d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d205fd44-529e-46a0-82d7-ce749d9923b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20af4ad3-bd25-4092-9000-c3933d4cb68a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f9f7d8a-1c3c-4d8b-9665-15622d42bd03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd38870-244f-4beb-a1b0-f4878c36954e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc2a1ae-6267-46ef-80a7-d84c610115d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89d61d12-9130-4132-8ae9-2c3e16f1816a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c980d426-7611-48f8-9619-ba397554e8cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3fa82a91-e87f-44b0-853f-3d97f5703312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc1429df-20d8-43c4-a835-a4468b693c9a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f161b6-33a9-464c-8524-db8b5ddca955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e35be08a-ad30-4606-a8dd-3e7b26554e8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "238b3d0c-cc74-4d5c-bbd5-b9bbf9041855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e69b6af6-8ecb-4461-a766-dc68a302f52d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa8a7f8-cb1c-4fc4-aa35-8457dd7a0595",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "492df9f0-c0ae-4714-a21d-941bb8330033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38e5d082-7cc8-4ef1-8efb-619d5f84d5d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c16ea58-b60b-4715-9de5-984691b12106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "375275db-582c-41d7-8975-16ef7ac9344c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ed825ea-0146-466b-a06b-6a4e8959ae9d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a867f3d-1656-4b46-993d-a6e6d47ab65b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00a36f3f-3f9b-4a89-9db6-87d60da09c6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d80d6e3f-1956-449a-afc1-1ec80488df0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69121261-67fa-4a11-91e2-0d9bea3ac577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d69923c2-cc63-4331-8e6d-fbf46b7b4cfe",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "709f80d2-2779-44dd-907a-dce7896915f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9acaf7ec-2f30-4eb5-83f3-5055636d6d03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d3fa98-f0ee-45ca-9dfd-a11066e43da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2d9b101-90ea-48af-b791-f40a1545eb60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61821f98-48c3-4b53-b6ec-3c8b19521eb8",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ce4c95-7535-44a5-a2d1-ae6d83e1acff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88c84c52-d1cf-4730-875e-36dd7872558c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c19d109-07e4-4b1e-a592-9d33472e82fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fc6610c-fc0c-431c-8456-b9c65f9ed9a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd91ddc-8590-44d1-bfe5-4a9861bea42f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dee0826b-241d-468c-b9db-e6ffb441634c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efaaa79e-3aa8-4672-9967-6de02e7e5a2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b316459f-e64e-4d43-b5d8-2ea16209d809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b43ae270-4ae6-445a-be3d-f62571ec7251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150051c8-206a-495c-9d0f-001cff46c901",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2817fbd7-8e4f-48b5-9d31-6caa0206b886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6376e4ad-7ae5-4468-aa9f-086b7407548a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0221933b-6562-4006-93bb-91b35c4e528c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc29b148-7fec-4c9c-ac0b-72638593ba7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c0751a-d1d2-48b2-b7bf-968387440c85",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f72c3ca-684d-4432-aa14-cc64a9894ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e117b66-8e99-4fef-9562-6d54fca0e5c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9755270-a3fe-4402-8c8d-0ef15e816529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8300e027-6253-4e96-a906-a04755456eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8468e4c1-3e66-4a86-ad70-a77e89f163ed",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07f3700c-fed1-488b-b539-f0c56f6fa7fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03ae24dd-2465-4de2-8fde-93b2015824fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0834360e-9ba7-4ac7-b4fc-e145196bcdf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b549875-4000-4f0f-8964-b7b0fd2497bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50465651-904b-4579-bb15-4a48276f929c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb8ee20d-cb1c-4260-b3c0-848a7035031d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36c4ea74-9896-441f-aa78-cfc4e09f8082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e51b02ef-ddfb-46ed-9f0d-8fbd353176ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dc867648-9e29-4501-8af8-3b25fd546e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e0ad7ae-f883-4488-a81b-a789078f37b9",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f84314d5-4d8f-4061-a195-62892d8c3293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ae61618-d79c-4d08-819f-f6b79869c00d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87abe036-2978-4612-8849-e18349fdaa6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "200a1831-0c79-4a00-be84-8f7e59133c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed9accf8-f32a-42fc-afa3-0cc3ec93aeb1",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9522341-8d24-4869-9193-c4c49da0b667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3caaddc-82a5-483e-9c04-96908e8ff72d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0909641-27fc-4f40-aeef-c01e72177da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b45fe283-9da7-48c6-bd51-b12397149560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d8cc650-0f39-4673-8f50-651ecdb85117",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c1c7934-17f3-4254-842f-5e4640a553f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aab32c6-0e51-4c44-ad69-32f665344ab1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "675ce6c9-c25c-41da-b65d-e67b75493530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0fb6089-601c-4209-b793-64d374e9a4e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c63a996a-9618-480a-889b-b99d5ecc781f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e41dbf7-ed40-4e12-85c2-bc7197313c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f9e40fb-8b3b-42a8-8342-ea9c26d998ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4195c88-9d65-481e-993c-9573a7fed2ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d2dcb2a-3e3b-472e-b119-f41ec30a6a1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00f0fddf-4914-4e7a-a0ab-7456f876d430",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52076c63-fd3f-48c0-b433-586976efffc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a74ce5c-52a1-441a-97e6-c6a2cdf88bdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc55f3d-a117-4703-b8bb-12d44ba7fae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b507aab1-b044-4805-b812-acbcefdbd992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8368f36-a331-4780-992a-af24ca0f3f0d",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e783de6-a644-4afb-aea6-e391d5e8ef80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41941485-a047-4539-a9b7-3ed4a807e1c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "828a7ef3-1715-4821-bf94-f84045b1280e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "91782813-a71f-4fdb-991f-6e05ebc4f957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae3e2c7c-d3e9-4560-b6cb-611470ae8b6e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f117c96-5616-468f-9599-5078de008e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67f997ec-d4c1-4323-a304-940068e1d189"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "008acccf-162b-47db-a349-1e79d4f31817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "3812a599-e478-4385-8524-fe3e1a67a343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "654d927d-b8a0-4b80-bf78-9cefa79da2b2",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "945556ee-8294-4598-8598-a586882abdaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5b07772-e4e8-4568-8a50-7918689ba3ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbadda54-3835-4c9e-b8ea-e482429c087d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "19ec3649-dde1-4851-b08f-b0ae4263d183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f57054c6-c140-407b-a812-97b0b9d17f34",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b5662a1-7251-4fab-a7ba-47086e4571cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c83c36bc-cfff-4a4f-9454-74900817c1fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c5ae3e1-3b19-442e-9a18-89e9e2088aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6581e126-6bb4-4047-b8fc-6a60ef53c2cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe4c9aff-7c26-455d-bebb-3d36e57de5e9",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31c10156-1ba6-4ff2-826b-7585858c3600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e21bd217-1757-4dd8-b917-8f81f110cb9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e632613f-d2c0-4eb0-bcde-2c963612a852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "72c63536-9baf-47ef-930a-30b1380d9afd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e842971c-9928-4f5d-86de-30f95cb45a94",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d9a982f-7e99-49ad-9abe-1f04aa714849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bde9e31-50a4-4fea-9fb1-03025f849d02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f5e800f-6041-4654-8b5e-10dc2e49d47f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "45f53a49-1c97-4aa0-80a4-41bffd5c25d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "098390c2-7afc-49c7-9d2d-9b8d26f6f6c7",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eed766c2-a980-4ff0-8cd3-026043fb82f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5754acb4-1494-4adb-aca6-ec33d2d4af85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ef94423-74f9-4713-a701-0c8e46f91237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "4ff24e51-897b-48f9-8624-b5aad5f8e152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f25aac6b-2996-4a2e-9fef-8c25a88504cc",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6f6fee5-7fcf-4845-9849-d6ace88386f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a59bc084-00d3-4c3c-96b1-162ee5f3f0da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c589a267-d097-44bb-9298-a5a4ce474707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bb0f029e-e512-4c05-ad86-d79daf1323db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ded84f-3dc4-4449-9e69-64a508cf90bc",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b7977d-afbb-457e-abb8-1bcae0bf27e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c22fdeb-8e21-41c9-80ef-290b7d7dc932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6adfd2db-4520-4adf-b831-d10ff4e03b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "327134df-44ab-4432-a323-d13b319045ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ddb07b5-1290-41bd-8cf8-7f32f83f4a01",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c5f7a9-fc9d-4e66-b0c8-72824caa4ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7a50206-f41d-499d-a1b6-060814cf3acf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0329e829-9e31-465b-bc17-8253d4d8bad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0364f17f-fb85-4d9a-84d1-5a4cb6762a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c475fe25-5313-4b05-a3f5-086cc35ddf60",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "906aa5aa-63aa-41d9-95ae-ca111bfcf03e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7568945b-24dd-4119-abac-6fd70dc0b63f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f4b64d-0dba-4346-b6d9-125e3191aa20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3af285e-8b87-412c-b5f0-789e9fdcffcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55db560e-167f-4634-896d-dfbdc21d3b59",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea50775-12b4-41dd-af1b-7f3888d96e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bdf190d-ef7e-4503-b196-60672e50716e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf55c98-4033-495e-b90c-daa74cd15342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb83c711-a650-412e-af43-0340016599fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eeee502-13bf-42a2-9598-a7130e770905",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1387c15-6ab4-45dd-a5bb-27817ebd4348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9950b16b-433b-451b-a24a-ba65e4f7395f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ac30f1-b5c7-496c-b58d-81b1bcb4d66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1e86211-5508-44c0-b3d2-d4e40da84111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48a1b3e0-f3c9-4331-871a-35ede6bba1de",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "251ed7a1-76ed-41e3-bbdb-c4c2bfbefaf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2789ecbb-9c61-4948-b7b5-48500076c040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4554e73c-4dd0-468a-9e13-2d44a38e1e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "84f4c885-5a96-445d-9a99-9d2539321f8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52cb1755-4510-4e03-96e9-f330a9098e39",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d5b54b-8402-4241-b082-ed6962f73cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fea2c829-f7c0-4b0e-959e-f6ecf4ebd07c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3615b02-5a55-44f4-960d-2217a399aa83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "372c1190-4c5a-4c1c-9d2f-6505fba2415f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e0e4faa-2786-4327-85e1-94a56bca7c19",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e65d44a6-51bb-4826-9917-9d4f040b13cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fc9f4f1-30e5-4c60-a650-94975052e08c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b323491-aa31-4d81-92d9-1068c4b0a1d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e500786f-0a37-4ace-8e3b-e4b662828bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa5a93f-d52e-4bc2-8e78-de3f11e72e2e",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd9679f-9c0a-4987-89e2-999f4b682b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e94a08a-0b58-434d-8863-3813cf00d3c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ad6bd9-1b58-48b9-a20e-1bd522cb8c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "64bdbc3e-ff8e-4f38-a0b6-a3cd6aa9a314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4e06c6-c8b7-4016-a78d-0839e0298545",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fffe0f0-af8f-4706-9016-a0db80e14be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2b34a05-909e-4c17-bdb9-b9ef4bc806e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccad7cd4-09a5-4443-844f-37f3bf72936d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6897e02-8181-41c6-9d9d-72eb70ef1154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a572b30-70d4-4868-9f9b-2b40a26f2a58",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8820b0f5-a98f-4937-abe0-e91fef469dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cd13778-67b4-4ff8-b95c-c751b172a0c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15bb8b4c-b5c1-4f6d-a6db-f370d1770280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e545020e-865f-40b5-954d-ea6f67f445e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f5122ce-4e10-4684-9fa8-75059849b970",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "528670af-efd4-478d-a3ed-592693c012bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cec2699-c29d-4069-aa53-6f9588e30110"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d9c2431-979a-4be9-bfc5-89911845820c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a064578-0e0f-4033-b931-9a53ff5f9b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f9b25dc-1c77-423f-93d5-eb35f3659e6d",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b7f1d1b-723a-499a-b6b6-abfcc78061ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a177eb6-e4d4-47cc-a20e-da42d3bfa9dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3790ff6b-f051-497a-87cd-f9dfa2c0fd5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a71ba6e1-e25c-44c5-8099-ce64d2ec47cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3755b650-66ac-44b8-902f-97d27ab7122d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5255c04b-5159-4c67-a2cd-5b5032180b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c9e115b-b635-450b-a48c-e7d1c94b99fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a4e28b3-f49a-42ec-a9c4-9c5c7c6009ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2906959e-8d36-47e2-8b71-da4f0aeb90be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b022e3e4-5075-4be3-8430-341370278830",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "543c35a3-8035-457c-8b5a-630a9faf9675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77e0b5c3-f08b-4fe0-b564-bd5c486c135c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "132e6208-60f4-4ce8-afaa-f5fb5957e07a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "06871f5b-3089-4ff2-9f5d-803de1304c8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbee59aa-2355-4156-8eb7-c6b056201c6a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79190108-eee5-40d2-9d64-9e122cdb3a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64f24887-10e0-4103-9385-73ebd8ae671d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9067abb5-3a3a-44d0-bbe8-70bdc7c8d4db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9d79ef7-14cd-4328-a756-b0b63f229630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c7fb7a8-5f2e-4ff4-a27d-e00ff2e3b716",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9f6112-eee9-4279-9662-04ed40cca22e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10d4732d-025b-44f4-84c0-6f8f7037b3ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4fd4020-4ffe-438c-85fc-73216a48ae10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4001176-576c-4609-9172-7dfb86136239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9ee66bc-fbf3-4427-b2bc-580d8977f573",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f2a9b0-3eb5-4ef9-a38d-2fdaa6b5fcc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87c7cd83-4ed0-49ad-9de8-4ff4351cb7f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "912faeb2-2bff-4c29-bdf3-7a2aea54d4e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9370a593-6154-40de-ba57-4a68a8e11cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dcee91c-97d3-45ef-a178-ac3b429f75e7",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfdf8b76-b194-4976-a3f1-a42357e693b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8d76aac-c09d-4b2a-82fd-cd72eece2045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb8cc35-ceaa-49af-bd11-06c38f8a3277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4111f1d0-5f63-433b-86fd-11e515aea6d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88390068-76e0-4a23-b23b-1ba6cc9faebf",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "587453f4-bb17-47ba-b24a-f17c7be3e52a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77a1339d-2140-4fa7-96da-1812ef169c6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "222ea598-9c28-4307-ac0b-808b03045191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "e392f631-6478-42d9-961a-18978ead4928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b533940b-6353-4725-a380-989b173eb42d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f47c96-5d3a-4fc2-afd7-d4b4acf6de55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32d16375-d6b6-40a0-9d11-9c0b0071a551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a733b3ce-c408-42fd-b7f2-bf87a71dad18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4ed9243-b7bf-49eb-a9a4-d7a11cdc53f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c2a85e-9ac3-439c-ae68-a3ff697bb02c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba937a2-da1d-438d-b0df-6baef35b11b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c40d182-74ca-4cec-8e19-80233e241a1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c01d9d4-e035-42ed-aa49-a9a7469568d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c547f452-bab5-492f-95d5-965d188a7e39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19034a36-ad22-4b65-b57f-2e0a338059f9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87914e16-eaf3-4f57-be2c-08e13d4a6987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a0592cf-4f94-4c70-a8b5-8c38ecd670a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f12567b2-a832-434b-b9f8-cb32db759b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c521eb0a-b6d7-4791-93a7-bd87c682aafe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89bc1dae-a2bb-40d2-a0d4-422e94487470",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e2df13f-e0d8-49de-aafb-4ad21d2f0037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33786fbb-30f4-4034-9383-2b67ed14dbfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc4118ad-e332-4544-b684-5fb45aff2fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3f58bc6-9b98-4cdb-8e34-e3b73e8e6c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe94e6fc-ab26-45a4-936f-c120f1e7e979",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69552505-fbbf-4a4c-a063-dd92c5a18bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb791fa4-c0ec-4fd3-86d0-93738d8b331b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe06d4d9-7e30-4cec-9723-d523be74cf26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d85451ce-5f41-4982-9b81-84d1452bc87b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e018f48a-3e57-4d74-9f29-a6315f3177cd",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4821a68-ab72-4ffc-a165-c055485e3d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9ab0e18-761d-40b2-940e-814c2d8546e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf127a3c-7f15-4d1d-b6af-20c3af65d2fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "1afd7d3e-1f25-48d0-b6c3-4fae2a5b49b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46cae7d0-0aa9-45fc-941c-91a4fb24b541",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c86eeb9b-d44b-4aee-839d-027cc4fe3a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c94da19-48a0-432a-a101-06461b6b3423"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e7257b-fb4b-4289-a53b-f217fa62e131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dff7eb7-ba56-45d1-9442-d6e8424a819b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd39a82c-0aea-4422-9b2c-4a39fb1f5e37",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e88ba03a-45b8-45c3-8c29-12f1d656e22b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbfe631c-3ae3-4493-8578-0306b9cbddc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d61a3e21-b53b-475d-82fb-8fd26873881c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "695da2f4-c445-4ccb-9314-262b3b8cc970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4973009e-6c24-4f18-b100-75a38337de8a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d75aba2-40f4-4c42-9eea-3b0d4662069c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c728c783-b3ae-4dac-9afe-0307206fd879"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a7012f-4319-436c-b630-912551b570ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7400fbe8-bec0-4c52-ae19-fca835bfad39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbbed900-e1f4-4827-90b2-a0d26e591f28",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ab212b-84a7-44c6-953b-7550286dce69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "633762e2-210e-4c9a-9d74-d8dddbea4365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae081191-41a3-4c1d-96a9-c6c4ac841721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "38b4657e-3ed0-48cc-98ef-a74255a97085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4932126a-c394-412f-b366-e479a982299f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c44d4e-066f-45fe-9145-009960ac74be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64a34d9c-aa5d-47d8-9ae6-7d22eb9261c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e448ad6-9896-4921-8d23-29ecdbcf5ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d285956e-7086-4d32-b89c-5fd1ecb419d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f48bc02c-b3bc-41a1-b278-ee6d5e26386d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3977aeda-7a79-4b6d-bbdc-33056bbaf51a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9e03265-08d2-479b-ac32-ab2cf7c49932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c70d84e-839f-40ce-8be4-3ee1e5e30b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f3b71bd-0c91-4d83-95c9-6e3b1a37a8ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e67b043-98d8-4bb5-ad52-9101f1f3bf77",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c3ceca-0e2c-4b7e-b928-a583c90fa1fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "926cbbe0-b132-4b3d-b2a0-77f37a4469c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b12cb83-cf65-4979-a05f-8c76969a6391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc7e5d2a-03ef-4485-a1bd-fa9f3c890545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1a72c8f-4963-411c-87f9-196a4755d3aa",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c362a1-bb7c-44be-a4a3-03e13570092a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "994e74c0-5ce3-45bd-ba6c-843b39a0699f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "814ca2e2-cfbd-46d1-ac96-d1eaa9b54216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc6ff62f-a7f5-4b55-8d28-37d4991ed488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7765266-dac7-46dc-bee9-d45b943a48d8",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da83ac19-21ed-4d0a-9d13-0a31f9a6e50c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dcf4f4a-1a8f-4040-8615-b80cb4ca3a21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b72d666-27e0-485f-a13c-f9b62e393a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c7fbc3d-4b8e-4383-90ee-97ede11d528a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630dbce8-a8bc-4c90-a342-8a79a550dbf6",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b17624e-5632-40ca-a25b-d0fb472e9a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a03267c-f60d-4a32-8ded-bf672b28af97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5366a69a-2aeb-4c4d-b622-73d812f709c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb2a102b-03f2-46c8-804e-07fe413e4631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "344d40a4-6f2b-46f0-99d2-27aeaf20e069",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c98e86-d2d7-47ee-85f5-68c7afd80b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97edb996-a5c1-425e-a25f-77e1ba9805bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e65dbb55-3534-4d0e-8165-46000e80712d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ffd526cf-36d5-4eb6-9e5b-c2a3f0b21d1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47277506-e256-46ef-a2ca-2340b8494a27",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e562515-b996-4c91-8cdc-a5233427cb9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a836217-05c1-4152-9152-4b2123bed957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1695a9ec-c223-4d5b-8840-9d0137d1f88d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "201ec0e0-8a42-4a29-9a26-1eb2b259e9dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af53199-44c8-452d-99aa-3e0754828bd2",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d727e29-dd36-4a03-bd8c-e3adf9b890fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcf8e5b5-b047-4b93-834d-10abec5b19c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc4855f-4724-48a4-92da-902db0b9d6e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "883d8d04-a6d7-40b2-9fd2-bf8dd7c382d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47da2b1b-d167-40f8-a786-351b68f696ea",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "464c234f-cadb-443a-a4da-339ee80bb198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b74cefcc-c342-4c9b-a87e-a65713abf0c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78521407-68fa-4807-a283-7420d2f98a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd8b3367-b987-4d4b-923f-f75e75153899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e79742-3ed5-446c-8dad-a462bac11e38",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd9f2b5-be07-4c4c-9bb8-960fd2f0d449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cfa66af-cdf2-43c3-b1c1-b672691c9a6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc5327e3-a08b-4a34-8e50-9d11e9db2e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "42988dda-7ab5-47ac-9c14-7e3a6dcb220b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7bb9881-d9e8-4898-9c41-68b044495ff1",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0abd0d57-7ece-4e31-8589-e2ae7b53827c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e288f4dc-6229-43e7-8916-94673e1b0935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed54b140-2644-47c6-a259-04568d0f305b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0d963d1-b56b-41ea-83a0-efe87da639c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb86084-0ea5-4389-96eb-1a4409f22318",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "177daded-fbc8-4021-9a58-95915323fda5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aefbe14-28be-4a2e-b4c2-4b9d77d0563d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebbfe28b-b169-421b-b236-48841e424ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "742b500c-5e64-4d2d-a8fd-887a1fa0bb82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e8d332-78d3-476c-a25a-5364fe65405c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f60834-4fac-4ba7-b1af-d97ba99085d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a40e92e5-73c2-43cd-baf8-008ddd7adfde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ceb366b-ca3e-4a26-94ff-5cdfe217be12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e9cd47fd-0d18-4804-bc32-1e1734045a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff3f417-664f-4928-baec-03ffeac9ab98",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9abf2b-6918-4404-b536-9f2545ef40f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92726b97-1737-489b-a2c1-de0b0ade2366"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d64fc2-c4e4-4bc7-83c5-818e7eaf35aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1413a573-b701-40ae-8bf3-9d06d1b07fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32c3edd8-6a17-4dc4-837d-5f99d95b4d72",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6d9a3db-c5f5-45dd-b220-8d897df5fca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5c566ea-e25c-47fc-aae1-7dfe028127c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8087613f-5f9e-49c2-96bd-bac27b29527b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7469bc46-8409-4d4e-8a83-fb2b7a90080b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e515b52d-cd65-4f07-8d35-94a3e288f2e9",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cceb145-11db-4deb-9af0-26e5eec0a06f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4220b3f6-fed8-48e4-b597-3ca487d4bf53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83bc8b27-2794-4ba3-aa10-d2af8c76a541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a36ea4a-3da9-41f5-9787-3868b0c98dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a6c56b-155b-4214-bbd2-c47350bc73a5",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61311697-b6e4-4113-8a43-bf6aa00b2c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb604646-ed3e-4b9f-b51f-c924e713def4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64dd8a9f-1471-439e-8825-d59493f228ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6626d55f-75a8-4c4b-89f9-6270698f092f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f58a282e-d8e5-4428-a01e-4b42219cd724",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "086ddbf0-1e16-4b08-9809-33d3f72dd826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddf5b9bf-6df6-4154-9d10-bc5d7b238883"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49dbd8e2-2ebf-486f-9519-b8c8e504a1c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eb0b5409-99e7-4bc1-9beb-be9cf1871e2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2f5f317-5d9e-4634-a75b-31f4f52e8525",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8edab65e-08e4-40e1-a6cd-ea618c23fd5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91eefb86-dfe6-42a9-a4f2-69a352bf0e39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16e86cad-a418-4415-9b40-934881f52b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "438514d6-5eaf-4392-81ba-5e2afcd9ee2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ebbbaa-100d-4353-a40b-88ba45120f5b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e077eba7-0834-497a-be81-cdbd02fae27a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2ff709b-9f10-461d-98cd-e89f4d2ab868"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "531a9792-ba9f-44ae-858a-bf4708531df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8053191-545e-4088-b2d1-aa959ecbf2db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5690962-4f9f-4faa-83fe-c90bdfcc7618",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7809b909-34fd-44e0-a4aa-82e2ff458465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fb5eacf-153e-4c1f-8011-ea9745087b24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e177e101-dabb-4ac8-b377-889146aef002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0650a1c-ba69-4143-bbea-6564ce547438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca394a49-05f7-4f0f-90d1-92151b8ceed5",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03cf2226-8dde-4411-92c2-c6342cb03f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f8e1cc7-9840-44e1-a488-5fdffaabec37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a866d9d-a3e2-43ef-9662-87ca3625a90d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7c47a30-5e91-44e5-82d9-2a8f60dba616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86eaff56-553e-470d-bfac-05bcf341f276",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61055ef9-cd17-44c6-a8ac-5e18df5c6afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2fb31bf-ec64-40ac-8557-0fb5c589d8ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69632fe5-601b-4c22-9be9-c6373b8331f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "11b3fb50-0611-49cd-a0f0-581cfadf58f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4620f707-bfb3-4648-8612-fea9b780431c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05304152-5dd9-4691-a46b-3c217e6926ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce624066-cae4-4768-a911-d1f02b283c4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "228807e7-e78b-4d62-a741-2473185292c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b11e053-e4e2-4046-8f13-893420bb81bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e1a7aa6-7ea8-491a-8972-96d508b7da9b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3e9b0e-259f-4e54-b523-27a193fc4661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "55693efb-251b-42f2-b04e-2845de22f661"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b7e476-18b7-4623-8c40-a98a31ff67f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf342e4d-5f5c-4836-b461-7b19801542a9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8237f85e-8c76-420c-9217-77b7109baf80",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ad8a16f1-1d13-4fab-90f1-a963d1b2ba12",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d5d08f9-4231-4bd0-bf81-bfe823b60142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "44946ed5-9acf-4818-bb13-1f0523d07c2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "207c46f1-19c8-4201-bf45-f78c01d99d64",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "50652ff4-786c-4417-b04b-c1f3d8dd5f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f91f9f8d-40df-4919-8887-8518d671d1ca",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21bd3b1b-87d0-4551-878c-024c265578b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "44e869bf-dfe8-4280-b881-50525398f071"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498a18f0-5586-4a09-8145-aa60995b8ac1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "8a632b59-2d89-45d3-bc41-b5121ef903b8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b8e21cf-0ccc-4146-9ec0-fb566be4b005",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b873e805-98af-4e0e-9852-b519001607c2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b84f0fd1-c06c-439e-9780-635836bcd908",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "16ec7519-d98f-4519-8682-6cbaef9c3006"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "70c3db48-27a8-4bd0-8eb0-ceca06f72cc2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dfa59216-2585-4ac7-b874-fc81e68ea287"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "83409103-6e68-4f14-bc69-4e2ce1499f7e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "39c330eb-2b3a-4143-bedd-d85f38d6a488"
                }
              }
            ]
          },
          {
            "id": "e0b4e70a-3cbd-4669-a70f-090653c87c24",
            "name": "Positive Testing",
            "item": [
              {
                "id": "70664eea-3d07-482e-997a-3e47a175a02e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3fb3effe-8a16-417e-a796-a8bee36148c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json();",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json();",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json();",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6c7c73d2-2731-4152-a628-5e56c5654c70"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c2a08e7a-1a0e-4dc6-90ce-c18bfd93e048",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "65b2cae3-ea05-4209-83bb-186733717136"
                    }
                  }
                ]
              },
              {
                "id": "610fd410-b4ad-47ef-9a7e-8ed3129e0bbd",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cbe7922e-e59f-43f7-bd44-6f81b4613c3d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "78eb4ed2-13ce-43dd-aff5-a65a0e39b5e0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f74dccf5-12ab-4d31-bf13-ba5ab018ea90",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c95d3010-04aa-4916-a52d-0548c50b4280"
                    }
                  }
                ]
              },
              {
                "id": "1bd88cdc-e7fa-4a77-9c5f-2b3ef894a43e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d289deea-90d7-43b6-931e-fed9b22d5746",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json();",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "764eaff1-85b9-4b38-8262-9cac85d75099"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "10c1b519-6029-4628-8a44-885e72272f64",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d45998fd-10e8-4942-8a8a-d6d67b4c8488"
                    }
                  }
                ]
              },
              {
                "id": "de54bd51-e6fb-4e7b-844e-9145e44e878a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f7ab9083-5540-4caf-93ac-fd4dff79a6f4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "956c34cd-25f1-40f1-b652-33e7f297a238"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e22f91b-d1b9-409d-91df-9d42a9b9a6be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "8d6fcd80-1a00-474e-a817-0a4939048533"
                    }
                  }
                ]
              },
              {
                "id": "f78e9485-081f-4c24-aee3-5312244348de",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf39000e-fc60-47bf-b091-4fe4fec46173",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4c3937aa-feaf-4347-b923-3c109419b84e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e75743f-c476-45c8-8060-6fe6b9423c59",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "000f20bc-fcce-406d-8248-6c4bf85c0119"
                    }
                  }
                ]
              },
              {
                "id": "cbd2a385-2df7-43f9-b09e-201de06345f9",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "008a703f-afb5-442f-a5f5-b099aaa42b5d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d1332a05-9e55-4283-a1d2-0f9c305bce47"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "87ea3f9a-31bc-4853-8da9-4cf31a68fa0f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a06f4e0b-c8d5-4c85-b928-5e0c53b732eb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "65d92941-16cd-4fe0-842a-7e10ff922ae4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9f9732ed-477b-466d-9f69-127855e1be60"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d48b7dbf-9b21-4c61-9e47-375f4e4de8e9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "62b53577-0836-4fcf-811f-69900136c815"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "28f5d4c1-4bbd-4b21-8a0a-9b66fbbcc831",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "560ea8ff-f7bf-4035-930a-45ee5f48f1d4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d226f6f2-423d-4a1a-887b-8af066a2e8d7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3a738685-7c00-4ca4-99e3-78804c57a6ec"
            }
          }
        ]
      },
      {
        "id": "dc57a40e-3444-43f5-b706-14054aa31d1a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "b8b1d11a-4c2e-480a-8e02-d7f61c397890",
            "name": "Negative Testing",
            "item": [
              {
                "id": "417db253-82a4-4d2c-ac92-686e135b960c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a7c62c90-3661-47a2-a90b-6a361c806c4f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da63b10-3bdf-40bc-8f4e-a6f26fe6659c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b685acb-7fdd-4f29-a29c-1b1f5c9dedbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1cd3a10-b657-46b9-a3b9-a3bc90986725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cde69a7-786f-4d91-9bef-db9a3f9d8244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed726663-8689-4fab-a638-037134343281",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b58c85-30d0-40c8-9538-49a609ac2186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e2d4de6-126a-4dc7-8259-18ffd3500bf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baa1a5fc-ba33-429e-92a6-974232460f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9bd0491-182d-48f1-9923-be7e52aed798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec72539-23c8-45de-8cc4-a1b73e72b926",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9592763b-3504-46f2-8420-34b910b191e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "922dbc01-419e-437c-b4e8-d82492606e1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adbc54ac-6b0e-4c6f-b86e-8e848a48778e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0f7e890-d52e-4319-a0d0-46abbe86e425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce01a6d8-c3d9-4995-818d-a4d98e5321cb",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d5c5161-794e-47a0-85e1-720a04b4bb81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41887619-0c07-4fd7-9d9f-fb801dabe0af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f87d923d-4ee6-4215-817a-2eb29a7764b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "93524270-c565-4792-bef4-2522d8903bd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc28eead-bb93-4eaa-bef6-5ab327539f4c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db5ef995-cf46-4e59-b238-11143275b561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60122ae3-de6f-4020-bca8-e38f2bd62c68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae95a556-9c5f-4ca6-9e83-45a57c8e866e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f2487ae-b078-4610-b8ea-44bde0363196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa9cc93f-87bb-40aa-a576-f9334d4938e0",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e705205b-c88f-48ee-884c-cad99c2acc3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6314e655-1b40-4e4e-8601-f891e472bd9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62640fd6-177a-4437-af31-e75a726d5674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "88930a62-328f-4717-9cc8-9ffed0e74152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbb11ab3-1727-406d-94a9-eff3357cbd44",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10805940-b4d1-4907-ae8d-a3f8c7129db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec76523f-450e-4683-8368-b16090561e48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24dbc453-601b-4bbe-af91-6ce48a41ba78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0dda7a7-d3ae-4d66-b8d7-99c575b3bafb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1392e71-8008-43da-a5a1-39fad8b13bff",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f062f0b-d38c-4716-9199-973568832d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67d23546-e236-4b8e-b124-f2facb21659f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b80923-d117-4ee5-b001-60740476c95d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "55ffba19-279d-4e9d-bd2b-9ac6d1ec604e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa0e69d1-3d02-42ae-86f9-54175f4f4282",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a5df44-d0e8-451b-be1d-0121ac7bd2ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "716fd8d3-0fd2-4ef8-9e15-6c746542cd4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2b0959-2f89-42a7-a9de-397579cabbfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "53b432a4-2ec3-4e3a-a5d0-a8cc4c9c7d69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9945c26c-2750-45a2-ab05-a464821d9dfa",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b575f16b-536a-444f-b88b-043d6dab12ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "847efd72-9d62-43d3-8d7d-73e3f52217d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f4d8aef-51c4-42ac-9a00-0e75080456f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b6c32ea-90ed-4bbd-a6a9-88b319864da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e845562-f05f-44db-a1fa-4594dc2459f6",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "237f0283-fda0-46f9-ab1a-e3020a838545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05082925-dac9-4eec-94fb-40ce99842811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eaf6a99-f4ab-4385-8fdb-ffbc2c195055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "62d0c547-8434-428a-8a8c-8842330d60de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "186bdc8a-def2-46db-9904-647c26003488",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d786659d-4e44-4a8b-bfb6-2ab7b32dff6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47f01488-ec24-4449-b5cb-ede2dd60374a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f6d7dc-0f09-40fe-84b6-273003f0bbe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "24bbc827-3b0e-4d0f-a287-fc16c711f473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72bd7e70-b23c-4403-a706-4a12cad85869",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2809c662-e6ce-4a77-a053-d7f22cd02722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4847d143-7846-4d65-ba69-b2dfa9c9bd1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a21fb8-1d69-40ad-aa7e-ccdefaf7bd4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f77cb69b-82b8-4c54-8462-842f8fd9cd66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbf7b93b-e68b-4e1a-aac0-cd5e48b3a3e6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab1dec2-d38a-40ff-a33a-e33e1029fb4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c786790-4c93-41ed-9a97-bf25c438b318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6934989-1bbd-4201-a55e-2a3f3370c87b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e603bfda-473c-4669-925d-7adbb33e7c75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e934f1a7-011e-412c-ace5-71c8fb3f69bb",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "129db7fb-7e52-47da-83bc-40357ca1b70e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9189766-43e8-440c-876c-9f30fe23ecfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b7c17ed-5d94-4346-9bd3-4fbac4ea8bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9599e31f-7664-4d2c-91b9-1465c8a34d86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c80f82f-28ad-4972-b07f-83acd064fc77",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f69eccc3-bc26-4a56-8f91-43d018d23924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "080ec5bc-387f-45e8-9b43-1c4859969e09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14756f56-29da-4941-826d-5d32ca91b692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e056ab59-e88a-432a-8694-840b26002b9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e82dfce-e3be-4316-a3d8-c3f5120f7eb7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b323983f-eba4-4cb5-bda9-ecc28e63d0d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "724e4860-60f0-4061-a0c0-eb1d2a6993f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71bb05c6-899f-4cbd-a6e4-a3c95be00e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f131884a-cde9-40a1-8a19-3cde460c5a16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3b0fd13-c52f-44e1-ad45-b439bfc24ded",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4a1c56a-3d2b-4189-bb69-ea6d56e424be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c152ebeb-7655-4651-954d-c5efa787e6b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55346038-ea23-43ae-b28f-201e3b30a456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "904528a9-3e4d-48e2-a08e-13b0fa6111ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef789419-62ba-4184-874c-ae04d6c14194",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f5c6cc5-d346-473d-9352-5fc68159fca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b51504f-55e5-4a48-ac2d-8858fe125668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8ea543-38b7-4c9e-8192-1a3bdad73818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01fcc62f-b79c-439d-939f-5dc561a7c9b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "027fe578-dc18-464b-bcdf-13942c8abcfc",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e53e0a6-1605-40b7-931c-2ca8a964b82c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19f286d6-ba31-455b-a918-334a3f0d9a2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3843f4b-83b7-4827-9f56-b9cea04cc2b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67584153-32da-4a65-876b-5f14de11f8c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c554d042-0d39-4caf-be6e-3bfaf5f4b991",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce036d1-dd27-4b2c-a3a0-90a273162f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cd90490-c43a-4a7e-a7e4-67b00ee9fce9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f768694-43e4-4ea5-bdf7-9fde0d50ca11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f634b276-467d-4968-a486-ed2745ded52b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2843e7d-1262-43bc-807c-528de3293392",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4023ad17-287b-47fb-8021-20bbbb562297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58ea9d76-abba-422f-ac00-820951071605"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bf94d7f-686c-45c3-93af-f7ffb3bf59f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d848a6b-a9cc-4c23-b20c-20199cfb60fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e65d3149-2337-4fec-8af8-6c44fc127af5",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a561a067-2851-41c0-86ca-2b2ea1b2487a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc73306e-1277-4808-91bb-9c73830ceef2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c68e419-0d70-4849-b51f-48e606a3e4b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21d79433-6ef4-4588-b06b-564ae7c7ae41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c86bf19c-0553-4655-bb9b-316ad90e8a64",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9b1679-acbe-4543-9580-ecfef3b309ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cb43fcd-c282-4708-baa3-34a9477e52d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0030067-c5b7-4f62-a526-f2f650acb80f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b40376b-3bd3-40d1-889f-b53284d36390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd1a6ed-70ef-4689-b650-608a8f221d74",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea3549d3-5223-4f08-a63c-4362a445991a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "760d5d74-11e8-4540-9aa3-06c43102d870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe55e83a-d4e4-462c-8e2f-4c26d73e217a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "385e5900-15f6-4809-9e51-64ab9b6f8df3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf4419b-fa60-4fdf-8073-3dfbd53d65e4",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c4faa8-aefc-4699-bbf1-be75beb99e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f6c18dd-de2e-4a2d-82a8-f1d26c666c14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92234512-9feb-494f-8b2e-5d5e3fa35b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ff1c95c-fe62-4e16-ae79-8716c13d3662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b3e8e94-80c7-4a20-9d3d-edff05894a1a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a835c524-a533-48c9-a4bf-9a009f16df58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "200c1bc9-2b94-4467-8bfe-37a928a0e8af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6717d268-8d02-49e0-b906-fe465327ba89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b17d13d-8383-4825-aeb3-4155e9082025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4035d308-3739-4539-95a9-1ad546403ec5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1725b591-ad6e-49ef-9057-7cbe683e61f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf11fc37-45af-4e6a-a0b3-f82b4f6853bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05deddad-eedc-4552-8307-db4663f1be96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "564e8ff1-cafe-4256-8cc0-5a820731564f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c7e183-9e4b-4645-bf9e-cbeff26e594f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3146e2b-c34f-4e42-b862-e8dc6b19dd74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af05644a-18d8-41c8-8584-30e6c95fc800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc8cd65-8f03-45ad-bfd2-5ba229140434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95396334-7145-4f0f-a31b-9c934a61a5f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f909e4d-5edd-414e-90d0-fb5e0652fbef",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c84af9b-db17-49c1-b86a-97d6b94b8167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2cb4e88-7005-43ed-a95d-8d8ffc364be1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9045979-fa50-4167-9b78-6034b5f46ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab92daf2-e12e-4f51-a69c-5a14df3e7058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "868d3885-a61c-4231-8071-03b6c2214e3d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da40a97b-3b9d-4ac2-a27e-5dbe6fa426fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f94e6e8-c9a1-485c-ab97-f6af62d45600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ce735e-f10a-42a9-96e7-2f560f64f537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6f8e9ca-d3a4-41fe-aac6-319cf72cbcc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ee3359-e1fe-4172-9dfc-509850821af5",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1279a8c-77f8-43a8-a8ad-35ec5d99b7ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "301fe775-4244-458e-8b42-cdc2ea1926e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9963b5-5bb1-41ba-a5a4-8dada1d9d2c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50d2ed75-e4d3-49f8-b3e9-5b6dccc2a47f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4d7b88ac-55ba-445f-9758-ccf569f6abac",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cd4adb72-20e6-4cfc-a713-2f166a82375e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55f83a9f-ae04-42cd-970c-7da2edefe356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5141c895-fd0a-4774-908f-f27d564e7b5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dbff237-ce55-4726-878d-db20c142d941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6b9cf115-1693-4277-bd39-fc5370a060ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b001bac-9fe0-4a67-a460-4f2d9bef02ed",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b8f9843-f080-4bf3-8b39-024e9ca1b69d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "f1d6ab70-9ec3-400d-80d0-2f11cd86b5ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff3f01d-09d0-4933-a9a4-285386a988ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "03b9f6fb-1eee-4d63-826b-bf7ca71144e1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a231f60a-b945-4eca-9f0d-090234cd0ab3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "56ab28c4-aa0c-4750-897f-4faf1818501d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8fa99f5d-29df-4314-8039-be8f341be066",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cf58eb12-4ecc-4fab-ab12-23349bf25ba6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "27eff6e2-e212-48f9-bc67-b09feed17f1c",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "adeb4cee-0c02-41c5-8b7a-2893d8085798"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "54f1281d-4d37-40d8-8f3f-086b20315521",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "081dbd55-4835-43ea-ab1f-906c51ff879e"
            }
          }
        ]
      },
      {
        "id": "2b5e3d3e-2a04-4771-829f-456a30208769",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a116d1c0-a4d0-4dd0-b6b1-e6dce32cb021",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f494af8c-3408-4978-831b-8a2f24c9116d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "11a0eca9-5acc-4470-8d43-71a4cdd89bd6",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4ec770-fc5c-4119-8e06-5475db395856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bb860bd-08a3-482e-ba64-8687a3204e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "671d006a-3f02-45ac-b484-3df91cb6d6b5",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d8a61d3-3976-4831-b0df-5706764e56cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e0f30e6-9dc5-4300-a5c7-f106a97a84e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4d3b432-ae76-4d6d-8c29-c5caa45c9b4b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34e39cf0-c4b6-406a-9474-752c72a75c80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29c50b5b-4ac5-478f-b042-d1fd83852fa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fbde688-bdd4-487e-97bc-0749769623c4",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91a2d504-45a7-4990-a08c-9eb313d3fe39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e26e2d18-71dd-473a-8dda-03d4e8013015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5819a71e-d81f-46d6-b8fc-519b72eabdb4",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48188958-4532-49de-b8ed-d672b89c7acf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "109ec3e3-81f6-4917-bdac-b35dcd89c6e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc43eb6-56c5-483f-8133-2b44abfbe070",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f85aff2b-37de-4c79-82e7-c1f4978b4d2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78e18284-7636-4aa7-b03a-9cea4bcf64db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d71c705-f057-4fe2-ae9d-7cf17b5acdcc",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5668b38-a17d-4c77-9347-a6374ceafb00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac882762-1e26-4c2c-82f1-08686c95e19c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c5620ae-2ab3-4d03-95d3-ff1cb65604ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5e940e5-9814-4f52-9ca3-75c4f6ccd8cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fb89969-71a3-422a-8cda-580838742f76",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "730eefc8-a35d-45c0-9a95-0880230978fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25f48a19-8b69-4f3b-9868-a548acc3a61c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb0e99a8-c39b-4aa3-a7c0-faf6716429df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cba67ef-6bf6-45af-b0bb-4848a4f655f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "556c3967-c5f9-4d55-8479-bc3d424c0591",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdcf9788-73cc-43e1-8147-a97faf2b6ded",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c086e971-942b-4342-8c42-eaea6627536c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db1229c-1ec3-4db0-b453-da8f259971c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "629b93f7-33b6-42c0-b854-dc7784bf6c8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d12bdfc-52d1-4302-9e63-2cdef038fcdf",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e315c0-aea0-4f86-881e-47cce01d815a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "582e2fcd-ffb2-43e6-b0e8-384c68981296"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6428913b-592a-480a-a7aa-323f52a40e52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67559ade-69c0-4ca8-a36a-3bfd6f40d318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0910cbb-fa56-4d0b-ae69-16e3aa498c84",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d194393-2303-4880-b366-2259f31e1531",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef59d767-3b3f-4668-b313-eb0c68bff9b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaaaac83-880e-47cd-b243-a3fca49ed8ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fa5e261-1af7-4d41-b67d-146a6848a4ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "076fb039-c000-4489-804f-1dd2a848e706",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b016b7d-d9fa-46ab-ac34-8c021b8d097e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "653740b2-8345-467e-9e74-f43622f49500"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee4ad090-8174-4c7c-8bc7-955a4840f2ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1dffc26-7ca3-4824-b920-03c88e85ce7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f39cdff-6829-42c9-8bee-9416e5e08009",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9abf13f4-2b9f-4088-ba00-891cd8016cdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f629d25-0ff8-4cea-871f-8111bff11611"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb3bf96-95bf-4a87-b64c-aedd44ecd014",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34487bb1-9152-4131-b678-0745eb0c1333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "772de24b-4183-4ae7-99db-c0ecc2ac28a0",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c493a41c-50df-4943-84e0-8d1fa808b7d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47117ed1-bb81-4a54-832a-879982e886fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e21a221-bf6e-4b77-9207-0a463a67b595",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4db3db4a-7f5c-4eda-8c02-e59f922bb314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73efd4af-58b2-4346-8759-b68d9f40ff00",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ecf320a-1ff5-44b6-8f75-611b56bb932d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12b727e7-60dc-4a55-98ca-f454ec9ceead"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81a72370-2e90-42fa-8aef-579a00ee7067",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc09d73d-7f37-48f8-8dab-7423c7e6e50b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cebcc09a-ab80-42a7-ad35-cad809407f1c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66e82c3c-da4b-4dd4-b231-382b9304d237",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d1f2f50-304f-4836-b3db-8ce2f938aabb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a984d3-b53e-407a-9b62-681228b29b8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "741e3e3f-1367-458c-ba76-af03ee36b241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "456edb21-2870-482a-9d5a-bcf953019880",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e6cd2e3-5814-46db-b0ed-761af094c5d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1501ccb0-beb7-495d-acd0-d06f50ed52f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "725d3d63-78a2-4e8b-8c15-2ef07cbbb242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8a5b148-a303-4ff4-83fa-a32744757790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea80a9a-1a04-4458-bee0-eaa282e03b08",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa935b29-c212-47de-905b-112d5946d8e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d2dd4ce-0d5a-4574-ab2c-92fb462efeb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de10fff-1606-4e3a-aee8-b684a6266d40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d83b1731-306a-4997-8e08-bc68cb512fe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda59a43-2364-4787-a0aa-58ba8a2dfa22",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be1aad5-d511-4337-8daf-030922f7b7e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d9c3813-1f9b-47c9-aa1b-b1ecdf3dfffc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aed33f3-d773-4876-85ec-defacf740826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d69e81d-99da-4292-9ab1-6dac8e417d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62d609a5-e3c0-4669-9d0e-4c863924695b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d865d41-4363-494d-8c4a-65369cd0a871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e5efc18-9e3c-434d-9f5f-ba3e73a7727d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc69eef-c62a-4c12-9dfa-9fba5071d2e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ef96ca8-cac9-4213-be8d-5e88e29fa97a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe360223-f7c5-47ac-9074-d921c6d1e990",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbbbf358-de46-4629-ae9e-457f467c624b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99a9a9c3-a9e0-4711-9849-5929e96efec2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd4fcf7-94ca-4018-9f88-84fd134329c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c57dc21-3e91-4282-b45f-890aa8a1bbdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd020ced-158e-4cbc-afb5-d5600ec53f15",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0909d343-4160-4c3d-baf9-89d6fd23e1be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7409c519-e240-4771-8dd2-4bc5c2c095f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73d9317-542f-4682-b989-13bc8a83b030",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c373141f-690a-438c-ab8e-31285ed3ac01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a0d1b94-c197-48eb-b89f-9012d53caa25",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "946200c5-83da-4304-9f54-f1e1aeb02a27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "377b827f-ef0b-4230-902c-a5c09dfd9643"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2dfd359-cb14-40c7-b755-f19c382c9856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcd87e35-6396-45ec-b3ae-301161683126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cdd71fd-5ce4-4cf8-8647-2978edcd22c1",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa54307-85ff-4062-ac1d-75d50fba4cba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b37595b8-dcd0-4601-9ccc-6f83378e1caf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c74357b-4ab8-465d-bae6-9b9a9a76083d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a4538ae-b76e-4862-b508-d1e2bc0a5002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d2b098-5336-4cd8-96e3-2f61bcae2689",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9bd430b-1ca5-4746-aa2e-bfdfad4f6d77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93d99143-6cd6-4b65-9b2a-e7f552cdd61b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d3d9e9-0c95-461d-bd44-46876e80b2a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db598634-1818-41c0-bb71-41185eebd879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72cc5293-8b9a-4df1-9365-cfb35efaaf9e",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de57c2f-2bc4-46b6-89f5-58399a94e430",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "411412f8-10f2-4d26-8ba2-550f4b948bd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d4634d-f624-4f3f-a7bf-30fdca73ba7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "817b6019-7c7f-4419-a4f0-07ca843a6656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "009f5042-c18a-4e6d-967d-50412362c91a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "824c401a-d664-4e9d-8385-b6e9ca855329",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a184bc13-ce6f-44a4-ba61-6972556a5253"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e02eba5a-a58f-4072-b179-ec1ec15fc7c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50ff6af9-6590-4612-85c4-80c650b0da8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93042a6b-7c1d-4955-a139-fa92595f5a15",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17638d14-e48c-40a7-9dde-6ae7a4449ac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80043b6b-b5c7-4107-bd35-fa0f1955a5a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1348c1e4-fc78-4cd2-aa4b-f9335b7fb63d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "150143b8-3f06-43ff-a960-a48765006b0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414a9c3c-727d-48ce-b8cf-5204e49262f1",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e228b03a-8897-45ec-8371-b15299e4b38d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b35eecd-6ad7-4ad3-8948-8c7db2bab844"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef4d8e8-deec-4a30-92f5-47d711acac70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70f692e1-b640-4a2c-ba2d-0d01d8132b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4c710a2-f82d-41a0-8059-7a781a402a9b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf1edd84-260d-4f25-bc31-829025c0658b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c422eda-125b-41dd-8e81-b4070c57bf5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b90bd96e-0a7a-420c-99c0-62835d552fee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9e5187d-ed8e-4a67-90f8-c568d536317b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d550687c-6c2d-4040-98e7-9f8cb3026485",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47831ab4-c510-4b88-ae51-1ec81a9eb0de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2617823d-ad60-424d-91da-78a8adefd914"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc28759-98b6-4971-9a32-8a501210c375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85693bc7-ef43-499d-be97-341436af2598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7aba26-c3c2-4d64-a5c8-01da4c8da0e6",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc143ad8-a241-4840-93ba-42a3106a9f48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6746415d-e9af-4db6-9839-fe124d614342"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dabddee2-a309-486d-a674-e3c67b12e91d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a383c2c5-5f15-4cf2-a6ba-d856d42a3993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d71854-4c9a-4fc6-9a4d-f35a48fade5b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e9604b5-6151-44c0-afa3-a5fb7a9d87f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f6b1a34-0681-4c52-90dd-85279520c77d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23cd571b-7f5b-44f2-8ce1-d493b5e8d7d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9db602b-9a31-4bf8-9d35-ac2baebbd090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff521834-daba-4632-b21a-a66f2212a0ac",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39aaa146-0a5a-49ee-9aba-665d58b56c37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6df655a-0f5a-4cc0-95f2-c43c4a7e512c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d08b38-5933-45e2-92f0-c5e189bf83a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bac06b28-92bd-49e6-ada1-2dc262ae7e9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "005390dd-74e1-415d-9b80-92da0602422a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e83cdce0-ffcb-4ea4-82f2-0a93cab282d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e07bf2d-ff23-4529-9327-13424691d76a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "026c706b-e3ec-4af2-bb05-fc74e167b304",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e595da7-df8c-4d4a-b4f5-dc16780894fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d0fa003-d226-4f2b-b7a5-25ed31aafece",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf987ab6-3f28-47da-ae7b-c15f81c685b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc2548ca-7d26-4a2b-a280-005b0e2a009f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69238b4e-03d4-4749-a4a5-81394bfb5d75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63f9e5ec-6b11-4ab1-b54a-da3b1ebc4950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b590d91c-4c45-463c-b837-098c6cee5518",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5766d800-eee9-4420-abe8-5dbe9aafb75d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3965340a-c91e-4c12-b0d3-a9412e134d7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5358d391-1d95-4957-bfc9-cd0e2d4e0162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "887b0d0e-6832-4a47-980e-3f0d42c4e4b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb104c63-f76f-45df-8e64-923b87a46fde",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f97fa32c-f1db-42ca-bfe1-0084cbdbcd27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b22b47cc-5870-4486-b4f1-28e9218c46ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6767ea2-8d56-4ae7-9562-5d1e5e40dc5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6973906-76c5-41b7-88bf-7052db16772f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33538cd0-874a-444a-a188-e042dfce9bf6",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73f81128-073a-4e43-b558-aad32ea5b507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc105033-e57e-4d02-a754-6860d9db6077"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6212c7b-8736-4adf-bfb0-e71a0fdf4282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54d11070-5622-4e3c-b751-f4025cf8efe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb20ae42-98e1-4849-8013-ba6ddbed3c42",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d94d3444-305e-423a-b085-036381f80d21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edb6d214-b872-44c0-8f40-221fea9587f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6507274e-803a-44d4-a53b-8e182156b8fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "423c9f0b-7376-4155-87b0-665244d2379f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e421ffb-9b41-4cfc-8a03-411e56644e70",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d20ab63-9e8f-4afc-8e5f-dab463e8b5f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbf91f38-1e02-4ad3-8abd-7078fb19eb68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d19f91f6-0450-4f2e-b689-43b3b429f506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a2627f9-3908-4e54-8e12-b77f300f6759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed619055-09f4-47cf-b36f-a26e4953ba1f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9549c5de-5035-4675-ad0a-1982a3e1f567",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25bf3190-c6fb-48e3-b263-3ce68a3622d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "729386da-489d-45a0-b2bf-cc1c3b4fd204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "043ceaf7-e60e-46c7-99fd-8f3598124b5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a225b606-e79b-44a2-8a3e-377cdc5e9478",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f5351d8-5b28-4075-a37b-c7c059d4e810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16e62563-c57e-4339-933d-8e6dbbc57ea9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9abd1ada-44ee-40ab-8aec-f8aec8388e96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d491dd25-4987-4813-b228-be11cfde78f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62310944-b65d-4669-b6d4-1885f2c7863f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d00d31f-1591-4642-89f0-c8451bdbf1df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e81eb50d-eead-4e92-a362-e26895276eaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7158bee9-7a97-40de-b105-dca55ee7e1be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f8e67e5-6389-47bb-818e-9d8250793749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dcf9f86-5240-48c7-a0bc-2495c7d1f1c8",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9649dc9d-806a-4d6b-b7e1-245c01ec9385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad6898b0-8006-4e6d-83c8-ff6a8da0da3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff294c86-a6c9-4c1e-9b9f-c87e7fa1f5e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53d28c84-58e8-4d86-89e0-67d0d597f98f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02559d63-cd1c-4abb-83fe-31fb0b5edc12",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0088c2f4-0403-46ef-91c7-1a88de9e9897",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6182b26e-5c13-476c-88cf-c7b0ad71b146"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c3d455d-9e15-46ee-9a0e-7e95a8a62b36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72fb3e25-8b99-4e26-984b-2f479f42ce3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d049575-65e2-403b-912c-86c6ca5ea9a1",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a69f43e7-f165-46a1-8fde-11a470b75278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df6d5558-f7e8-4479-bf9c-3cb1523f7a4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30fd1f15-1383-4a6a-b422-ff44e7876326",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6479e614-22bf-43a0-afd9-fa9865a8ce34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06eaf10b-a668-4ddb-a683-2cfdf39dbb33",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae11b18-f4d2-4719-9ae3-4a596aab20ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41d84a0d-d65d-4f00-9037-b241c1670095"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e429620-d8ca-4dba-bc1a-40c55ef8ab84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b7bc507-2abc-4e7f-ac42-838f4af9cf8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eec5e28-eff1-4b24-9c32-3b1edbdb1b7d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a539c989-d54d-4c6d-9751-3174874265ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45e0b2e4-746f-41f5-b8be-50763f522c19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b212c8ef-23f6-4dae-9cbd-d107c9561caf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8b77375-8bd7-42f2-ae9b-102fd6d7e2bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "416e4f62-2e35-4354-adb2-3cd895a2de0d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9191146d-c218-4fdd-a1c5-f0bff5070581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ce89d66-41f8-4a36-86bd-3369629e8d23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ce8e866-c660-4493-b16e-0e3518eeda67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d783e1fe-c051-4d25-8f98-54b154326d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baec7180-1511-48f1-bb56-14b32c7b3623",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da3d50be-4563-4657-80ec-c8cbb03b05d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d585df9-fe07-453a-93f5-66da9f9eb285"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c4a917-5a23-4b33-a699-209adfa71ecb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a4dfc2c-7755-4efc-8eef-7d4f8462395c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc8df13d-73f8-458b-88ed-49a57a9191ac",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c10382-845e-4873-b7a3-04b1a30cc53b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1eb2a01-866f-4164-af3a-be6ab90d2acf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4297b32-e4c6-4f2f-adb6-43b3dacb3ddd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "218f7a97-8611-4408-bd55-64ab00c7de39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7618cfa6-0f45-4b53-8365-f8d51cc3eb63",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "456ea237-8525-4b17-84e6-1d7c327f90de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3092d9be-ae5e-4175-adbd-14ea88df06db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "655d532b-db9d-4aeb-8b98-5380cc41cf21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afcdb235-ee73-45a6-9de8-a5f31b07881e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a01904e1-0bd4-4d5c-a36d-b3a97932a9dd",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f54f6f0-ba66-4215-b4fc-a26e749ddcec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0adce609-003f-4e8a-b272-a07b2469528f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67cfc796-8bf6-4e92-8a0b-10488b8e1379",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d69d49b7-26a2-4aa0-a823-2b31018c232f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e40bb455-c3e2-4f54-b800-e7a7cc2b3d6f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c2b213-fa97-4355-89d9-95d1d59bc55c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70bd1eaa-9d98-4560-b2f5-b6d9dcc50f45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88fea0d5-3d06-41a2-81ff-8a2148a30640",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8274b7ff-530f-4507-84b9-415dfa0af0c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9750af1b-3cc9-475c-a01e-09f25ea19658",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "216bf54a-79b5-4ae5-830c-1a49b4db9dfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66c4d44f-b5c5-45e7-9e64-6b3fac50d816"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e522e6e-af57-492c-8da2-a5561883014c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ffd4852-079a-4836-8140-f5eb86908581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7aa197f-54b6-4979-be9c-f5945e8821ba",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5b04a9-c491-4712-9e14-30a35fd5691d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e75e0ef-26a6-43fd-a220-abb220d2ab29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43fa0dc1-b11f-4f10-9a9a-24a4dfe2c53d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77b0c9f3-c878-45e6-8205-a5d606945d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0fe9b9-68e1-475e-b9bd-28c33a0fc85e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a4e36f9-5a26-4145-97cd-bbdd6e12a2f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18424b9e-35b6-4eec-aa41-302baff396a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c13a8ea-e66f-46b5-ad8a-a8ccb56efd30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20bcc73f-2775-402d-92c6-0264061f79c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a526b65a-dd96-4b1d-a478-a921cfc41a81",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4128d0b-0cae-4a77-9bf3-4250f184a1e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad7a67f7-d3d0-402d-a401-a2556d0d50f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54cbc67d-eb6c-43fc-8102-ffbe4d710506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ac25654-1b53-494c-bbb7-247f1ed0cdd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8201ce08-8761-4e8d-b767-9ffc6491454f",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a51311b3-efe3-49fb-b000-ce6e1a683df3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eae2678-6266-438e-a7eb-2d45166b75e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d13d831-5840-489b-93b9-8a7970792ac5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b92950e-0017-4315-935f-a751eba5c75e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3de6126f-3628-4110-a4db-2567460e2556",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd841f02-c31f-40e1-992b-f64447ccabb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bc75a79-6852-4025-b384-cd4bfe77d21a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ede8c61-0b16-4259-90b6-aada70ab9fdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66c47837-8bbe-4e28-9bd9-5d361c4c043f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f40e1f6-a169-4ed6-a1a6-f2b0cefd2dcc",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be3cdbf0-8791-4646-a45b-4e993f7a0f63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "135150fd-7dbb-44b1-80ee-7202b7869ec5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "303e5f81-7232-407e-ade7-5930bdc2d5af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e352d55-a7a4-4bc7-ad31-980f844d119f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8de912c-5d5f-438a-9df5-6c45c7e848d3",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b063eb3c-2175-465d-ac0f-802ed89dab13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8410d4c3-56d0-4523-b5db-2f0936e0dba4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b18846-8e94-42d0-b2d1-cbe7761cde99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "189a1a41-5f83-41e6-bd90-0da6aa88388a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce782c16-7d70-4916-8040-15d71f96abf4",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ee4d9fd-d05a-4744-890a-d4885fbb197c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f4beabb-40cf-44ed-9ab5-1f7930f597e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "194e0264-2be3-4193-b1c2-b252a33012f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee8fdea6-92cd-4d7e-862e-15075ea64be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f12b6fc7-3bdf-4b40-a938-0752a9e57ea1",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ac812e-1409-4a74-82fd-a744fa54427f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27588121-d34b-4ec1-a12f-09e6f663fb43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b2796a0-f7f1-48ea-b859-cabf285ed6d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c79e2433-8d97-4aa4-a38f-03d3b33febb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec5a18d9-19de-4e5e-8ae4-dfb8c928cf84",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f86330b-cdc1-44a9-911e-fdfb346f5007",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b7b1c5a-bfdf-4cd3-a8d1-760d45b9e571"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d558b46-cd26-442b-9de0-953e030002a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53b15a5c-b83b-4cfe-9fc2-156bfedb361c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db2e3303-0337-4d82-a2fe-7d79231991aa",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc75063-c11f-48b0-b2ff-c93be8c6206a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "260b9b1d-9360-4d61-adee-5cb3021b9285"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6476a747-5586-485d-9a59-14c5d8ba2efa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "636eefb8-6cd2-485b-b5f1-14ebb3ac54a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f0db9d-80a1-4d9c-8499-adba0a4f552f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b0cdd6-79b5-4d17-8134-18e69582811c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a835d1d3-28cf-496a-bdb9-fe5aeee428ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27622cdd-1fb6-4b14-b0c3-7718c93a635d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad078217-2227-48dd-a991-d16d6553b230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e51fdfff-41ce-4e36-abde-82f63c1ccea3",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "143be7a8-13fa-4569-af56-c7571e8fb68e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bb650e7-01b6-40d8-bf68-ade4216ec9a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd3332dd-25bc-4b01-a935-0d6a248e3650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7bd3b53-3a9f-46ba-8d75-ef8e1f33f4bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb181d8a-3332-4fbe-b5c2-50cc7d91ef6e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ff4be6-2b1b-43ec-b1df-914a2c18db78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ae8a10e-3f31-4bee-b931-3d543d833153"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "056531d8-8976-427b-90f3-ceef56dc28df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f34543a-6381-45db-8cdf-e6018b4f7338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd677e2-859b-40bf-846f-c39741a03828",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db276dce-dd3a-4be9-b5a1-584e982e8bc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c4153f2-a237-454a-af70-be4405e96258"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c0f6896-3043-4787-8e37-79261d4d9cb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e82f599-4aea-4f8e-919a-2576d398235a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d73007-8d5a-49cc-8582-b82afc43d549",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8061134-d1db-4969-864a-e3071a4c5f84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad39c549-2a13-449e-a6bd-2ef9abd4ab05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cdcddd0-378b-497e-90d5-34c830c0c774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "139b009a-75d5-47b2-9790-f53010f51e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a6a8a93-1a90-4f8b-b4f5-bb76512b02b6",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f40581fa-8731-4e78-b84a-7d223921b8c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0cb5eba-a726-485b-975c-a5ded6dcee2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed5225a7-e128-4a9c-b1d7-1c48c01c8b81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fea4761-dc1d-4f76-a4d5-ec600dfbac4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b837e57-c28c-48fe-807a-5b058861c386",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb712499-b971-438b-a57a-82c51fe98e49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c87725c5-40b3-46fd-8787-e8235ff90b5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33d1bccd-d142-4864-b5f6-a9733fe1de15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "889a6ada-0d49-45fc-80ab-155eae573efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad55aa1-6c97-45a1-b55b-9772dfdd67ee",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a37363a-df54-48c3-b5b5-6a2b09b8765a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "544a51f3-2b39-4460-9939-f15800cde4cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2cda199-fa6b-47ee-b672-f1be11289b5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38e48182-40f7-484a-aa78-5e7a49d05133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0d4a2d0-3299-455c-9f06-6b34c104142a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81cfc05d-7327-4a32-88fd-d1e4fd029045",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "057eb5a3-d7da-4b2b-a55a-48d7591546a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a3828d-70ff-42b6-8f62-d79719621211",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbf93479-6f77-4b76-a004-84a452b45a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61893cbb-8052-49db-9531-2aad9a36edb2",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ebb5fb-07fe-4c45-9c3f-910ed74ddf7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48789e58-d23f-45ad-8c4e-dd7f36bdb3d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b7723b5-8f70-4172-8d4b-421df621805a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1d7310c-94bf-41f5-9c03-744fe5499924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "441bd13f-2d4c-44ca-af0b-6bcecee7a564",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc595bd6-0a5f-45db-aa2c-3c4d6e8678b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f94933e8-f90b-4c25-a663-7c9675ec0b22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b09aedd-6705-46d2-8078-e2cf02200dab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60496389-c2fa-4678-a505-fd9027ede039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "250c752c-c903-4ee0-8137-2ec76f8cf1b3",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9274fb42-a554-42fa-9514-15a849ac5239",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e39f04df-de8b-4487-9f76-d5db4ba20fe2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea220cb-506c-4957-962a-3acfae4a871a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "144ab227-c1a1-4276-9e31-4ffdc6588d92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b477a899-2dc2-4276-933a-ff55cbf2068d",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2560115-ae97-4f0c-8b2d-90541d0e0d8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "754180aa-643e-4a35-a07b-aea096228e3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "572dfa32-2d30-4803-84f7-43ce33ead6e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2d09e6d-f76b-4725-bcc3-f234f37e5b1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2350ea40-bff5-43c5-ac3d-27f44562d3b6",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31bf96ab-bf2a-4809-b2a6-2793ef4a3671",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b9301b5-d826-413b-a04d-026c16c978e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c93f2e-f683-447e-a4eb-d9fbcc9c47cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2ace5c1-651f-4801-aa14-09314bf4dcad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f2b1d1-9c5a-42df-a03a-0b97a4cb0db3",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a1256c-8bf2-4407-91c7-072d7e54645f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "062d5d73-ccf0-4bc9-a9c1-94a6b2fd19a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c93099f4-ee02-48fc-ae19-c5ee7ca74b71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeb5dcb8-2f4f-4297-ba53-fb70dce83d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a98af9cb-6069-4bd0-9206-ce0254f314d8",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "441a4e45-04c0-4564-977d-e05081a878fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd34c12e-3dd3-450e-920e-d489d7bf62fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff56f52-b1c1-439d-97b2-8031427c0884",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ff52d02-15d8-46c1-8831-e039d923951a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1922f8c-db70-4a30-8fd3-827d48761358",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f66777f3-91cb-4949-bb41-850ab888bfec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0366cb6d-81e6-45a9-ad3a-fcb84e55e25f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a732b59c-a8ad-4d62-971b-9955cdcf5c92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f6ef0d2-b386-4c2e-a17c-fb0708f407b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d09ea3-2750-469a-b7b5-62c27a11a7bb",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e3f8a8-a3d1-4044-a90c-554834bf6e6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3dd8de0b-ae78-4fae-9d64-f40420eeba92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc373e93-f0a5-436a-bcb3-4d8977007597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c80d41fb-fdb3-4f6c-8e36-4f4d238548a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8399ae63-ed2c-41c9-b2a2-322a39c19541",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e66d716f-6c47-4702-9c8d-911783efed8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e6d0566-8cab-4653-ba56-1c9bb2a44176"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f10cca-5b40-4db2-a925-344c7f69b60b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8081122-affe-4cb8-96f4-ceedb44388c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b35f4f2-a160-4ec4-af0b-176d021b42a3",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34b0b25d-98c9-4f45-91be-e01707ecebfd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66e643cb-92e5-4d00-9948-635c51c03a13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2636380e-c100-4476-8628-c2d1ba2094e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf4535a4-26c8-417f-b1cd-8286e64ea2fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04155b1e-d672-4d45-bf84-9338133784c8",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23bd9ca8-b1d3-4b07-b33f-b5549a31ccad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e2f8930-277a-47c6-a3a3-f9eea2ff5887"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c122f83b-17bc-43b5-bff7-e2ed24ea9265",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d519a840-c161-478c-9e74-872e4e69ec23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d71f9a98-5351-4ee8-bf5d-361e8539ad80",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39df76b0-2c69-4f68-a02e-e4c4f67a2a26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2c91c67-92a6-4fe0-b4f0-9326fbdb7b73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1aeff11-a73c-475a-8108-31b992d32623",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5305b756-6f44-413a-8689-c87b87f2c60c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1cae4b6-71e6-4d80-b7f9-8339cf0ac412",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a145c144-33d5-468e-a776-7923474ee518",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7382b62-d650-4a66-96d9-2e209ced9592"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea3a53e-c7d6-4f43-b3c3-782d7caa3132",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8af35a3-22af-4d69-aa3d-a58c7f5cd391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17abe441-aed6-4316-8b70-cd6c5dabf057",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a253dbd-a83c-4514-b27c-4da8e21b306d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "987f4bb9-0384-4fea-85fb-fae4d6969eb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a65da3ba-4d57-4a54-9a18-7e24854fd415",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "781d333c-632b-4641-b5b8-096ed7600093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d48bc9e-eb05-4079-897d-b4fca8e4c032",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f0f1d80-9057-4b67-8524-7d24ecd963fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f215e87-43fd-4ebf-b5e8-8efe49ddcfcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62cc27fd-b61b-47c6-8842-11c408787975",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "028012d2-0b01-4636-ba49-5684f8275d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73b4559a-faa9-4e6b-9bb8-3c087d6ad853",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c71ffd6e-6960-41ee-9579-e4f66ccbe8c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14ebe8e2-2a93-4053-8807-ce8a6924f857"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "454e18ab-a82f-40a6-a310-c6f77c9a8295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd4deee6-7522-42cf-9c23-cb3d7a0e7baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a06a6c3b-5c00-46f3-8d0b-d313d21fed61",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d43f166-db07-4c1c-8dde-20c4a4c020c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b0a3c86-0159-44b9-a5fc-f6d7fe4a4073"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecff3097-64fa-4531-9c07-fc5747a9dca8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2e77045-0650-49f9-8d8e-e7179cbfbb6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e723ba52-99bd-4927-b07a-2022da627221",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56234ca9-f184-4478-ac8e-74f2cde575de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e33ea0f5-47c7-487d-88c6-1def25a07f9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6ae1c0-766e-49fd-91cd-46d51aab21f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "652b2493-5ac4-4a92-afd0-bee9c8b2b082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7fd108b-ac2e-474d-819f-3ce94e13ff08",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a915da-110d-4dfc-90fa-2d1be235937d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5431a8b0-e6f2-47e8-b3dd-fe45e7b46dd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2798b83c-7e7e-43a2-95ea-773b6aec7028",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fbdf42f-9dfa-4d71-8f55-be2708f37098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af267e3-1db5-4bcc-8108-9f0fab4cd010",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2930123b-dcb6-4ea2-9df9-492d260eb628",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d83f394-6812-4b66-9404-8546ee83fced"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d6afc2c-2b41-492c-b92e-8420c9a4bbec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad1da092-6dcf-4f38-8ceb-54601e952e02"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa105181-8bc9-46be-a8d5-dc40372a3046",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49f70d9e-21ae-4ef2-8cdb-42fd09f8bd8e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd06827a-91e0-496e-891a-5fcfd6ec711f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5bb88b9b-3343-47a4-b54b-061644808c61"
                    }
                  }
                ]
              },
              {
                "id": "e7ac269d-64f8-4914-ad1c-9c8d6c4decb1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3c22a3fb-4c30-4a3a-8d2c-30d0cf1830dc",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c25c14-7bf0-49d9-b35a-8e85e0143b26",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1050141a-b33d-4141-8565-3095f92acec8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c220489-6a36-4eae-955e-c9516afc3c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d471d941-f959-45fc-82eb-d8b3b11c99e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4187e900-17a3-4d8e-af31-da834d5ce974",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1190fb85-ae7e-4546-84b4-398726d3c8c2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9350d153-8ec8-4e1a-8c55-d2278937f48e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3bb80c9-7ecd-416a-9320-6bc2fd24923a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "29425496-1f12-4f82-82cb-a00ffeb8b24b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad6291ee-7f5d-4bae-87d5-1d1d7d7ee757",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3632d1c7-7e24-4b11-9cad-e954572d8b7d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "551974cb-58f6-42b6-9b88-598b738178b2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae373c61-a5ee-48a9-a96b-7723cf80ef7d"
                    }
                  }
                ]
              }
            ],
            "event": []
          },
          {
            "id": "8c23f736-71e3-4365-97db-9bd16deeb13f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8ef64324-1710-4cff-9962-3f811e952ca3",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad1f1413-9b35-4622-8912-4b12c6fea515",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f1498313-d329-4f82-9f87-bd5eefbb96f4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "04f6ca61-ecd9-4c09-b146-6be124769e43",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "636be786-a264-4a7f-bce4-6fd4e468a6ab"
                    }
                  }
                ]
              },
              {
                "id": "0d74519b-2ace-426e-b314-595f27638212",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fea6cc27-2834-49d1-b0d7-65f9688c4e52",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1f1cde8d-5d5a-4eb1-8b53-cc009eec51df"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e7a9a8f-e827-4937-bc51-66b18e82259e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b5521825-8eeb-4f4c-9593-cb58bb2511b8"
                    }
                  }
                ]
              },
              {
                "id": "14e3b7a7-9d83-4182-a1c2-a6f67977a8c1",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "df8d5b1d-fa28-4522-8002-18b8fd3667b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0bb69fab-02e0-4817-b329-573ffa34c7b1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a5b3167-9eb3-4caf-91f4-a1048ff8335c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "545ddba1-74f1-4957-9217-eb2620ae70cb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d1357812-48f2-4f67-8d45-3ac159618a23",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "490add1c-06c0-4e80-b536-0f867938b829"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5f2d5b9c-d802-4545-9e03-b06ed6ab30a5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "159a53cb-ef7f-486b-bd3e-6f79ab076510"
            }
          }
        ]
      },
      {
        "id": "d88ca153-861d-4cc2-9418-487e4b96c650",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "98d6c92e-a69b-4179-8e39-a30a68a08207",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0ae1b1a7-76e2-4c3f-8d53-23af5add3bfa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c0d13a24-22c9-4735-9029-793cdb9a2165",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afcbd18e-1811-425f-a780-3d090f80b9dc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "40cc2983-f672-408a-938d-b205108aecf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc71bc1-a6fa-4052-88fd-b86593155f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1dfa7504-44e2-4051-a9f4-d09a35367a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d4f6104-5a7e-4671-bbdb-fd5732e07e63",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fedda13-efb9-4b14-acfd-2f18c50c956c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ca781855-9843-4cf2-995c-fa206b7e11d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36cc9873-4176-40fb-adda-82b453adcca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d446fea4-9194-4584-95c8-cf891e39da8f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fda2080f-078f-45ac-a9ae-9b2dd82073ef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a0e8200-4091-4d7a-91de-b0e7bc0b0546"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9cbf2541-2575-4152-a502-f25874719a88",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "80561742-7136-4e45-94cc-8528ae16a886"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cb1b1ad4-ae9f-4185-a84d-bc4f72420b81",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e914b4fc-5b91-439e-a823-c6601a0bb9d2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "19662a36-20f3-438c-839d-54695ccd46ea",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1b56e60d-c887-4aee-80bd-5fadff9d89a8"
            }
          }
        ]
      },
      {
        "id": "a63d48bd-1898-4049-b4af-dc30d7b927d0",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "943b1923-7db8-4034-884a-55ef21b6e27c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "83a1569b-074b-42c6-b721-a420fc8fd3d2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fc262441-ba57-486e-964b-e4244221d2ce",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "296cb4c7-6aa0-401e-a731-9743907e7d91",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "bf1e53dd-8a5d-47b8-9cf5-52626006afd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8e77bf7-e932-4b3a-8acf-52d2d0484982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b4719c10-b704-461a-a1ee-a5d794bc3394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02496aa5-2156-4705-9ced-ce9502c19052",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c63fe241-fbe0-433a-b599-0f5774260c0b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "97eaf33b-eeab-480e-a287-4b3c84e2e832"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55376b1-af59-4076-af8e-afdc28c15e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "70574940-b57c-44ff-9a4d-7b5ebc7208f3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be990bfb-915f-4080-aecc-1136d443f48f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f82746a-3d0d-404e-ac3d-3dfe537394ba"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0310fe62-4137-4981-96a6-ef9d2472b585",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "408121bc-362d-4cd7-a076-6be7c0fced27"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "09c113f5-b9b1-4ab4-9cc8-e74472d18366",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "54b08aaf-887b-4bda-a5ce-d4eea648fdb2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "83fd8972-b47c-4f4b-885c-2580a2f5dde4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4aa8614d-dd83-432c-b201-a243506683b4"
            }
          }
        ]
      },
      {
        "id": "497da7f6-89b5-4481-af67-5c50cd8dbe02",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "d79670b2-ada0-4466-ae98-bfb6229d0cc9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0aea52c9-e2a9-4fe2-b41f-be504f7ddd7f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c2b20bae-8cdd-4f86-8e30-bb7293630a10",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e9ea4de-ea15-48c8-b0b0-f0ebd7c5c80e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a624f8f8-5321-4a5d-b9ca-b76e18b21f1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e36b196b-e1ef-491e-8a1b-ade3f6c48d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ab151a1e-7c9a-4280-9d26-f69dd83aca63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d63872e-e827-47bb-95ce-8cc79589770c",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d657024-e3ed-4d72-9816-585423a042b3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "58432296-5acd-4754-8876-6897616272f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acbc494f-490a-48a4-bedd-095238b280ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dea8f8e2-272d-4eca-897d-e39ab9614b43"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3033a1dc-60ab-43ac-9fa6-1fb1259d9db1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "addfd9d7-1eec-42c1-a997-53279c9c6395"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a3e8d81-d45f-427d-904f-b0d9970fd3c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc95d3c1-7d25-41f9-b1b5-1d659de1e784"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ad2fb242-f371-45dd-a41e-dbae320a0780",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "03fa50cf-5762-4611-a0db-1c493be94622"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "acddc8c3-db05-460d-b91a-2b380af60677",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "04e6f2c8-4014-4dcf-8d7d-708d16237d91"
            }
          }
        ]
      },
      {
        "id": "b384ed50-cb0e-43e7-be83-cc94fac2829d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "66dcf993-db5f-442d-9466-bcce6b6bad0c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "21e9cf0b-1df8-4c48-98fd-2910bfec9a11",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "6b0d4e88-b620-4d15-93ae-e48e3975326e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "39e67fca-78c6-4479-9772-ba6aa76b5151",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "13f48399-52bf-4549-a590-90ff5dff4ddd",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 505,
        "pending": 0,
        "failed": 6
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 438.2769230769229,
      "responseMin": 19,
      "responseMax": 2804,
      "responseSd": 320.75037059477677,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1667177832535,
      "completed": 1667177957523
    },
    "executions": [
      {
        "id": "81a1a415-abf6-4c24-9f3e-24436c9de519",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c810a0d9-883d-44ec-a773-d6b9cc9f6e99",
          "httpRequestId": "2adee764-5d4a-42d5-988c-6fcf29a246eb"
        },
        "item": {
          "id": "81a1a415-abf6-4c24-9f3e-24436c9de519",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "0d7db8f4-c239-44fe-a158-a3befaa1e54c",
          "status": "OK",
          "code": 200,
          "responseTime": 134,
          "responseSize": 0
        }
      },
      {
        "id": "268eb42c-2cc5-40f7-bf1c-de5d7243952f",
        "cursor": {
          "ref": "3afa12fb-1b9c-410a-8eac-ccbf7a2946ad",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5073fb3f-b008-40ad-892b-273310f84ecc"
        },
        "item": {
          "id": "268eb42c-2cc5-40f7-bf1c-de5d7243952f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "0516055c-0fda-4cec-9756-203d4afbd39d",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 0
        }
      },
      {
        "id": "c4342fc6-f625-4450-82d7-ce8af75bc0a5",
        "cursor": {
          "ref": "8fca6435-d114-4153-8ede-9a6be2a36705",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9fa50d59-01e9-48bf-94f3-5fee778c5103"
        },
        "item": {
          "id": "c4342fc6-f625-4450-82d7-ce8af75bc0a5",
          "name": "did_json"
        },
        "response": {
          "id": "3abf3ade-ccd8-4f9a-ac95-15735d620664",
          "status": "OK",
          "code": 200,
          "responseTime": 904,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ae7719-9052-4319-94f2-81e61a7d87d2",
        "cursor": {
          "ref": "6b2c1da3-6048-4fa5-b2bc-e93c6c20d7c3",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "14c65867-c03e-4094-937e-89264a77ed19"
        },
        "item": {
          "id": "02ae7719-9052-4319-94f2-81e61a7d87d2",
          "name": "did:invalid"
        },
        "response": {
          "id": "73c588c2-a544-40eb-91c1-121d9d662b64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ae7719-9052-4319-94f2-81e61a7d87d2",
        "cursor": {
          "ref": "6b2c1da3-6048-4fa5-b2bc-e93c6c20d7c3",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "14c65867-c03e-4094-937e-89264a77ed19"
        },
        "item": {
          "id": "02ae7719-9052-4319-94f2-81e61a7d87d2",
          "name": "did:invalid"
        },
        "response": {
          "id": "73c588c2-a544-40eb-91c1-121d9d662b64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6adb97b4-d55b-401b-974e-325a927956be",
        "cursor": {
          "ref": "5b2ba578-f932-4072-af2c-b72e5dc654f6",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e29d51e5-4d1f-452c-bfa1-32bdcb6adfcf"
        },
        "item": {
          "id": "6adb97b4-d55b-401b-974e-325a927956be",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "85411f18-a0bd-4552-b500-9aa7533a41f7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 522,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b876c1cf-1829-4143-8193-247d1a76dc57",
        "cursor": {
          "ref": "f7495502-8ef2-4612-833f-4357941c6ef4",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "aab8fd9b-96fe-46a0-8927-ba1bcc4d5014"
        },
        "item": {
          "id": "b876c1cf-1829-4143-8193-247d1a76dc57",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "82348d8c-1b9a-40d6-be20-e0cfc5932c57",
          "status": "Not Found",
          "code": 404,
          "responseTime": 440,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b18a772-53ff-4e4b-8b51-caa3e80266e0",
        "cursor": {
          "ref": "3f01bcec-b790-4d99-bd5b-0ca5cbfbb88e",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "be1bf50b-c2fc-4b6e-b195-45199c371a9e"
        },
        "item": {
          "id": "9b18a772-53ff-4e4b-8b51-caa3e80266e0",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b1d6bf6b-bec0-446b-aac1-a3b888d3d68a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7a0a45-095e-42f4-b830-b4a934847dab",
        "cursor": {
          "ref": "a4e542ab-c3ae-491e-a1f6-2f0de878a3de",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d86b68ce-90d8-447c-8842-131d95a46bb1"
        },
        "item": {
          "id": "fe7a0a45-095e-42f4-b830-b4a934847dab",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "b5a94492-988d-4dd4-8474-896e9e334265",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 443,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7a0a45-095e-42f4-b830-b4a934847dab",
        "cursor": {
          "ref": "a4e542ab-c3ae-491e-a1f6-2f0de878a3de",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d86b68ce-90d8-447c-8842-131d95a46bb1"
        },
        "item": {
          "id": "fe7a0a45-095e-42f4-b830-b4a934847dab",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "b5a94492-988d-4dd4-8474-896e9e334265",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 443,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f400a5-b750-48ef-aad8-87199830cf1e",
        "cursor": {
          "ref": "01a6adf2-2ec4-487a-9717-e6ad8b9427d9",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "be1ebb25-e10f-4865-86c4-88d0c0279da9"
        },
        "item": {
          "id": "16f400a5-b750-48ef-aad8-87199830cf1e",
          "name": "identifiers"
        },
        "response": {
          "id": "cb0f5ae7-8adb-4506-ba42-39261c2bf32b",
          "status": "OK",
          "code": 200,
          "responseTime": 671,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef494c2-bde9-440e-bc63-f0de9693fdb6",
        "cursor": {
          "ref": "e7b342c0-77ad-4fe4-ae33-87bf0dd901f2",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a4b4c6c5-b3b0-4313-a260-3ccd93de39d5"
        },
        "item": {
          "id": "bef494c2-bde9-440e-bc63-f0de9693fdb6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "40f8e176-981d-4b37-9391-aaac7a63c486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef494c2-bde9-440e-bc63-f0de9693fdb6",
        "cursor": {
          "ref": "e7b342c0-77ad-4fe4-ae33-87bf0dd901f2",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a4b4c6c5-b3b0-4313-a260-3ccd93de39d5"
        },
        "item": {
          "id": "bef494c2-bde9-440e-bc63-f0de9693fdb6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "40f8e176-981d-4b37-9391-aaac7a63c486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f7000f2-0477-4141-baf0-7bd5d2332a08",
        "cursor": {
          "ref": "e86be7bf-8428-4e85-9269-367cf79a99e0",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3e3c1a5a-6492-4f30-b8e6-11bc005987e8"
        },
        "item": {
          "id": "2f7000f2-0477-4141-baf0-7bd5d2332a08",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "945fe240-ce40-4b7e-985f-88d425999152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f2b9a4-2f5a-46a4-a060-a77383c233ee",
        "cursor": {
          "ref": "1405cab1-9565-4276-9171-c2056ac293d3",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "cfa579a3-5b3e-4473-8f05-2054343ecfea"
        },
        "item": {
          "id": "a6f2b9a4-2f5a-46a4-a060-a77383c233ee",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "321ace37-e381-4885-a586-4ad257e1f30a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a764cf-a958-4c42-b0b6-5cf12f1f6f3a",
        "cursor": {
          "ref": "253aacb7-5627-455e-bfb8-f3940583c901",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6a117e70-7b7a-4349-b4b1-284663c91dc6"
        },
        "item": {
          "id": "20a764cf-a958-4c42-b0b6-5cf12f1f6f3a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "3629605e-43e8-4029-aa50-604c56ccc56a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "299cf427-a0db-4591-adbc-4befceb76bd5",
        "cursor": {
          "ref": "8377a6db-1f3e-4b2b-a173-758b868f3f9c",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c5220145-ca7d-4393-a53b-36c2d094f5d3"
        },
        "item": {
          "id": "299cf427-a0db-4591-adbc-4befceb76bd5",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "370d36f7-8c1b-4908-b10d-1afe82ca0080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 678
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "295f101f-4658-4520-aa8c-259a7dd57634",
        "cursor": {
          "ref": "92d40370-fe99-4955-b28b-4b2da8ef5321",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "7607eebb-f33a-4f33-9b8e-ecbce25aa526"
        },
        "item": {
          "id": "295f101f-4658-4520-aa8c-259a7dd57634",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e7ff646b-d343-4f4a-a492-02dc82a49b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 428,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc03b498-5a2a-4cc7-989b-60c7bc25033b",
        "cursor": {
          "ref": "857925d0-e39b-4343-b4ab-6acabc5ee22c",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "0264c2aa-6154-457d-a512-260768848e9b"
        },
        "item": {
          "id": "fc03b498-5a2a-4cc7-989b-60c7bc25033b",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "bbc031b4-945a-4391-81f4-2eab8c7b0c86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48bbb391-e3ef-4aa0-a54a-b1bed9ada67a",
        "cursor": {
          "ref": "574833f7-9239-4517-a6f3-45bcfc50a0d4",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "646899ad-ebcc-41f3-a9dd-65f6e004a409"
        },
        "item": {
          "id": "48bbb391-e3ef-4aa0-a54a-b1bed9ada67a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c8a0bd5d-e20f-40a0-b391-e7b6f82732a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 428,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34e18b9-2b32-4cac-8d1c-d47da953b745",
        "cursor": {
          "ref": "413aa263-3053-46a3-b393-e9f76fd91b1b",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "3e978a0a-a679-4988-ba8e-a99c6983b6b3"
        },
        "item": {
          "id": "a34e18b9-2b32-4cac-8d1c-d47da953b745",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "471251ba-de6b-4442-bac0-761c1c0b4df7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 950
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8472c02e-351d-4ea2-8a20-f9309642d358",
        "cursor": {
          "ref": "f31fe8a4-8ada-4a4f-bb12-902885b5c9d8",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "4f1f14b1-1d7f-4d86-a776-df3c0070a4cf"
        },
        "item": {
          "id": "8472c02e-351d-4ea2-8a20-f9309642d358",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "36f700a0-5932-4747-8865-02b455381859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 947
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8808946-06fe-4c9b-80e3-d56452d636b1",
        "cursor": {
          "ref": "e821b920-c5cf-4c14-9530-33bde12a50a3",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "106f06e2-6e42-4d8b-a957-d169cddcaab8"
        },
        "item": {
          "id": "d8808946-06fe-4c9b-80e3-d56452d636b1",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d8b96f92-b887-4ccd-8db2-f2fe17414a45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 422,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec33d7da-8444-42cd-aa19-2267674655ef",
        "cursor": {
          "ref": "e2abe63a-817a-4813-9fdd-2ab47180c4ca",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9995e837-dda2-4ec1-b5f1-01f98d0dde2d"
        },
        "item": {
          "id": "ec33d7da-8444-42cd-aa19-2267674655ef",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "81cdda66-8231-4f55-8cde-b429cc64fd75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd38870-244f-4beb-a1b0-f4878c36954e",
        "cursor": {
          "ref": "78cdb2bc-e626-4836-838a-ea0722ee2e43",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "552fd13d-1897-49d0-bbe2-ace777d9c7b4"
        },
        "item": {
          "id": "0cd38870-244f-4beb-a1b0-f4878c36954e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "fbeb1d02-a4fa-404d-a557-f918585b049a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc1429df-20d8-43c4-a835-a4468b693c9a",
        "cursor": {
          "ref": "296f1233-feee-47a9-a81f-934cb9885e0a",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "124eef6d-77c2-4bb0-b84e-1ec2bd208076"
        },
        "item": {
          "id": "cc1429df-20d8-43c4-a835-a4468b693c9a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "26c9680f-9558-49f3-b1d8-f1b7cb9738c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa8a7f8-cb1c-4fc4-aa35-8457dd7a0595",
        "cursor": {
          "ref": "97eff513-3dcf-432d-9dbc-c5a585c2d634",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "cba99d6f-84e4-42e1-ba09-c5f26a817e9e"
        },
        "item": {
          "id": "7fa8a7f8-cb1c-4fc4-aa35-8457dd7a0595",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "63fdf631-e671-4607-8b14-6066692b0518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed825ea-0146-466b-a06b-6a4e8959ae9d",
        "cursor": {
          "ref": "d08a1f61-a0be-4322-9076-87c69c80cf6e",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "80a4db52-c37f-4f6c-9585-eaf418aa34fb"
        },
        "item": {
          "id": "9ed825ea-0146-466b-a06b-6a4e8959ae9d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "3edc2780-9570-40f0-8d9f-397bdb08cb52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d69923c2-cc63-4331-8e6d-fbf46b7b4cfe",
        "cursor": {
          "ref": "508d4f3e-db1a-4f21-8a10-c570ba0b827f",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d91e65e8-782b-4128-a524-c902ad67bd13"
        },
        "item": {
          "id": "d69923c2-cc63-4331-8e6d-fbf46b7b4cfe",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "215d942e-89f2-4b00-8de4-4ad48775626e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61821f98-48c3-4b53-b6ec-3c8b19521eb8",
        "cursor": {
          "ref": "7f97c4b3-2388-46ff-b124-839314981b5e",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "d6c3a0a0-b6e9-4e84-8675-6e02ff9be86c"
        },
        "item": {
          "id": "61821f98-48c3-4b53-b6ec-3c8b19521eb8",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "7caf22c3-9cde-4276-82b6-64c3b7e97c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd91ddc-8590-44d1-bfe5-4a9861bea42f",
        "cursor": {
          "ref": "1c735bb7-cc4a-450c-b9b7-885b54769c15",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "bdb22e4b-c325-4694-a347-545e1bccb679"
        },
        "item": {
          "id": "fdd91ddc-8590-44d1-bfe5-4a9861bea42f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "80a34834-947e-4c5f-8c97-b5fd537daad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150051c8-206a-495c-9d0f-001cff46c901",
        "cursor": {
          "ref": "f840dcef-0488-43de-9e68-66bf5582795b",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "dd3e67fd-7bf1-46f8-adde-abb174366a8a"
        },
        "item": {
          "id": "150051c8-206a-495c-9d0f-001cff46c901",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "76202abf-2132-432f-a512-d94127d483ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c0751a-d1d2-48b2-b7bf-968387440c85",
        "cursor": {
          "ref": "bb1b9fa1-343e-4709-a498-59c2014a8664",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "905e5ce2-0f78-4536-b1b6-3d6c83ebdbbf"
        },
        "item": {
          "id": "c6c0751a-d1d2-48b2-b7bf-968387440c85",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "5b8d2294-c844-444e-9b38-bd0626d8fac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8468e4c1-3e66-4a86-ad70-a77e89f163ed",
        "cursor": {
          "ref": "769e5305-0743-4f0a-9bd6-c5d6fc4241de",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "145d644a-be4a-4ecc-9670-dc417b6a8c3a"
        },
        "item": {
          "id": "8468e4c1-3e66-4a86-ad70-a77e89f163ed",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8fcd904a-359d-4ac4-8690-7d2ee6c86a8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50465651-904b-4579-bb15-4a48276f929c",
        "cursor": {
          "ref": "e4ba7d59-9d8e-441b-817f-33f1fb1b3c0e",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "98c5a1b5-9510-4428-85b0-6a2b8e120c99"
        },
        "item": {
          "id": "50465651-904b-4579-bb15-4a48276f929c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "d4bbfac9-0f2b-4b69-9b51-39bf59f041fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e0ad7ae-f883-4488-a81b-a789078f37b9",
        "cursor": {
          "ref": "ad03860b-1c7e-4a9e-96ad-14f662466071",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "28c097a2-75c4-40b9-84b0-9451c59bebbe"
        },
        "item": {
          "id": "4e0ad7ae-f883-4488-a81b-a789078f37b9",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "04cc9d39-efa2-4739-bf30-ca469adba10f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9accf8-f32a-42fc-afa3-0cc3ec93aeb1",
        "cursor": {
          "ref": "18daa342-da5e-45c2-af9b-7e02f81ec7fc",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b3367d9b-2b2b-422b-8b6f-754cada46c19"
        },
        "item": {
          "id": "ed9accf8-f32a-42fc-afa3-0cc3ec93aeb1",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b9e42067-480e-4eed-859d-76fa60b8a14c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d8cc650-0f39-4673-8f50-651ecdb85117",
        "cursor": {
          "ref": "0083693a-c108-489f-bd35-90565b7558a6",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d8a28be6-4c75-4875-bae2-9edb6d54fff4"
        },
        "item": {
          "id": "5d8cc650-0f39-4673-8f50-651ecdb85117",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "63e3f447-87d9-4bf7-b3d5-8df0eb522fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c63a996a-9618-480a-889b-b99d5ecc781f",
        "cursor": {
          "ref": "7309ffa3-d0f1-406b-8f27-4f2dffaa6fdd",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "14406e91-5922-4fce-91cb-fd7b1cdbaa3b"
        },
        "item": {
          "id": "c63a996a-9618-480a-889b-b99d5ecc781f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "81754100-3fde-4a28-a756-699783e9a4b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00f0fddf-4914-4e7a-a0ab-7456f876d430",
        "cursor": {
          "ref": "457b7689-e0bb-4352-a858-e4470de423c6",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b6b8abfc-28b1-4f23-a828-f302aca15235"
        },
        "item": {
          "id": "00f0fddf-4914-4e7a-a0ab-7456f876d430",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "22241c73-80dc-46f6-bdba-76d5c7cd2b57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8368f36-a331-4780-992a-af24ca0f3f0d",
        "cursor": {
          "ref": "ee4005ef-fbba-48bd-8842-414b794f5cad",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "cc0104cd-0e5b-43e0-aa1f-8065be563f46"
        },
        "item": {
          "id": "a8368f36-a331-4780-992a-af24ca0f3f0d",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "4b065058-30a1-4287-9f29-0ca551bc90d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae3e2c7c-d3e9-4560-b6cb-611470ae8b6e",
        "cursor": {
          "ref": "2df19a7b-0fcf-4add-83ae-3812fd1a129a",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "da28bad5-7ced-4a17-990b-89dc6934406b"
        },
        "item": {
          "id": "ae3e2c7c-d3e9-4560-b6cb-611470ae8b6e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "39719ff7-b23d-4bae-96c6-e8d5e195c48c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "654d927d-b8a0-4b80-bf78-9cefa79da2b2",
        "cursor": {
          "ref": "54464814-a8b2-4d50-b935-6d19c6574026",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f75db13e-bfd6-4212-8333-a1b126e82372"
        },
        "item": {
          "id": "654d927d-b8a0-4b80-bf78-9cefa79da2b2",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d151dc7e-ac08-4e4c-8c83-56537a2031d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f57054c6-c140-407b-a812-97b0b9d17f34",
        "cursor": {
          "ref": "98f033c4-9c0b-46bc-b2af-6dbe1380fa69",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "30a0d432-e1a6-42ef-bb54-7836061539e3"
        },
        "item": {
          "id": "f57054c6-c140-407b-a812-97b0b9d17f34",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "25405675-21b7-4393-a83f-6972f38a78d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 941,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe4c9aff-7c26-455d-bebb-3d36e57de5e9",
        "cursor": {
          "ref": "d71c283b-1265-4657-9d46-08f1757791c3",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "459f05ac-f723-4db5-8488-901ccdc6e9af"
        },
        "item": {
          "id": "fe4c9aff-7c26-455d-bebb-3d36e57de5e9",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b3dd4ad3-3ae4-42ba-aed5-a423c86f0a22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 892
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e842971c-9928-4f5d-86de-30f95cb45a94",
        "cursor": {
          "ref": "a7ebc36a-c704-435e-8c6b-46daecac94ae",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e7aed3b3-a1e9-4794-b24b-180b6f0bee71"
        },
        "item": {
          "id": "e842971c-9928-4f5d-86de-30f95cb45a94",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "cec84c12-a94c-4944-8845-551705041534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "098390c2-7afc-49c7-9d2d-9b8d26f6f6c7",
        "cursor": {
          "ref": "bc535a32-f33f-4c7d-965d-e0a80f1c048e",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "9334653c-003d-4071-9e4e-d9db122a5ded"
        },
        "item": {
          "id": "098390c2-7afc-49c7-9d2d-9b8d26f6f6c7",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "999e9524-1a8a-4ca5-ac5b-705fa4bc71be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 728,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25aac6b-2996-4a2e-9fef-8c25a88504cc",
        "cursor": {
          "ref": "482c5b36-0456-417f-af41-b1047cf05e84",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0c351d65-b2db-4c5d-bcef-c25dec60a9e3"
        },
        "item": {
          "id": "f25aac6b-2996-4a2e-9fef-8c25a88504cc",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5973b5bb-f68f-412e-bf8a-397b7da0ef78",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 921,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ded84f-3dc4-4449-9e69-64a508cf90bc",
        "cursor": {
          "ref": "19f63722-1632-487e-aeff-b89faa6c4f1d",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "cf429faf-f203-40a1-a4d5-d3ba6f29241f"
        },
        "item": {
          "id": "86ded84f-3dc4-4449-9e69-64a508cf90bc",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "83af3fa9-104f-4d0b-993b-cfb22e82eb34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 736,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ddb07b5-1290-41bd-8cf8-7f32f83f4a01",
        "cursor": {
          "ref": "f953fa4d-5d78-49f0-a469-a3a72b43f0ce",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "35c0e957-e912-47ef-86b1-1a418d92553c"
        },
        "item": {
          "id": "9ddb07b5-1290-41bd-8cf8-7f32f83f4a01",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5707dd6d-f27e-4998-9c0f-731ba01a7bb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 1305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c475fe25-5313-4b05-a3f5-086cc35ddf60",
        "cursor": {
          "ref": "6998675f-036f-4e85-8aef-d748222d632d",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "26f19cdf-1736-4b75-8504-06c0447d994c"
        },
        "item": {
          "id": "c475fe25-5313-4b05-a3f5-086cc35ddf60",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "937ea12a-91b4-48f0-90fb-5426694c7e62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55db560e-167f-4634-896d-dfbdc21d3b59",
        "cursor": {
          "ref": "bef9ba38-460b-4b64-8a20-bc0603098d46",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "8cdc5f95-70d5-46b4-975b-33698ad65b75"
        },
        "item": {
          "id": "55db560e-167f-4634-896d-dfbdc21d3b59",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "78f56b11-3ddb-491f-82ce-097bf2895c94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eeee502-13bf-42a2-9598-a7130e770905",
        "cursor": {
          "ref": "cf3e80a5-171d-422f-b231-9c94b4e55203",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3cc9265f-e47a-42bf-a2b8-428b887d4837"
        },
        "item": {
          "id": "9eeee502-13bf-42a2-9598-a7130e770905",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "737d2089-d76b-431c-8bcf-3a8362d07f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48a1b3e0-f3c9-4331-871a-35ede6bba1de",
        "cursor": {
          "ref": "58b1508a-db1b-4cbd-9237-c9a2f7e62c4d",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b0873720-41b6-4ae2-a23b-dd39ec5a9c8d"
        },
        "item": {
          "id": "48a1b3e0-f3c9-4331-871a-35ede6bba1de",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "24b33858-d3bf-4afc-9145-feedaa694832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 1636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52cb1755-4510-4e03-96e9-f330a9098e39",
        "cursor": {
          "ref": "3b5a2376-b42a-48cc-8f58-7e2e0564ff0f",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "5146afab-1f96-4aeb-ac36-5c67ee231f37"
        },
        "item": {
          "id": "52cb1755-4510-4e03-96e9-f330a9098e39",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "7ffbe95a-6301-439b-a09e-a339fd8b0591",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 458,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0e4faa-2786-4327-85e1-94a56bca7c19",
        "cursor": {
          "ref": "add4545e-c0b6-442b-a62d-235f226d99b4",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "9d3dbea7-3b7d-4260-a65c-0e4bc35fa80c"
        },
        "item": {
          "id": "6e0e4faa-2786-4327-85e1-94a56bca7c19",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d696fa65-9b8d-4e72-a731-27e5d1899f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 524
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa5a93f-d52e-4bc2-8e78-de3f11e72e2e",
        "cursor": {
          "ref": "74a3ef69-29aa-4c4e-89d7-98b762f62b9b",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "5a091a92-819e-4290-a527-17073e190718"
        },
        "item": {
          "id": "afa5a93f-d52e-4bc2-8e78-de3f11e72e2e",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ae8ac40e-e795-4da1-b326-1bee610e0288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 548
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4e06c6-c8b7-4016-a78d-0839e0298545",
        "cursor": {
          "ref": "a3483fc5-990c-4ca7-9208-07902c37fdb0",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "9f3392d8-27fb-4d1b-ac70-847a815505cd"
        },
        "item": {
          "id": "cd4e06c6-c8b7-4016-a78d-0839e0298545",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "5ceee36a-4646-4320-8e11-59480121a484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a572b30-70d4-4868-9f9b-2b40a26f2a58",
        "cursor": {
          "ref": "5f365927-8613-47ac-b110-e8e96ee48a06",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f84ce768-1a77-4bdc-8b85-9a2268cd7db5"
        },
        "item": {
          "id": "6a572b30-70d4-4868-9f9b-2b40a26f2a58",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "cab16d0c-7e1e-46c7-abac-352b24f5fbd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f5122ce-4e10-4684-9fa8-75059849b970",
        "cursor": {
          "ref": "620ee90c-1df6-4e58-89ec-1f6a2d16c329",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "57078007-9206-4644-9a9b-6db7717683ad"
        },
        "item": {
          "id": "2f5122ce-4e10-4684-9fa8-75059849b970",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "cef35ee8-7f15-45be-a0fe-bd3d355f2c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f9b25dc-1c77-423f-93d5-eb35f3659e6d",
        "cursor": {
          "ref": "65832e1a-14ac-4bea-9472-e7bca315bdbe",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b8ad1f14-5530-4568-a675-033cf5e0dd2c"
        },
        "item": {
          "id": "7f9b25dc-1c77-423f-93d5-eb35f3659e6d",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "4bf21dea-e158-45f8-a267-818124de2fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3755b650-66ac-44b8-902f-97d27ab7122d",
        "cursor": {
          "ref": "cd2741a5-6910-4613-98d5-a20deb25babb",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "5dc33c49-980a-46cb-8b80-92ca23af6c08"
        },
        "item": {
          "id": "3755b650-66ac-44b8-902f-97d27ab7122d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f95f2383-b0bd-44fb-8021-5ab7bf7c26dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b022e3e4-5075-4be3-8430-341370278830",
        "cursor": {
          "ref": "cd2ddbf4-5f5c-4ed2-89af-5df8c4b22c26",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e44b8c03-b010-448a-8a08-d61aa0037883"
        },
        "item": {
          "id": "b022e3e4-5075-4be3-8430-341370278830",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a01d7b16-205b-4e40-b571-a93ea153dd2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbee59aa-2355-4156-8eb7-c6b056201c6a",
        "cursor": {
          "ref": "8e56c88f-9791-4bc7-912e-521c2cb40fd6",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "16fedb8e-eb87-4ec0-95d7-9aee2ac2b8a2"
        },
        "item": {
          "id": "bbee59aa-2355-4156-8eb7-c6b056201c6a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "272923e3-2ca7-45ad-9351-4e257ede2669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c7fb7a8-5f2e-4ff4-a27d-e00ff2e3b716",
        "cursor": {
          "ref": "4bb7aef5-c551-4bd6-ae8f-87e9808d8ff2",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "9665f971-cd03-4878-ac91-318f3e9df14f"
        },
        "item": {
          "id": "7c7fb7a8-5f2e-4ff4-a27d-e00ff2e3b716",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "baed33c7-dde2-4ef3-a0a0-072d2a183815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ee66bc-fbf3-4427-b2bc-580d8977f573",
        "cursor": {
          "ref": "ff2dc543-f61a-4aef-93ff-ef33f8db74f7",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "46073377-d99a-4e6c-b40f-90b05a5c1ce3"
        },
        "item": {
          "id": "f9ee66bc-fbf3-4427-b2bc-580d8977f573",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "3079aa29-fbd8-4612-8b58-0354ccfe1e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 826
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dcee91c-97d3-45ef-a178-ac3b429f75e7",
        "cursor": {
          "ref": "312b13ee-88bb-4108-93d3-e448c5387425",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "652e80c7-80b6-460e-8faa-f20aa2787695"
        },
        "item": {
          "id": "9dcee91c-97d3-45ef-a178-ac3b429f75e7",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d8f40849-340a-49f0-894b-96a06e618204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 828
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88390068-76e0-4a23-b23b-1ba6cc9faebf",
        "cursor": {
          "ref": "48df0941-128b-460f-8818-508c567cb33f",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ad3a2b1c-870d-4562-9798-ba7e6f6e2afc"
        },
        "item": {
          "id": "88390068-76e0-4a23-b23b-1ba6cc9faebf",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "4f2a81ee-9364-4a4f-8114-148316e4254a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 841
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b533940b-6353-4725-a380-989b173eb42d",
        "cursor": {
          "ref": "08c1ad27-caf2-4da1-9c73-c490617aa498",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "64e5afdb-7bc6-46d9-8884-0dbbbb0b5fcd"
        },
        "item": {
          "id": "b533940b-6353-4725-a380-989b173eb42d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "092ed955-eb2c-4e50-8b16-645b9268a9c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c2a85e-9ac3-439c-ae68-a3ff697bb02c",
        "cursor": {
          "ref": "9c5b1c57-db0f-4ada-92f0-cb4e78ce0e55",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ec133f77-af6c-4416-9550-7fba6689164a"
        },
        "item": {
          "id": "a2c2a85e-9ac3-439c-ae68-a3ff697bb02c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ff6ff4c5-f6f5-46fe-8327-d5b8cb12292e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 428,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19034a36-ad22-4b65-b57f-2e0a338059f9",
        "cursor": {
          "ref": "ed1980e0-3233-47f5-a178-60b0193e8045",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "99db12ef-12f2-4808-b36c-55fe55bb0571"
        },
        "item": {
          "id": "19034a36-ad22-4b65-b57f-2e0a338059f9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "30c4df64-f2d5-4dc9-95f7-5ed4642ba2f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89bc1dae-a2bb-40d2-a0d4-422e94487470",
        "cursor": {
          "ref": "3bc69bdb-3622-44e4-8c26-df11b1dff4f3",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "8c6ab3d7-b8d5-4ae5-b31a-5dced54a4d17"
        },
        "item": {
          "id": "89bc1dae-a2bb-40d2-a0d4-422e94487470",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "dddc8548-7051-4c1b-9264-60af534c3fbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 429,
          "responseSize": 1320
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe94e6fc-ab26-45a4-936f-c120f1e7e979",
        "cursor": {
          "ref": "f60afc99-4fa5-4ee5-b83c-59bcea536e55",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "bd3c0092-fb01-4a90-8bec-81846991e274"
        },
        "item": {
          "id": "fe94e6fc-ab26-45a4-936f-c120f1e7e979",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "50613f3b-2a58-4e0f-9974-790acc71ce44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e018f48a-3e57-4d74-9f29-a6315f3177cd",
        "cursor": {
          "ref": "676244bc-0871-4b5f-8ba6-8c3564c36a95",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "1c1685db-b537-4b16-aef3-729d73529cc5"
        },
        "item": {
          "id": "e018f48a-3e57-4d74-9f29-a6315f3177cd",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "06f15d65-9267-4c02-9536-022528938110",
          "status": "Created",
          "code": 201,
          "responseTime": 1779,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:71)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:71)"
            }
          }
        ]
      },
      {
        "id": "46cae7d0-0aa9-45fc-941c-91a4fb24b541",
        "cursor": {
          "ref": "e9d577a9-c74b-4498-a1ab-b68f2e6c1e58",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a97da3e2-9a0e-4880-9854-9a9782f1e480"
        },
        "item": {
          "id": "46cae7d0-0aa9-45fc-941c-91a4fb24b541",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "281ce149-86dd-458e-900f-823343908663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd39a82c-0aea-4422-9b2c-4a39fb1f5e37",
        "cursor": {
          "ref": "f607b6e9-b662-4029-a0d9-1a073e20b4be",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "7b9a5800-a955-49d6-9a2a-ec115b5a31a8"
        },
        "item": {
          "id": "fd39a82c-0aea-4422-9b2c-4a39fb1f5e37",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "07ce636e-3a08-45e6-987b-c5b55cfe3709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4973009e-6c24-4f18-b100-75a38337de8a",
        "cursor": {
          "ref": "ed0b163a-2348-4cf1-acca-91cf34a2f592",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "ae2316fd-0317-458e-b744-5ea2d392f3bd"
        },
        "item": {
          "id": "4973009e-6c24-4f18-b100-75a38337de8a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "592a97e4-fb01-4ddc-9d21-c6d2b3481e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbbed900-e1f4-4827-90b2-a0d26e591f28",
        "cursor": {
          "ref": "63b4d884-bc82-44c6-b0ca-174021e6fe71",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "664a7fc3-7458-4797-a965-5164571af654"
        },
        "item": {
          "id": "fbbed900-e1f4-4827-90b2-a0d26e591f28",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "850d62ff-ecd1-4f03-a391-08dc6bdd44be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4932126a-c394-412f-b366-e479a982299f",
        "cursor": {
          "ref": "f097f173-3b0e-418f-9ce2-276767bcc86b",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "87f21d2f-ada3-4a94-9e5e-ee7025181978"
        },
        "item": {
          "id": "4932126a-c394-412f-b366-e479a982299f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8b10f843-3682-4874-8e6d-359b5de799aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f48bc02c-b3bc-41a1-b278-ee6d5e26386d",
        "cursor": {
          "ref": "3ad85791-a4ae-48f1-96a4-190096ab0271",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "052302ad-5060-4cba-9f87-7df6f812246d"
        },
        "item": {
          "id": "f48bc02c-b3bc-41a1-b278-ee6d5e26386d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "0e02d157-fc0f-4dd2-b14a-f02092b60e6a",
          "status": "Created",
          "code": 201,
          "responseTime": 1756,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:77)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:77)"
            }
          }
        ]
      },
      {
        "id": "5e67b043-98d8-4bb5-ad52-9101f1f3bf77",
        "cursor": {
          "ref": "9238d0e5-9080-41cf-8a53-3307b0474fa2",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "024195f1-9aeb-4e82-9e37-e6e0ca3f1bcc"
        },
        "item": {
          "id": "5e67b043-98d8-4bb5-ad52-9101f1f3bf77",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e1bf67bb-15c6-4f36-bb72-c6b68a68b6df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a72c8f-4963-411c-87f9-196a4755d3aa",
        "cursor": {
          "ref": "2a917c22-c4eb-48f4-9200-b2fd4968d37d",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a380f463-d6f7-4f68-bce3-3df14b3960fd"
        },
        "item": {
          "id": "f1a72c8f-4963-411c-87f9-196a4755d3aa",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "81cca8d0-ba1e-4799-aa0a-1ffd5f8b8b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 510
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7765266-dac7-46dc-bee9-d45b943a48d8",
        "cursor": {
          "ref": "2e8bb680-2edb-4901-8b0b-3c41b49a0ab1",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "c5fb7fbf-a39d-4921-8a35-74cc860961c8"
        },
        "item": {
          "id": "b7765266-dac7-46dc-bee9-d45b943a48d8",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "301ed7f4-bca1-4a26-9767-23ea215b10fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630dbce8-a8bc-4c90-a342-8a79a550dbf6",
        "cursor": {
          "ref": "e283b35b-1552-4318-9f69-258cd2f03b1c",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "538f6f1f-1a81-42bb-bfc3-68f5755082c7"
        },
        "item": {
          "id": "630dbce8-a8bc-4c90-a342-8a79a550dbf6",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "004e4f2b-3b68-4c8e-8a48-ce10f825ce6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "344d40a4-6f2b-46f0-99d2-27aeaf20e069",
        "cursor": {
          "ref": "e68a723e-fa0a-4a7a-b5d0-0199a5671db4",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "0d6c6c76-bf88-4bf1-a869-5378c0248e93"
        },
        "item": {
          "id": "344d40a4-6f2b-46f0-99d2-27aeaf20e069",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "df8b1251-c94b-4801-a95f-1fa77e3ff4bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47277506-e256-46ef-a2ca-2340b8494a27",
        "cursor": {
          "ref": "07daaba2-3c99-4fbc-9120-70aac599e801",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "a80645a7-eaad-452e-a934-3d67534a1b67"
        },
        "item": {
          "id": "47277506-e256-46ef-a2ca-2340b8494a27",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "d0e0f0ba-0e59-48c1-a714-44d61e68078e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af53199-44c8-452d-99aa-3e0754828bd2",
        "cursor": {
          "ref": "bfdbd4fd-1382-4bfa-a1a2-1ab01172b7bc",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ac850b6d-0076-4b0a-886a-60c45a89f49f"
        },
        "item": {
          "id": "2af53199-44c8-452d-99aa-3e0754828bd2",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "94a09061-05e1-4151-b7a3-cf83d4f3d46a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47da2b1b-d167-40f8-a786-351b68f696ea",
        "cursor": {
          "ref": "7fe45344-a999-44cf-9d5f-4658f7103a5b",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "4d7c3863-786a-4d7a-ab80-d26e60010484"
        },
        "item": {
          "id": "47da2b1b-d167-40f8-a786-351b68f696ea",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "5bf9cf45-f602-4bcd-8622-7bc90252ba20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e79742-3ed5-446c-8dad-a462bac11e38",
        "cursor": {
          "ref": "088add3c-44a2-4c2e-992b-11b8caf9ce87",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "0f8176e6-eef8-4882-9e20-9c6c1c8dfdce"
        },
        "item": {
          "id": "89e79742-3ed5-446c-8dad-a462bac11e38",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "3f7f4847-e46a-47fc-b29d-bbae7d47dca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7bb9881-d9e8-4898-9c41-68b044495ff1",
        "cursor": {
          "ref": "5d7a36e8-6856-41b3-8e4d-6862ed24c0ce",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "1486cde5-64ce-44e6-b519-9710de409462"
        },
        "item": {
          "id": "d7bb9881-d9e8-4898-9c41-68b044495ff1",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "72b19ccc-63d9-4e0a-9e28-2295730197b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb86084-0ea5-4389-96eb-1a4409f22318",
        "cursor": {
          "ref": "fff4bd52-94d4-4375-afe5-198cd50fe7c4",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "a6541243-e8bd-4e0f-ba3f-e7060f9d29c8"
        },
        "item": {
          "id": "ceb86084-0ea5-4389-96eb-1a4409f22318",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "9f8c3343-800c-4996-88c0-fc38ca5967e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e8d332-78d3-476c-a25a-5364fe65405c",
        "cursor": {
          "ref": "9b082f95-28d8-4794-9d11-3311642ee7b4",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "3d00d48e-3aab-4025-a1e4-70b74964cc4f"
        },
        "item": {
          "id": "05e8d332-78d3-476c-a25a-5364fe65405c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "78cbe170-c9da-4525-a1bd-561ebd061fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff3f417-664f-4928-baec-03ffeac9ab98",
        "cursor": {
          "ref": "acd01526-4cb0-4810-8cfa-5d43c491418a",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "9aebfa81-3a0e-40a8-962f-7f99956c2a24"
        },
        "item": {
          "id": "2ff3f417-664f-4928-baec-03ffeac9ab98",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "fc85fa9d-5d1e-4fbf-9722-2c9e752fcfb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32c3edd8-6a17-4dc4-837d-5f99d95b4d72",
        "cursor": {
          "ref": "13abf277-d4e5-4ac8-844c-d819e287291b",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "bc868fef-a4d4-4c80-b461-958d5020c6db"
        },
        "item": {
          "id": "32c3edd8-6a17-4dc4-837d-5f99d95b4d72",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "3697e420-3ec4-41f1-b906-b60da3f5c923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e515b52d-cd65-4f07-8d35-94a3e288f2e9",
        "cursor": {
          "ref": "b2c043f0-38ba-4e4c-87fe-8da4c29536c5",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "af109057-7817-4f4c-843a-cc5800b4f5b8"
        },
        "item": {
          "id": "e515b52d-cd65-4f07-8d35-94a3e288f2e9",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "d608acc5-80a8-47ae-ace9-117563d2e670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a6c56b-155b-4214-bbd2-c47350bc73a5",
        "cursor": {
          "ref": "a89a1759-2eed-4eed-a79c-70869b696077",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "3b2f2a40-9cee-424a-9912-dcb041ee11b7"
        },
        "item": {
          "id": "c7a6c56b-155b-4214-bbd2-c47350bc73a5",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "2c03c443-cb01-4ba2-93e5-7b0187f16187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f58a282e-d8e5-4428-a01e-4b42219cd724",
        "cursor": {
          "ref": "12c153cb-b8cb-4e98-bf72-3a7e6cdd20d6",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2b354785-ab08-452e-831b-fbe70a38cc32"
        },
        "item": {
          "id": "f58a282e-d8e5-4428-a01e-4b42219cd724",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "4660c32f-1129-4d02-b2cb-197d4a8c5aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f5f317-5d9e-4634-a75b-31f4f52e8525",
        "cursor": {
          "ref": "20ac6735-5834-49e7-a5f3-b6f72b3ef803",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a098f147-a2b7-4688-8451-75d2bc48729d"
        },
        "item": {
          "id": "a2f5f317-5d9e-4634-a75b-31f4f52e8525",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d7ed8cf4-e610-4aea-8b13-e71fba1b5b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ebbbaa-100d-4353-a40b-88ba45120f5b",
        "cursor": {
          "ref": "f6aaccf6-dbec-40c4-89b1-b371167f4f4f",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "9bbe1373-8bc2-4c96-91d4-567cdec01408"
        },
        "item": {
          "id": "f0ebbbaa-100d-4353-a40b-88ba45120f5b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a0d70dab-25d4-47db-9f7e-94879f89a40a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5690962-4f9f-4faa-83fe-c90bdfcc7618",
        "cursor": {
          "ref": "4567226b-11fa-4e51-bd98-e68550cf7740",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a2bd4cd4-b922-4f0a-a132-e07da9376e15"
        },
        "item": {
          "id": "e5690962-4f9f-4faa-83fe-c90bdfcc7618",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1b9e415f-9b5c-48bd-8bef-b1dc97c3b23e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca394a49-05f7-4f0f-90d1-92151b8ceed5",
        "cursor": {
          "ref": "4c49c604-3f3d-4528-8c5a-076f507a1ded",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "acb50127-50e5-4e87-8034-7c9294bce626"
        },
        "item": {
          "id": "ca394a49-05f7-4f0f-90d1-92151b8ceed5",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "dd489d8a-ca11-40f9-88fc-9c2b751361de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86eaff56-553e-470d-bfac-05bcf341f276",
        "cursor": {
          "ref": "0207f683-f88e-4ce3-bab6-13b65458a4e6",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "6772c0f6-9cf9-4c97-853d-fbeeb40dd550"
        },
        "item": {
          "id": "86eaff56-553e-470d-bfac-05bcf341f276",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "7cd82d94-56d0-463d-a077-662baa668c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 753,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4620f707-bfb3-4648-8612-fea9b780431c",
        "cursor": {
          "ref": "afd309ab-4ab6-48d0-8fb0-6f3357f911cf",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "5a284829-8f4e-40c3-91bc-955326ffd980"
        },
        "item": {
          "id": "4620f707-bfb3-4648-8612-fea9b780431c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "7067197d-9ce3-4b4b-9e59-2a7598d12f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 850,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1a7aa6-7ea8-491a-8972-96d508b7da9b",
        "cursor": {
          "ref": "0a79bbc4-43c3-44b1-b015-0c16f6e70ae4",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "da33c3e6-99d0-4a5c-98f3-ef640604af17"
        },
        "item": {
          "id": "9e1a7aa6-7ea8-491a-8972-96d508b7da9b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "adb49191-9a90-4ecd-944b-34fe4ed9601a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad8a16f1-1d13-4fab-90f1-a963d1b2ba12",
        "cursor": {
          "ref": "b5194671-a9e7-4939-8127-26e12defeb24",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b876c45d-4989-4c0b-b9ae-b31ea49391d7"
        },
        "item": {
          "id": "ad8a16f1-1d13-4fab-90f1-a963d1b2ba12",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "7f21576e-8c0b-4aa0-8c83-1f200e4307ea",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f91f9f8d-40df-4919-8887-8518d671d1ca",
        "cursor": {
          "ref": "05a7c5c4-4f1b-4555-bb14-8584ed41f568",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "0197aa14-75c2-4c35-ab25-b9602b78c45f"
        },
        "item": {
          "id": "f91f9f8d-40df-4919-8887-8518d671d1ca",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "abcc90cc-7372-4bbf-8f09-2382caf32d9f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 965,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70664eea-3d07-482e-997a-3e47a175a02e",
        "cursor": {
          "ref": "8f87e2d8-f035-4058-ba4d-bcef5df9b145",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "af5cc031-cc2c-4f37-af20-3e6503cc2c4a"
        },
        "item": {
          "id": "70664eea-3d07-482e-997a-3e47a175a02e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "161b2f33-8124-456c-b8f1-98a3dc03139e",
          "status": "Created",
          "code": 201,
          "responseTime": 2804,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "610fd410-b4ad-47ef-9a7e-8ed3129e0bbd",
        "cursor": {
          "ref": "a6938893-8520-42eb-a45b-18f9d87c0f54",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "806fa4ae-9121-42c3-b7dd-645678d13a3d"
        },
        "item": {
          "id": "610fd410-b4ad-47ef-9a7e-8ed3129e0bbd",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "a506c3c4-73ea-44ec-89f8-16715641a9e3",
          "status": "Created",
          "code": 201,
          "responseTime": 1838,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd88cdc-e7fa-4a77-9c5f-2b3ef894a43e",
        "cursor": {
          "ref": "de9c6f7d-f84a-484f-b642-2984d6f87d20",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "1d59f304-1ce4-4d42-857b-9f07e318bc38"
        },
        "item": {
          "id": "1bd88cdc-e7fa-4a77-9c5f-2b3ef894a43e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "8b5219b4-16d3-4bbe-8e3d-8cd79f0dcd6d",
          "status": "Created",
          "code": 201,
          "responseTime": 1802,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "de54bd51-e6fb-4e7b-844e-9145e44e878a",
        "cursor": {
          "ref": "aa264c47-7bc0-45e2-bec2-4ada20223d84",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "5cc0ed78-8c3f-444d-9e0d-e942e3bb4ac7"
        },
        "item": {
          "id": "de54bd51-e6fb-4e7b-844e-9145e44e878a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ee1f641f-5a93-4550-9665-ba857bd530af",
          "status": "Created",
          "code": 201,
          "responseTime": 1847,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f78e9485-081f-4c24-aee3-5312244348de",
        "cursor": {
          "ref": "228727ee-c6a6-4bc2-ade1-a08cbb890c39",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e657cf4e-256c-41f0-8423-8e2b5ec62c3e"
        },
        "item": {
          "id": "f78e9485-081f-4c24-aee3-5312244348de",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "8d72debe-eb5e-4fc2-9aa2-447c42fb9956",
          "status": "Created",
          "code": 201,
          "responseTime": 1692,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd2a385-2df7-43f9-b09e-201de06345f9",
        "cursor": {
          "ref": "3772d417-ba93-4de3-93b8-cab663ff2640",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "3f3560b2-d8e8-4769-aecd-916fe9338c6e"
        },
        "item": {
          "id": "cbd2a385-2df7-43f9-b09e-201de06345f9",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "1cb6a04b-9624-4c33-bc42-07ec0aa0e729",
          "status": "Created",
          "code": 201,
          "responseTime": 2244,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c62c90-3661-47a2-a90b-6a361c806c4f",
        "cursor": {
          "ref": "1a7ac0a3-10ef-40da-9044-b1ee7d648fb3",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "2f128d72-e73a-408b-87b9-16d1a439cdaf"
        },
        "item": {
          "id": "a7c62c90-3661-47a2-a90b-6a361c806c4f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d5b176ea-a0d1-4bd5-8102-0831fb28d609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c62c90-3661-47a2-a90b-6a361c806c4f",
        "cursor": {
          "ref": "1a7ac0a3-10ef-40da-9044-b1ee7d648fb3",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "2f128d72-e73a-408b-87b9-16d1a439cdaf"
        },
        "item": {
          "id": "a7c62c90-3661-47a2-a90b-6a361c806c4f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d5b176ea-a0d1-4bd5-8102-0831fb28d609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed726663-8689-4fab-a638-037134343281",
        "cursor": {
          "ref": "c5a21851-ff54-4f94-98b2-7074f333e5b6",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "b4064ac6-d735-4d6c-bd79-0ce7abc8e43e"
        },
        "item": {
          "id": "ed726663-8689-4fab-a638-037134343281",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3ad0fa24-a2ad-4d98-a7bf-d41bfaa0cc6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec72539-23c8-45de-8cc4-a1b73e72b926",
        "cursor": {
          "ref": "6ce8eae6-30fe-4c5c-b1f0-3d22839ee85c",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "c2aad728-9b04-456e-a281-b2cc9a9f7437"
        },
        "item": {
          "id": "aec72539-23c8-45de-8cc4-a1b73e72b926",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "bb5bc263-27e8-4f0c-ab75-17ff5cf40da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 342
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce01a6d8-c3d9-4995-818d-a4d98e5321cb",
        "cursor": {
          "ref": "5614860a-84d5-4bea-82f2-e236e7fd2ff1",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "71d9b743-8b35-4a44-af59-5d48685ca470"
        },
        "item": {
          "id": "ce01a6d8-c3d9-4995-818d-a4d98e5321cb",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "085024cb-d1a1-48b2-8fc6-00616c807ea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc28eead-bb93-4eaa-bef6-5ab327539f4c",
        "cursor": {
          "ref": "6557201d-fa32-4f5e-a675-a3d3b17ca902",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e572f11a-73cf-4336-9713-eb5bf1b276e9"
        },
        "item": {
          "id": "fc28eead-bb93-4eaa-bef6-5ab327539f4c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "59771d20-27b5-4ea4-9aec-f4a1fd720191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 341
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9cc93f-87bb-40aa-a576-f9334d4938e0",
        "cursor": {
          "ref": "071f34ba-a50b-4daa-b2e4-f5f99d2478e2",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2a6405dd-ccff-4ac5-8c79-2049f28d5096"
        },
        "item": {
          "id": "fa9cc93f-87bb-40aa-a576-f9334d4938e0",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "fc207e28-0eed-40a9-b4c7-3a444ae00171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb11ab3-1727-406d-94a9-eff3357cbd44",
        "cursor": {
          "ref": "fd44441f-0eb1-4084-8662-ec3dcada605e",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "dc7eb929-de2a-441b-985d-79286f1fdf8d"
        },
        "item": {
          "id": "fbb11ab3-1727-406d-94a9-eff3357cbd44",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6a1dfe58-9315-4446-9b92-d63a56d41972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1392e71-8008-43da-a5a1-39fad8b13bff",
        "cursor": {
          "ref": "c91ac9a3-59b7-4dc2-9543-392e1de5b4ea",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "cbe7a33a-56e9-4a87-91bb-0f6e69e015e8"
        },
        "item": {
          "id": "f1392e71-8008-43da-a5a1-39fad8b13bff",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0cb85c95-adee-4ff8-9ece-3fb8a84315bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa0e69d1-3d02-42ae-86f9-54175f4f4282",
        "cursor": {
          "ref": "017a64d5-dedb-4d31-a35b-8859638802fc",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "9440f418-01a8-41ec-aa61-565636f4aa25"
        },
        "item": {
          "id": "fa0e69d1-3d02-42ae-86f9-54175f4f4282",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "af458c7d-00b3-4e47-a3fd-319dc0050554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9945c26c-2750-45a2-ab05-a464821d9dfa",
        "cursor": {
          "ref": "4307ae95-24eb-4cc2-beaa-beb41972f82f",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "25d827ea-990d-435a-93ac-c77c66fe38ac"
        },
        "item": {
          "id": "9945c26c-2750-45a2-ab05-a464821d9dfa",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "99af7364-77d2-46b8-8a4e-06687e18c159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e845562-f05f-44db-a1fa-4594dc2459f6",
        "cursor": {
          "ref": "2c114f2b-7919-4be3-b4e8-356d467d2f0c",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "ef00031f-512c-457f-8274-0618d77549b3"
        },
        "item": {
          "id": "6e845562-f05f-44db-a1fa-4594dc2459f6",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ff46e2d0-a809-4477-bd62-54ad4d441685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "186bdc8a-def2-46db-9904-647c26003488",
        "cursor": {
          "ref": "5a653109-a484-45db-b49a-f9f324771a28",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "176cde77-83ba-4933-bd2b-fff925f7c3f6"
        },
        "item": {
          "id": "186bdc8a-def2-46db-9904-647c26003488",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c9d52812-9ad7-4f1d-8aaa-93ae31f08d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72bd7e70-b23c-4403-a706-4a12cad85869",
        "cursor": {
          "ref": "4a171e01-d99f-4b90-a3b1-aeb7e3d578b4",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c5b03643-6555-48b0-b94f-e073e87bf2fe"
        },
        "item": {
          "id": "72bd7e70-b23c-4403-a706-4a12cad85869",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "69debec4-32a9-4c9c-97d0-46f079d735b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbf7b93b-e68b-4e1a-aac0-cd5e48b3a3e6",
        "cursor": {
          "ref": "03c3eba8-11b6-4204-9d4f-1ccb4e34fcfa",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "06c77648-7ff4-44f8-be34-f2547108ec50"
        },
        "item": {
          "id": "cbf7b93b-e68b-4e1a-aac0-cd5e48b3a3e6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c2babc90-843a-4127-b2f7-c7d10daa27c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e934f1a7-011e-412c-ace5-71c8fb3f69bb",
        "cursor": {
          "ref": "4c92b211-9684-484f-8af7-10768997098f",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "0bf2be82-7118-4d81-84c8-8ee900441fab"
        },
        "item": {
          "id": "e934f1a7-011e-412c-ace5-71c8fb3f69bb",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d34edf82-9a34-405a-9262-0338e870ec70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c80f82f-28ad-4972-b07f-83acd064fc77",
        "cursor": {
          "ref": "fb66e3fa-8cea-4e5b-8099-235db3e893e8",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a91009ac-3176-4207-ba89-3844655677e6"
        },
        "item": {
          "id": "2c80f82f-28ad-4972-b07f-83acd064fc77",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "723fa23a-dbb4-402a-ab23-9e2ee921d545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e82dfce-e3be-4316-a3d8-c3f5120f7eb7",
        "cursor": {
          "ref": "4af57e99-dff4-4b3f-9df2-644dd7735fdf",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "70b4f481-dc99-4aa2-b1de-cb70810324d0"
        },
        "item": {
          "id": "3e82dfce-e3be-4316-a3d8-c3f5120f7eb7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9917163a-5b83-46b9-993b-519401fdcdd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3b0fd13-c52f-44e1-ad45-b439bfc24ded",
        "cursor": {
          "ref": "5855042a-311f-4da1-8283-cd1724d0e632",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "bce9d868-b84b-4b7b-9c15-038f65749db7"
        },
        "item": {
          "id": "c3b0fd13-c52f-44e1-ad45-b439bfc24ded",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "fba32aa5-c67d-4a61-99dd-7f8aa17ab47d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef789419-62ba-4184-874c-ae04d6c14194",
        "cursor": {
          "ref": "b43fabf4-61ec-43c6-94ce-136153f66887",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "bc78f3d5-5cde-4271-9ae9-085c8eec93d9"
        },
        "item": {
          "id": "ef789419-62ba-4184-874c-ae04d6c14194",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8a1bb8bc-fd92-483f-b244-34c0d16ffc47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "027fe578-dc18-464b-bcdf-13942c8abcfc",
        "cursor": {
          "ref": "e8aec679-58a3-4a7e-980f-c961ebfc7849",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "fb1ebe4f-7a0c-4c36-b1c9-b3c4214bcbc4"
        },
        "item": {
          "id": "027fe578-dc18-464b-bcdf-13942c8abcfc",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "012236ef-20ca-46f3-9236-0250ec22ddf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c554d042-0d39-4caf-be6e-3bfaf5f4b991",
        "cursor": {
          "ref": "bb659dc8-454b-4b0c-80b9-ebf4912592f2",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "a6ce1e22-ea36-4c21-aaa0-9c5dc845366c"
        },
        "item": {
          "id": "c554d042-0d39-4caf-be6e-3bfaf5f4b991",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1ce5c78a-bf57-430a-82e6-c3dbb5d9c5fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2843e7d-1262-43bc-807c-528de3293392",
        "cursor": {
          "ref": "32d82410-eb0c-438b-8d31-9df8ae7a1469",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "63ea2675-031a-42ca-88b0-34b54ea8151b"
        },
        "item": {
          "id": "c2843e7d-1262-43bc-807c-528de3293392",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d1f33bbb-09cc-4a88-8a48-a10f647436b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e65d3149-2337-4fec-8af8-6c44fc127af5",
        "cursor": {
          "ref": "974a8f43-7a9a-4d70-a05a-e3771ab5eb95",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ebdc8d4e-6585-444e-b8a5-3ca9c36da0b7"
        },
        "item": {
          "id": "e65d3149-2337-4fec-8af8-6c44fc127af5",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a3b9c18d-747c-4b0f-9800-09dbc5d81ed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c86bf19c-0553-4655-bb9b-316ad90e8a64",
        "cursor": {
          "ref": "348174ac-94a9-42cc-80bf-2ed503cf9e41",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f04ba274-ea0b-4480-b5ad-a4d7eb1c9dfc"
        },
        "item": {
          "id": "c86bf19c-0553-4655-bb9b-316ad90e8a64",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "65bd508e-8bee-461e-849a-7c4f01d998a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd1a6ed-70ef-4689-b650-608a8f221d74",
        "cursor": {
          "ref": "c7ed5d69-a0bc-4f07-adc9-a5ea241abc43",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "0563fb71-0347-45da-ab9a-276edf44fc3e"
        },
        "item": {
          "id": "fdd1a6ed-70ef-4689-b650-608a8f221d74",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "917da7a2-c0b4-44cf-93c1-469e06041aea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf4419b-fa60-4fdf-8073-3dfbd53d65e4",
        "cursor": {
          "ref": "5fe91e10-f226-4c5f-950f-a46ba56ffcd9",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "fcaddb63-96ff-4672-9d28-e5965bd72fa0"
        },
        "item": {
          "id": "edf4419b-fa60-4fdf-8073-3dfbd53d65e4",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d20af92a-737b-4991-8231-43e87ac1326d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b3e8e94-80c7-4a20-9d3d-edff05894a1a",
        "cursor": {
          "ref": "74aba2cd-5b01-4d54-958a-7fa5749aaa20",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "07e573f1-00e9-4922-9f62-bf00870935b0"
        },
        "item": {
          "id": "4b3e8e94-80c7-4a20-9d3d-edff05894a1a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b03f0d54-2ca9-4c92-9237-1e80dfd37112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4035d308-3739-4539-95a9-1ad546403ec5",
        "cursor": {
          "ref": "9a930de4-ed9c-4d51-9af0-53745f228ba7",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c7653dc7-2c6b-414e-a8ae-82b85c109b08"
        },
        "item": {
          "id": "4035d308-3739-4539-95a9-1ad546403ec5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d53512d6-764c-4486-be66-5f587e536a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c7e183-9e4b-4645-bf9e-cbeff26e594f",
        "cursor": {
          "ref": "305bec98-5a96-42cd-8a52-6233b58eff85",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "8e821d67-253f-4fb2-b0a0-d16046df3568"
        },
        "item": {
          "id": "18c7e183-9e4b-4645-bf9e-cbeff26e594f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1910275b-c573-4012-8803-b3f0e3507307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f909e4d-5edd-414e-90d0-fb5e0652fbef",
        "cursor": {
          "ref": "73724e69-25b0-410e-b744-74115012a248",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "22bdc5fd-227b-4b82-b87d-91a6fe169d19"
        },
        "item": {
          "id": "1f909e4d-5edd-414e-90d0-fb5e0652fbef",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6e4217bf-b01d-49a3-8fb9-465f480957a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "868d3885-a61c-4231-8071-03b6c2214e3d",
        "cursor": {
          "ref": "91f06ca6-d165-4fb0-b505-b060e4d7d26b",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "09e0bf40-b76f-4567-80e7-a8223a6a6345"
        },
        "item": {
          "id": "868d3885-a61c-4231-8071-03b6c2214e3d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "fdcf4a14-7fc3-448c-a732-f236a0bb171a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ee3359-e1fe-4172-9dfc-509850821af5",
        "cursor": {
          "ref": "e9ec92c0-26c8-4b38-b435-7caf0d40171c",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "8831dfdc-9d40-4e7b-94f4-c5b02822b386"
        },
        "item": {
          "id": "47ee3359-e1fe-4172-9dfc-509850821af5",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "8a8f04a8-c63e-490f-9606-bcd8916da759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4adb72-20e6-4cfc-a713-2f166a82375e",
        "cursor": {
          "ref": "7c994196-c1f4-42ea-8a9d-075266791165",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b1df2232-fd73-4bd4-8f7b-33ec31027e9f"
        },
        "item": {
          "id": "cd4adb72-20e6-4cfc-a713-2f166a82375e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e9c47163-ac66-40f1-93dc-e97a527d9895",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b001bac-9fe0-4a67-a460-4f2d9bef02ed",
        "cursor": {
          "ref": "1150d5dc-19d9-42df-a257-6b85463a5f9a",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9b416e71-6475-49c5-8b39-07a3ba2a28a9"
        },
        "item": {
          "id": "4b001bac-9fe0-4a67-a460-4f2d9bef02ed",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "320e22db-9876-4880-bdd6-c89516e7a272",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 447,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a0eca9-5acc-4470-8d43-71a4cdd89bd6",
        "cursor": {
          "ref": "8ec40784-fbef-4085-9890-78fd30329d9c",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3c45111a-e6fa-4515-b414-14554b883e1a"
        },
        "item": {
          "id": "11a0eca9-5acc-4470-8d43-71a4cdd89bd6",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4ac970a4-72fe-45c1-8c5c-cf471798dd59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 208,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a0eca9-5acc-4470-8d43-71a4cdd89bd6",
        "cursor": {
          "ref": "8ec40784-fbef-4085-9890-78fd30329d9c",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3c45111a-e6fa-4515-b414-14554b883e1a"
        },
        "item": {
          "id": "11a0eca9-5acc-4470-8d43-71a4cdd89bd6",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4ac970a4-72fe-45c1-8c5c-cf471798dd59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 208,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "671d006a-3f02-45ac-b484-3df91cb6d6b5",
        "cursor": {
          "ref": "e347da70-8493-465b-b2aa-cf15b0100618",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "8a994d7c-7a6c-4ab2-9c04-e379e24f9c99"
        },
        "item": {
          "id": "671d006a-3f02-45ac-b484-3df91cb6d6b5",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4da805db-c2bc-4248-8169-c62105c6be6b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 222,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "d4d3b432-ae76-4d6d-8c29-c5caa45c9b4b",
        "cursor": {
          "ref": "6aba91f0-649b-4499-a6f8-678008bcac43",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9cf6ab45-22f9-44c3-aba8-633b53ca1a61"
        },
        "item": {
          "id": "d4d3b432-ae76-4d6d-8c29-c5caa45c9b4b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "83b82e4d-9456-4fc6-a334-e7b9a9bc2293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fbde688-bdd4-487e-97bc-0749769623c4",
        "cursor": {
          "ref": "4d34aba6-388d-4746-b338-3ea61e3bb996",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "4d3c5f57-603f-4cff-8a4a-473fdb9b4223"
        },
        "item": {
          "id": "7fbde688-bdd4-487e-97bc-0749769623c4",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "7102d678-42ac-42c9-9b8b-40b9cfb63b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 205,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5819a71e-d81f-46d6-b8fc-519b72eabdb4",
        "cursor": {
          "ref": "00a92a2e-b51b-489d-8edd-d17e5412262c",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "db3e9f2c-afea-403b-bde0-67bbbe2217fc"
        },
        "item": {
          "id": "5819a71e-d81f-46d6-b8fc-519b72eabdb4",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "8e2e3d79-7e46-4745-a5ca-04d04ce4ce73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 212,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc43eb6-56c5-483f-8133-2b44abfbe070",
        "cursor": {
          "ref": "23f0a5d6-02ff-4a79-8660-b15f5d7468b2",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "9435cc3e-5798-425e-939b-7f9952c986fb"
        },
        "item": {
          "id": "fdc43eb6-56c5-483f-8133-2b44abfbe070",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "3bae6ff8-998a-410c-93df-bb1848fc6fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 226,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d71c705-f057-4fe2-ae9d-7cf17b5acdcc",
        "cursor": {
          "ref": "b08b8505-3709-4527-b83e-9474fa092c9a",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "3e84c296-3102-45ec-8146-422a75d37272"
        },
        "item": {
          "id": "2d71c705-f057-4fe2-ae9d-7cf17b5acdcc",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "77b7b482-6b7a-4f98-9d5c-2302d563ad24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb89969-71a3-422a-8cda-580838742f76",
        "cursor": {
          "ref": "f8f44da8-b5c4-4712-ac47-f54dee440467",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "6ca7bcdd-44be-42d0-bee9-7f6b63aabc87"
        },
        "item": {
          "id": "3fb89969-71a3-422a-8cda-580838742f76",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "7ffde0a5-da67-4d6e-8494-97b8c1028ca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 211,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "556c3967-c5f9-4d55-8479-bc3d424c0591",
        "cursor": {
          "ref": "cbe0c02c-4096-45dd-9dc8-09bd15c7aca6",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "7e6771f4-77f3-4b1c-b6f7-ddc7f907234d"
        },
        "item": {
          "id": "556c3967-c5f9-4d55-8479-bc3d424c0591",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "3ce7367e-99f3-44be-932b-f1d736b125eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 221,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d12bdfc-52d1-4302-9e63-2cdef038fcdf",
        "cursor": {
          "ref": "395c870e-de76-4858-b63a-c4df34180bef",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "27850e8c-9a01-44dd-a44a-cb2b05c9de8a"
        },
        "item": {
          "id": "6d12bdfc-52d1-4302-9e63-2cdef038fcdf",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "194ff2db-f383-4e8f-8687-577664c01255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 218,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0910cbb-fa56-4d0b-ae69-16e3aa498c84",
        "cursor": {
          "ref": "46f2bda5-3c85-49a7-9191-7f8ed859dbad",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "42196135-3c44-4c64-b026-942fe072f50f"
        },
        "item": {
          "id": "d0910cbb-fa56-4d0b-ae69-16e3aa498c84",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c2fb1e06-1926-47a8-8f59-d12cfcf5834b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1450
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "076fb039-c000-4489-804f-1dd2a848e706",
        "cursor": {
          "ref": "340983e8-d702-4f80-8a27-cd4208088354",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b3a26691-5996-4a0c-9199-d301ba771245"
        },
        "item": {
          "id": "076fb039-c000-4489-804f-1dd2a848e706",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a3c22998-766a-4ead-9f64-276864d33738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 219,
          "responseSize": 1437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f39cdff-6829-42c9-8bee-9416e5e08009",
        "cursor": {
          "ref": "9abb813e-931e-4527-8b2e-e995e3701d9d",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "59033e06-bc40-4977-ab67-e2574b8c12d1"
        },
        "item": {
          "id": "9f39cdff-6829-42c9-8bee-9416e5e08009",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "4f1766e5-c31d-4aea-b2ee-699234d6c277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 222,
          "responseSize": 1690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "772de24b-4183-4ae7-99db-c0ecc2ac28a0",
        "cursor": {
          "ref": "25fdbe9c-bb23-4a96-b0ac-30105b09c4ea",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "69d0f938-9737-4d40-b5b4-726aed438787"
        },
        "item": {
          "id": "772de24b-4183-4ae7-99db-c0ecc2ac28a0",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "9baf649b-d8ad-4098-9ce6-16818da31eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 230,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73efd4af-58b2-4346-8759-b68d9f40ff00",
        "cursor": {
          "ref": "a966aa9c-e886-4bac-b707-bd87fc426a4b",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "bf107fa9-3980-4309-84f3-079716d86b83"
        },
        "item": {
          "id": "73efd4af-58b2-4346-8759-b68d9f40ff00",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e1941c2b-1ea6-46b2-b4d7-7e5411da019b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cebcc09a-ab80-42a7-ad35-cad809407f1c",
        "cursor": {
          "ref": "753b5384-f2dc-445e-ab60-ea11348a13a8",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f9357a0a-9d97-426d-876f-6069c47dc95a"
        },
        "item": {
          "id": "cebcc09a-ab80-42a7-ad35-cad809407f1c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "43ab12dd-f657-4053-8f7c-72abb4e2ceac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 225,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "456edb21-2870-482a-9d5a-bcf953019880",
        "cursor": {
          "ref": "3903d9c3-12f6-4a80-a5da-52094b674708",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "a687abec-3950-4099-a4f8-e44d605db31c"
        },
        "item": {
          "id": "456edb21-2870-482a-9d5a-bcf953019880",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "086479ea-239d-432c-856b-3f49def830e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea80a9a-1a04-4458-bee0-eaa282e03b08",
        "cursor": {
          "ref": "6b188585-2b76-4283-b87c-8da5272d7db3",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "eed23fd6-3f6f-464d-9373-a67a29435cba"
        },
        "item": {
          "id": "bea80a9a-1a04-4458-bee0-eaa282e03b08",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "3ae4b4df-53ba-4873-b765-8c36a7af373a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda59a43-2364-4787-a0aa-58ba8a2dfa22",
        "cursor": {
          "ref": "cb928d3b-b4ef-470b-85fb-1abdc40e776d",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "470a2bbc-4beb-4e8a-9056-37f5a7068af5"
        },
        "item": {
          "id": "bda59a43-2364-4787-a0aa-58ba8a2dfa22",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d0629d71-5b65-45df-b661-43a24ca3cc6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 1250
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d609a5-e3c0-4669-9d0e-4c863924695b",
        "cursor": {
          "ref": "ea0b455f-aefb-454f-b31c-33eab1d31edc",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "f9891451-f933-4f9a-aded-3935218079b4"
        },
        "item": {
          "id": "62d609a5-e3c0-4669-9d0e-4c863924695b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "0a0b80e5-2763-4610-9cd6-eff664610133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe360223-f7c5-47ac-9074-d921c6d1e990",
        "cursor": {
          "ref": "f36f0bf9-88e3-47e8-baed-a87a21ca7157",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8e17df4b-0ec0-4d81-8636-0cc98ce5dd4e"
        },
        "item": {
          "id": "fe360223-f7c5-47ac-9074-d921c6d1e990",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b40a8608-0c8e-4cc5-bb17-1d430b137434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 801,
          "responseSize": 1249
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd020ced-158e-4cbc-afb5-d5600ec53f15",
        "cursor": {
          "ref": "7bd54e8a-4d6f-4acd-b60a-596103162ae1",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f5faf306-70df-4bf3-bd2b-0a345a1e939b"
        },
        "item": {
          "id": "bd020ced-158e-4cbc-afb5-d5600ec53f15",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "28830cd8-b07d-406b-8821-ab07864756ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a0d1b94-c197-48eb-b89f-9012d53caa25",
        "cursor": {
          "ref": "aab0fdd0-132b-437c-831b-83f3dc5975dd",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "aa2c4e68-cd9c-4f94-8d0d-f07ac9ff6658"
        },
        "item": {
          "id": "7a0d1b94-c197-48eb-b89f-9012d53caa25",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "046fa6a0-f1f1-4955-90b1-4451a22ae5e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 1227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cdd71fd-5ce4-4cf8-8647-2978edcd22c1",
        "cursor": {
          "ref": "5df71c31-d7e5-4c03-a03f-9ba594ea4515",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "281d707e-32db-4564-ad16-a1ec842d3b11"
        },
        "item": {
          "id": "7cdd71fd-5ce4-4cf8-8647-2978edcd22c1",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f3c33096-ada2-438d-b773-22880bfcbc7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d2b098-5336-4cd8-96e3-2f61bcae2689",
        "cursor": {
          "ref": "1a4c1b93-7eae-420b-a6b1-341dcd644d37",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "11f8a529-8102-411d-bf8c-79d29d0ad9f8"
        },
        "item": {
          "id": "14d2b098-5336-4cd8-96e3-2f61bcae2689",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "5682f0f7-d00c-4a61-82e3-11d09492add1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72cc5293-8b9a-4df1-9365-cfb35efaaf9e",
        "cursor": {
          "ref": "5913eb6f-9530-4ad1-958c-f60704d28af1",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "afbc4c93-950d-400b-93f3-4410d27f88fa"
        },
        "item": {
          "id": "72cc5293-8b9a-4df1-9365-cfb35efaaf9e",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "6f79f229-e1fa-414e-9545-2199519f91ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "009f5042-c18a-4e6d-967d-50412362c91a",
        "cursor": {
          "ref": "b5984677-c2a0-4d29-85eb-cd3725861648",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "5b484476-8c8c-45d7-b50e-6547c9ce5677"
        },
        "item": {
          "id": "009f5042-c18a-4e6d-967d-50412362c91a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5a0c3a3a-64ba-4008-9e09-f9ed9443946a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93042a6b-7c1d-4955-a139-fa92595f5a15",
        "cursor": {
          "ref": "6cc27f35-1276-43a3-b9c6-093aeaeb1d9c",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "252fb50b-9a37-4728-be08-e52af12c17c5"
        },
        "item": {
          "id": "93042a6b-7c1d-4955-a139-fa92595f5a15",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "06da2367-cb92-4bbb-9d53-0119a212d6eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 1239
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414a9c3c-727d-48ce-b8cf-5204e49262f1",
        "cursor": {
          "ref": "8b25deed-159a-4366-afe0-005e23821d98",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "89aef91e-7078-4975-8267-ce4774925a9e"
        },
        "item": {
          "id": "414a9c3c-727d-48ce-b8cf-5204e49262f1",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "68255e36-ddd4-4f78-adfb-b176f9236b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c710a2-f82d-41a0-8059-7a781a402a9b",
        "cursor": {
          "ref": "058d5df9-93c5-438a-ae62-a7e2dc033e28",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f0eef5ef-846d-4930-a840-ac2ec4e7dafa"
        },
        "item": {
          "id": "b4c710a2-f82d-41a0-8059-7a781a402a9b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "3165d4f9-a1ee-44db-9e13-2a356575262f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d550687c-6c2d-4040-98e7-9f8cb3026485",
        "cursor": {
          "ref": "b1ef2b7a-a351-4bea-80a2-63dedc8169a7",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "5f9e5b21-71d2-4103-b8c5-d0159e517bb2"
        },
        "item": {
          "id": "d550687c-6c2d-4040-98e7-9f8cb3026485",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "84bfd0ee-0618-443c-9c70-9415a5e1b708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7aba26-c3c2-4d64-a5c8-01da4c8da0e6",
        "cursor": {
          "ref": "38cdc049-306b-48f2-8450-ea94f262289d",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "988c28fd-2ad6-48b3-abeb-93f16baf4dc5"
        },
        "item": {
          "id": "bb7aba26-c3c2-4d64-a5c8-01da4c8da0e6",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ea87d81b-a216-4bb3-8a4d-d109d54df657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1255
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d71854-4c9a-4fc6-9a4d-f35a48fade5b",
        "cursor": {
          "ref": "4725d3f3-8542-4d77-916a-8b8482c62a70",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "544aebe2-25db-404a-8422-3f943b470222"
        },
        "item": {
          "id": "e1d71854-4c9a-4fc6-9a4d-f35a48fade5b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "478c9733-0893-4ae7-85ca-ddfa96bce042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 221,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff521834-daba-4632-b21a-a66f2212a0ac",
        "cursor": {
          "ref": "194fe7fb-434b-43ad-ad36-c5dd2d902984",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "be2d4845-4575-47d6-a323-138dcaa0ab25"
        },
        "item": {
          "id": "ff521834-daba-4632-b21a-a66f2212a0ac",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "6e4536fb-e100-48be-a4f1-9fb811a07fb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1282
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "005390dd-74e1-415d-9b80-92da0602422a",
        "cursor": {
          "ref": "3e8ce555-aca2-42c9-8ebc-efab905825c1",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f47e8cdf-946b-413c-ba84-54f3ccd9dd0e"
        },
        "item": {
          "id": "005390dd-74e1-415d-9b80-92da0602422a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "97324e4c-4b23-43f7-9986-47ae3e1d5286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 207,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d0fa003-d226-4f2b-b7a5-25ed31aafece",
        "cursor": {
          "ref": "f000e2a3-e31d-4781-89ee-d91127c069db",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "58130c0a-ec5c-4327-8934-4f1fa31602d6"
        },
        "item": {
          "id": "8d0fa003-d226-4f2b-b7a5-25ed31aafece",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "481e30f2-0829-44a6-a202-3c13985362a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1668
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b590d91c-4c45-463c-b837-098c6cee5518",
        "cursor": {
          "ref": "520e8880-18b0-4c7b-9abc-798ea0b62ad3",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d2c23a4c-f643-4c14-993e-da1503b280ae"
        },
        "item": {
          "id": "b590d91c-4c45-463c-b837-098c6cee5518",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "cb278f40-275f-4ea9-9655-3045480d0bb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 217,
          "responseSize": 1654
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb104c63-f76f-45df-8e64-923b87a46fde",
        "cursor": {
          "ref": "2362f586-49ed-4ed5-8508-b5bd3d5f7e5b",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "e78fbc64-4548-4a9e-8c90-eea015e92928"
        },
        "item": {
          "id": "bb104c63-f76f-45df-8e64-923b87a46fde",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "3446a8ba-7c22-41e3-8694-60acd423b5f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33538cd0-874a-444a-a188-e042dfce9bf6",
        "cursor": {
          "ref": "dc7a4577-999d-47b6-8a5c-17988dfe3571",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "0d1088b4-9e33-4ba6-a114-a6f11b34d07b"
        },
        "item": {
          "id": "33538cd0-874a-444a-a188-e042dfce9bf6",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c5d35435-2147-4486-812c-8341a32d9bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 231,
          "responseSize": 1653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb20ae42-98e1-4849-8013-ba6ddbed3c42",
        "cursor": {
          "ref": "0ae68015-7b4a-478d-895b-71821c92bc8a",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "b91ce462-efb5-47c5-9b09-7c73af0cda53"
        },
        "item": {
          "id": "bb20ae42-98e1-4849-8013-ba6ddbed3c42",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1f2e5721-aec8-4d46-880d-bccb7a684af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 214,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e421ffb-9b41-4cfc-8a03-411e56644e70",
        "cursor": {
          "ref": "4e7c0eae-ff73-401a-942c-5a82aa2b77a2",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b7ddd259-182f-461e-a171-30780cb8ec5b"
        },
        "item": {
          "id": "6e421ffb-9b41-4cfc-8a03-411e56644e70",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "39796353-2aaa-49cf-8fc1-cd5624ac016d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 215,
          "responseSize": 2027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed619055-09f4-47cf-b36f-a26e4953ba1f",
        "cursor": {
          "ref": "f11851df-8558-4346-81b5-c432befad186",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "70826026-7986-4fc0-ac28-ab10e01780b5"
        },
        "item": {
          "id": "ed619055-09f4-47cf-b36f-a26e4953ba1f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "3b018a08-6b2d-4a80-b36c-4b261af1b963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 213,
          "responseSize": 2013
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a225b606-e79b-44a2-8a3e-377cdc5e9478",
        "cursor": {
          "ref": "55f77e95-ca94-4a95-b187-3942ce9e80ba",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "7ccfa549-9c8d-442d-b305-cf09f9e6c7f0"
        },
        "item": {
          "id": "a225b606-e79b-44a2-8a3e-377cdc5e9478",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "5c04e712-acce-4727-afdd-b408dadc0253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 215,
          "responseSize": 2011
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62310944-b65d-4669-b6d4-1885f2c7863f",
        "cursor": {
          "ref": "1660b309-a7ee-4d33-a694-b5b9329a4153",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "472313bf-f140-4600-bfc5-f0e0e91efb2b"
        },
        "item": {
          "id": "62310944-b65d-4669-b6d4-1885f2c7863f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "970d59c4-66d6-4cb0-a132-75ac28baad47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 213,
          "responseSize": 2012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dcf9f86-5240-48c7-a0bc-2495c7d1f1c8",
        "cursor": {
          "ref": "09b26f73-7d81-4e80-9e6e-9681c4ff8f25",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "cc99d0e7-7cd6-44b2-b190-84b312b9b930"
        },
        "item": {
          "id": "5dcf9f86-5240-48c7-a0bc-2495c7d1f1c8",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "0d0f6f85-2c41-405b-83c7-9b8b498a1bad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 2033
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02559d63-cd1c-4abb-83fe-31fb0b5edc12",
        "cursor": {
          "ref": "3dd5539e-e07e-44b7-8122-123b07590148",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e9cbe0ab-57e0-4463-ac34-d2c8603e400c"
        },
        "item": {
          "id": "02559d63-cd1c-4abb-83fe-31fb0b5edc12",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "8f61b422-b683-4c1e-a78c-fca4fda60028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 201,
          "responseSize": 1237
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d049575-65e2-403b-912c-86c6ca5ea9a1",
        "cursor": {
          "ref": "1fbcbd77-d5b4-40d6-8f42-4dd53648dc7f",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "8fa680cb-be61-44fe-84bf-4a47363f1227"
        },
        "item": {
          "id": "0d049575-65e2-403b-912c-86c6ca5ea9a1",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f02694eb-11f3-499a-b7a2-40e52f6aa02a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 231,
          "responseSize": 1261
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06eaf10b-a668-4ddb-a683-2cfdf39dbb33",
        "cursor": {
          "ref": "45caa0ca-89a6-45bd-ad95-4b65006b0640",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "6e1fc9aa-e3b2-46ef-96d3-2c9775149507"
        },
        "item": {
          "id": "06eaf10b-a668-4ddb-a683-2cfdf39dbb33",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "45932423-e628-4f49-9b6f-aaf3c4468a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 224,
          "responseSize": 1242
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eec5e28-eff1-4b24-9c32-3b1edbdb1b7d",
        "cursor": {
          "ref": "961c04aa-fa87-4211-b81e-5153e073d3bb",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "7d67fe66-f678-4748-b0be-08f48159a2ec"
        },
        "item": {
          "id": "5eec5e28-eff1-4b24-9c32-3b1edbdb1b7d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "89927230-56a6-4ba9-928a-7e1845d9c97c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "416e4f62-2e35-4354-adb2-3cd895a2de0d",
        "cursor": {
          "ref": "4165979e-c789-4f9c-969e-6e9fd460d283",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "eb5dcc91-fc65-4491-8918-3890432145eb"
        },
        "item": {
          "id": "416e4f62-2e35-4354-adb2-3cd895a2de0d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "1dabee8f-7a02-4e26-a343-43d7cd08b36b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baec7180-1511-48f1-bb56-14b32c7b3623",
        "cursor": {
          "ref": "b1df9780-7ba0-4322-afee-c3a653ec68fe",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "4bbb8a7a-3458-45c4-94c8-34289dc15241"
        },
        "item": {
          "id": "baec7180-1511-48f1-bb56-14b32c7b3623",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "cd4405be-8b85-413c-a84a-cfd3e5a9614f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 208,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc8df13d-73f8-458b-88ed-49a57a9191ac",
        "cursor": {
          "ref": "4e5c4634-4439-4055-bfd4-a884e06fd304",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a313ab98-b202-4460-8867-f667457641b7"
        },
        "item": {
          "id": "dc8df13d-73f8-458b-88ed-49a57a9191ac",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "61583724-84ff-436b-9a6c-5c21312280c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 216,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7618cfa6-0f45-4b53-8365-f8d51cc3eb63",
        "cursor": {
          "ref": "fd998a10-b1b8-4076-bd8e-c1147cae8ecb",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "fd7578d3-88c7-40a8-8c91-9d177808a678"
        },
        "item": {
          "id": "7618cfa6-0f45-4b53-8365-f8d51cc3eb63",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "362ad559-8f10-4305-a29f-101112d59ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a01904e1-0bd4-4d5c-a36d-b3a97932a9dd",
        "cursor": {
          "ref": "08c5f69e-2ebe-4fbb-909b-b96b5e58446b",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "65e95a9a-1fab-4206-8d61-6b4169136290"
        },
        "item": {
          "id": "a01904e1-0bd4-4d5c-a36d-b3a97932a9dd",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b6467ab5-c36c-4e44-a10d-92fbf8ee9c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e40bb455-c3e2-4f54-b800-e7a7cc2b3d6f",
        "cursor": {
          "ref": "465cc542-3ca6-43a5-9cca-f4b847079857",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "444535ef-1d0f-4b27-9e4c-99ef7c318d35"
        },
        "item": {
          "id": "e40bb455-c3e2-4f54-b800-e7a7cc2b3d6f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "2d7feb7b-9872-4076-b2c6-1a6f105d3572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9750af1b-3cc9-475c-a01e-09f25ea19658",
        "cursor": {
          "ref": "0c14b43a-d041-40e0-9000-2104157f291a",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "ab9d2211-ba12-4567-874f-43e0d3f3be27"
        },
        "item": {
          "id": "9750af1b-3cc9-475c-a01e-09f25ea19658",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "038ead36-978d-4750-9b9f-859f051bb048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 1538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7aa197f-54b6-4979-be9c-f5945e8821ba",
        "cursor": {
          "ref": "3af7fb14-605a-481a-ba64-49239b297ba1",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "6a1e5743-4385-4ddd-a09d-dbdce2e72eae"
        },
        "item": {
          "id": "b7aa197f-54b6-4979-be9c-f5945e8821ba",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b54b50f2-8e1c-4b70-a2f6-fce2a9158b40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0fe9b9-68e1-475e-b9bd-28c33a0fc85e",
        "cursor": {
          "ref": "75f0dae8-ffe4-4980-85ab-547b09bbc041",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "8e632c25-9b63-44ce-8292-8352407126fb"
        },
        "item": {
          "id": "1f0fe9b9-68e1-475e-b9bd-28c33a0fc85e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "47faec8c-ddb5-43f5-82b1-399b05a98c3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a526b65a-dd96-4b1d-a478-a921cfc41a81",
        "cursor": {
          "ref": "f1bd3058-859a-42ca-81d6-342fe5cf3513",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "0163e740-a6f2-4be6-9feb-08e3d77f6c20"
        },
        "item": {
          "id": "a526b65a-dd96-4b1d-a478-a921cfc41a81",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b931f1c2-bed9-4bd9-aeb4-0005c303597f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 219,
          "responseSize": 2076
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8201ce08-8761-4e8d-b767-9ffc6491454f",
        "cursor": {
          "ref": "8028b859-7b97-41ab-8974-be487e79be3b",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e9986da0-b5c0-4ea8-bdc0-5f437567f03b"
        },
        "item": {
          "id": "8201ce08-8761-4e8d-b767-9ffc6491454f",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b2e66920-d5a5-436c-973a-b5f81f585eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 2062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de6126f-3628-4110-a4db-2567460e2556",
        "cursor": {
          "ref": "a76f044c-1d9c-4d08-9beb-bf3c2aa7148c",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "0235d582-8b8d-4dba-a46e-f4641d79e519"
        },
        "item": {
          "id": "3de6126f-3628-4110-a4db-2567460e2556",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b0e0e51c-df15-420e-aae0-3cbc9197fabc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 228,
          "responseSize": 2060
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f40e1f6-a169-4ed6-a1a6-f2b0cefd2dcc",
        "cursor": {
          "ref": "39aa9a5f-a780-40e3-9600-a31174230b34",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "64a51b4e-add1-4875-9058-dbd3c1df9d36"
        },
        "item": {
          "id": "8f40e1f6-a169-4ed6-a1a6-f2b0cefd2dcc",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "54f7c2e8-ed97-45f7-8726-b0ad418c38c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 2061
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8de912c-5d5f-438a-9df5-6c45c7e848d3",
        "cursor": {
          "ref": "0e058640-cbaf-44f1-b419-53868a9a7897",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "d415c3bb-329b-41da-b138-72c13a6c19ee"
        },
        "item": {
          "id": "a8de912c-5d5f-438a-9df5-6c45c7e848d3",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "351cd0ef-330b-495a-99e0-4e2f18efc188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 218,
          "responseSize": 2082
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce782c16-7d70-4916-8040-15d71f96abf4",
        "cursor": {
          "ref": "dc5d37b2-5175-4203-a3f3-894b6e99e8d5",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "85fcdb71-2aa0-40ef-8d4f-b098eb7a0b62"
        },
        "item": {
          "id": "ce782c16-7d70-4916-8040-15d71f96abf4",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b93a3d92-617e-4844-8ddf-8865fcb7554b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 851
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f12b6fc7-3bdf-4b40-a938-0752a9e57ea1",
        "cursor": {
          "ref": "9b9f24df-af4f-4fd2-854b-b9aa00198c48",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b97591e2-4997-4959-9d2c-0603e48245a7"
        },
        "item": {
          "id": "f12b6fc7-3bdf-4b40-a938-0752a9e57ea1",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "65e32300-8ab4-4af0-bf43-ef2f751f45e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 220,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec5a18d9-19de-4e5e-8ae4-dfb8c928cf84",
        "cursor": {
          "ref": "b2a29e5c-36a8-42ee-82b0-7f1c8378f100",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "2c67d1f8-0f12-4e5a-a78e-7aa57d0c649f"
        },
        "item": {
          "id": "ec5a18d9-19de-4e5e-8ae4-dfb8c928cf84",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "25d5cd3e-f66b-4b07-86c4-9e63ac01ba75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 216,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db2e3303-0337-4d82-a2fe-7d79231991aa",
        "cursor": {
          "ref": "4f94c924-eca8-4418-be1a-590f73854d1f",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b98864b3-d72d-40ad-ac64-089d8f9bf350"
        },
        "item": {
          "id": "db2e3303-0337-4d82-a2fe-7d79231991aa",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "35d66701-aa64-4ac0-b087-3bb18a271ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f0db9d-80a1-4d9c-8499-adba0a4f552f",
        "cursor": {
          "ref": "3af8a734-9e8b-458b-8bc2-9620668d3ba3",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "062a1445-0b18-4ea6-8947-279f085725ae"
        },
        "item": {
          "id": "f8f0db9d-80a1-4d9c-8499-adba0a4f552f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "a18b0768-c8c3-4ab0-9203-37cb825e6e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 220,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e51fdfff-41ce-4e36-abde-82f63c1ccea3",
        "cursor": {
          "ref": "554e6374-4efc-44e5-8b76-b0607bf26aeb",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "651f88cd-db65-4478-9f1c-589c0f2c284e"
        },
        "item": {
          "id": "e51fdfff-41ce-4e36-abde-82f63c1ccea3",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "99640c0b-c43b-4f04-8aec-aa34422f1165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 868
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb181d8a-3332-4fbe-b5c2-50cc7d91ef6e",
        "cursor": {
          "ref": "d521cb24-b447-46bd-84e1-f14491eee1c8",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "2b0021ce-5a39-4a2b-8aec-f83dab5d8bd0"
        },
        "item": {
          "id": "cb181d8a-3332-4fbe-b5c2-50cc7d91ef6e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "10703be5-60bc-4b2e-b5c9-804c4e06212e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 211,
          "responseSize": 1209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd677e2-859b-40bf-846f-c39741a03828",
        "cursor": {
          "ref": "895a39b7-d7ef-407f-a7cb-2ff362b862a5",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "1349c1aa-5f11-40ba-808f-0f77974b74f4"
        },
        "item": {
          "id": "0cd677e2-859b-40bf-846f-c39741a03828",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d148ba1e-2b0c-4d0c-be96-ce9d177f55e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d73007-8d5a-49cc-8582-b82afc43d549",
        "cursor": {
          "ref": "d99b23c6-37f2-4e27-9b33-8118e2360dbf",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "49696a7c-796b-4888-a31d-574c5371e2ba"
        },
        "item": {
          "id": "14d73007-8d5a-49cc-8582-b82afc43d549",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "5a528750-87e6-4895-bb3a-a44ef2f118ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 211,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a6a8a93-1a90-4f8b-b4f5-bb76512b02b6",
        "cursor": {
          "ref": "54fa3dc6-5c12-41df-b3f9-2e8ddac1559e",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b034e58c-cd63-446b-bd45-d20f3a32cd6b"
        },
        "item": {
          "id": "7a6a8a93-1a90-4f8b-b4f5-bb76512b02b6",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "49f0ea6c-17b9-4be1-858f-e66d3b9b7477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 228,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b837e57-c28c-48fe-807a-5b058861c386",
        "cursor": {
          "ref": "20bd9276-4197-4d67-8842-f5f341562281",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "9cea0cfd-e432-41d3-bc1c-fdad8087c0ea"
        },
        "item": {
          "id": "5b837e57-c28c-48fe-807a-5b058861c386",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "127b6de8-c8be-4b3c-a0cf-5c52030e15e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 221,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad55aa1-6c97-45a1-b55b-9772dfdd67ee",
        "cursor": {
          "ref": "271858a8-3ee8-4530-b229-6f09a81afdc4",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4f5fdd94-aabd-4b71-966c-c04498586832"
        },
        "item": {
          "id": "9ad55aa1-6c97-45a1-b55b-9772dfdd67ee",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b09597af-4d0e-475f-859d-1365ba5b3825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d4a2d0-3299-455c-9f06-6b34c104142a",
        "cursor": {
          "ref": "6920a2d6-7284-4549-ba97-627258aa6a63",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "64723085-0f74-4604-bdcd-60e5d6dc683b"
        },
        "item": {
          "id": "a0d4a2d0-3299-455c-9f06-6b34c104142a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "10808925-52b0-4719-b5fd-e2062fde2da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 209,
          "responseSize": 1246
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61893cbb-8052-49db-9531-2aad9a36edb2",
        "cursor": {
          "ref": "c58bd484-9563-4e55-ac36-db3c15ba6e1c",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b61027e6-199f-4df1-97a6-b9a93d386fa4"
        },
        "item": {
          "id": "61893cbb-8052-49db-9531-2aad9a36edb2",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "de9ecd10-2283-4c35-9deb-448c05d4937d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 228,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "441bd13f-2d4c-44ca-af0b-6bcecee7a564",
        "cursor": {
          "ref": "1c1bfe3f-8360-41cd-bf6f-a0255de402a9",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c2ca4b6c-b8d4-4980-9962-08d7a2a35280"
        },
        "item": {
          "id": "441bd13f-2d4c-44ca-af0b-6bcecee7a564",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "56b471b3-8699-4147-a8cc-75a64a882905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "250c752c-c903-4ee0-8137-2ec76f8cf1b3",
        "cursor": {
          "ref": "c1451d3a-5b5d-45cc-aa6b-e93d50af2945",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "5d872341-a90a-4aa5-8092-fd49649204e4"
        },
        "item": {
          "id": "250c752c-c903-4ee0-8137-2ec76f8cf1b3",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "4a3319e0-b755-4ef3-97d9-0263510df757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b477a899-2dc2-4276-933a-ff55cbf2068d",
        "cursor": {
          "ref": "accbc9df-fcac-4c3c-a692-bf2c0b6ba5ee",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d162dae7-c993-44d9-96f4-15f9b47a15b8"
        },
        "item": {
          "id": "b477a899-2dc2-4276-933a-ff55cbf2068d",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "bdf87737-7861-46e3-8cb0-507687e78ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2350ea40-bff5-43c5-ac3d-27f44562d3b6",
        "cursor": {
          "ref": "7abbe8f3-8b84-4eb6-841f-d144d3e19677",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "46e976b5-d04d-4082-aae7-af57c058063a"
        },
        "item": {
          "id": "2350ea40-bff5-43c5-ac3d-27f44562d3b6",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "7d180dba-ac1c-45a9-89f5-9c0d52f82f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f2b1d1-9c5a-42df-a03a-0b97a4cb0db3",
        "cursor": {
          "ref": "c5d1d1fb-37fa-4962-8a27-d1b29bc3e572",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "864e7eb9-1233-4d3d-8fbb-407e01cf70a6"
        },
        "item": {
          "id": "c7f2b1d1-9c5a-42df-a03a-0b97a4cb0db3",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "063b00f3-12bd-48a0-9613-5f1d1233446d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a98af9cb-6069-4bd0-9206-ce0254f314d8",
        "cursor": {
          "ref": "d5386412-9845-4b78-b9b4-197551e50dbd",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "21046ab8-1c80-442a-b614-fe9b6e29dd00"
        },
        "item": {
          "id": "a98af9cb-6069-4bd0-9206-ce0254f314d8",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "1726650f-f966-4a94-8b03-ce31c46b79f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1922f8c-db70-4a30-8fd3-827d48761358",
        "cursor": {
          "ref": "247961d8-926e-457f-aa9c-3d31da808c51",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "62a63f81-c28e-48c0-a8c5-0f475c908a84"
        },
        "item": {
          "id": "c1922f8c-db70-4a30-8fd3-827d48761358",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "bdf22dd9-f57a-4378-a6d7-52311c0518ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 1135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d09ea3-2750-469a-b7b5-62c27a11a7bb",
        "cursor": {
          "ref": "860a997c-a053-41f2-932d-e7aad034878c",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "74bedd41-a206-4605-bfc7-4253eaec274a"
        },
        "item": {
          "id": "01d09ea3-2750-469a-b7b5-62c27a11a7bb",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "1be54bb2-333c-491c-a99d-7c37cf48a03a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8399ae63-ed2c-41c9-b2a2-322a39c19541",
        "cursor": {
          "ref": "9db1b21c-08b0-4de0-8466-a344c3b1e1f4",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e529a5ed-4685-4941-9192-77acafc3743d"
        },
        "item": {
          "id": "8399ae63-ed2c-41c9-b2a2-322a39c19541",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "1603112c-9b1a-4271-8fb8-8bb77be08850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 1206
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b35f4f2-a160-4ec4-af0b-176d021b42a3",
        "cursor": {
          "ref": "a2c587ee-baa5-4cc2-aa70-306a9fb01bed",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "8554e232-fc80-4b74-a2ff-f90aef760f52"
        },
        "item": {
          "id": "6b35f4f2-a160-4ec4-af0b-176d021b42a3",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "ad1d6fdc-2196-41a3-89f3-599eaa680433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04155b1e-d672-4d45-bf84-9338133784c8",
        "cursor": {
          "ref": "79b6f363-e632-49a6-9aac-beb498d53293",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "4bc87ce9-b4c3-4363-9517-a4aaba1fe427"
        },
        "item": {
          "id": "04155b1e-d672-4d45-bf84-9338133784c8",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "07454047-d8f6-4dfb-aa69-7d4106121023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d71f9a98-5351-4ee8-bf5d-361e8539ad80",
        "cursor": {
          "ref": "2113fdf1-d81a-4866-ab62-6c1bb0b98d09",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f8e52091-626f-4580-83b2-c8112862a6aa"
        },
        "item": {
          "id": "d71f9a98-5351-4ee8-bf5d-361e8539ad80",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e23835aa-077c-4cd6-8c5d-e4342e266a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1096
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1cae4b6-71e6-4d80-b7f9-8339cf0ac412",
        "cursor": {
          "ref": "6be19cd2-7898-4c57-aa0f-57bf8712a3f5",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "db5ba445-9a2c-4a47-8b09-c6abf4868fcb"
        },
        "item": {
          "id": "e1cae4b6-71e6-4d80-b7f9-8339cf0ac412",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "795e6054-d518-409f-b0af-c0ab07303ac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17abe441-aed6-4316-8b70-cd6c5dabf057",
        "cursor": {
          "ref": "66d375bc-e579-4479-bab4-64cac87cb922",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b7d194d8-4564-4472-9cb9-e761ef0aa462"
        },
        "item": {
          "id": "17abe441-aed6-4316-8b70-cd6c5dabf057",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "7a822fdb-ed19-4fc0-9beb-0e3f97bbb779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 764,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d48bc9e-eb05-4079-897d-b4fca8e4c032",
        "cursor": {
          "ref": "56a6e83b-08e1-4816-98c9-a15725e6e176",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f3ccea40-379a-49ad-9355-275878512042"
        },
        "item": {
          "id": "5d48bc9e-eb05-4079-897d-b4fca8e4c032",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "22a050fa-1d95-4441-b4ad-a92e1a53c86c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73b4559a-faa9-4e6b-9bb8-3c087d6ad853",
        "cursor": {
          "ref": "432fa434-12ad-4b88-b849-27305678d465",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "324fe44d-2cf6-450e-b245-b47a5fde94b9"
        },
        "item": {
          "id": "73b4559a-faa9-4e6b-9bb8-3c087d6ad853",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "f82561d4-616e-4a76-8352-0219437d284f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 224,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a06a6c3b-5c00-46f3-8d0b-d313d21fed61",
        "cursor": {
          "ref": "ae71e63c-1fb1-43ca-bab6-c920ce0a1447",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "96ec52a3-52c1-4cb6-9cf8-fe616737bfb9"
        },
        "item": {
          "id": "a06a6c3b-5c00-46f3-8d0b-d313d21fed61",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1ab4ece0-30ac-472c-aaf4-537df0e95e94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 224,
          "responseSize": 1225
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e723ba52-99bd-4927-b07a-2022da627221",
        "cursor": {
          "ref": "5f161459-107f-4059-9588-ccdb9deb78ad",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "8cf29513-6d2c-4bfc-80cb-86566efdf9f2"
        },
        "item": {
          "id": "e723ba52-99bd-4927-b07a-2022da627221",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d8a83e80-c0c4-49ad-9539-66c32da96a34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 221,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7fd108b-ac2e-474d-819f-3ce94e13ff08",
        "cursor": {
          "ref": "e58678bc-5fbc-4004-b8d3-43809fe4ae93",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ef6102a6-f65c-4213-8aa4-0d9e14c0e104"
        },
        "item": {
          "id": "c7fd108b-ac2e-474d-819f-3ce94e13ff08",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "24235cb9-aaee-49fa-88ab-d466d8c008d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af267e3-1db5-4bcc-8108-9f0fab4cd010",
        "cursor": {
          "ref": "493175a9-d9b2-4b58-89d6-c2140ed4f167",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "04d038e1-380f-48b1-a02e-e976b57db987"
        },
        "item": {
          "id": "9af267e3-1db5-4bcc-8108-9f0fab4cd010",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "6319fcec-a261-45b4-a059-2c5deabbb147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 216,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c22a3fb-4c30-4a3a-8d2c-30d0cf1830dc",
        "cursor": {
          "ref": "52394a43-e290-4f91-9add-cc3d57eb74a9",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "bc298210-7c00-41e0-a42a-3ddea3025a7b"
        },
        "item": {
          "id": "3c22a3fb-4c30-4a3a-8d2c-30d0cf1830dc",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a6cb1ba3-4d8a-4678-ac8d-9cdb5e981e5d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4187e900-17a3-4d8e-af31-da834d5ce974",
        "cursor": {
          "ref": "cbf8a550-4bf0-4a38-bee7-fab265618b3a",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f8233821-1b43-484f-a819-361aeb130bbd"
        },
        "item": {
          "id": "4187e900-17a3-4d8e-af31-da834d5ce974",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "b4b6d785-d7bf-4aeb-bf62-b1d68edd9366",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 230,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef64324-1710-4cff-9962-3f811e952ca3",
        "cursor": {
          "ref": "b8b12d39-5f2d-4202-93e1-f011381e4f3f",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "5447ec4b-2483-4cc3-a3ae-0c328dc14737"
        },
        "item": {
          "id": "8ef64324-1710-4cff-9962-3f811e952ca3",
          "name": "credentials_verify"
        },
        "response": {
          "id": "eb5e90d4-c256-4a76-ace0-812754c9c70f",
          "status": "OK",
          "code": 200,
          "responseTime": 358,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d74519b-2ace-426e-b314-595f27638212",
        "cursor": {
          "ref": "6126c8b6-87ec-4ec1-aefa-d248136d3289",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "736df2d4-9f27-411f-b48b-410bfe137c70"
        },
        "item": {
          "id": "0d74519b-2ace-426e-b314-595f27638212",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "2eaadfa2-a109-4e47-aeb8-015709caf929",
          "status": "OK",
          "code": 200,
          "responseTime": 298,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e3b7a7-9d83-4182-a1c2-a6f67977a8c1",
        "cursor": {
          "ref": "8a46117b-30c3-4566-b07d-b3d3c1ea197f",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "2f6182cb-0ad9-41ae-a3d6-e9f946f797cd"
        },
        "item": {
          "id": "14e3b7a7-9d83-4182-a1c2-a6f67977a8c1",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "29e3e5f7-8672-4158-b394-8ef101a91f57",
          "status": "OK",
          "code": 200,
          "responseTime": 305,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d13a24-22c9-4735-9029-793cdb9a2165",
        "cursor": {
          "ref": "a8455a6c-ad4c-45b0-bce8-3fba60bcb346",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8c35b11f-6dea-48d9-8137-b0162a8d9fe5"
        },
        "item": {
          "id": "c0d13a24-22c9-4735-9029-793cdb9a2165",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7bb3fc5f-3ee1-45bf-8f7a-30086d0ee724",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d13a24-22c9-4735-9029-793cdb9a2165",
        "cursor": {
          "ref": "a8455a6c-ad4c-45b0-bce8-3fba60bcb346",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8c35b11f-6dea-48d9-8137-b0162a8d9fe5"
        },
        "item": {
          "id": "c0d13a24-22c9-4735-9029-793cdb9a2165",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7bb3fc5f-3ee1-45bf-8f7a-30086d0ee724",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d13a24-22c9-4735-9029-793cdb9a2165",
        "cursor": {
          "ref": "a8455a6c-ad4c-45b0-bce8-3fba60bcb346",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8c35b11f-6dea-48d9-8137-b0162a8d9fe5"
        },
        "item": {
          "id": "c0d13a24-22c9-4735-9029-793cdb9a2165",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7bb3fc5f-3ee1-45bf-8f7a-30086d0ee724",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d4f6104-5a7e-4671-bbdb-fd5732e07e63",
        "cursor": {
          "ref": "d8450295-20d9-4ebc-8dba-f10f02cab799",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "23e21b55-8518-49b6-bc60-c803d7b2d785"
        },
        "item": {
          "id": "4d4f6104-5a7e-4671-bbdb-fd5732e07e63",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "55fc9b0e-3b40-4886-bd4d-7b4c25412a47",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 215,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc262441-ba57-486e-964b-e4244221d2ce",
        "cursor": {
          "ref": "7b088c3a-ed01-4187-8f3e-dd51f87bf7a3",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "233a45d7-8b4a-4ec5-b706-47f38a41397f"
        },
        "item": {
          "id": "fc262441-ba57-486e-964b-e4244221d2ce",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "dab9ce0e-f263-42d1-a437-7db2d479c193",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc262441-ba57-486e-964b-e4244221d2ce",
        "cursor": {
          "ref": "7b088c3a-ed01-4187-8f3e-dd51f87bf7a3",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "233a45d7-8b4a-4ec5-b706-47f38a41397f"
        },
        "item": {
          "id": "fc262441-ba57-486e-964b-e4244221d2ce",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "dab9ce0e-f263-42d1-a437-7db2d479c193",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02496aa5-2156-4705-9ced-ce9502c19052",
        "cursor": {
          "ref": "57b0b7ac-7b64-46fa-a674-24ab2fd1e684",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "6ef5ea30-0f3f-4d8c-8843-595180bf2b3c"
        },
        "item": {
          "id": "02496aa5-2156-4705-9ced-ce9502c19052",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "31ada2eb-4597-4255-8fa6-e8ea7c802a6f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 444,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b20bae-8cdd-4f86-8e30-bb7293630a10",
        "cursor": {
          "ref": "8f934c7c-b8c1-4fcb-89eb-2423b78fe590",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c678fad3-1fe6-46cf-8df7-3e063cea1e24"
        },
        "item": {
          "id": "c2b20bae-8cdd-4f86-8e30-bb7293630a10",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b7a7a526-78da-4420-9cdb-f31e24157bde",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b20bae-8cdd-4f86-8e30-bb7293630a10",
        "cursor": {
          "ref": "8f934c7c-b8c1-4fcb-89eb-2423b78fe590",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c678fad3-1fe6-46cf-8df7-3e063cea1e24"
        },
        "item": {
          "id": "c2b20bae-8cdd-4f86-8e30-bb7293630a10",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b7a7a526-78da-4420-9cdb-f31e24157bde",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d63872e-e827-47bb-95ce-8cc79589770c",
        "cursor": {
          "ref": "fcd3fba4-140e-4b33-be7d-30aa79231d10",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "fce26099-69b2-4c77-b096-df61fb73f142"
        },
        "item": {
          "id": "1d63872e-e827-47bb-95ce-8cc79589770c",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "22623f6d-9a8b-4bbd-a1ed-d772ad312db0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 725,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}