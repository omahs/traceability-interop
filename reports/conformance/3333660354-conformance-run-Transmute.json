{
  "collection": {
    "info": {
      "_postman_id": "f5f17919-82a1-4db5-be95-0f985635313d",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "8e3f052e-b9fd-4090-abd9-cb7d9a17a029",
        "name": "Clear Cache",
        "item": [
          {
            "id": "87c88298-edc6-4ffc-a032-5ec8757a6e88",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e80a1399-4207-4350-aa90-e969e9e5d084",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9714ddf8-76c9-4c6a-9f3c-a24a3323f00b"
                }
              }
            ]
          },
          {
            "id": "74d2191b-31c9-4a3e-83cf-eb1dbbdd49f7",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3c515179-153e-4787-b2da-404be308199e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "769b54bf-8817-4dd6-a43d-bea10e4281ce"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9b1b4a39-7b2f-4f4f-8a10-785eec00149d",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a9e4d56e-6627-422e-97a7-dd1d61da22dc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5ac6ef77-a747-46b1-bc14-1e8cb1d86f59",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a66becad-e0ca-403e-99f3-c926a9b360e4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "82165016-1851-49b9-ae77-d1c393535a72"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cd123bec-3bda-486c-96b7-c39eff08c0a5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dd5b003a-c232-48eb-9de9-9690aee04099"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5f51521c-15b8-4c2f-985c-5e7b08dcb8c3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5e9e3cd5-2dc5-4b61-9e5e-5825647596ab"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6ded7449-69be-4f7d-ada7-9cdf0d5c2ab6",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "6567061f-18e7-4a3c-951d-469097230e8e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "92482a46-c277-41b0-addd-aeca872473ce",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3401cbff-89c9-496b-9633-4e20ee38f97f"
            }
          }
        ]
      },
      {
        "id": "4a805d71-6b81-4ec8-945f-2ef1313f7714",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b939429e-e9b7-479e-a4d7-d84bd43b77c4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b5cba89f-d926-47c1-9873-8f629560cbad",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c4c52ebc-b12b-4001-a1c3-e629158bd93c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd6e4d7-f6ae-4684-9574-ad1a06ea25a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b5c95c94-c3fa-4e84-9150-d49a2c389980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4acfb116-7bfd-441b-98e1-fb20fc735e43",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d8434c-aef6-4676-acbf-629eea8dcff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "92c82fcc-6104-4d12-b00a-4baae04d36ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f614efb7-37b4-4629-9f32-11d05d1390bf",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b036515-3898-4158-a506-96ad50015980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5b2526da-b8fe-4bd7-846d-52cf5c9cf3da"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0b7bb73d-cbdc-4cb8-9cab-df35d94ab33e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "10ec7029-964c-4591-83e1-e4e78905d7a9",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e84437ae-2a2a-4c9a-8cf1-c826eaab899a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "41b84971-4b11-4254-ae53-6077d37ecb11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cdcfd1d-8a1b-4c1c-94a9-580dd7961275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c27d7b1a-2152-4d5f-b132-e04056ecba90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fca20d5-ff1a-47b2-a99b-d96990384172",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7225dffa-82ba-405b-b112-b18775b27616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e530290a-6185-4d83-aac0-322941203e35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62052e40-cf4d-4d73-b44a-f6f6addaedc6",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "874c83e7-2300-47cd-b718-3d360d483857"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6c8085f7-196b-4d8c-a672-bb7d6c8c3521",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6ad37885-e17f-4251-88a2-49959ba56dc0",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f192d7e9-9a37-42d4-8ef0-41fd6efaa372",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "2f4626e2-fbd9-46dd-9f35-d9582b4a886a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "12563a90-462b-4796-9974-e9c5c8295a56",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "1cfd17dd-e9c5-46fc-9ceb-7a875dd86afd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0545dd74-61fd-4b12-b3a9-b936362f7ca2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8fb52669-4aac-4368-b2e3-34fe3deafe5d"
            }
          }
        ]
      },
      {
        "id": "37e218e6-c24a-4a77-acba-5c92d62290bf",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "11292a6f-e308-4293-a5db-cc97b7728653",
            "name": "Negative Testing",
            "item": [
              {
                "id": "16946a9a-f995-46da-89c5-765a2f7e8f70",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "3a3e0d4f-35a1-4c24-bd0f-8820c0975187",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c1d9411-9d75-43a7-9b4e-723a1b9eb376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a82b546-e3b3-4c11-8e49-acab6ece1c46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53616ee6-37af-4de7-b033-a158f5205d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82ab26b0-2397-4f7d-aa11-d87a5323654f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af27f7a9-d009-431a-81ba-2c53d63c819a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31d69c6b-b4d6-439d-bf05-c40cd3e7a8cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66ed061b-4a61-4206-84eb-62e0bb3c89ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db9784e9-7039-4732-b211-9ada3f1ba91d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7bd29d8f-ee22-4ae7-ba5d-29bf10b36047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81e88bb8-4324-4965-b3b3-d936506724d1",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb7c7c2a-89b9-474e-b142-ca3abbedad23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "959404ca-e17f-4b8d-a770-7e67cf4af56f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb52035e-5c06-4f19-825d-1d1026f61a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dab1a483-0e2a-4b4d-a08b-4e5eb6715cea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b72a079-b439-43b4-8020-2e22b89aad18",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc2531c-caad-4679-8e0b-32c43c6fa624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14f067a9-1213-49bb-896a-7b7be8395cc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea0b133b-fbf1-4207-934f-80551bcc686a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4edae50-8c6b-439a-815c-fd08651d1671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4476289-648c-40a5-8124-a58380855388",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cbc80f1-aab6-4bc4-98e4-5db5b88c673b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79242e17-4720-4cba-ae6b-849db21f040d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9078b6d3-a8ae-47d1-9db2-1629696ae944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12d6c7c6-25ae-4604-814a-b0d4e5714150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8dd0050-d197-46d7-95c0-5fb82325a37a",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd992b07-115c-4f19-b08b-25b22b23e197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5393ae87-7fb9-4442-b56f-df9de14ce272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0880e85-bb75-4e14-8339-a6ccc93d0f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68ea3a65-50d4-435e-a5e1-f548364bbd31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbd3811a-422e-4e5e-b69b-b7ffad2393da",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e1b3ab-e84d-4c68-b4de-fc9cb451b3c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0abc17ee-c3a1-4651-aeab-5dd7f92dbb15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a16aa9-17f5-41f1-ba0b-f5acf26ea03d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "91ddfeb4-db69-4f22-a66d-be220afb7d60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4394a32-8463-4900-9bfd-b3020a3fecfe",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef1ddbdc-d3c2-4b5b-8bb5-b711aed4ed27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f56c0a81-ad56-4339-bf3e-865656fbe2e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f6a202-422c-4576-af3f-d13ff3b06945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "461d3957-59b9-48a0-972f-0b8c88f2cade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55939d35-9048-4fae-9f1a-bc8fa8784951",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5131d946-cd55-45de-8b1e-c61a2d198c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa19c8a5-952b-4edb-afa5-a2af45b4fed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59ca70f6-02b1-4b48-93f9-ccae9610a0ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cbec3c2d-ff25-43a0-b561-d240cad326aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f8efd35-b483-4ec5-b2eb-a3f6c50b0cb2",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d216f7da-6d90-4155-9075-98c205ddc72b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8da554ef-bbe4-4a7e-82e7-347b7ff3f95e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e23a8b8-fabe-4077-a927-2046835ce097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5058b515-0b97-427d-a855-dce1c196beb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f32fa909-8f03-4c4f-a903-538649406ec7",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78201b40-de4a-4317-95a3-7e8030a8a139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d3d4d12-a253-445f-bc6a-31153b7562e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbee7f1d-d3cc-4d61-b1fb-f8cd440b89ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9b3bff2-e23c-4276-a6ab-9375befaa42e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ea3c1cc-66f3-4797-ad82-e115fa0c3d7c",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4cdd4dc-5cb1-4fe8-8b76-26c39c3a1561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c6e0e8f-745d-44ee-862e-bb0260d8200f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b14f405-46c6-4d95-ac33-eb8b8c1a2737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba24cfba-9d0d-48a4-8be8-cab81145cf52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6da2c93-414f-4c0f-a24e-ececf8d35599",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b23a52-9830-4343-803c-327508e94cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "084d234e-9f1b-4970-b13b-3072b2bffd4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aebe23de-1009-4f41-a332-c5f9b162d1e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4f60bad-5a8f-4566-8ba1-de21a99fd5a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "276625ee-3fac-4b57-ba64-de5ee5dce62d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcb49e65-b4f6-4929-87da-36241145f329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f247c76-f910-4acc-b97e-7c0500d2f9ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2184f95-3acd-4f5f-a9ec-5be8b3ccd645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e951a8c-6fc3-46be-a7ec-bbe7246146c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e79afc-3f04-46ca-bc9d-67250609ec44",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54cd1597-4c1a-402d-b186-740f29282b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2add90a-7d15-4aaa-b4da-36cd97c8ac52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d30d825-daaa-4d0d-ae3a-e17155aa34c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02e72a06-a43b-4499-8921-bd33fffabbfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbdd40ac-9317-44e3-9e18-1e921e6f90c7",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2649cf47-079b-46d2-8bd6-102ee43648ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82e6a04a-0ff4-43e8-9fbf-7c36ab341dc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac662ed-3357-489d-a35d-c154a08b8bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d61396c-4e35-43fc-be1c-08fb5defdec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "085e309e-f11e-48a4-b700-bc883483b842",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e92b48-7cb7-4623-ac5d-6eb8b61d292d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01f565cd-7394-481e-b040-3961ce77910d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6981ea0-743f-4eff-9e5a-bbd77fe1fd11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5337bca8-c8bb-468a-8122-1ccbb2d21d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce400bee-836b-41d3-9d14-9a0218e461f3",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e0b2bc-3a06-4919-a4bd-0a726da45f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01f05218-b531-448b-9f54-598178b28736"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37d25650-ead5-4d1b-91ad-423629fd0d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "52d84f9d-f0f5-4392-9193-57cd6291e327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab30d39-ba4e-4895-b32b-5cc7ff5612a4",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34bfa0a8-6e8e-4898-aab5-21870e755850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d2fb0c2-ad6b-43c4-9695-b2d4a36335e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bfb5565-1248-4381-9789-70ae01592649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1703f1b7-4c45-4b3a-a0c7-ef8c55bb613f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e87c1b36-d669-4d91-a401-a1ba24a1f872",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db300a27-6fbc-4aba-81f7-72f9ae2ae412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f42379c-eb76-46ce-a1ae-6378ba60bbac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f362875-ea7e-41cb-a7ce-b72fb14e7b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e1794a3-571a-4435-921a-b390b4a6ad50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33690783-d2d2-4bcd-80ad-77a0ddcc005c",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48295b0c-7f7d-4241-827f-f2e2773078cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0b0d6ba-08b0-460f-a85c-d274838b9fcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfad7215-f6ea-4162-b414-2ba0f3f39417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "08c70377-3a5a-49a3-ace4-d4d44fb43325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da05bab3-c53f-4d4e-823a-e8a34431f672",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9173431-adb6-43ed-b64b-e91e97cd54ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5269279a-c053-4aa3-986b-fb4c8ac5c0c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94370dd9-c99c-45ae-99ae-4712d86c75fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f92d360-6ed9-4780-8ecd-99a681e6206d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "669746f4-ec82-4d23-8719-b11a1273b9c0",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc23d0b-92be-42b6-a984-73eb87752fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3fcda70-e017-4050-925f-f1717cf3bf02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01405acb-7b11-4fb6-9eeb-4711b6cbbb9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ee561b3d-c64c-475f-9231-d29851c44130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6aff72d-79f9-4ecb-a42d-4b7bf654691c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb13a81-f94b-44da-95e9-afcafd3869e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e51f837-b69b-453c-abda-cac465c68a14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e89f21a5-0514-4d54-b275-764ea0cf519e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "31c87df5-e379-44dc-bb82-956cd63bf5d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e41f5e0-a96f-4360-a445-0607ee09903e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf01ab4-4bac-462a-85b0-a2c4be07755e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "629f457d-ac08-40ee-b0e7-2bf26cd1a37a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6acdaeb8-4edf-49df-b394-bc8f2a9f676e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c73324f4-64c8-40eb-8b95-e8f1ccebae47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b04f80df-dab8-4c96-87eb-fa16558ccca0",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dac14b0-dc1b-4d18-92fb-6dea4b3a1a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51cc8c5a-b196-4916-9d77-f09de854951d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0efe4109-d8c2-4b7c-938e-e3faff121333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "78476a47-e6b2-4820-8ee4-07e39b4209f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff440cd9-68dc-49b8-821a-2d9f189cb5b4",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d9228c8-a8c9-4938-ab57-99f807184775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcb2359f-834a-4662-9d4e-8dd64ab2ef9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "882ff2d4-a8bb-41f9-becb-bcd39fcf7c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca4fde9a-03f0-41d9-bf7c-5fc1d3ce5447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33996c1f-05b5-44b1-b6f0-425ff99ee5a2",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12036015-8330-40c0-9460-11643e622304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbe67c6b-bc2f-4c07-8f12-59dcb9020199"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce8f96f3-fb03-4b0d-a537-e1cae810db57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8474d016-6c87-418c-bba6-a18a207689a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "920e22a7-1606-432f-8a77-03b84ebcfdfc",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f18c8b-7dfa-41fe-a813-64586187bd64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ead04642-5f18-4e40-bc90-34e6fcfda1a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb84440-f5ad-414d-83b1-30709eaa8a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "90fabf69-78d5-4501-b34e-cb2d82733df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b1b44e5-401e-4fda-916f-b1125c007a35",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c9cd05-9f40-4437-bdf1-385fb31ac850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9204c011-7eca-4012-8880-dfdbc2ff9ed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afdf9a4e-e8cb-4f1b-9316-518916bd8fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdde8c81-ad62-426d-8f76-ad432486a5a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c08ba72-6749-41ed-81c9-96c1a3646eab",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd9efc2-542f-4793-9412-a008444581f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7991b934-0fda-4896-b2a2-78f739cdc4f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e00e78e-e876-4d53-aded-1555fbb41eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "149143dd-7155-479a-b63e-40ab4b68fe94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f5ff97-2dee-412b-95e5-34ac76661259",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9490eb4-a491-4b0c-83f5-357463cb5ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d4dc803-9240-45e6-84e6-2ee4093f6e3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc419826-2abd-4336-86e7-149fe9e07ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3d8c044-be57-4d33-b569-0cb44d9fdf06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2030173-59d8-418a-b640-fcc1d6d69a84",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed99bea3-ba36-45b1-aaa8-2e49bd5d746c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bef4b657-7607-499c-81c7-8b22b034e350"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b262ce6-d3f2-430f-bb83-1bcc008e8fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c00ed9bf-7f32-4572-9bb7-fb7a81a73bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "defebe80-1610-4a0c-9e58-67c7dcab101a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7292b060-211f-4401-bbdd-2171e23b69db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e296d1e8-7ba0-4143-9c48-6aedb48ff02c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f533f9f-e4a9-4ac3-8055-00801d0921ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8479bb78-ac0b-403f-bbdb-e48b2e05f99b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f624fe8-db3c-4982-a949-b3017c07e741",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c626f3-23ae-4501-af1e-cccef31c094a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cc56551-338c-4406-8b03-8b9667a2a934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd6b2b45-f5ac-4009-b680-48fcc08c9d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "220d32c5-a946-4740-8a57-8a9c4869a066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c562b1-2aca-4a53-bfa9-3593ee5388d2",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f03fb1-7188-4b8b-bd56-ce176006590e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "46a03fe0-204c-489b-9d40-3d2241d388c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd06884f-188b-417f-b5d8-628eff0d5c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ccda6664-c860-4cd4-b9a1-5087ab7ad56e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6503c00c-cd66-4dc5-9ff3-04ef3b311ecb",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "280e54db-c179-484b-b226-e808eecce22c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bc833ba-e55e-49a0-a8a1-c776b8074bad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1983c9-1e4e-4d7a-a507-9cd8412ac4a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4be3fa2e-911e-4dfd-b33b-710bf61ff5b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a6d45dd-e7aa-4c3f-8eb0-95da19f1d1e2",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4988bc94-d478-4620-a993-8b710d64d8f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfbd5d26-c99c-4aa4-8281-b8b52e4e3212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2fd7d22-8172-4072-8f63-604ca9e0fbf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2587236f-e35d-47e4-b077-4fed322ea9bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1edc9667-082e-444f-b786-7717d0678750",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe7be80b-4fde-40a8-95a2-9e90af2b3839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a52d05e-6d33-4bad-a2ab-f4560a5ee8c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0056cacb-e090-4de1-a216-62ccf179f73b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8153879-e9aa-471b-9e5c-2116efb5c131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58292ae0-4694-46a7-acb8-8ba08dc5c45a",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e646fad3-cf8c-46d1-9113-b81a53ed7d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd07ade6-eeb7-4c40-9e2e-48eb4ff22ecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c80c2d-776b-4786-b37f-26180e86cafe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "de7e9d16-41cf-4f24-9550-2e4870e99875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adc691fb-9d9f-400f-a558-e9987d368ef8",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec77c868-e910-4a77-af15-050c944654ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fc9727a-efd7-4ff1-81f3-a3003d886b38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ed0164-195b-4c1f-a481-6e3db621e568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "62f8bf2b-08e0-4d9b-8638-1b691fb53fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93642c65-93ef-4268-b992-59cde10ec649",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b251cfec-8fd6-4da0-a10b-64ef73c1e6b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5265a94a-c5b7-4ea4-b455-d5849ca56f01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a48140d9-67f3-4319-b0e1-b7a81fbeece4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c4b2141f-12f9-48f4-82ac-9085933fd3ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac12dc6-4265-4714-8f1e-8ab52bb952d6",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e41449-f8c1-43fa-a712-e071b0263195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f78b4dbe-4bab-4c60-93ad-c0c637053cb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d7df85d-2868-4fa4-ad5c-f52f345bf20f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f52f7611-46de-4a9f-b683-0455c8fc6ee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c15cd788-6d6f-412e-add9-94b846814e9a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d41d8fef-bb01-4195-8f89-5bf983e320c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "239cf01e-d807-4295-89cf-e4f9afbd516d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f12946e-070b-40fe-a94d-0785ee624ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3678303-d796-4030-bf24-e87e79eac3bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24a0e9fd-0814-4000-9a68-0937b0afc69a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f20ce2-eb8d-44a9-9182-d4a5a46f6879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ca87966-a952-4407-963d-f3e801e01556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7477c46-755d-4c98-b4ac-bd39d1efb003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "156f66ce-fc58-4a14-b8e1-53140e0aa557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3944724b-87a5-425d-a207-3fc2ba8dc09f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc269ffc-8205-4b14-ac78-cdfd183729e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "575b0302-5de0-4eac-aea5-d4a7a2b88c3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6450e835-ad18-4c7c-a2b1-4449e1aa51a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "738694ab-8073-4aae-9884-6569421aa333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ee310e-f4e5-45d1-a3f2-2e20e105cede",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3d79341-a1d5-4673-82c5-f1052f4928fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c89b5041-4970-4f2e-af79-6aa7dae4f3cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f6e4f43-d15b-47e0-a05f-888a3be6efab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "455686ca-d86c-483b-8bf3-25fb78c65b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "050e5489-a51b-42a7-94bc-5355e927b5a5",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf1ed1a-fa88-44a9-a7bb-840c7b44cf88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51016895-832b-4bb1-8421-439585f72482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc89d218-69a9-4e84-ada8-6bfa0894b0a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b54c40bb-a152-48be-9487-cb33a5852a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4dae082-b5f7-44fb-b626-90c4bb5618db",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e57c73dd-0b6c-4b9a-8528-f9b13f8dcad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23b5706d-49e0-4ad6-82d2-2d694d461114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de4a3bc0-57eb-4ee2-8911-190c079a23cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b621e41-621f-4f32-8c11-1a824e445767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c40a275-6597-4bab-8910-e14c50a19c3c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b31c025-ed66-49ba-a278-ceb2eb41c2bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "608eadbe-931d-4f1c-8e91-ecbb66f23117"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d22a33e-fb66-4b76-99e3-a156e3c03b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e336376b-1c71-4a37-8ce2-dc6468a97339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4de4282-2301-4e94-ac21-969f6d0847e9",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e5e57f-dfc6-499c-bfcf-078b2083b590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c31c53bd-0002-4df5-9d34-a07f3aa6b7ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ae22e7-85a2-45ba-9594-3768070344a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "2deb0c27-4f3e-426c-a5f1-de068a0b987f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f78a11-4992-44e7-83dd-f65364a89193",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f23e9f3-7dfe-4eda-91f8-52bb48a0a91e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f9d3003-05f1-4c54-8010-6535b6ab4e84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d60380f-bfbe-4f99-b287-55929768f829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4c39e36-fbab-4835-a628-a3a8fc167277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "182b16c6-e68c-44c8-8dc5-cc0af6c1c7b9",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5280a84-1c0b-4dfd-942a-126ceffe3c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f99b83f-fc8e-47e7-a295-1beed546e995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e0aa475-da21-4b6f-80ee-56c2be6959a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e3df485-0d4f-448b-80d1-ca7df4dceb40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a493158a-5cda-45a7-be5b-070ff7214ab6",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb0be2ce-b613-4594-839c-e230316a4883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf87afb1-a1de-4b3d-98b1-8825cfa19162"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bad066dd-21f5-4e9b-b101-579033e12e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bebabf41-8629-41ed-89a2-8010af78a54e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3849ee83-9145-4a41-99af-c66b861a2d4e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03bf9a0e-0f04-4960-8ac9-bff354a3d63a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90dab83e-bbdc-4b0f-85ee-693868b3aea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ff4328-6e9c-4de2-bc3b-4e36ff6b8f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "700a7ef4-98ec-4f68-b1d3-f8aebe1aeba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b3d9160-6d47-4304-a735-299ddc63c5af",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38abca97-664a-4bde-90c4-5b3d61050913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d94b5a6-bcea-42fb-b15e-5cc5656e51b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0797088a-2a44-42d9-9060-7541bee9593c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "2b95d597-551b-4878-b13a-eb22b11992fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ccbc61b-9a95-4552-95af-d753ccff39dd",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce8804da-1a9f-4e7b-8ec6-0b1bbb188efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "945aebb2-f981-48f6-be2d-75954a3febca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c034a1da-911d-44d3-b9e4-0d829c1b7214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d5aa709-c8b1-4fc1-96a6-e1d6d0921670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1794ab5a-e9b2-47d4-984e-40f172c4c083",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d75f869-eda2-41d4-aab6-34950c392bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc83ba8d-9199-422b-beb5-badf6b91543f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe843d8-c694-4ffa-a787-952f907f994e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a165300b-fc75-4884-92d7-15b1767104b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d922ef-8b86-4cd0-9fba-e620c99b62b5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33257d4c-0b02-4f9c-b7ea-04687e72f03c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3049a3d-d853-4b0d-a569-a43d159f2503"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "906511a2-b473-4718-a247-b84c08f86cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8c44b63-0cf1-4733-ad28-b633ac3efc19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67d89d57-5eab-4784-bcfb-0cd972f3dcd1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cc4cd3a-963d-4894-8b90-ca4b437f6e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db1774cf-d83b-454a-9490-20367f12a139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc978ae3-0220-400f-a444-4616b4dd8709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e142579-7244-41eb-818d-17b418694018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4fe6c02-b890-4d34-b229-f7ccc9f1aa09",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5446b643-90bc-4f71-974e-2ab8d24ffd5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b393a0ff-59bc-4bee-9b93-89bf7d9d0fec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d42d8c67-781b-4821-87b2-e737f78f7bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9082fa9-b244-4c47-9736-1486d340c327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4140472-6a66-40e5-b78d-da033a0cfc53",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c3ff89-3381-46c1-8248-cfa73a4edad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71c842d8-7527-46b6-beee-731e7f7c4469"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d32b9ed6-ac3c-40ee-bc39-908329f23865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ed805b1-9f1d-47eb-859a-fbcaf11cb624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e96d938-03bd-4198-a2dc-9203b56975ca",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9865f34-e54d-483c-a0fd-7411af52df8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9213039a-4373-4e4f-8379-96f80e86b50e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9de9ab6-79f5-496f-8679-32a24fe2a826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "50e1cf45-790e-484f-a81a-baaa91ba67b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c9aaae3-0c32-4c2a-a71c-6a6244d4378f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b0b4405-da56-4700-a10e-93e16a0a01f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f581b663-77a9-4796-ad1a-62f8bff4d897"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "324563f9-5bf4-40ed-9a54-d142866d47fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "05582f75-5c5d-44a9-ab34-1035169afdca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd34c023-cf8b-4044-bc1f-6596d4ba660a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4445b3a5-06fc-4343-8942-0d1265b7146f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6c405db-d1ad-45e1-a3ec-92bfdde720de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5beb0c34-f345-40d7-9037-aa4f87a7e65c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3bf1441-47f0-4d45-8ece-9a851e71e017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d18c56f-92c4-43b2-9bf5-cecb8ed14841",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "516efb9c-1488-40c4-8d18-16f028f70638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4984c19-32ce-4d40-88be-6d8d50071aab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7a0d7fb-0ef4-449e-b381-fa8a3208527a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "88ee0183-374d-40ff-a364-a833e19cc707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d58a37-e2c2-4ebf-b69d-fb01e5fad12c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7cfce26-c9f2-4580-8eed-7d1ad950aa4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2864aac4-81d8-46fd-96e9-276893790214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cc0f7b3-1edb-47de-82e1-a6298a92279e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "79a332aa-7722-42fd-bcc4-4069b9301d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c4a738-92ad-4e14-856d-44401cc5996e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf2a3c1-891b-4957-9cef-a2a6d73a013e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d42708c3-3e7f-4359-89b3-09e64e93d860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a3fbc6b-5380-4752-9ac0-a115659dd89e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d66902ad-3b49-417b-b62e-b542c2759730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2eccd0e-3cfc-486a-9f7d-05322a760d12",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e15027cf-34b5-476e-8fcc-ca4e065cef89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e21216f6-870c-4f78-ae86-3ab997a25813"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a0862e2-547c-48eb-8cec-6403053edacf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "53ccf4bb-9926-4437-ba1f-a42d02716b8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4650e9b7-1618-4fcc-ae90-dd00c030d5ce",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfb78a41-a07a-494e-9521-08572d03e8ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af1e9359-067d-4903-bfab-9f75bb5f2b5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a38647-a4cd-40e3-ba0a-fe22dbfcddf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "889f4c9b-d32b-4ab7-901a-eeafc55e3c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31c64f55-245a-45b3-9fcf-08f76393b912",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbddd702-7b17-41d1-9e82-2631fe2243db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b058521-6ade-4f93-b352-3bc9629b5688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efcf3dc4-e9ff-43da-821a-cd772ac2d903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "540da380-3209-4b11-8730-8d069086bd13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2467ef81-a684-49ba-89a3-50567e10983c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a12e42-a141-4c6d-b6ba-849cbc6e5ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "894db392-9de6-442e-b04c-f0bfac37c477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dba91a0-d753-4541-95ad-2700d830beb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "998160b9-ec57-4ed7-92ea-677b3066f0cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d8e1be-1f45-4e0f-bd05-48631d4068ef",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3feb750d-8767-491c-80d3-5934891a080b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5fc462e-be3e-4295-9a2d-f6ae7ccf2120"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b31d1c-6eff-4f51-95cb-5bd1addeb3b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b64b450e-afce-408f-8e9c-e0dc2be42c2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85282c9b-9cfb-403b-b213-8750faa968cb",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7182ca4-bb6b-4b8b-ac0a-aaeccaa5639c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a950f0f4-1d18-4791-8688-b31f2e73d285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c46cec-88b9-47d4-bc85-97e45723b1e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1ebcc70c-3c41-46dc-9665-65ae3559b648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20071b13-95d8-4fbc-8d77-146b49a0341e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d77d1c-f126-4bef-943f-5e769662d79a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2de34b13-e67f-48fc-a886-85cee64090b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e869720-5ad1-4d44-8e0f-c7baeed22ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "54e42ed5-d651-4bac-a7be-0202afe6efc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4bbd11b-61dc-4ca7-8dca-f09cbe5daef7",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "154fb702-d7f7-46ca-9cf5-e53fb34f0f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3844067a-6c5c-4c36-96dc-55aeabd3b6cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f58df401-ddc9-49b9-a7ed-a142d5fc7777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "705fde0c-130e-43c4-be85-8eede0514106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20633dcd-b990-4dec-ad44-655178aefeed",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c31cbeb-bf1a-4489-b126-76980541df0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d749bc6-7707-4bf6-91ef-cac1e800f4a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a4e3e6-b745-4b1f-afbe-021e2bbc84ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "297498f4-db1e-46ba-aac7-ff71254c12dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc4f358-1446-4fac-a39e-f66c74ebf395",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4934991-34a0-459e-8596-55a2ca1a1d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07e531bf-b8f5-40a6-81f0-63db404b359b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd2a3948-fee5-4c69-a6b6-1647bfd6935d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "468e39cf-5b6f-4675-953e-e4cbdfabdbba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b44f7b8d-49e9-4175-8e1d-d57e5565f477",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf74603a-ffc3-4d01-93f3-4cad4e9a21d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f38ff28-a537-4744-92d9-d43bdde617a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa70095-095e-452f-9aa9-e1d79b077fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1e15a8e-0a84-4942-856b-6c837897bfc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "244c7b25-3f98-471e-88c3-116f20ee5600",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f41d12b-d95b-4752-97d1-38680985bc10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b69f8399-2808-4e11-86e1-791b61df03d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e6866d-2d16-45c3-bb97-44138dc2a2b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d91a60fe-7054-41c5-9a61-2eaa0ede9384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91dcd1e3-c3bf-4a7e-a88e-b5ea223cc86c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e217c1b-7249-4e6b-9b02-bcaa41d413d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e5ad6a4-8adc-4665-8a0b-0a52bfc9bdaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ce80947-8791-4905-a91f-131237e044bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d550495-6044-4764-9cc0-511f712f0dd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49029bb6-5b9d-4a0d-8f9c-9a4b94c5f7d0",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc53bae-9e77-4bcb-8feb-891968d8ec62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec34df2c-ba0c-4f77-8e0c-e3952db6de96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fdc52b9-c185-4c4d-83ea-6c280728700b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a79e2fe1-66b9-4d49-a81b-24456778c224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b9844ac-1583-4d4d-aa3b-5b1b30a0139a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "def749f5-3f63-4a08-b877-4ee2cb92d7e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff5fac44-1f41-4776-955b-1a6d917b8d07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1336159d-9866-4a6d-ade2-4168e6b8ba66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "37ac98ef-95bf-4f52-a0c1-14d496c50269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca4297ac-cc00-49ea-b1bf-63b8943330af",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e6eff07-58d8-4d08-8b99-ec96bd57936b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63d7792d-916b-4195-a264-41e4aff99ff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e663381-37b6-4950-abff-27a425bcee0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b96afe2f-a98b-4a4d-8a30-cc6b0b395f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a561e4c9-7ca5-4cc1-8131-ee414f7a1430",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cd3e0a1-7f78-4aa6-a143-b8b165a53438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23a6058f-1033-4eb8-9f08-2b55e090ad4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8de1fd1-5360-4dbb-beda-29b4f513bd44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1d868a3e-5d48-4e84-ad71-028f33ca990b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "226a05f1-635b-4f31-a57c-a54f23e2cb6d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc061696-9f2e-4078-b77e-52c59635d421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bf32095-08b5-4542-9f68-b8e6376a95a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d321c555-eb35-44a1-8348-0aff865b870c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "26193afc-c346-446f-abe3-f10dd4ee5044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d002a201-fd95-4a6d-9dee-9d5d43096c72",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b8db678-5eec-40d1-970c-b579e2131b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a6d6c3d-b151-449d-b45c-5fc421d183e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e759cca5-d8fd-4166-9352-633183ed4720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2035390e-5623-4e58-b3c3-70dd44fabe3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3af2b99-cb28-41fa-b81f-01affd58138a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b3fced-64a1-4437-8b0f-3f78dc2fb640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed5a4dab-3286-4789-9d4b-3379dd739bf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82917632-6d62-4f32-8215-e8570302e0b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "769826ff-0510-4763-957b-9292140c56cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54fe5578-a8ff-401b-b16c-722a9a24a8ea",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c268fb2c-8660-4351-9ce3-d8ada7fcf7d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "648f79da-6664-4a1b-ad9d-bfb38654466f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6722465b-57be-4430-a34b-93b882104027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "82928e45-a280-4bae-ae10-54716b79fdf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3376b12-a812-4d6e-93ae-2577e95ab4e6",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b3baea-1f64-4062-9d55-735fff0e0045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7358cca3-7ef3-43ae-8076-7554d03132d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ef59bd-362e-4564-9b36-7f3a58fa3470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5fd3ff3-12b7-4c66-b8b9-0d6a9af01872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "363101ae-4599-4773-8e61-cd3905208f34",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dae0cb8-2452-4555-a830-0c24ad3e8873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a3acaf6-a246-4476-995d-ea4fe9125fe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d7ef39-567d-4c76-b4ad-ad34cef7513f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f06a6be-37f8-4656-821f-48d96f0958c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0137657f-51c1-4787-821a-615dd37e3786",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3601f862-05cc-43c2-b934-c85f4c49a1e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b6dadc97-28e3-4ee8-a564-c23fa2b9c8be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "105450c2-ba0f-45d9-a5d2-80479d5adb93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a195b03-ace0-4c88-b81a-d48788b68760"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7d32b305-0ff9-42c4-9011-38b04ed5c7bc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9b96b283-2c55-4233-b806-549b7c67c83a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "351c89ba-66d3-43f2-a4de-3ef36332af01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb2112c2-e8f3-40d0-a548-6db9ec7ab181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f0a150-df55-4e9b-999c-4ef83e4747b9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "9f51b6ec-2637-432c-be78-347fb5b69354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eead7911-3655-43fb-8f69-e54a5c870fe1",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10baf854-e521-4c92-ada0-f1e62f6ab1a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3e87f9a8-a801-4a7e-97e2-f26010228481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3826bf17-49c2-49bf-b171-a2f40e7a26af",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "99105222-8769-4bf7-ae55-c6f6dc35ec9c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a6ae9b4-f8b8-4fe7-bef9-25b69d3ec0c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "851ae788-a23d-4ab5-9120-61cba1a99b7c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "97d85988-1564-4795-bf7a-e1df534a7d7f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b814be0e-0e78-4afd-a0d3-e35d53e5160e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7e48c74e-2a6e-4ce4-9013-928e0684f3fb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cd1dc892-47ef-49c3-bbc1-53044d8b46d7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2f872069-743d-4a26-974f-1e6e82aad78d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "62d7fe46-ff61-463f-8bd8-6e7d3aa410f4"
                }
              }
            ]
          },
          {
            "id": "74d6d5e7-2729-4d31-a591-0cc9bc625634",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5c66dc20-04bb-4cf1-b748-966ef5ea0ce6",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "417dd7e1-c537-4b00-80c4-4439d3e2f0f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json();",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json();",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json();",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "915bc367-75f3-4f11-a97a-1f8f7aadaa1e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c3138b3e-89c7-437f-a3b0-bdfa5e6d727f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4c33c198-6422-4440-80c0-1a889d1fef23"
                    }
                  }
                ]
              },
              {
                "id": "1294b580-5aea-4e5d-94fd-9cb95230574c",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "58737ecb-58ae-4533-beb7-5ba2be59e896",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e1947070-61d4-4099-b6e5-5142e0b9af2e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "10ee19be-c6f8-42d2-9381-20bd35782ad7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b37ca7b4-9e6a-4c3f-8d6f-9ab0c8c003ac"
                    }
                  }
                ]
              },
              {
                "id": "8fe92bd6-7afa-4803-bfd2-2bb3789013d2",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c1f9fe06-bfe5-4690-ad30-7fdcf2417b88",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json();",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e92b89f2-10e5-43b8-a235-05b7b458c330"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e6cb0a2-8110-4d4f-bc48-ce8705d0303e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ad4412c5-1404-4d7f-80ce-9bb5af589231"
                    }
                  }
                ]
              },
              {
                "id": "5ad4b1d0-ada8-4a84-a9f5-ef5c9c9f01d8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c61fec9-208e-4ee4-b3e0-d25a907f67d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3b265451-99d1-42fa-85e0-e665e8129d2a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7521000b-b0ed-4137-be54-dde1bf73c81e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "e8ec698d-3322-470d-9a85-be2a75e66e24"
                    }
                  }
                ]
              },
              {
                "id": "623e28fe-0b02-4345-b822-a2f52a927842",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "380ccba3-a9aa-46fe-8eca-729c482907e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "034c4a4e-6d0f-4f69-b3c0-e9d792fc45eb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a75a96f-9dbe-4758-bb54-257f56790b17",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c724b825-6d57-4319-8ac2-d1f787d670b3"
                    }
                  }
                ]
              },
              {
                "id": "4021d5da-f66b-46c9-8517-2d3aa8fee054",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eb14eb85-5173-4af7-91ad-9cbacf954ad8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "57a72e9d-b87b-44c5-83b3-f1ddf2f82297"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1646af9b-2ca6-463d-97f0-ff1ea524e0af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "516d7d40-cdb8-4ca1-a890-372f6936c0aa"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "052c408a-dd88-4755-a193-9b8b0a6b70e9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "10ac720e-8c83-4818-9c9a-e3c9f0bc2668"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3e8277f5-9a71-47ad-9174-14b1f8e053f2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5ce2d3e1-2d1f-4ba1-a5af-d4d816ed3f8a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4e4fe16c-2efb-4af2-a909-0f6821a9d70b",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "9d58888c-da92-42c9-8b40-2be5af76a4a1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "43d289da-273f-4fa1-84b0-b8352cf6d2e1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "827baa28-8762-4cb8-ac84-ab4836daec7e"
            }
          }
        ]
      },
      {
        "id": "2348c77c-cfe7-4466-adde-72257176e36e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "caec6ae0-e334-415f-b2fd-6c5a2286fa19",
            "name": "Negative Testing",
            "item": [
              {
                "id": "58bf3226-fc25-4d9f-82c3-952f951e6a5c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cdc235ff-3e29-4636-ab47-b6b96ff4d6ea",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c806e536-7c25-419e-8b4a-95ac54bc4cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6da1dd19-1c8d-4409-857a-fc79ba0e0fd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed928f01-058b-41da-a0a0-1146ede8e1f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a007cb1-e6f4-450b-9efa-8d994f3b3814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e4f09d8-b404-4ebe-92b9-5dc3c1c76df6",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3557e1c-2f7c-423e-a689-3a026401a41c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e04a019e-ded6-4653-ba5d-4c315eebf3f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d907ce9-c981-450d-83e9-127b39b8a645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6aeca7fd-4b2d-46f0-b33f-2fe2d5f2b287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5360f7e1-d780-48e5-a9e5-cd74a4369a36",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15304834-335a-4767-995d-bf38eed0e87a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d739f29-33ee-425c-ad63-8ce67a1edb72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c747ce-1ccf-44a8-96c5-a1276d51c5b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f2a71c7-5be0-4b33-baba-12d9dfe6cc72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "883efd6c-4029-41f2-9e23-5e31cc62efb1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e27681d-8019-4715-960b-07b072d2ff02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4e6bb36-919c-4825-9b17-1e816586cdbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da929a3c-fef6-4f6f-9f66-a9d1e11b36f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f56c8fd-e157-43eb-b163-578162e678e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0521abac-e22f-4f3a-a738-473fbbe5dce5",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce62de7-d08a-4ef6-86ec-6e3791d21125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "526a4b8a-a1e1-4cb5-a05a-97ccb6b16f71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc21f2ce-d74a-43d5-ab71-e5f7fca8e918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "07bce102-154a-4308-a6c7-dbe2bf7ac110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a2948a1-e51e-4c17-8d79-2288ed0f2507",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a5be79-64d2-46b0-bf39-af26e441bf1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d73da27e-dfb1-46fb-ba7b-dd21f34fbbef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e0674d-2d1b-4921-8128-8c32c30f2ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f0a9cb5-b993-431e-833e-b16be819d8d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dd3e9e5-a755-42de-a06a-94fa7e81dfa6",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a452d88-7382-4c29-aab8-af1ea5b1ea32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "245b576f-b22c-43ab-ae18-8d03fb6727de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab0e47e-8570-446a-9531-a85c501ffb06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5cdaaf4-a997-49e5-8ade-fb66e8d94c00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d24369a4-3f54-43c3-91f8-ceefc8ed979c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77cc244e-43f9-469d-9cc0-dcb816c1779a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b617a3f-10c6-4031-919f-d558329d8656"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1704c359-3a99-481d-9f21-9a66f75176ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8777fc5f-6792-451b-b2bf-4a817c0b9bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6ae5d3c-c621-4602-8976-e5a579fb95f4",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a72925-103d-46c8-9443-b05cbff658cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0d7b46e-d017-4f48-8f1f-4ec8ba48a11a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e99f5320-9cf8-4836-aeee-1b4aa04c264d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "39dc4ba1-573e-4d72-94ce-4a12f2bb05aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1217c4ea-7219-48c0-bee6-504fd7bca2bf",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95fd251f-6242-4e53-9cb2-4f559540e911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc5d5bde-c55d-4cac-8daa-0f01adfc3bc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "735ede32-f530-41e4-8090-b58a2157d892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5346ad0d-2e56-4dff-82d1-7eb6f6f07aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c2d1d6-92a9-4d1e-b083-1e3bdee9b546",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fdd4217-6a26-478a-9ecc-3db5dc034f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80d118ca-aa09-4ff4-804f-a0d5f30c41be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "295b0330-e0b6-4659-858d-b21b78cf39eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a01206a6-8e4b-42a1-bce0-131ed4566224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f920b59-b2c9-4117-b5be-1a8772262acd",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d0ac8b8-21a0-47df-9b01-74bb6505c204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9942c513-fe1d-4eb4-a93b-77c7d8697934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a8dfbc0-8f3e-4d8a-aab9-8dcb77e01f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8cfc931b-bf5c-4c9c-988c-a978b6d724ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b1c06c-16e0-4bfb-878b-4bbb3217b31c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d82a09-2aeb-4ac9-b3e2-b6443be11b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad5d711e-03de-4029-b4f3-dba9a1851e43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f69263-19b4-4386-8969-3a44b46983f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dad44170-9db8-4c1a-a201-720aa9222e19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab77b760-b947-4f72-93fd-cc913ed6dff4",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c7025fa-a2dd-4a8f-955e-9c06fa36684d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d73635aa-50bb-4c5d-9ff5-18f4cc75430c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce08fb87-faa7-45ca-8f43-22928ac384ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "894ea731-8fd4-4deb-998f-e90919c18bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d12380ce-99f5-40c4-b763-a3a561d78578",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b32f7bf-4438-4147-9671-4bdd5d3862a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3474f91e-1826-461c-887f-fa4a56a297f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d71de258-4d2a-48cf-9580-d5cf48a9d8e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce1f852d-2b98-4b83-a543-fa80f183eb6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff2b86d-b650-419a-ad92-e84586ead27a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd49672d-ec4b-46d3-9581-7234d35b7d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b05bede-b212-45c9-ba84-45719d8f8255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fddbc15-fb71-4bb4-8249-32b7e91d6746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4bef721-c6dd-4c34-ba87-324a537a9015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9946f213-6c03-4aea-9557-4d753f6f072b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6727ee9a-6615-4e6a-bf92-778457a2c123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "452839bd-f3c9-4410-8835-b7c68a6de8ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "658372ed-7926-41b9-afe6-a78ae20603c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d58474c-dcc8-476f-b74d-d3bab21bb2da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e28c2dd7-7fa7-4845-a51b-cc557c67b686",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab48dc96-f1b3-4fb1-803e-bb1c6551164e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4e5b243-e8c6-47c7-87b6-c16f9d0881df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4195a0d-4685-42ea-aad9-60b13012a3b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e92ee0e-cb5a-4bc8-9e82-de87727b4c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc6641c0-cc9d-48e8-9b83-820962ee3563",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb53cbf-52c8-449d-84fa-ca677e5dab99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2d4bd74-7063-4eb3-9c4d-bb2a136ce65c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd591b4b-966d-491c-8137-d240bbb04859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6232bc6-0820-4e42-be08-c34243d61854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "396ca708-fcc5-4d5d-bd91-39eea1a169a5",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e8a6171-70b4-4ae5-9750-0f9b9f547d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88b79e63-0ca2-40f2-9d71-66abf9aa72bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b449e908-95a8-4250-8b3e-2676e071a271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60ef91d7-8b36-4157-a791-b2e0168bd490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f6b8a2-dfa4-403f-82b3-bcde60df2002",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee427f3-a5ce-4eb8-8bce-da76c541b3b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "826cd47b-9778-4bc8-bfa4-ae029db076a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5066bd9e-c922-42fe-b5c7-5ba3e1c7fdea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f7c0a41-1d42-410e-93ab-2bcfc573c0fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c01862-738b-40e9-a2f7-e2d19cd396c9",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d50e0e82-3478-40b8-a84e-8b51306f6564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04223330-cb7c-4d90-81b3-2501db975025"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f4ffb2-1d13-4e01-a6ca-34464044536c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17b9235c-c468-438e-9111-7669006ad76f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f79a0cd5-8caf-4243-956a-542371544431",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a8e2e3f-0294-41ff-a410-4d4c1ea171c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82e3ecf8-5e2d-4882-95b3-86a7abde8903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48029897-ee44-4566-8280-724a92e112a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46f93489-75bd-4a18-8513-50966829582a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f16cecb5-cdf3-40dc-87a6-cf6f4bcc33dd",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45dfc429-23dc-4c99-9c74-1ae28ef7f809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08eae540-3f5f-452a-ba1b-082d7fa3be10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8706e5c0-75ed-4281-96bd-09405dc885d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5a5c54b-3209-4943-b3c4-bd7b8360bf21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f309d1a3-2aa1-4295-8cc5-9aadac28839e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de4a5074-f9d9-4a85-8fa9-40a61a2999dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4cc7038-44ea-4bb3-a2c6-325cb66fcc74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d26b162-d8dd-406e-8b22-073543ba8169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf0d04c4-4cd5-4ba2-9b2f-c14cd42609f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbca6bb6-585f-4f6d-8ae7-fd39498352de",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb79cbf-aad2-4ac4-9625-4ec9b2297905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec1b3098-5e96-46e1-b919-6142514dda7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50df16d6-9194-451b-8aae-9edfcbeb3785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6a0fa0c-0f5f-48fa-bcd2-692ba4835f0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f87bc20b-b48b-4805-b05c-ff039a6cd2ea",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02de17b1-bcd5-4ae5-897e-93c8a91813a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "443ee35a-7e2c-4610-923f-e21461132bdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcb84484-0392-4d4e-ab14-343db4e2c12e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04858fa4-aa6c-4cdd-ab15-afb0fbd94194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "578736c9-3c9e-451d-835f-7626e4f82a57",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ddafa1d-e5cc-43ed-bd61-dc46e7647489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49ba4611-bdc6-4187-b697-2ff7a4cf5d5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2214746d-388c-48f1-b54e-763151ab2919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e18540a6-aa7a-4a9b-845c-01d936c532f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a69ec400-107a-41f9-9033-9b95028d8493",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc3ce2aa-4222-418f-bdb1-b67590535559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e725c421-d34f-479d-abb7-cda8b45127dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d74b4e-d651-4d6c-af03-11cde68a7db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3dbf40e-da56-47ea-ada6-77b89a198180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e00522-199f-403c-a827-15bb74dbedd4",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8b0e92c-a965-4b4e-a786-e9b864f29100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd353b66-aa16-4a3a-b3fa-5c3a9e99376e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b61ceef-70ba-48b4-9e88-12c829d4158e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0be61d01-fe0e-4976-8e97-8389ccbb5776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f8caadc-4bd6-45d0-aad3-0e4832e9d79f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b8e901b-9ef2-4040-89bc-270d6de45c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7366e5a0-8e5a-471c-95f8-0b6571ada0ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd8a851-8b34-44cd-ac83-175e60c71641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4c8ba22-8583-4ef7-9d64-c45e4d3eff0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "325f6e33-ebc0-4476-994e-e58f6de61e91",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e3751dc-8062-4cb4-ac27-5e63007479c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edef4658-8600-456d-ad24-e0ba3b9fa746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a44c0d28-5880-4a83-b378-f1b58e2026bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b34e635-b54d-4b0b-aa24-6fa6b716a703"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b8ed19e2-051e-4c46-acc0-3a91830b6cd1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d5916816-cc6b-4da8-b69f-5ceb1fe999ec",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1606bfb8-0e88-4851-a64b-b0031872e402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "844e07ce-54cf-4a3b-9b7b-28f121e2aea1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a42a4bd5-8f11-4a6d-a07b-00d16dfd9274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cd2f3c28-aef1-4841-ac33-473c51bc659d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a5ee98f-b5ef-43d6-ada0-a562e392494d",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16690144-9f92-4617-abf7-ceb63ee061c3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "930c4127-9f03-42a1-a4d8-3d0b2e526cd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "263432e5-96d7-4a3d-8818-044960112ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0c49497a-3f53-448c-9d1e-42989c103ef3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c6e1fbec-1d80-4c4e-9bd7-b4ff582c85e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "030f27ee-13eb-4815-aec4-c6f2890691e8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "31c864a8-91d4-4b98-aac5-580f0e9519cc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0577cdcf-692e-40d9-851c-6ab7a156c5d2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5b0c8ac4-20e5-42fd-ab24-decc8b66911e",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b31f5c76-c12e-4c8d-8feb-24a634512cdd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d03643eb-63ea-4d0f-b8c9-9ce638926f8a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6ade5b9d-eaed-4b8a-ad9e-b9a292682ae1"
            }
          }
        ]
      },
      {
        "id": "db34f52e-f863-4dc4-99e9-490e18c97834",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d3cef9ee-be53-4250-a974-ca4a5db49cee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "67a8e5af-0147-47d6-bc6d-06f25a6984eb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e4d50efc-d7ca-4762-8377-a8f7deeed05d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25f4c17-4eb9-48c1-9d39-8585085aa7ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38667f2f-c401-44cd-83b1-ffbe399f3d20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93b83cae-c255-4c70-8b92-e1051ea9bd62",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e41961-ef55-4057-9e95-0c9574c4445c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "135ab5b6-7517-48b9-809a-7892636af777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af82e624-dc86-4405-ada0-bb50440fa62a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec2a84a-6bef-427a-a2f6-e23698299461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "627dcd47-af66-4ceb-8343-1652fe8f2d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3510391-2d00-4236-9b2d-4419df7dfb9a",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f57fcf9-4ab0-4e6d-8dd8-e4f5885afd9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddbc895d-7efd-4d96-8ec2-5c173e4bb470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db3f84b3-fe7a-4e38-a983-a3022264fae2",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa376d5-5c0c-4b0b-bf28-4f47a2403291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0cc09f4-0c16-402b-a9ee-87f97814f1d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc32db4e-873e-4057-890d-e6412ea1cc64",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e36207da-8696-4469-a755-e18455e92d74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "880637ed-60bf-40d8-875c-28d7a3a2d39c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "824bcddc-c166-4ace-8b1c-3008fda01599",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ceb573-071b-4051-98f7-17cf601a4555",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b36b7573-1995-4e57-b6c4-7d03b967dfea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "006b13c6-0706-4a89-baca-03ee4cdcc70f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b38b796-c470-4692-9bf2-df1af9c5b6f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1308c298-55ca-40cc-848f-6f63c902405b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d656441d-1f7c-4c7a-beee-ec6f61205995",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "984ceb0f-d757-466c-8c2a-292ac5505bf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d6cbb86-146f-4381-b51f-aa259013cdf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4d55ae1-b452-4900-beca-68ee01692f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f50849-e81d-47a3-88fe-0c09a4c8c0fb",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68769cd3-646b-4f09-952d-344b57dffa02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "641ce58c-b026-462c-b2cd-6dba132e15f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be6af679-7926-44b5-af1f-c394c431509b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c4d855f-e663-42e9-9f87-fa611ce43535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4305be7a-aacb-43ac-9ed7-c831632f09dc",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "079a188b-59ef-484e-bb6d-712176261925",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e69a082-ac86-48a9-be28-b1d77e9ec05c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ed240d-e2fe-4dcc-b2d9-5ea7fad5095f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab9d1e96-1f1a-433c-95a7-75cf63cc5198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ade23c-0d7c-41ea-b08a-445d9c01e05f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "176ab102-dc22-44f0-b637-db1cc93eee06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bca3ee31-408c-4f7b-9da0-9bd41357430f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39321852-a206-4e00-8ec0-2326c17b00bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "447b1164-d963-4ca2-ba6a-4decfe55288b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f16621-30f0-49c3-9559-7b9a95e6d4d9",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d18b37-bd9e-4453-800c-33456afe1497",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e425040-7e11-42da-a675-0699b586e9c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e25dbbcb-248e-4384-aba8-4f502edcd374",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "583e76f7-d497-474b-9cca-0d0635e88363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78094990-c70b-4d61-b8f2-768d81a6c072",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a1d5ba4-8d1e-4826-849a-a5e30233adb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00d70a5a-4fc3-4395-a006-043701a97263"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "749aa450-c23b-40d9-8c25-f934059e09e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9821498f-bb59-4fdf-8d30-820703576f0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6b00f8b-b102-4f8b-a079-28e01db46cd0",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccf38122-4632-4b88-97d3-370e6f4275d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbab7436-11f0-4a8d-9ac4-edcb74cced39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "931f72d6-5e6b-404a-b888-3b2735c4f43e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef0b1a98-02df-4aae-b7e1-57a223e035be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f7057f-5e6d-46f8-95e5-02cee631ff63",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f43e930-33ca-4141-9970-605a1c499b39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca0ab206-832d-4539-ae08-a72dd2c4899b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68c325e8-c6ba-442a-8c94-21b299587a39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ae35bfd-de25-43f6-a11d-24d3bd957f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceae96d7-6cc9-4669-ac0d-a354cd64e9b5",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1440a976-ad1d-4270-96ea-6e853caa5eca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a83cce8f-2674-44a2-947d-3e9097952fa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bc0a464-e2d6-4be1-9521-db57c7e32310",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "090a1aef-d469-4261-8e2d-9f3e3a17650f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c060296f-e534-455c-965f-ebb598fb3c22",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7073ca6-0ea8-4810-a747-6709a859c195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b23590e4-0fa4-4be8-8f83-9d021a5ae673"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae90cbd-5331-4340-8f9d-c9521382c805",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5fe1905-f6d5-4a1d-9066-c107de1da58a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da809d7c-346d-4321-9d50-f50ab6eca494",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5eb92c5-331c-4f3d-a76b-1987de81fcbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37e1dfe9-ed70-4b83-830f-ed0be1add66b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e538acde-41b5-4b42-9248-2be8521bb269",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca63ca35-5189-47ae-afc6-6f34109f9ada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccfcfa72-7bed-4784-839a-c5b395a458dc",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9097a16-808f-45e2-9614-2462790d4127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31762c30-2672-4073-87e5-17fd4f805ce4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "359c72dd-a75b-4a79-bd70-0416b1639a25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2453b479-2b40-4a5d-a861-ce347f078b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b695f456-0781-43b6-a50e-50c5bcaad9e2",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "301f4fe1-b6f9-4ddb-a2ef-b7115b6b2e84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb19a3ac-1d48-4fe1-aaf5-9a2b1b3dee4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2bf85dc-430b-465c-a19b-6e18780d74ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "453ff208-1ec7-4785-ac1d-1a3fa5b71b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c1c8fd8-b04f-4e27-a9fd-a13be06cbd7d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb9b331-2b1b-4de0-9908-d13b97720a9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3e4968b-8f60-4b41-b753-462dd62b0b53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be4aad8-3f6a-4043-a770-9cd7f82975a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dd02a95-d04a-406e-a9ef-2374a198a9d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d49dd4-f362-40f7-bfc3-694a388ccb0c",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e729709-abf8-493b-9e9a-6300f3f240dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaaa5e9f-b4c3-4c34-9014-4de35fd88214"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02fc00ca-6508-47e0-968b-7576dd191a43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad27110e-d690-4366-960f-a85ec659fff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb7b1928-1172-41b0-88db-c58cfff25f02",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f864bd-87c3-4b71-8a30-bd8d563a3123",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8263274-dc37-4bc5-96b5-0a038e2852bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eebb285a-0d15-4740-b9d6-dfa50e1d71a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88e9d6d4-2a22-47e7-b1f4-d7be153aeea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e2a4ae-88b7-4d1d-9387-90d6dc499680",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c3c881d-446b-485b-bed7-45288dc0c7fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5664aec-d4eb-491d-846a-cf889fe73166"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f44e00f-3918-471a-bef2-4df55be5cd9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65cfe65b-de96-4dd1-8793-a606021d04e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24f14df6-fe51-4c65-8ef9-69195b132204",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "898a4fd9-8fb9-47bd-8583-8528d1c556cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc8101d1-abdb-43f4-8d96-a7a760d1ebb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "842fb41b-44d9-4152-9de3-0ec84e747867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0ff49af-451b-45fa-a00a-79d7e097007e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1afead0b-9559-46d2-ac76-093986c95ecb",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab5f665e-7b09-403e-b692-f3ee1510daf1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08176dce-9354-4601-a558-2a7668651601"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "273cb848-fa07-45c7-866c-4fdd208cc5cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a18f8f88-b4a2-4959-8082-a4447f777408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d06b94-4952-46ca-bd9d-7b24b1cd29ac",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07cbe6a5-70e3-4d2f-91b6-fbe0f3863d63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56f92b26-6a32-417d-933f-e1b9b2b64c61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "774157ae-0258-4505-9fb2-5842b78c8b0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66b69946-9d48-412b-bd21-80ff5846e925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e1df47e-4695-46f3-a1e1-9f20a8318713",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd0cbb0e-5443-4859-aee9-05a30b75533c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e44bbc67-d89a-4510-b7dd-24e534d13639"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c56c361-c045-4256-b0e0-1cdb9014c95a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d131baee-f92e-4751-8d10-9d134397d20f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4053f7b7-e1a0-4519-85a0-0b5cad6271be",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81cce14c-07e9-4d02-a78a-82927f17ff97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7268f3cb-37d4-4218-b21d-6ad808be4dec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aada7ff-448d-47da-add8-3de6d6a7aa2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21061091-c825-4608-9164-ae8a95bf3627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2340e958-77c0-4ef6-98ec-0a4fcc21ad92",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "037952c3-5683-4608-9130-3fa5c3b54e4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5aaf779-b44e-4371-8e0d-d788a9516604"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc4d04e0-af59-4add-a652-01fe23449974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "558607bc-6325-40f3-adbd-39674daff86b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d95e7a8f-964d-428d-ba04-de206308fec8",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfaebaba-c232-4a62-9c91-649e2bed7c51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f67019ae-c126-46b9-a876-ccb42a052249"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b475e5-bf91-4ea6-8a8a-7d85f8c24495",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eac6d044-6723-4db3-84cd-545c26c7cedb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6420ebd-ba4e-449d-b7d0-2b39f6032be8",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6b0c038-306f-4cd0-8c84-8d4941baa15d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33d72aec-e0fc-4d04-a2ed-a956ca17121a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e98796e-7530-4b60-ba1b-08c4dd229b3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4ae21ed-0f6c-404e-8a4a-dfbb96b044c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfeea86e-9071-495e-bef2-4f27694745ea",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c151fc9-b5e2-4b52-8403-998b39b9bd4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0ceaf68-4d0d-4c35-818f-030915f2841f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4e27c6d-33d9-434c-8d30-10b934eff203",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2da382c3-9162-4aef-849e-59ef1e7593c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62721e39-a1e0-4573-91da-c90358e1447f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28401b3e-3f96-4b69-8b47-e3fde93d0e66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b9f0faf-81c3-4310-a8e7-95dfc0bb737b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd0ea16-4201-4275-a3e4-c200d3a0de36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cddf987-0b2e-40cc-8d68-83fba9599415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ee889d8-c697-470c-a932-bac1acbe0996",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a58296-6e39-4edd-90b6-f1d058f4a299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb786aae-8898-437e-9f9b-91b9149d8f0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1612a0de-d70a-4c55-b67a-0cdbdafab0c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44029689-64db-4bc0-828b-aad21a9a21b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a906809c-7df4-4c0d-97a9-9e647f5dcf38",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2614833-cf73-4533-99ce-1edc48fa5497",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59feff93-0267-465e-9b5d-c104b0b71b05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bbd43cd-b0d3-44af-9868-04bd58ed4d25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d6900de-455e-4ba2-a875-d68d1bb13d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3df4287-f881-4a98-8894-cf6d0f9d9b20",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde717fb-799d-42b3-bdd4-d9a9a7f11947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b2894e8-cf6b-464d-83b7-6ede12edd102"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc22fdc4-04ba-4cde-a3c4-1f0b1b97b9b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d0b4810-1491-44b3-9d86-a8b8d792711e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdbe7508-8bf4-476a-bf12-9523b0390d29",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e39fb0-88eb-4d45-be7b-fe121628962f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9752c2cb-cd07-43f3-980d-5feb4d01573a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f30c153-11f1-43e6-912f-09b9e03d6415",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b9d1381-1c30-44b1-987e-3c1a09db276d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a941b1-56c1-46b2-af9f-4a92d09f227e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da081f4-13f7-4dc5-a763-4e941230ad13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99076ffa-0214-45eb-898b-f1aa4ac55d48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c847f003-b60f-40c1-8a10-e19d8b60f05e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f0ecf9a-d170-4c89-a993-c3caf4f7a86a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81089c34-ac85-4df8-a3bd-90f4a9b8eb45",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c399b9-adc6-4abc-bdee-7ff228ba79b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58e7abdc-2333-41e1-9581-31ee266fab32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b8aa840-6931-4fad-8700-ac3595a75308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fbb57d7-07e5-4f44-b336-954ae515da33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc6d05d-06bf-4f49-8833-87e235fff242",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59445b60-0d96-4b06-88aa-356678005309",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19e9cf20-c7da-4a77-9a9e-8420345cd596"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ad84db-ae60-4107-8daa-9e6f4af9f690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5567ffa0-4d11-4931-a893-92acb16884ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6617fc9e-09e3-442f-8c3d-f00f74af454f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c78616-91e3-4a9b-b421-c59ea7172eb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d75f5394-03b1-47d9-84de-e25c5b8863e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86fb0c61-4f61-414e-b6af-30851d4bead8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53e068f1-e8cf-4851-99bc-9a73d6244458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ed1e135-3a31-4dd4-b980-11856acfecc4",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e893ff-ad22-4bf6-9ae7-de22d1625949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12731037-e3ba-425e-bef8-39512a474d92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddcae3d2-3048-4e7b-b024-ac48fc6b6a3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4526678-3fbb-413b-858e-794b6bc3e42d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa50e91e-cf2b-4bf7-9c30-7b5d38c5c54b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d9b50f5-d4eb-4607-abba-ac52f4e31c21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06625568-b8ce-464f-a936-0e961e74ac0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a5c06e4-8ddf-455b-9ec5-a76b75b97864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eb298d4-06e7-43f5-bed6-1e52d3beec09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aba46590-3f55-4414-991d-abb1a64b3a40",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b5a5f1-9374-4fae-8ce3-391b4ba24d0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb777f57-3f45-4198-8e01-b96a36aceba9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b5cf795-dd5e-43f6-8829-c48488181456",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c88c071-4abc-488a-8b08-5ffced8501cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33160b5-12fd-49a6-b314-fc3b1ed71526",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a71f9b-c064-48d1-8de0-f10e63c93245",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c600ee4-1eed-44b3-998c-f7f8ba49af8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ca20b1-e2d1-4e2f-86b4-b081156f8245",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b13162c-1ef6-4042-9f62-bfd0a2e3f2fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e12ab2a-9ba4-44d6-92de-e632267860b2",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77804d31-e575-4bd0-ad7a-4a303b6f092a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "469a0194-dfef-42bb-866b-c34c2d1fe0a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e6a83b3-8724-4ef1-979e-5b8427afa856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2955bb5c-e919-40d0-88a9-40d5faae2209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a64e142-96af-42f2-95aa-0e789021105d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46126730-e460-44e4-9ccb-b6d72f8b334f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5db0073-74b9-48c1-993b-2895de52c502"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e4f226a-9ae6-4859-afac-0a2350237270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63eb7151-16d9-4370-9bf9-ea3c3b8c1376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b0feca-0f2f-4d1f-8d50-f000038ae1a5",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26619592-94f1-4949-9c58-df4403646e5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8afbfca0-3554-4c21-96fd-5f93993737c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f02cdf4-06c8-47b5-8eea-18dc402ed5d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77459647-1755-4fb3-b6a6-4b48deb9252a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "440f9eec-9d19-4e0f-9835-244cc9f8c3e9",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7388dce-4d60-4adc-8cd6-05443d246f75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf473166-3a60-4bb9-8b99-bdff5096cc76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8831d25-b174-459b-98d0-9f07f49d299b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e728af8-a215-4d5f-951f-3f19b1134f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2cf9ee2-6327-4619-8788-a2d693be9326",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2828412-40ca-4313-b03b-1547f047432c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db0d68e0-9353-46ea-9d39-8987e3aed28a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48f1d0ab-f229-4971-8bba-24fa9d1f601b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76d5a824-ddf0-4313-a1cd-77233d2b3523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "395b798c-4b39-4855-afb2-40a1849169b1",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c71fda-d4a5-4365-a665-222415d53a56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07acca2a-9b0e-4da7-abfc-09800f03134c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f217837-face-46ed-8c74-42bb2b1eed81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dcd3798-0fb4-4aa4-9d9c-90090c443a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bc7024c-8b2b-4bba-a702-63df64c5d047",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe0fdab-f155-429c-b95b-03a1976406c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02dab613-12c9-4457-a262-2c5e9ad722fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d790c5-a0e5-4f66-a420-b2e580095c7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25deb019-ecbf-422c-bc62-180fcb658dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0712c2c3-83fd-4aad-bb90-f2d76ff7f6bf",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd1a5a5-6db1-4a4f-9951-e33893285920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b50ce0db-cc54-43e3-b408-8bedbfcbf036"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c53e00d-8a7b-4b9a-9acf-40bf42555bd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af3fe6ac-aebd-450f-999d-1914e004af8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56387dfa-e48a-42e3-89af-2a83eb45cfdc",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a95e33e-579e-466c-80c0-ef77048a4d60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a57b021-fd5b-4e1d-aa46-d0c2799e19e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "add1df11-34c0-4654-bce5-51f08a34cae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "565dea13-f425-4ca8-86a2-8f5d4c30b2cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f683e05a-1d35-491e-b8df-fc6ac80751e1",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ebd240-d4f8-4fdf-9916-ecec8be079f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1870fca-ceb4-40f1-94fc-c4ff6d15e286"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d915c338-011f-4cf0-b7a1-6cd7f0d9b654",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d199049f-358c-4c18-865d-eb365d85dabf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67789697-7ea9-437e-81f9-cca780c41340",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d45e449-4079-4845-8783-8a0549570012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42910813-c553-45d5-a9b6-50d453fb255e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "823c9041-f97f-4d04-8437-dd741337c414",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1d40b19-e7c0-4148-89f3-e2eddfcb4b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da2ad217-d619-40f0-807b-59bb18d70d73",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5636876f-3679-435d-8ba7-1fa2d418980c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd94d02e-40b5-4381-990b-d32b489737c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c61bc20c-5993-4595-9f4d-8e76478e78ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1156a708-3de4-431b-a565-91f91ee030f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de9727f-911a-43f6-9157-0c0e0b5ba6a5",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb1f0aa0-a8d6-4618-b6f3-e9a6b6678dbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bb5b3e7-9e3d-4db0-95ca-deb259e2c0d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f8e6f44-8ca2-4cf0-ad26-af4a59a10453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0045e11b-8d20-42a4-9784-55774d076e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ebaba66-645a-44bb-9f6f-a1a3fe9d218c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe0e7c7-e671-4ea1-acd5-d26518800d34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9b7cd37-3028-4c57-8d26-8d6d08233204"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd8ee3b-0aab-4819-89c3-ff8c6640397e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c31d76c6-1d32-40ed-b8a9-6547e1ee8b01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b6ef05b-cef9-43ce-a7bb-e9d192d4cde5",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a951ad15-22af-4142-bb9e-316de401f130",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8c59dcf-469d-43ea-a432-4eae37ef6955"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "168b2ba8-59cf-42e6-8027-568312c02596",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72d72559-e0d6-4e37-aa2f-9a0c90c50bdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f05be48-b517-4c7b-a121-f67c91e409f0",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61cf531f-9f71-4a8c-b29a-99928077981d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5d1dd7e-1c7b-40ef-b25e-efe4ae6465c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f78f6d67-c71c-46e6-a80d-fce7018342d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb4a148a-9ff3-4c45-9278-dcc42f9ea89d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af6d717-954c-43f8-93a3-4f846a2c6b95",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb89e9b-8cc3-418f-808d-aa19642a6df9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47da79d8-0292-4763-86c0-3b954c621f15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba4d9328-2471-4571-997c-03037895fd23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dec4c1d4-c4e2-4f0e-bcc9-3e2b2a02ddb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b73ccb-d33e-499f-8307-a44e69985298",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba4b85f2-41a3-4eeb-a6e8-6176d4dfc4b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a2cdb86-b01b-4a5c-9d1e-8a460d9897cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf02f0c-6812-4c1b-b8ca-a074b975be50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec625bad-1ab9-4267-8082-18104d82caed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d20a8d-ded7-4f47-8831-8f791623a6a1",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2888ff7f-a009-482c-b07b-e0ff62053d29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "961dfd2e-a9d7-4cb0-a149-31f5d1e7acf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "579e1595-3d98-45f0-9fef-d5a62b7cb2d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f13b7c15-32f5-4f2f-884a-b70f6ac9604d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d9749e7-daa7-42c7-815b-d17680698b3e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c026a94-e564-4f62-8a28-73a5052dd97e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f006e1de-e578-4922-b197-c16741c1170f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e368eadc-7b72-46bd-b1d0-0b25295edb89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a6d0ec7-2f7d-45dc-ba8c-7f157e9e2c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f3737c-f807-4475-9fce-749eff415d42",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41b11a53-e8e3-4da2-9ba3-17e0b7767e10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69f8bb38-be64-43e4-9b1b-d1dd53f402cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62aab3e0-aa39-4b9f-9857-4c7ec64ef740",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e76be6d-5c79-42e9-b0d7-cd959b79e7ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c4b320a-8a69-4707-9f18-7ab5e468e891",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b15ca351-b1e5-4d0a-89cc-2544b7c51d52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f45250b5-0cd2-453c-b09d-fa2e0bb76d70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c84d9d27-d3fe-44d1-9451-9a0955b65724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "538b6920-75e4-42ae-bbeb-00351991af2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "370d8014-2523-4b04-8062-84b0a7a43a31",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f37e49-4086-4fbf-8983-2fcc2df4d300",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01d2fd30-107f-4bb4-a07c-a35a4cc6d97d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59320fcf-4f1e-40f8-8e3a-e3e5344ad637",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7036dbd2-28c2-48f7-ab69-6094c1db29ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc36178d-908b-466a-9c91-226096144fd1",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "472bcf87-7d6a-4a81-9127-d9195b4fd525",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a099522-394a-46d1-8720-93630ced9214"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "744f16dd-afb7-468b-94de-9554fc9ce18c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89125645-b11d-4669-9bff-8840730e9392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b9b921-8f5f-4daf-a103-ddb4221e45a2",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d0372a7-98ed-4faa-b8e7-b08aff54a55a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1c8f039-ae37-4ac3-9b37-ead247f4af7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ea45b50-809e-4076-9717-1fd6a7aae5f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06f04cec-68d8-4ba7-8d4e-9a51c78ad4d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebaf82ca-1614-4ee9-9072-6e23b57c243a",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "128f3ce9-115f-42f9-890c-7066669992b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c47456b3-c372-4c12-b7e0-963bca7150f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d85b7d3b-0eb0-467a-af8f-d3bdc165620e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24e132aa-32d9-49be-b23e-f3a442b0edb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c78b9151-9c61-45e2-a87b-59cfdad59836",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "835b9efe-ebc0-423d-a36f-e505c2ad546c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cc8f4c1-f779-4803-8352-a68721938549"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4828db90-6ed3-45cf-8f53-0a7b0f51502f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60198ba7-e96b-4413-8f0c-d5854081b62c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "502fbcd0-7c9a-4746-b9c1-a3823b679219",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1851de38-2e11-46f0-b0e1-945c65fc0f27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ce77017-e592-44f4-820c-5e977a4ab2ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39db9854-8138-463b-8c9a-a06b978e619d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8f58c5d-c52a-4803-b640-282756345df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "558ea62b-be1d-48fc-913c-be671a71a932",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caadc20c-2c9a-4355-8894-7ef7b8e13953",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b16a3c42-c7c6-4e81-92be-90a184f2fc65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f52d104b-5339-43cd-9e1f-7b7acc9c75f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd239ebf-7b4e-4bd4-9690-668679126f7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb0291a-19c8-459e-a109-fe41f5df5955",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9519ce83-1fa2-4770-ad00-bad2ca44495e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "628d3c72-eaeb-4020-b3fb-88314e38d68d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "500e8f17-a1d7-448d-abec-e7971f9e9715",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bb113a2-365b-40d4-b5f3-047634bef3a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675eec56-39e7-4a6e-a910-8a2a7f7c404d",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "628c3db4-67f9-432b-a7ed-4579e2cc18ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e94188b-457d-4c93-876b-f410ee810c7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "100bb7cc-6b14-460a-82f1-18ea3a8bad55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a4f07ed-68c6-4c2d-bc0a-96189ea5b6f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f11079df-a688-4892-98e1-7588c0b959dd",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f08df4-a39d-4190-886b-5154448db883",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b98ff542-4c74-402f-8477-2f96b096170b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbaeeb53-0b67-4e02-a5fd-f450085bd4f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c47e86b-a20b-43e7-97d8-0fb248cfcaea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e8ea1a1-34fc-43b3-a429-036015db3a8d",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a3e863-bb8a-4ca7-ac26-931ad4d72eb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5dd6935-75fe-48f1-a02e-8bb31d68fd73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f12fca58-22ca-4788-aff5-a30afdc751e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "455f2a9f-2475-4f63-95cb-51fe980d1fed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ba60fff-621f-4675-be94-78a97296b35e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "493030e7-d322-4467-a4c8-cea7238befe7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10f2fabb-c7d7-482e-ab80-44cb98b1b140"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b7e231-ccb9-4d95-9a44-d92ab68097a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7635166-27a2-4364-9b26-c3ae31abcd06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b796c40-ab8a-4d8e-9eda-7d2142127332",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c7bff87-3547-4298-b1da-d2f830bd2b99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e416466-8efc-42c0-bc35-e9f6f50a9e3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "602b2665-f9a5-46e5-8b01-a346c6c13982",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48e334f3-2d6b-486e-846a-e7bd44870538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9553972-177a-4873-ad09-5b70ed895612",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7dbd5a1-ebc8-4104-97e8-ef1949498e81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8b1d944-80c1-4eb1-8207-35a4da8fea12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "905f77cc-a210-4ab0-9ce1-7a96a41f09f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00d31ba9-8f88-4bbd-9b90-69495d2a17cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "480f4575-747f-4914-9f05-9745ce195a46",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfca1509-2a18-43da-a52b-dfb72f0845aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cef4f58a-ca19-4bd7-a700-bb7d989235be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8112d8a9-9cb0-44f1-ab80-c62d0b61a6bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9802977d-c280-49ff-8fde-67bd3ff8b0f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "476afd7b-081f-43f1-98dc-fe4ccfe03d0b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23423d66-a836-49be-822c-af1608181d9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e998e327-f2dc-4039-8fb2-e29a7b667b15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c406ae80-4c9e-4644-9a05-dc8139f01988",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "142e1f5f-c56a-4f17-87cf-aba6a22d3d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a674534-e186-454c-89a3-a87be7acc23d",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22eb459c-8453-4339-9d97-6a444a6d8c6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef288d4e-55e9-4ee2-8458-760a2e539b3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e5e74fb-f772-4e29-add2-f304f9cc5ce4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e85f7e1-4d23-4a07-b345-249b589679c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5892e85a-aded-47e3-bce1-6a69659c1569",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b89e91-023f-4e6a-8da5-f4e6b9e58ea8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bac8f8c2-a51c-4a21-9bc1-1656c007ad7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff509574-d8b1-4f09-805b-e1e55342acdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "924cd06f-b2b9-4b46-a4bc-a92c2b50e39e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a28f3c-bc3c-4121-87f1-01e86746ab3e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "521932ad-9264-49c7-8ca2-1760465fc0a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cf5a11d-8fb1-4211-9719-b3b515f52d27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85667cbb-6cd3-4d94-b354-e4659f431306",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1e071ba-62d4-45fc-a782-57c1c654bf62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c6132d5-c1e3-4b15-aeba-b191452f0c46",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02e96f4b-813c-44c5-a82f-b80ed23c785f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6a8a49f-c445-4139-89a4-eeaf89a43b5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56cb1e89-6d23-474e-8413-317516180515",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaaefdb8-a20c-4f44-831a-0390ce852f0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a2fccd-4d23-446b-b412-7161b531a5cc",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84934acc-56ff-40f0-8a29-8eb5e8db16b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aae37f57-c550-4d44-9f5e-808cb4d1e476"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dafb57b-3ee4-44db-a995-a41946147aaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb31ea0e-36f7-4db0-b616-66eb0c294932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5180733c-ca46-45b8-b8ca-540ec16f612f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77193319-9f75-4d31-8aba-391513a41d96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa12e6ae-7ada-4a4c-aec0-993284edd6b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea25c13-ed3b-4213-8e26-d8e13af162b2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "698876e4-0d1d-456c-837b-1e9bc3291ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f136e0c-9f7b-4973-b411-4d64ad8d9a16",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ab8790-891d-4461-afec-27bb0f651adc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a15bff87-8448-401b-8f29-eaa1262d2156"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d05c753-e540-402c-8077-aa5c2866b662",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab137361-dea2-45d7-bbf0-cdf5a88c2b29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec9db46f-ee95-447a-bd5b-3828bf2ebba5",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e28e5340-30b3-4cb7-8c9c-3d2046b665ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68f77cdf-8f02-456a-8ed3-44cb7356cc70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a77175a-881f-48ef-875e-065b24c1e738",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98290a8f-5566-4791-9e22-672290e66b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06360a57-d12b-48a9-b7bd-cf8b08047cb8",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66270d7d-7a34-487a-9ae9-e20a4b345d17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be1d0084-f75a-4589-9ab2-df61f9f58630"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e49af5f-fcc4-4dd9-a2c2-0b23af65ef70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53795bf3-d002-4e86-95ea-ac5c01d22c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3cabc25-3dcc-49e7-8593-2fd212821c43",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2131c36a-d7a6-4e22-a286-ffe237bbe998",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7ba64c6-eb4e-4944-a4d2-3f4f5ed7377b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6affd5fc-e354-436c-94b5-6adf2ffb4b2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf837328-a3d6-490c-af0f-4fae4e35da54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f254c64e-4ef5-4558-b898-4507f35e4398",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a3c6701-89ee-4603-81fc-9b11fc71b642",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7178e00b-c09d-4725-82f9-ee485aa4de48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0dd658f-00bb-4160-8847-8d3bf3f7d46b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30d4c499-295c-496a-9977-8e73ce9f972d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7178d330-c14c-44b1-81cb-802d91785a74",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e4ea866-676d-441f-aed9-896bb2d4d32c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a39fe258-1c80-4cc6-81e6-1a29c0473a66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f91293ab-4464-47ba-a088-eaa535737984",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f890e20-b3d0-4d5f-a5dc-2c7a84b73a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96b324a0-33b6-4500-b110-e72a1487303b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d89967e7-e1f1-45aa-bafb-1a8cb5399640",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e7ceb13-97ff-44d9-a2e5-83366b507c05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4451afc-293a-4c51-88c5-1ec7ae2bedfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24180f05-f65d-4d28-a9ff-95bc5f92c49c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8e795780-e327-428d-b897-d74f6733a9e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb21c82c-5c95-4602-8c14-2d212fef57d2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "adf242aa-962e-41c4-b9f0-e747252f251f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "94fb6466-aadb-455f-886a-e610f6c842d8"
                    }
                  }
                ]
              },
              {
                "id": "c9930199-e150-4adf-a1d1-b78a7c08d644",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "937340d5-3cd0-4532-8c65-c8a30a217b48",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad2aa981-d776-4b0b-a315-8057c88ddff2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d0102751-b5e3-4a69-8ad5-64f4240bb0fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71cbebbd-74c9-4697-aaff-efc0479fbe80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0547bc1d-6b12-480a-89fd-c1ead6eb68c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d51262-2cbf-46be-b252-ac4e6e66a4bf",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ba9ba66-57f9-4782-8546-3e773c8816d5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "5da26c0c-5207-4ca5-a6e7-4f420ddb897d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9395799-278d-4f2e-b106-b4e441953151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9a5af185-f830-4eec-b6c9-4eb5007b3237"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a4347620-ab1f-4b59-8280-60cda095a43a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "41197696-b64c-45c2-9acb-a0f929235bbe"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3380a45a-75f0-40f4-ba9d-3574fb8f1c61",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "02ed7179-7963-4884-b8ac-b5e1bf4c89d2"
                    }
                  }
                ]
              }
            ],
            "event": []
          },
          {
            "id": "e0ab2e5c-7d3c-4ca6-9020-9d8ef25d7fec",
            "name": "Positive Testing",
            "item": [
              {
                "id": "007a6ec6-2a85-4e81-a611-a2b58f90e606",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f14f5bde-632d-46ec-883a-87033a5986bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a45c8a5f-f960-438a-9920-51115b33c85a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a059d5a-760a-4210-954c-c151ec9c6280",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "247911e4-ef46-431b-833a-e9332d70a5e4"
                    }
                  }
                ]
              },
              {
                "id": "099e76d0-312a-4a61-a61a-9b5f498fef2f",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4cdd4661-bfe7-44dd-a4aa-b8106951f5a8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f81c3149-dc90-407e-b45d-0b147535abd9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b6556a3d-3b13-4a55-b2c0-149a946304d2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0643709f-3514-4309-a44d-900bcb32521c"
                    }
                  }
                ]
              },
              {
                "id": "7d56c298-e530-402f-971c-c4e42204d29b",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "381ba7ad-39da-411c-a2bd-65fcb131ad32",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "32a4defe-4480-47b0-bc16-78772e87ffca"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "11e630b6-e5df-42c5-ae03-4567edbbea2e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "82850799-dfb5-430d-87ad-bb6f8ada8206"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c4c2f9fb-f43f-48c7-b792-5a5415010071",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "aeac7aa3-3c11-4592-8ba1-cd90d8e91890"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "74ccbed6-8b8b-4f9a-a4d6-838138561aec",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9c1f803d-2a08-49f4-86fb-35347af8db4c"
            }
          }
        ]
      },
      {
        "id": "4260d5e5-9f88-49b5-9e21-de16c23c6d49",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "50928154-0649-4091-b19d-04455cdcdfe4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "15cdc850-296a-494b-a42f-53374cd77ed5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ebd5420f-3a06-4cc5-addb-5730105e32ec",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a885c7-288c-456a-b4ac-b15d2994a42c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e4e058be-ac68-41ac-b0bd-852c618dc2d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fca56c0-d348-4f41-a6e5-17c335fba92c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4c59bb8a-b5a6-462f-be7d-a685202f5122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45194b15-8864-4520-a553-538d6ab86206",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca77b1a0-ea2f-45a4-8238-f612ecf1eeaf",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "61f1a422-6d22-4667-b895-39db8f47a439"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d692171-c262-4eba-86a7-5173d91f8b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9c8dd5f5-5619-408d-b5f1-8419701cc087"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b9d5fc8-2431-402c-a487-a1acfd039388",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "74960aed-f45a-4d24-8cf8-c120479609dc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dfbc0563-43fd-488f-95f8-abd729706685",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "36eeb464-3948-4d5e-8ab4-6cb817076472"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "66c9042f-c8f1-40bc-ab6d-b7009e02edc9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "5b04303f-853c-473a-8efa-25401d90209b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "783cb956-62ad-4c73-a745-f4bdba58f64e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6dc215fe-9576-4898-a568-da61f4681462"
            }
          }
        ]
      },
      {
        "id": "ef3e1226-899a-4f7f-a67f-217647ac2657",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "5a612a93-4ce9-4f58-b6cb-a3283a2bd4ca",
            "name": "Negative Testing",
            "item": [
              {
                "id": "50f7452d-c2a1-470e-9fc0-bd11df404b0b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e23f5e10-5f5d-452b-8d9f-d963929366bd",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6abf67b0-5766-4bc1-a595-89d7a2230ec6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7e3a0e4b-f287-4b3e-a41d-145d266bafdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5182ce5a-a0e3-4420-ad53-deb49f2f521d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8cb607f5-9540-44bc-87f0-c9f5d96ad325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5010e69f-06ae-4262-98a1-74d51baf24bf",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b0dbe56-e646-4118-9a3e-5b3b8a812ebe",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "bfa45867-35a8-4969-9362-851c6b8570d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e584ac-47c0-4182-ae3e-a176eba6c928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f5b4b1b-0e00-46ae-a94a-55c9e5a9cf5f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79c364a9-a753-44b6-bb33-cbfca10f2f48",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f67902b8-aed5-4efc-927b-fcd0e3e235c0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fcaaa4f2-072b-4d7e-a830-11d6f443ce0e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4c33037d-d8b6-4201-8e64-59b93bf96e74"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "20e8f6d9-db8d-4d99-8942-e5ba7954ad89",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "6aa40611-7432-4070-99c9-46f54cda3160"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1e6293a1-3300-466b-afed-9d004b12ba30",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "20888868-8362-423a-9751-df6023353957"
            }
          }
        ]
      },
      {
        "id": "65c09d0a-588c-4914-b663-31a5aeefe083",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "157d5ce8-02d9-4037-96cb-779d2af35cde",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3367ff55-c12f-4a7f-8d07-64cbcbeb643b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a6b89c1c-590b-4c52-a85f-722e4445eb15",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30daf0a5-72fd-46c0-b388-01f3bde72dc3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "92576707-38c0-446e-86c4-22b92de8f3a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b842b74-17f4-472f-a1b6-0e16ad8ed2f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7dbc8f36-9be5-42f7-814e-3532460a40d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3648be82-1be0-4e22-be2a-90d802bbb49f",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b6a2e5b-6387-4f11-a997-572950ec7af2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "35e4d2a0-9c08-48b9-87f2-980915fe28c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd46336-5212-47b1-b94f-d294c6a15ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cea5cecf-24fd-415d-971e-f6c6446953f8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0cd6388c-02ee-4afe-ad7f-a57ba39ea834",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "929a8544-3e82-428a-b306-1dbbcbc55579"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "46f71dd2-0207-49f3-b27f-e51aa62b79fa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e5b93280-7807-40c9-b381-a0efdbc41825"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aa47165e-0571-43b1-bcfd-23d70bccebcb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7b360868-1414-49cd-b3e6-769b49ae89fe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0e3fe5b2-9a47-47c2-b01f-a927bcd93de3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e53565d1-3612-40fb-b08e-556453c6e62b"
            }
          }
        ]
      },
      {
        "id": "19b73b65-9b88-48f3-b1d6-d67d683e7e28",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ddea1865-343e-46e3-9837-81152fddbc5d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1e1fafa1-dd1f-4c02-820a-02d240d1fd48",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a226818e-9aba-4372-b900-b94034240aef",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1c9ffacc-f8d0-4386-b9e3-7fe12265b7c6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9252a9b3-f3dc-4915-a0e4-c9d7477799c5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 505,
        "pending": 0,
        "failed": 6
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 410.03461538461545,
      "responseMin": 10,
      "responseMax": 7063,
      "responseSd": 557.8343105551552,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1666831923576,
      "completed": 1666832040589
    },
    "executions": [
      {
        "id": "87c88298-edc6-4ffc-a032-5ec8757a6e88",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "714e24c4-73cf-4774-9990-c782a93ff67a",
          "httpRequestId": "9a13cf3b-86ec-479a-98f6-15d355a3f38a"
        },
        "item": {
          "id": "87c88298-edc6-4ffc-a032-5ec8757a6e88",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "0443854e-2c13-4022-9c1d-12bc506e5b4a",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 0
        }
      },
      {
        "id": "74d2191b-31c9-4a3e-83cf-eb1dbbdd49f7",
        "cursor": {
          "ref": "24d92c01-4f0f-4680-9209-cc06f93b01f7",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "9d24305d-88fb-44c7-9313-f038873deb60"
        },
        "item": {
          "id": "74d2191b-31c9-4a3e-83cf-eb1dbbdd49f7",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ab094e30-bbb1-445c-b755-be85476be38e",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "5ac6ef77-a747-46b1-bc14-1e8cb1d86f59",
        "cursor": {
          "ref": "637757c3-04d4-4908-a942-0aa35fc10744",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a10d759e-f13d-4a12-876d-c03c7f653bf0"
        },
        "item": {
          "id": "5ac6ef77-a747-46b1-bc14-1e8cb1d86f59",
          "name": "did_json"
        },
        "response": {
          "id": "65fcd7a6-5c7d-4225-a8bb-9be4490520bb",
          "status": "OK",
          "code": 200,
          "responseTime": 606,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c52ebc-b12b-4001-a1c3-e629158bd93c",
        "cursor": {
          "ref": "134925af-e967-46cf-9901-c1d32b8846e6",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "82504a02-191a-46f8-9d06-1382ffe3fca1"
        },
        "item": {
          "id": "c4c52ebc-b12b-4001-a1c3-e629158bd93c",
          "name": "did:invalid"
        },
        "response": {
          "id": "17916b91-cd7b-4a74-997d-32f5f8ec6de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c52ebc-b12b-4001-a1c3-e629158bd93c",
        "cursor": {
          "ref": "134925af-e967-46cf-9901-c1d32b8846e6",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "82504a02-191a-46f8-9d06-1382ffe3fca1"
        },
        "item": {
          "id": "c4c52ebc-b12b-4001-a1c3-e629158bd93c",
          "name": "did:invalid"
        },
        "response": {
          "id": "17916b91-cd7b-4a74-997d-32f5f8ec6de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4acfb116-7bfd-441b-98e1-fb20fc735e43",
        "cursor": {
          "ref": "0ce68146-c772-41bc-ba11-fc02320467e1",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6addf972-6f07-4b0c-af67-52d3c077926b"
        },
        "item": {
          "id": "4acfb116-7bfd-441b-98e1-fb20fc735e43",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "2a421b0c-0ce5-47c2-9030-8154a408d60e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 585,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f614efb7-37b4-4629-9f32-11d05d1390bf",
        "cursor": {
          "ref": "0a05afd4-7219-4b6b-9ace-90d921f7156b",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "8dad4021-651a-4210-bd09-13c313ee5d53"
        },
        "item": {
          "id": "f614efb7-37b4-4629-9f32-11d05d1390bf",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "a5ddc6bf-4d64-42b7-98b7-daa2385c945a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 609,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ec7029-964c-4591-83e1-e4e78905d7a9",
        "cursor": {
          "ref": "baa861d9-4406-427d-a9a8-5cb28ff43b57",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "2682668a-3c02-408d-bf03-a8c4a2fd7bab"
        },
        "item": {
          "id": "10ec7029-964c-4591-83e1-e4e78905d7a9",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "50b442cb-cb2a-4bb7-bdd8-faaa81719a18",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fca20d5-ff1a-47b2-a99b-d96990384172",
        "cursor": {
          "ref": "9c49588c-b821-4ccc-a088-c406eaab28a0",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b8ef70e8-fc6d-4a3e-9e17-006731f93955"
        },
        "item": {
          "id": "9fca20d5-ff1a-47b2-a99b-d96990384172",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "f5db2b9c-6ff9-49c6-a8ab-8226bb3b31c5",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 707,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fca20d5-ff1a-47b2-a99b-d96990384172",
        "cursor": {
          "ref": "9c49588c-b821-4ccc-a088-c406eaab28a0",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b8ef70e8-fc6d-4a3e-9e17-006731f93955"
        },
        "item": {
          "id": "9fca20d5-ff1a-47b2-a99b-d96990384172",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "f5db2b9c-6ff9-49c6-a8ab-8226bb3b31c5",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 707,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad37885-e17f-4251-88a2-49959ba56dc0",
        "cursor": {
          "ref": "2fda0a90-6618-4ebc-bc9b-90f8401b2e26",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "904ad254-c8b1-40cd-9ee3-77d3ef83680a"
        },
        "item": {
          "id": "6ad37885-e17f-4251-88a2-49959ba56dc0",
          "name": "identifiers"
        },
        "response": {
          "id": "506f0f1e-d448-440d-8815-0397587ea5f3",
          "status": "OK",
          "code": 200,
          "responseTime": 1197,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a3e0d4f-35a1-4c24-bd0f-8820c0975187",
        "cursor": {
          "ref": "c1e0530e-2a4b-459c-853e-ab84ca7512f6",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "73bd5997-50d9-4414-ac4f-5215034c364a"
        },
        "item": {
          "id": "3a3e0d4f-35a1-4c24-bd0f-8820c0975187",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "15215d00-2711-4e26-9c19-371a5270da23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a3e0d4f-35a1-4c24-bd0f-8820c0975187",
        "cursor": {
          "ref": "c1e0530e-2a4b-459c-853e-ab84ca7512f6",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "73bd5997-50d9-4414-ac4f-5215034c364a"
        },
        "item": {
          "id": "3a3e0d4f-35a1-4c24-bd0f-8820c0975187",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "15215d00-2711-4e26-9c19-371a5270da23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af27f7a9-d009-431a-81ba-2c53d63c819a",
        "cursor": {
          "ref": "03ace7e7-82d7-4cac-9a68-ecfdb736f4cd",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "65095f43-c780-4175-b426-f6e543998f1b"
        },
        "item": {
          "id": "af27f7a9-d009-431a-81ba-2c53d63c819a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "83a38ee8-780f-4e97-945c-b31fc60e5368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e88bb8-4324-4965-b3b3-d936506724d1",
        "cursor": {
          "ref": "1c013bfb-bf2b-466a-8808-fe74e7c96ce0",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ca52f979-45de-4f08-9f27-1244902ce30c"
        },
        "item": {
          "id": "81e88bb8-4324-4965-b3b3-d936506724d1",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a10032fd-ef8d-4e4d-aa8e-a014939fe56e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b72a079-b439-43b4-8020-2e22b89aad18",
        "cursor": {
          "ref": "9e35c30d-5191-45fc-84cc-0c969d8e433e",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "0d155644-4bd1-4754-ab9a-0b7c8d199756"
        },
        "item": {
          "id": "6b72a079-b439-43b4-8020-2e22b89aad18",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "68b92958-3c84-4610-a8e2-d49b1efa461e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4476289-648c-40a5-8124-a58380855388",
        "cursor": {
          "ref": "07f0da72-7a2f-43d4-b93c-520d27716ab9",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "027bc0ea-1853-4194-977d-8bb8f43ad961"
        },
        "item": {
          "id": "e4476289-648c-40a5-8124-a58380855388",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c66bd63c-fbaa-4ea2-813b-9a7085265442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 678
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8dd0050-d197-46d7-95c0-5fb82325a37a",
        "cursor": {
          "ref": "773cbecc-3b41-4510-aa48-f4a88d9f9329",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "600e9ddd-eaf8-42b5-a117-79539e3de2c6"
        },
        "item": {
          "id": "c8dd0050-d197-46d7-95c0-5fb82325a37a",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "60a78ebc-0a3d-438f-ba94-a4b75f206cd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd3811a-422e-4e5e-b69b-b7ffad2393da",
        "cursor": {
          "ref": "3ec35238-d50b-4458-ad88-4bbd07e1f59e",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "6ace0b43-31b7-4502-b7f2-b8775269a817"
        },
        "item": {
          "id": "fbd3811a-422e-4e5e-b69b-b7ffad2393da",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "2e43235a-93de-418b-88e1-5c0d8f8e64e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4394a32-8463-4900-9bfd-b3020a3fecfe",
        "cursor": {
          "ref": "60d054e7-0cfc-49d0-afd7-cac1258b8597",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "3834958f-259c-401f-8d00-f449460dc943"
        },
        "item": {
          "id": "b4394a32-8463-4900-9bfd-b3020a3fecfe",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "3fa49348-4289-4e7d-a420-032c0bad7075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55939d35-9048-4fae-9f1a-bc8fa8784951",
        "cursor": {
          "ref": "13dacb8c-b245-4ac2-bc09-99e99760b8f2",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8028a923-a5b0-4b42-95ef-219e73093c23"
        },
        "item": {
          "id": "55939d35-9048-4fae-9f1a-bc8fa8784951",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "4d47ed2f-f7d2-461b-b050-827a9f13d3c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 950
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f8efd35-b483-4ec5-b2eb-a3f6c50b0cb2",
        "cursor": {
          "ref": "f847b1f4-dd0b-41e7-92d8-8597d13436d4",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b2c51986-679c-47ba-89de-48c4d5641835"
        },
        "item": {
          "id": "4f8efd35-b483-4ec5-b2eb-a3f6c50b0cb2",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c56a12a4-1639-46f9-870d-41524695f9fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 947
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f32fa909-8f03-4c4f-a903-538649406ec7",
        "cursor": {
          "ref": "99654270-25f4-412b-9abf-c0a6fcee1bae",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "d722303d-1608-4103-8231-c54c761569a7"
        },
        "item": {
          "id": "f32fa909-8f03-4c4f-a903-538649406ec7",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "81625f7d-0399-4aba-b043-1cf7f51ad558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea3c1cc-66f3-4797-ad82-e115fa0c3d7c",
        "cursor": {
          "ref": "24d7e6f3-9295-4904-98df-12a956904799",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "294da482-7b10-44fe-8e5b-e08a24c71945"
        },
        "item": {
          "id": "2ea3c1cc-66f3-4797-ad82-e115fa0c3d7c",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "6e92ce01-af85-4c21-9fff-3d329f90da85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6da2c93-414f-4c0f-a24e-ececf8d35599",
        "cursor": {
          "ref": "1dfe563f-f685-49c7-a571-6756cd627f7f",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "1dcc93a3-1a7f-40db-9096-2819fd6e2423"
        },
        "item": {
          "id": "f6da2c93-414f-4c0f-a24e-ececf8d35599",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "3e746363-889d-48d0-a4a9-1060e6a71516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276625ee-3fac-4b57-ba64-de5ee5dce62d",
        "cursor": {
          "ref": "54245389-a854-4b41-be03-f7aef072bd7d",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "c50f3ba1-0408-4315-a6ce-efec19b138e5"
        },
        "item": {
          "id": "276625ee-3fac-4b57-ba64-de5ee5dce62d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "7bfb07bb-baca-4464-b9cb-165eab1ea646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e79afc-3f04-46ca-bc9d-67250609ec44",
        "cursor": {
          "ref": "d63c259b-1ef1-41dc-a5e2-404249e6f8df",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "fd53452d-5950-4607-b22d-7c18694a7aeb"
        },
        "item": {
          "id": "68e79afc-3f04-46ca-bc9d-67250609ec44",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c9014b8e-3bcf-41aa-b700-113572fe35bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbdd40ac-9317-44e3-9e18-1e921e6f90c7",
        "cursor": {
          "ref": "636e2d82-a830-429b-81b1-7c727e26ceb7",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "550ec532-6c12-483d-85d4-d69adb3033ce"
        },
        "item": {
          "id": "cbdd40ac-9317-44e3-9e18-1e921e6f90c7",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "7b3edfa9-5cf8-4061-9368-c78ed702750d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "085e309e-f11e-48a4-b700-bc883483b842",
        "cursor": {
          "ref": "eb4374d6-6dca-4d78-96e7-d1d6d654aa66",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "21bda29e-898f-4448-ba7d-d5ff25ceafaf"
        },
        "item": {
          "id": "085e309e-f11e-48a4-b700-bc883483b842",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "5f26d43e-b75a-46cc-8106-1502eb43715a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce400bee-836b-41d3-9d14-9a0218e461f3",
        "cursor": {
          "ref": "555c4f1a-f6e5-452f-b53f-c5a049fced0f",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "caafc3ff-b270-4f03-b6e0-2647d9a5e145"
        },
        "item": {
          "id": "ce400bee-836b-41d3-9d14-9a0218e461f3",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "5d389a31-9c5e-420d-9106-84a9980e7522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab30d39-ba4e-4895-b32b-5cc7ff5612a4",
        "cursor": {
          "ref": "1b87834c-d88c-43cc-a9ff-52c12eb0452c",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d7df1d37-4669-4aef-a389-05fc8b58aec0"
        },
        "item": {
          "id": "2ab30d39-ba4e-4895-b32b-5cc7ff5612a4",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "00484deb-a3f6-4cb9-9725-90c599f98c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e87c1b36-d669-4d91-a401-a1ba24a1f872",
        "cursor": {
          "ref": "da821c3f-59fa-4f91-a5ee-a135f1e92af2",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "314d1b56-c394-48e6-976b-8d87e5ef356c"
        },
        "item": {
          "id": "e87c1b36-d669-4d91-a401-a1ba24a1f872",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "9384c43c-0313-492c-9a1c-31ad8f779e5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33690783-d2d2-4bcd-80ad-77a0ddcc005c",
        "cursor": {
          "ref": "0db779b0-0fc4-4d61-a9b1-1ac3bd26d566",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "051299fe-ba9a-4a9d-8dbc-3a8b7ef06555"
        },
        "item": {
          "id": "33690783-d2d2-4bcd-80ad-77a0ddcc005c",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f588e108-2aa5-4af1-b260-f114bafd0b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da05bab3-c53f-4d4e-823a-e8a34431f672",
        "cursor": {
          "ref": "0e97fd36-19b0-4c0c-ab28-8bf579a3a00b",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "207098a5-0a9a-4465-a26a-98d9179f695f"
        },
        "item": {
          "id": "da05bab3-c53f-4d4e-823a-e8a34431f672",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "4d06d859-f672-4015-89c5-3a4a7cc03e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "669746f4-ec82-4d23-8719-b11a1273b9c0",
        "cursor": {
          "ref": "34291176-844e-41b6-842f-f7c154a5ca00",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "06f1b96f-6925-445c-b66a-63b1dd40dc96"
        },
        "item": {
          "id": "669746f4-ec82-4d23-8719-b11a1273b9c0",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9bda4bae-52dc-45b1-9778-a6fff5e7e651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6aff72d-79f9-4ecb-a42d-4b7bf654691c",
        "cursor": {
          "ref": "9bd5c325-a3ff-4047-b809-27a69d2bb7da",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "b598eff7-fc13-4912-b434-b7e3fe6ed4d1"
        },
        "item": {
          "id": "d6aff72d-79f9-4ecb-a42d-4b7bf654691c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "ed25825c-f665-4195-a50e-732ee9fe4508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e41f5e0-a96f-4360-a445-0607ee09903e",
        "cursor": {
          "ref": "4aceb297-0cee-4e74-bd8b-3a04a5f0bd43",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "064a261e-2cba-4692-8f1d-d441ac1af389"
        },
        "item": {
          "id": "2e41f5e0-a96f-4360-a445-0607ee09903e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c63f91cf-731a-4815-bb64-bafad99898e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b04f80df-dab8-4c96-87eb-fa16558ccca0",
        "cursor": {
          "ref": "20d8d802-d0f4-4275-8d79-8374ae938322",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "bb2246c1-0f34-4826-8fcf-d5eac178784a"
        },
        "item": {
          "id": "b04f80df-dab8-4c96-87eb-fa16558ccca0",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5ab62fd2-9f19-4ec3-90c0-1b1acee4544f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff440cd9-68dc-49b8-821a-2d9f189cb5b4",
        "cursor": {
          "ref": "c0f71d80-0359-4273-b51f-079b1eeb961d",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "4289f466-3f21-4638-844d-a0570436b77d"
        },
        "item": {
          "id": "ff440cd9-68dc-49b8-821a-2d9f189cb5b4",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "134c1e14-b81d-474b-81b3-5eca373654ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33996c1f-05b5-44b1-b6f0-425ff99ee5a2",
        "cursor": {
          "ref": "4dc930cc-3cd4-499d-861d-d806fa47a899",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "dd992571-ca7d-4608-8a18-8dc8b9ad0e1c"
        },
        "item": {
          "id": "33996c1f-05b5-44b1-b6f0-425ff99ee5a2",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "43160a34-96ea-471c-b5e3-369b8c0680d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "920e22a7-1606-432f-8a77-03b84ebcfdfc",
        "cursor": {
          "ref": "29d4f22a-d284-483b-afd3-1e440399a907",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b0339ed0-7ba6-42ed-ab49-43527ffbd61a"
        },
        "item": {
          "id": "920e22a7-1606-432f-8a77-03b84ebcfdfc",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "dfb4da59-45a2-4659-9a80-b1d58c2d9441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b1b44e5-401e-4fda-916f-b1125c007a35",
        "cursor": {
          "ref": "a615d99b-8fee-4b8c-b585-c1aa5ab5035c",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "cd286efa-65b0-49d5-a31a-acb174abff84"
        },
        "item": {
          "id": "0b1b44e5-401e-4fda-916f-b1125c007a35",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "80a9d7be-17d0-4d7c-9954-618b144cdd43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c08ba72-6749-41ed-81c9-96c1a3646eab",
        "cursor": {
          "ref": "9a255a12-97f2-42ac-b6ae-00b4a8b8fe86",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "32c017fb-b43d-4016-b45e-6c2937fb22f3"
        },
        "item": {
          "id": "9c08ba72-6749-41ed-81c9-96c1a3646eab",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f9d28951-acb2-4306-9106-21562ea3d3e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f5ff97-2dee-412b-95e5-34ac76661259",
        "cursor": {
          "ref": "4e5da023-5429-4cf8-91ab-e6fc3a90aa1d",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a6ad47d3-b64e-488f-9da6-f6949299cd99"
        },
        "item": {
          "id": "95f5ff97-2dee-412b-95e5-34ac76661259",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "b08ebfe9-0687-4ada-93ea-55453729cf5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 422,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2030173-59d8-418a-b640-fcc1d6d69a84",
        "cursor": {
          "ref": "b65fcfb7-1d7e-44f7-8612-7bac8f1668b3",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "6f1ab41c-8c0a-4ab0-9cf4-ec701a6a8b1e"
        },
        "item": {
          "id": "e2030173-59d8-418a-b640-fcc1d6d69a84",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "77db7f4f-0435-41b5-9b73-2dde491e773d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 892
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "defebe80-1610-4a0c-9e58-67c7dcab101a",
        "cursor": {
          "ref": "c6d1ddc9-5200-4cf6-91f7-672a143886ce",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "0ed85e9e-2eab-479c-ba5f-048385f5316a"
        },
        "item": {
          "id": "defebe80-1610-4a0c-9e58-67c7dcab101a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b69c6ca6-c821-48ea-b1d3-3d66a4dad6bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f624fe8-db3c-4982-a949-b3017c07e741",
        "cursor": {
          "ref": "108b22c3-8458-448c-bcf7-0cd92fb7dd72",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "85b6e0bd-ea29-412b-969e-db9dc1543e71"
        },
        "item": {
          "id": "6f624fe8-db3c-4982-a949-b3017c07e741",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "f7080bbb-5134-4d65-bb05-103a6aa484b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c562b1-2aca-4a53-bfa9-3593ee5388d2",
        "cursor": {
          "ref": "ca61f275-f02a-4bd2-8a95-26449b94bbbd",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "aeb4cb90-358f-47c0-851a-fdb2e9198b0d"
        },
        "item": {
          "id": "86c562b1-2aca-4a53-bfa9-3593ee5388d2",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d0a2c6b5-c5a4-4413-a162-7bf88c5cbe1c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 495,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6503c00c-cd66-4dc5-9ff3-04ef3b311ecb",
        "cursor": {
          "ref": "bbf1bc1e-d522-4097-b8fc-6ead11ed03e7",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "2906f506-e95b-4c5e-aaee-4cfacaee195c"
        },
        "item": {
          "id": "6503c00c-cd66-4dc5-9ff3-04ef3b311ecb",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "7fd42354-b796-4825-a3f4-593a2c8d4355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a6d45dd-e7aa-4c3f-8eb0-95da19f1d1e2",
        "cursor": {
          "ref": "36017207-20f5-4521-95e9-541bafd5d20c",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e18290fa-b0ac-46cd-b08c-d4a63fe58a69"
        },
        "item": {
          "id": "3a6d45dd-e7aa-4c3f-8eb0-95da19f1d1e2",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "1b9b4366-b3a5-4115-96f7-5ac610133dcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 1305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1edc9667-082e-444f-b786-7717d0678750",
        "cursor": {
          "ref": "d6eb7d00-dc6e-47ea-b5be-191e139d6858",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "93fedef2-0da1-48d6-80d1-a1086cc01eda"
        },
        "item": {
          "id": "1edc9667-082e-444f-b786-7717d0678750",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c83619c8-30ba-41ce-9dbe-1e75cb8e5ada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58292ae0-4694-46a7-acb8-8ba08dc5c45a",
        "cursor": {
          "ref": "80d66791-81cc-449f-951e-7df53fc27867",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "bbee0f34-6ca8-43a2-aebc-07a4ede77253"
        },
        "item": {
          "id": "58292ae0-4694-46a7-acb8-8ba08dc5c45a",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ff31c013-5215-497c-bf4c-4bb017f4ae81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc691fb-9d9f-400f-a558-e9987d368ef8",
        "cursor": {
          "ref": "107fb949-758f-4daa-a49e-27ecad8d2022",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "1deea5f0-2d35-4a28-980a-7893329ff5aa"
        },
        "item": {
          "id": "adc691fb-9d9f-400f-a558-e9987d368ef8",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "7592c1bc-5b18-418e-b82e-5dd44a3c77d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93642c65-93ef-4268-b992-59cde10ec649",
        "cursor": {
          "ref": "e1e6cd2c-2c86-4fcb-869e-57b092390849",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "9ea7dbd6-68e7-4a44-b6c1-47789e70e761"
        },
        "item": {
          "id": "93642c65-93ef-4268-b992-59cde10ec649",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d558536c-38ba-453a-b0a1-c3fd6cf6cb66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac12dc6-4265-4714-8f1e-8ab52bb952d6",
        "cursor": {
          "ref": "14492ea3-434e-42a1-838c-12bd80de91c5",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "b0e5496e-3127-4b55-98ba-0ec9c30d1773"
        },
        "item": {
          "id": "eac12dc6-4265-4714-8f1e-8ab52bb952d6",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "668c00ae-cff7-4f77-bccd-c1d4233227e7",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 527,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c15cd788-6d6f-412e-add9-94b846814e9a",
        "cursor": {
          "ref": "a6edfa10-573d-4dba-b215-ca35bbc0f469",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "033a4f9b-e40b-46dd-88af-9f43c62ef828"
        },
        "item": {
          "id": "c15cd788-6d6f-412e-add9-94b846814e9a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "a69c7516-1ff5-45b9-8cc2-6306ed889105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 524
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a0e9fd-0814-4000-9a68-0937b0afc69a",
        "cursor": {
          "ref": "53586bd9-a0c5-41aa-90c9-cbfbf835177a",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b91f16d7-b4b9-49e9-9a49-8dfad86044a3"
        },
        "item": {
          "id": "24a0e9fd-0814-4000-9a68-0937b0afc69a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "9198b5a6-6507-4001-b6de-cfe8a4c67bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 548
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3944724b-87a5-425d-a207-3fc2ba8dc09f",
        "cursor": {
          "ref": "a0136546-e017-40c8-91f9-f1c16eee8b76",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "6936f337-407f-4462-87de-42a2b204f77c"
        },
        "item": {
          "id": "3944724b-87a5-425d-a207-3fc2ba8dc09f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a259a75b-d26f-4e67-9e0e-1a1e35dfed6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ee310e-f4e5-45d1-a3f2-2e20e105cede",
        "cursor": {
          "ref": "be295042-6bf6-4abb-ae76-ccad70314bb4",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "bc9a1232-b637-41b8-a757-a32e5adcc4e6"
        },
        "item": {
          "id": "78ee310e-f4e5-45d1-a3f2-2e20e105cede",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c75696db-d87c-43a7-b0b8-a44d1baf9066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "050e5489-a51b-42a7-94bc-5355e927b5a5",
        "cursor": {
          "ref": "58a9456c-e84d-4e35-9d3c-1e0bf7ddab94",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b9d83918-9b03-4ae0-8f64-3fea6416c902"
        },
        "item": {
          "id": "050e5489-a51b-42a7-94bc-5355e927b5a5",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "00b1912d-0bc9-4230-ae88-436ea59338dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4dae082-b5f7-44fb-b626-90c4bb5618db",
        "cursor": {
          "ref": "cabcc564-309d-4983-b0bb-fc6863f6d107",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "98780ba0-7a39-49fc-8911-276ac7a512f4"
        },
        "item": {
          "id": "e4dae082-b5f7-44fb-b626-90c4bb5618db",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "bd1b97f3-9a78-4b82-8278-0f778229cfba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c40a275-6597-4bab-8910-e14c50a19c3c",
        "cursor": {
          "ref": "3f151ffc-50a9-4b7d-a358-7238a8966a4b",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "fc1e8cd7-553f-42f8-9085-e51e6e1ad419"
        },
        "item": {
          "id": "5c40a275-6597-4bab-8910-e14c50a19c3c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f5d590f5-7727-4664-8339-c5983e029567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4de4282-2301-4e94-ac21-969f6d0847e9",
        "cursor": {
          "ref": "c07754a5-1150-47c4-ba24-a67240f570c6",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d5e49389-64d9-4bea-bfe5-00d5eebfb1d5"
        },
        "item": {
          "id": "a4de4282-2301-4e94-ac21-969f6d0847e9",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "285cf66e-c06d-40be-80e2-36848403879e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f78a11-4992-44e7-83dd-f65364a89193",
        "cursor": {
          "ref": "90275e67-2d88-4830-916c-604783642870",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3edcd1d9-9f47-4985-bd1b-a4beb0442666"
        },
        "item": {
          "id": "77f78a11-4992-44e7-83dd-f65364a89193",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "12b1a316-f308-4e4c-9d91-49f193b99ad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "182b16c6-e68c-44c8-8dc5-cc0af6c1c7b9",
        "cursor": {
          "ref": "c6bd5e7e-aa2c-4321-8437-e00e6dc163e3",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "270fde52-2190-4adc-a03e-70c525df0bbe"
        },
        "item": {
          "id": "182b16c6-e68c-44c8-8dc5-cc0af6c1c7b9",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "90b2f56a-9f10-47c9-8b8e-a31694a74c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a493158a-5cda-45a7-be5b-070ff7214ab6",
        "cursor": {
          "ref": "7747ffa5-14ac-49d8-9ad1-b01f6a919c65",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "db6c3b8e-adb0-4325-9123-03019bdc9772"
        },
        "item": {
          "id": "a493158a-5cda-45a7-be5b-070ff7214ab6",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d7e59b50-e2d5-450c-ad71-ddd738dbeea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 826
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3849ee83-9145-4a41-99af-c66b861a2d4e",
        "cursor": {
          "ref": "f9a5b714-bcf1-496f-8769-e539e4271bca",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a16963c7-f62a-4b1d-8c28-55b65964d2fd"
        },
        "item": {
          "id": "3849ee83-9145-4a41-99af-c66b861a2d4e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "b25c9bbb-d85f-4b1f-90ef-3d5c8861b773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 828
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b3d9160-6d47-4304-a735-299ddc63c5af",
        "cursor": {
          "ref": "f54579c7-0989-44ad-bf2f-668b539c99f6",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "062975f5-cbc8-4cf8-b864-d13acca7dc52"
        },
        "item": {
          "id": "1b3d9160-6d47-4304-a735-299ddc63c5af",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "f04605af-316b-4d22-9247-f6258cfe6920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 841
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ccbc61b-9a95-4552-95af-d753ccff39dd",
        "cursor": {
          "ref": "96267d7a-fc14-49e2-a251-148a238324bb",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ef872568-452d-4ff4-9e25-0ff310a58642"
        },
        "item": {
          "id": "0ccbc61b-9a95-4552-95af-d753ccff39dd",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "bdae06b4-2585-47e6-980f-dd8ee754d051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1794ab5a-e9b2-47d4-984e-40f172c4c083",
        "cursor": {
          "ref": "73f59197-c10d-4183-bcf8-fa3a4275db39",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "8b339061-633a-4304-acdf-25977054363d"
        },
        "item": {
          "id": "1794ab5a-e9b2-47d4-984e-40f172c4c083",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "5901ee4f-d970-489c-ab13-83808069f88f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d922ef-8b86-4cd0-9fba-e620c99b62b5",
        "cursor": {
          "ref": "90f520e5-5d38-4011-b0a5-6571db8a53a4",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "cb5c24c8-2eca-4375-bd59-e466930e26a5"
        },
        "item": {
          "id": "d8d922ef-8b86-4cd0-9fba-e620c99b62b5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "5daf2a1d-a492-42c9-82aa-8b499c95c81e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d89d57-5eab-4784-bcfb-0cd972f3dcd1",
        "cursor": {
          "ref": "9d0ddfb9-9b79-459c-b7f0-9e25a74df2ef",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "0273c35c-641e-4705-ae03-99cb4ca279a7"
        },
        "item": {
          "id": "67d89d57-5eab-4784-bcfb-0cd972f3dcd1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "637e63eb-9e51-4655-8299-a155a6ca2968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 1320
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4fe6c02-b890-4d34-b229-f7ccc9f1aa09",
        "cursor": {
          "ref": "9622f985-938b-4eed-9fa7-cca1e6efc703",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "bff61072-d51d-4fb0-a9ad-071d75ed2589"
        },
        "item": {
          "id": "d4fe6c02-b890-4d34-b229-f7ccc9f1aa09",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a3f5d60c-962b-4738-8b24-eafb088594d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4140472-6a66-40e5-b78d-da033a0cfc53",
        "cursor": {
          "ref": "32652319-8171-4e99-9d53-519c4f5f4d16",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "7cd8cd5c-6545-4eb1-bb95-47fb935f9b75"
        },
        "item": {
          "id": "f4140472-6a66-40e5-b78d-da033a0cfc53",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9b830f6e-c4cd-43d1-9dde-e6c5f3474e69",
          "status": "Created",
          "code": 201,
          "responseTime": 1780,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:71)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:71)"
            }
          }
        ]
      },
      {
        "id": "1e96d938-03bd-4198-a2dc-9203b56975ca",
        "cursor": {
          "ref": "d092d408-2a13-4926-aa65-663ed5a66bf5",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "53fd30f5-77ff-45d6-b244-7df7c81ab5b2"
        },
        "item": {
          "id": "1e96d938-03bd-4198-a2dc-9203b56975ca",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "40adc03f-8dae-49d9-a59c-e68906124991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c9aaae3-0c32-4c2a-a71c-6a6244d4378f",
        "cursor": {
          "ref": "b5ba3923-ee07-4e35-9870-6af3d5da0c78",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ad2532e8-5a53-4305-9e84-ff51e64c794c"
        },
        "item": {
          "id": "7c9aaae3-0c32-4c2a-a71c-6a6244d4378f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "819e2d67-156d-4fe0-8546-68ffd8135dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd34c023-cf8b-4044-bc1f-6596d4ba660a",
        "cursor": {
          "ref": "a70b6d80-a398-48b7-9c9c-b88d030ad797",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "55e62894-0f77-4f72-a3c6-73e0ab669d1b"
        },
        "item": {
          "id": "cd34c023-cf8b-4044-bc1f-6596d4ba660a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "58e748a0-ebaa-42fd-b745-366a4552b7ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d18c56f-92c4-43b2-9bf5-cecb8ed14841",
        "cursor": {
          "ref": "6d9c24af-5550-4d1c-94a4-6988bc247148",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "d4322dd2-37d4-4eaa-a62d-6042f9217c58"
        },
        "item": {
          "id": "1d18c56f-92c4-43b2-9bf5-cecb8ed14841",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "b23b4e6a-fc4f-4bf8-9fe3-b2457c4c094d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d58a37-e2c2-4ebf-b69d-fb01e5fad12c",
        "cursor": {
          "ref": "30ef58b6-3556-4d45-8ffe-e69234b0eda7",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "1c65123c-592b-4bf5-b11e-c35e08f32589"
        },
        "item": {
          "id": "c0d58a37-e2c2-4ebf-b69d-fb01e5fad12c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "94c50f92-0945-4b5c-bddd-2189f50335e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c4a738-92ad-4e14-856d-44401cc5996e",
        "cursor": {
          "ref": "b057717d-8480-484b-8266-6e657d7727b1",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "4d398301-5f60-406e-a802-4bf479062c8d"
        },
        "item": {
          "id": "a9c4a738-92ad-4e14-856d-44401cc5996e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "047e46b1-e7f4-4e87-9383-931a7f110362",
          "status": "Created",
          "code": 201,
          "responseTime": 1724,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:77)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:77)"
            }
          }
        ]
      },
      {
        "id": "b2eccd0e-3cfc-486a-9f7d-05322a760d12",
        "cursor": {
          "ref": "628c7bfc-d99b-4ab4-ac56-5e357ed0ec54",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "888db9a2-8456-4614-a290-e5f1c8636e93"
        },
        "item": {
          "id": "b2eccd0e-3cfc-486a-9f7d-05322a760d12",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e4941c15-f2d9-4729-bfba-633c315ae089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4650e9b7-1618-4fcc-ae90-dd00c030d5ce",
        "cursor": {
          "ref": "3bedd3ab-1409-4b47-ac44-cdce79f8708c",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "e21eda4f-c401-490e-aaad-3ce9451d5e90"
        },
        "item": {
          "id": "4650e9b7-1618-4fcc-ae90-dd00c030d5ce",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "63c28454-497b-46fb-80c1-beb4f275c1d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 510
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31c64f55-245a-45b3-9fcf-08f76393b912",
        "cursor": {
          "ref": "539ad545-1d2f-48d2-96a2-9ce8a1c6e432",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "c8d92cf0-50f6-4cf2-929e-e2a9d9b6da67"
        },
        "item": {
          "id": "31c64f55-245a-45b3-9fcf-08f76393b912",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "9696c807-9c10-4420-88de-0b5bc059f960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2467ef81-a684-49ba-89a3-50567e10983c",
        "cursor": {
          "ref": "95f155fb-5d93-4e8b-ac7e-8ecc5c0b24b1",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "3f314388-49a0-4577-8744-9ecce55f9563"
        },
        "item": {
          "id": "2467ef81-a684-49ba-89a3-50567e10983c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "93cf45b9-6df8-41de-9628-59ea20904be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d8e1be-1f45-4e0f-bd05-48631d4068ef",
        "cursor": {
          "ref": "f9cfbdda-a517-42d0-b014-750bd7fcd65f",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "08be0724-8f06-4d52-94fc-c0394a336e17"
        },
        "item": {
          "id": "c0d8e1be-1f45-4e0f-bd05-48631d4068ef",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "23d3c7ce-403e-453e-a151-8b16ae486f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85282c9b-9cfb-403b-b213-8750faa968cb",
        "cursor": {
          "ref": "10d27531-3e36-44ca-8465-dc4983daeba8",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e6b3bb67-8e0e-4813-99d5-9ef8bff1d208"
        },
        "item": {
          "id": "85282c9b-9cfb-403b-b213-8750faa968cb",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "9f5b2c77-8765-4bdc-9d7c-276822557d1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20071b13-95d8-4fbc-8d77-146b49a0341e",
        "cursor": {
          "ref": "6413d1bd-3112-48d8-b6a1-aec6b42d5de1",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "90763742-ee11-4efb-aba2-0a5ee58997fe"
        },
        "item": {
          "id": "20071b13-95d8-4fbc-8d77-146b49a0341e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "7aa971d0-d2ce-4ada-a4ec-cea2cde4e1ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4bbd11b-61dc-4ca7-8dca-f09cbe5daef7",
        "cursor": {
          "ref": "02c01339-7059-4547-8ff4-97b0108967af",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e44b3332-6616-416d-9a7a-a874aa5c0376"
        },
        "item": {
          "id": "c4bbd11b-61dc-4ca7-8dca-f09cbe5daef7",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e9b74078-912b-4714-b831-0a6342251b6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20633dcd-b990-4dec-ad44-655178aefeed",
        "cursor": {
          "ref": "03771d13-c1bc-4b42-a70c-f71f478b1bbe",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ad70728b-7100-4f61-955c-ea1cc38b2d95"
        },
        "item": {
          "id": "20633dcd-b990-4dec-ad44-655178aefeed",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "2596a935-eb25-47e8-8ef0-07ad13a0c6f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc4f358-1446-4fac-a39e-f66c74ebf395",
        "cursor": {
          "ref": "2af817b4-fcb4-4b81-93c0-3c2d7e6f6010",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "51a16baf-ac31-4fdb-ae72-35b8bfab3adb"
        },
        "item": {
          "id": "5fc4f358-1446-4fac-a39e-f66c74ebf395",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "935494ef-e690-4ba7-a9d6-537090d817f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b44f7b8d-49e9-4175-8e1d-d57e5565f477",
        "cursor": {
          "ref": "4f0508c8-94d5-4afd-9a10-7cf612abdd48",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "362e7213-aa9e-440e-8af4-223fa4fef223"
        },
        "item": {
          "id": "b44f7b8d-49e9-4175-8e1d-d57e5565f477",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "745a2089-dd91-4c42-98ca-842ec6613d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "244c7b25-3f98-471e-88c3-116f20ee5600",
        "cursor": {
          "ref": "a20aed59-8fff-4064-921e-ced81ad0e862",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "0adcfdc2-1d89-4785-b5fe-f280d2cb45c2"
        },
        "item": {
          "id": "244c7b25-3f98-471e-88c3-116f20ee5600",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "0c4f4ec9-dee8-470c-85ed-000160ef51ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91dcd1e3-c3bf-4a7e-a88e-b5ea223cc86c",
        "cursor": {
          "ref": "c057c918-b430-4107-ac34-ae03291070e0",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "48d9df3b-54c0-40a9-94f5-fefb511a685f"
        },
        "item": {
          "id": "91dcd1e3-c3bf-4a7e-a88e-b5ea223cc86c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3c75999f-dec3-4771-a3c2-32582fb82ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49029bb6-5b9d-4a0d-8f9c-9a4b94c5f7d0",
        "cursor": {
          "ref": "9115dacb-9bdd-450e-974e-cfe02c8d7b3c",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "aa4cc567-3b8f-401a-8073-b85502dcad3d"
        },
        "item": {
          "id": "49029bb6-5b9d-4a0d-8f9c-9a4b94c5f7d0",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f8066f0f-3cbb-4cf4-8cb0-9a38ca5f8f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b9844ac-1583-4d4d-aa3b-5b1b30a0139a",
        "cursor": {
          "ref": "b93c0017-1091-4a73-9e6b-e25825a32d0e",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b6e2b38a-d464-41b6-a22b-09ae148a953d"
        },
        "item": {
          "id": "1b9844ac-1583-4d4d-aa3b-5b1b30a0139a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b2a0ce95-d77a-4459-8668-e9626cabe015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca4297ac-cc00-49ea-b1bf-63b8943330af",
        "cursor": {
          "ref": "716c9d37-ce49-4a3b-a6ae-f1b308b54c75",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "03f8ed4e-485f-4cf4-a273-4e69f888c345"
        },
        "item": {
          "id": "ca4297ac-cc00-49ea-b1bf-63b8943330af",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "9dcd6f20-8a37-457c-972e-b1b952e7ff28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a561e4c9-7ca5-4cc1-8131-ee414f7a1430",
        "cursor": {
          "ref": "0fade7ca-7f62-40ee-a62c-bfea9b3ef08c",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "09f98912-303f-4252-ba4d-3c49b4fe8acb"
        },
        "item": {
          "id": "a561e4c9-7ca5-4cc1-8131-ee414f7a1430",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f5686709-0b28-493f-b8f2-86a75a2ad723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "226a05f1-635b-4f31-a57c-a54f23e2cb6d",
        "cursor": {
          "ref": "3f73bddc-596e-426f-bf46-0f52e50ab261",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d9119547-f944-4cbd-ab1a-615875f681be"
        },
        "item": {
          "id": "226a05f1-635b-4f31-a57c-a54f23e2cb6d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "5c40d74d-2ae6-4d40-b9ce-41a9bd850207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d002a201-fd95-4a6d-9dee-9d5d43096c72",
        "cursor": {
          "ref": "719ff228-4db1-4f84-b91f-239ed7a78e6a",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "5feaf494-0ebd-48ec-a521-a808bd67b22f"
        },
        "item": {
          "id": "d002a201-fd95-4a6d-9dee-9d5d43096c72",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "fcd089e4-fc61-486b-890d-0bb2cac8aec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3af2b99-cb28-41fa-b81f-01affd58138a",
        "cursor": {
          "ref": "1897da3a-5221-42d6-b8e6-058f193de86e",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "01817519-3aae-4d4d-8fa8-964db123f7f3"
        },
        "item": {
          "id": "f3af2b99-cb28-41fa-b81f-01affd58138a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "967f294b-438c-4701-9208-d53813b1f38d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54fe5578-a8ff-401b-b16c-722a9a24a8ea",
        "cursor": {
          "ref": "a0d5a048-385b-46f1-8ccc-25c61809e382",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "346c59b6-c440-4763-9fa9-22efb3f9bdc1"
        },
        "item": {
          "id": "54fe5578-a8ff-401b-b16c-722a9a24a8ea",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f0c85c7e-4710-44f1-b899-1cd5cdc0fcc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3376b12-a812-4d6e-93ae-2577e95ab4e6",
        "cursor": {
          "ref": "bb7be2d5-7c8e-47fc-ae25-1079b8d3ad84",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "0fef70fa-9b04-4c3c-b7a5-86611f7a303c"
        },
        "item": {
          "id": "c3376b12-a812-4d6e-93ae-2577e95ab4e6",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "2532a2c8-eb84-4d45-85a1-7d74cdad596c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "363101ae-4599-4773-8e61-cd3905208f34",
        "cursor": {
          "ref": "7aad712e-5672-4310-a276-21defe84c880",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "742ca16b-37ff-4b42-b65e-3f2020324f50"
        },
        "item": {
          "id": "363101ae-4599-4773-8e61-cd3905208f34",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "e998645d-9fc0-4544-9268-8d4a9c00b009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0137657f-51c1-4787-821a-615dd37e3786",
        "cursor": {
          "ref": "0ab11520-625f-4ce5-83b8-81d5c6135757",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "e981567f-cc2d-4231-bb5f-5c504026bc25"
        },
        "item": {
          "id": "0137657f-51c1-4787-821a-615dd37e3786",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "9312ded4-8c90-48d0-b005-778d703b5b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b96b283-2c55-4233-b806-549b7c67c83a",
        "cursor": {
          "ref": "3ee2f463-aae6-4bd2-8bf8-fab345af8839",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d3621330-46c5-45c2-b4e6-a4d9c3af33e7"
        },
        "item": {
          "id": "9b96b283-2c55-4233-b806-549b7c67c83a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "9cdeedae-a2ba-4f28-8485-27a4f594741b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eead7911-3655-43fb-8f69-e54a5c870fe1",
        "cursor": {
          "ref": "00428649-280a-4e0a-86b0-dd30d0f14063",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "bb378758-f730-43ac-9c9c-e5412a03021e"
        },
        "item": {
          "id": "eead7911-3655-43fb-8f69-e54a5c870fe1",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "06939603-4d11-40cd-84a1-8176fb6b2768",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 434,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c66dc20-04bb-4cf1-b748-966ef5ea0ce6",
        "cursor": {
          "ref": "484927f6-ad51-4898-bc48-c83fdb5ce651",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "4cbeb271-6934-4a8d-954e-ff75bc3c8b07"
        },
        "item": {
          "id": "5c66dc20-04bb-4cf1-b748-966ef5ea0ce6",
          "name": "credentials_issue"
        },
        "response": {
          "id": "7f9e1f02-b103-4011-8607-1cb93ee356e0",
          "status": "Created",
          "code": 201,
          "responseTime": 1755,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "1294b580-5aea-4e5d-94fd-9cb95230574c",
        "cursor": {
          "ref": "7024a231-04fb-4c7c-9642-086023fba5f0",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8c03d229-1d7f-4ce7-b83c-6bf846831201"
        },
        "item": {
          "id": "1294b580-5aea-4e5d-94fd-9cb95230574c",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "ab82d5d0-90e5-4248-bc1d-3de724c1bbfe",
          "status": "Created",
          "code": 201,
          "responseTime": 1654,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fe92bd6-7afa-4803-bfd2-2bb3789013d2",
        "cursor": {
          "ref": "c00a84e8-3322-42c2-a3d5-579831680ab0",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "8ea8432c-aa44-4ffe-b8cc-d98ddc05f0a5"
        },
        "item": {
          "id": "8fe92bd6-7afa-4803-bfd2-2bb3789013d2",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "6f94fa6e-7a9e-4049-853a-39cca117dbd3",
          "status": "Created",
          "code": 201,
          "responseTime": 1807,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad4b1d0-ada8-4a84-a9f5-ef5c9c9f01d8",
        "cursor": {
          "ref": "b9c502a7-eeb0-4df1-92b0-697fe7ccf44c",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "4b4d5a4e-a565-4ef6-b0a9-3381f89270ba"
        },
        "item": {
          "id": "5ad4b1d0-ada8-4a84-a9f5-ef5c9c9f01d8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "404e814f-37de-4679-9f7e-f9ba3651b5f7",
          "status": "Created",
          "code": 201,
          "responseTime": 1698,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "623e28fe-0b02-4345-b822-a2f52a927842",
        "cursor": {
          "ref": "a0834e41-3bec-4e9c-ac41-1521b7d26664",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "233fe3e6-b44b-41dc-b5da-9528269ad512"
        },
        "item": {
          "id": "623e28fe-0b02-4345-b822-a2f52a927842",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "163d911c-20e6-4e52-ba9e-70118b707fa5",
          "status": "Created",
          "code": 201,
          "responseTime": 4827,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "4021d5da-f66b-46c9-8517-2d3aa8fee054",
        "cursor": {
          "ref": "b5f1d15c-fa29-4f79-a45d-5cbbce964c3c",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c08ff47a-7acb-45bf-adea-3673665d3b34"
        },
        "item": {
          "id": "4021d5da-f66b-46c9-8517-2d3aa8fee054",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "533fb5a4-42f4-4f6f-a068-70c30012e5cf",
          "status": "Created",
          "code": 201,
          "responseTime": 7063,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc235ff-3e29-4636-ab47-b6b96ff4d6ea",
        "cursor": {
          "ref": "4ca60d68-1692-4f3d-96e4-7fcce9f57c0e",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3bd09bbd-da81-4fb0-b21b-e6700d7ea0b1"
        },
        "item": {
          "id": "cdc235ff-3e29-4636-ab47-b6b96ff4d6ea",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "75511d9d-6c59-4de8-99b8-dd8caa6c1c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc235ff-3e29-4636-ab47-b6b96ff4d6ea",
        "cursor": {
          "ref": "4ca60d68-1692-4f3d-96e4-7fcce9f57c0e",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3bd09bbd-da81-4fb0-b21b-e6700d7ea0b1"
        },
        "item": {
          "id": "cdc235ff-3e29-4636-ab47-b6b96ff4d6ea",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "75511d9d-6c59-4de8-99b8-dd8caa6c1c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e4f09d8-b404-4ebe-92b9-5dc3c1c76df6",
        "cursor": {
          "ref": "77590b3e-ef61-44e4-9d3c-f29fc3810ee8",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "d8a01ff5-0378-4362-991e-8dde08735273"
        },
        "item": {
          "id": "8e4f09d8-b404-4ebe-92b9-5dc3c1c76df6",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "62ebaf62-02cd-42e4-a011-7f4120b7f138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5360f7e1-d780-48e5-a9e5-cd74a4369a36",
        "cursor": {
          "ref": "00557f81-dc29-4a0a-bc70-5b28c5129caf",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "133d8ea0-a8ee-4b09-bd3f-bcf005aa1da9"
        },
        "item": {
          "id": "5360f7e1-d780-48e5-a9e5-cd74a4369a36",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "4b161e69-74c5-44be-a496-ad1e99d9e4ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 342
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "883efd6c-4029-41f2-9e23-5e31cc62efb1",
        "cursor": {
          "ref": "3c8f69ea-c9b4-494e-9337-b86001528c8b",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e6fe0284-f334-42c6-b7eb-e7062a882509"
        },
        "item": {
          "id": "883efd6c-4029-41f2-9e23-5e31cc62efb1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d1ede52e-8548-404a-ad41-cb084cf21742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0521abac-e22f-4f3a-a738-473fbbe5dce5",
        "cursor": {
          "ref": "c702068f-a625-41c9-9a0a-69bd0dfed24c",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b1f33c99-a595-4e3c-b57b-ee0abdd2028f"
        },
        "item": {
          "id": "0521abac-e22f-4f3a-a738-473fbbe5dce5",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9cde4efe-7b19-4909-9e68-2e2f9413e5ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 341
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a2948a1-e51e-4c17-8d79-2288ed0f2507",
        "cursor": {
          "ref": "c1d3ff47-e280-4136-87a4-d9dc100be886",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "8fc4c573-2f17-4cfb-abc4-0cf4393b5b05"
        },
        "item": {
          "id": "3a2948a1-e51e-4c17-8d79-2288ed0f2507",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "37f56426-7c42-4251-97f4-fa266111ba3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dd3e9e5-a755-42de-a06a-94fa7e81dfa6",
        "cursor": {
          "ref": "604b2f3c-7466-4322-b2ba-04a52914b4c6",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "2f349da9-0154-4a30-bb0a-b19917a4b85d"
        },
        "item": {
          "id": "4dd3e9e5-a755-42de-a06a-94fa7e81dfa6",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "21d234d8-9889-41e3-a1a4-cf92d6afe3ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d24369a4-3f54-43c3-91f8-ceefc8ed979c",
        "cursor": {
          "ref": "44af270f-a679-46f1-aab9-426dc3cc54c2",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "84305e08-7a03-4e02-a344-392d95fbacfc"
        },
        "item": {
          "id": "d24369a4-3f54-43c3-91f8-ceefc8ed979c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "12c36343-1d39-4f1c-a887-a4c26d75d2d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6ae5d3c-c621-4602-8976-e5a579fb95f4",
        "cursor": {
          "ref": "8b646a99-5e91-4976-9acd-0e780effc2c3",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d646c746-c857-40b4-a021-54172c818e47"
        },
        "item": {
          "id": "b6ae5d3c-c621-4602-8976-e5a579fb95f4",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d7765e3c-f248-4094-865b-aadd6b790f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1217c4ea-7219-48c0-bee6-504fd7bca2bf",
        "cursor": {
          "ref": "fdd83600-e93c-463d-9584-1c4f639e8d0f",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "15a340f9-ca05-44e2-8874-6ea755f445df"
        },
        "item": {
          "id": "1217c4ea-7219-48c0-bee6-504fd7bca2bf",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3fdeeefe-a815-4f72-9b9c-78fd2fa329eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c2d1d6-92a9-4d1e-b083-1e3bdee9b546",
        "cursor": {
          "ref": "0f27d71a-3674-478d-8162-f025f5dc7836",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d95db5be-dc8a-4871-bf86-ad24175cdfc6"
        },
        "item": {
          "id": "f6c2d1d6-92a9-4d1e-b083-1e3bdee9b546",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a0e79e55-7907-4348-87d8-e3d221e02239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f920b59-b2c9-4117-b5be-1a8772262acd",
        "cursor": {
          "ref": "fcc2304a-2ddb-4158-9916-ed973ca2cbc4",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b0417fbd-f1f6-46ec-b796-4bef2877118a"
        },
        "item": {
          "id": "5f920b59-b2c9-4117-b5be-1a8772262acd",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7391319a-ed18-4c85-8e2e-5b42a1acbb06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b1c06c-16e0-4bfb-878b-4bbb3217b31c",
        "cursor": {
          "ref": "0aea86b5-2a33-424a-941e-d2858afac60d",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "14b3439c-6c3b-4e21-a19c-fab02b006dde"
        },
        "item": {
          "id": "06b1c06c-16e0-4bfb-878b-4bbb3217b31c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3c492ff3-1f67-4e0a-8790-c76b68f8abe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab77b760-b947-4f72-93fd-cc913ed6dff4",
        "cursor": {
          "ref": "ac8b3cc1-ca8d-4547-a3e9-2ac3adbeece2",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e072d5d6-960d-471f-982c-51fdb7848a29"
        },
        "item": {
          "id": "ab77b760-b947-4f72-93fd-cc913ed6dff4",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6159ece7-12b2-4ca4-a344-3c65f96ecfb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d12380ce-99f5-40c4-b763-a3a561d78578",
        "cursor": {
          "ref": "a4cff9b8-1f5a-4d1c-9b5f-c1e18a40161e",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "eea91a48-abcc-4d24-b327-7c18743a21e9"
        },
        "item": {
          "id": "d12380ce-99f5-40c4-b763-a3a561d78578",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "930f757c-cc60-452c-b842-7884491fbb5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff2b86d-b650-419a-ad92-e84586ead27a",
        "cursor": {
          "ref": "8e5c0652-ed02-43c7-b73b-3cd313a40e51",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e4478587-a299-43d4-930e-7cea35466a20"
        },
        "item": {
          "id": "fff2b86d-b650-419a-ad92-e84586ead27a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5a7d604b-729a-454a-a55f-a241344b7be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9946f213-6c03-4aea-9557-4d753f6f072b",
        "cursor": {
          "ref": "6991ff76-e800-4c22-8d11-0289553b11af",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "4c216d62-3773-43b8-91b4-fe7158921d66"
        },
        "item": {
          "id": "9946f213-6c03-4aea-9557-4d753f6f072b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5abc4dd4-b159-4dd0-9e28-b5e778ac400e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e28c2dd7-7fa7-4845-a51b-cc557c67b686",
        "cursor": {
          "ref": "bb420b40-935f-4eae-b7d5-c69f1dd604fa",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f30016aa-7e5e-4adf-9ec9-47ceb7e835b6"
        },
        "item": {
          "id": "e28c2dd7-7fa7-4845-a51b-cc557c67b686",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e37e5b01-edfe-4a1a-b005-ef72ceef4e17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc6641c0-cc9d-48e8-9b83-820962ee3563",
        "cursor": {
          "ref": "f5de67f3-d532-44fa-bfa2-16d9de75dbb5",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "0328c124-ddb3-4a5b-9993-5c6289b344a4"
        },
        "item": {
          "id": "fc6641c0-cc9d-48e8-9b83-820962ee3563",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1af2f621-e4cc-4fa4-aaa7-616ff6a9d12d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "396ca708-fcc5-4d5d-bd91-39eea1a169a5",
        "cursor": {
          "ref": "506cbab8-2f11-4d2b-b34c-b6fddf9b7734",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "8d8f9134-9d31-42be-825a-65845aff6db7"
        },
        "item": {
          "id": "396ca708-fcc5-4d5d-bd91-39eea1a169a5",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5fd2699f-468c-4f70-9b16-c4dad2da5eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f6b8a2-dfa4-403f-82b3-bcde60df2002",
        "cursor": {
          "ref": "db5a1e5f-ba6d-4b09-a77b-19b58d663357",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "97351986-8764-441c-87a8-a4c15530f4de"
        },
        "item": {
          "id": "05f6b8a2-dfa4-403f-82b3-bcde60df2002",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "96e62588-c010-4e8b-a8d2-6fdd2509fb8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c01862-738b-40e9-a2f7-e2d19cd396c9",
        "cursor": {
          "ref": "4346a3a9-9be0-4096-9ede-a638013a0bed",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "94dcce99-d682-4a12-9792-554df770c875"
        },
        "item": {
          "id": "a3c01862-738b-40e9-a2f7-e2d19cd396c9",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "66ef5fd0-d69b-48ec-8216-f98eed2a45dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f79a0cd5-8caf-4243-956a-542371544431",
        "cursor": {
          "ref": "d4602a27-5579-4bb4-ad31-b80ec2bcf0db",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c7bce05b-9df3-4a0c-be9b-6988856549ae"
        },
        "item": {
          "id": "f79a0cd5-8caf-4243-956a-542371544431",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "1b990684-ea21-467c-8755-054d48648fbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f16cecb5-cdf3-40dc-87a6-cf6f4bcc33dd",
        "cursor": {
          "ref": "96305016-e5da-4011-b0b4-be30af2ef3a4",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a47227cc-ee72-4346-bc6a-7d67d39adfdf"
        },
        "item": {
          "id": "f16cecb5-cdf3-40dc-87a6-cf6f4bcc33dd",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d54e643c-7c4b-498f-af0e-b0485ffb6943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f309d1a3-2aa1-4295-8cc5-9aadac28839e",
        "cursor": {
          "ref": "5f3f7b90-6a76-4b6e-981d-cdb776f78bd9",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "2901ce5f-9b45-48e7-95d6-d78b7a95dda7"
        },
        "item": {
          "id": "f309d1a3-2aa1-4295-8cc5-9aadac28839e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b4a9acf9-0e35-48e9-a387-a7b7f871d931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbca6bb6-585f-4f6d-8ae7-fd39498352de",
        "cursor": {
          "ref": "01c034b9-125e-4bf3-a7b6-84676c66cc0c",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "7cafde25-9652-4376-9a3d-f14d6621814d"
        },
        "item": {
          "id": "bbca6bb6-585f-4f6d-8ae7-fd39498352de",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1fdbfd0d-469b-4c87-8da1-2ed27ef774d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f87bc20b-b48b-4805-b05c-ff039a6cd2ea",
        "cursor": {
          "ref": "a82efc14-6e95-4d27-8ccc-722512b0bfa0",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "41cc9662-c619-47cc-b34a-6822a0d0b72c"
        },
        "item": {
          "id": "f87bc20b-b48b-4805-b05c-ff039a6cd2ea",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "55023219-9406-43bc-a3b9-b0a4157a4f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 422,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "578736c9-3c9e-451d-835f-7626e4f82a57",
        "cursor": {
          "ref": "38ba4c16-5153-488a-a10b-41c260754a19",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "929902ab-9b8c-44c1-b5ee-1bb066e0f74d"
        },
        "item": {
          "id": "578736c9-3c9e-451d-835f-7626e4f82a57",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "15b50ce6-9a55-4225-a4e1-0352a873263f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a69ec400-107a-41f9-9033-9b95028d8493",
        "cursor": {
          "ref": "fe807f4b-4f18-4548-a04e-1d738a3e8005",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ee527931-361e-4e95-b196-ef7a37002615"
        },
        "item": {
          "id": "a69ec400-107a-41f9-9033-9b95028d8493",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e8a20b05-763f-4478-b65d-725ec50aa74c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e00522-199f-403c-a827-15bb74dbedd4",
        "cursor": {
          "ref": "15e0ad75-d9d7-447c-8b03-8f7ecf9b2f88",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "8214e0eb-6b09-4785-baf1-a46bf9b0ddc7"
        },
        "item": {
          "id": "02e00522-199f-403c-a827-15bb74dbedd4",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "23219b6c-23e6-42f1-b166-8a5887546e1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f8caadc-4bd6-45d0-aad3-0e4832e9d79f",
        "cursor": {
          "ref": "733f0736-33bb-48e4-9e5a-e1c0c55fd2e0",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "249481f2-aa5a-4769-b565-3bfdab0cb1a4"
        },
        "item": {
          "id": "8f8caadc-4bd6-45d0-aad3-0e4832e9d79f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "cd7b0a8d-6e86-4a13-a54e-cbad4c935894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "325f6e33-ebc0-4476-994e-e58f6de61e91",
        "cursor": {
          "ref": "4faef94d-7769-4f99-8f13-eb76d872d619",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "6268b142-423b-45cd-9679-68430adccc2a"
        },
        "item": {
          "id": "325f6e33-ebc0-4476-994e-e58f6de61e91",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "5cc40aff-7646-46db-b9f6-db2c9854cecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5916816-cc6b-4da8-b69f-5ceb1fe999ec",
        "cursor": {
          "ref": "10b24665-6f73-47df-bfd6-95a60d6351f5",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "86569f00-0658-4c39-84ad-5c67aa790fdf"
        },
        "item": {
          "id": "d5916816-cc6b-4da8-b69f-5ceb1fe999ec",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "61e6992e-8151-43d5-a833-38eae625f70b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5ee98f-b5ef-43d6-ada0-a562e392494d",
        "cursor": {
          "ref": "c4623060-69d4-4b2c-b9e0-b5ae2bbc18c5",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "4a4a44d3-18c6-44ea-a348-5d1444fbc69a"
        },
        "item": {
          "id": "4a5ee98f-b5ef-43d6-ada0-a562e392494d",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "59735d7b-234c-4e9f-af5a-94d7d19a7be0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 424,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4d50efc-d7ca-4762-8377-a8f7deeed05d",
        "cursor": {
          "ref": "65bbb2f8-87b3-4ce7-87f2-8b8cb89e46f7",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "83dc45c2-4cdf-40eb-ad6a-e3efcc2abf11"
        },
        "item": {
          "id": "e4d50efc-d7ca-4762-8377-a8f7deeed05d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9cee3eb7-c6a9-4225-84ef-ec9a0bb2838a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 198,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4d50efc-d7ca-4762-8377-a8f7deeed05d",
        "cursor": {
          "ref": "65bbb2f8-87b3-4ce7-87f2-8b8cb89e46f7",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "83dc45c2-4cdf-40eb-ad6a-e3efcc2abf11"
        },
        "item": {
          "id": "e4d50efc-d7ca-4762-8377-a8f7deeed05d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9cee3eb7-c6a9-4225-84ef-ec9a0bb2838a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 198,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93b83cae-c255-4c70-8b92-e1051ea9bd62",
        "cursor": {
          "ref": "1d1a512d-64ac-451f-bcb0-a094de27645d",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4fc52b28-ca65-42de-b9c8-c01554ff6f05"
        },
        "item": {
          "id": "93b83cae-c255-4c70-8b92-e1051ea9bd62",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "23f9ee19-fd6d-44f7-8b1b-ac347e20283d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 251,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "af82e624-dc86-4405-ada0-bb50440fa62a",
        "cursor": {
          "ref": "367a5322-63b3-4d7b-90f8-0ec76a3800fb",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ec147c93-fd58-458c-9646-8b113f5113dd"
        },
        "item": {
          "id": "af82e624-dc86-4405-ada0-bb50440fa62a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f6947a5f-c69a-4619-a574-ccc5e6d23eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 203,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3510391-2d00-4236-9b2d-4419df7dfb9a",
        "cursor": {
          "ref": "9fb2860c-01af-49a5-a5b7-dbdbae92791f",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "bf1d12fd-88d2-45e2-8a29-5863b2c1fd74"
        },
        "item": {
          "id": "a3510391-2d00-4236-9b2d-4419df7dfb9a",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b489b85c-a110-43a6-9ee5-bead4e765c7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 193,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db3f84b3-fe7a-4e38-a983-a3022264fae2",
        "cursor": {
          "ref": "707aa622-6dd7-445b-b758-27143e30c216",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "5603f01f-1cbc-4dbd-a048-52228f619589"
        },
        "item": {
          "id": "db3f84b3-fe7a-4e38-a983-a3022264fae2",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "06f46e44-82f9-461e-bafb-e764173f7673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 199,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc32db4e-873e-4057-890d-e6412ea1cc64",
        "cursor": {
          "ref": "6a3080c5-018d-4a09-a1ef-6fd404323464",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "98db8363-888d-4475-97a7-38b84ebed7f7"
        },
        "item": {
          "id": "fc32db4e-873e-4057-890d-e6412ea1cc64",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "343205b9-a682-4210-86ed-b9f353177391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "824bcddc-c166-4ace-8b1c-3008fda01599",
        "cursor": {
          "ref": "368dab28-19cb-4683-8e9a-73086d1e707d",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "48e8bf05-bb9a-4272-b60a-5fa5fc97fd15"
        },
        "item": {
          "id": "824bcddc-c166-4ace-8b1c-3008fda01599",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "2df7681d-a031-4ebd-80dd-4e4c5aab74df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 191,
          "responseSize": 1213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1308c298-55ca-40cc-848f-6f63c902405b",
        "cursor": {
          "ref": "40e5f8ac-c2c1-4a35-9350-c35fff04f834",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "18d5268a-9897-427c-aef9-4fad4851621b"
        },
        "item": {
          "id": "1308c298-55ca-40cc-848f-6f63c902405b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "634a1948-5d78-4b33-b700-d06273ac09ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 190,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f50849-e81d-47a3-88fe-0c09a4c8c0fb",
        "cursor": {
          "ref": "3ccedc18-e887-45eb-a132-5b1781c8212d",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "296209f9-0958-43a2-b3a5-5b11201e7101"
        },
        "item": {
          "id": "c8f50849-e81d-47a3-88fe-0c09a4c8c0fb",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "760087d2-2cc1-4391-b5b5-70ca721fdce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 207,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4305be7a-aacb-43ac-9ed7-c831632f09dc",
        "cursor": {
          "ref": "ff483be6-743e-4267-a78d-74040f666bd1",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "9a2afed6-1b67-4b03-9aa7-bbb5078e2cfb"
        },
        "item": {
          "id": "4305be7a-aacb-43ac-9ed7-c831632f09dc",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "dc7e2e24-26ef-4961-8edb-e7c9178beb32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 201,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ade23c-0d7c-41ea-b08a-445d9c01e05f",
        "cursor": {
          "ref": "4692cb23-2a32-4492-90b5-42a5d2bfc755",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "d2dc7ccc-6dee-470f-8760-53ea91fdecbc"
        },
        "item": {
          "id": "e6ade23c-0d7c-41ea-b08a-445d9c01e05f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "6328d254-2bc9-4a15-ac24-934fc71d38ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 213,
          "responseSize": 1450
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f16621-30f0-49c3-9559-7b9a95e6d4d9",
        "cursor": {
          "ref": "5636bfa0-2c48-4398-b1fa-3b2824e9ccf8",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a4433514-fed8-4113-a670-73da5bcf4124"
        },
        "item": {
          "id": "a3f16621-30f0-49c3-9559-7b9a95e6d4d9",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b9f0fea6-1fd3-4f8e-ae1d-2c8fd211cbbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 189,
          "responseSize": 1437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78094990-c70b-4d61-b8f2-768d81a6c072",
        "cursor": {
          "ref": "476b2ee4-2d4d-42fd-8626-4385a01a8e95",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "304cd8f3-6724-4a04-81a7-a71e55831877"
        },
        "item": {
          "id": "78094990-c70b-4d61-b8f2-768d81a6c072",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "246107c4-964d-4614-8312-c3b54c3ae12d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 190,
          "responseSize": 1690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6b00f8b-b102-4f8b-a079-28e01db46cd0",
        "cursor": {
          "ref": "afd384eb-871f-4a6a-9b14-7068d5dcfeac",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "45ffeb57-1ebd-4764-9d70-4c0ccacb589c"
        },
        "item": {
          "id": "e6b00f8b-b102-4f8b-a079-28e01db46cd0",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "6ad55b4c-094a-41f5-a6cc-c9272d7af7ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 194,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f7057f-5e6d-46f8-95e5-02cee631ff63",
        "cursor": {
          "ref": "78a49eac-6c36-4f13-97a3-35745d21637c",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "2b7879b8-1808-4c6a-996d-1a3aa9d94c0c"
        },
        "item": {
          "id": "51f7057f-5e6d-46f8-95e5-02cee631ff63",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "157e21e0-8e12-43f3-865a-861ca2680635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 198,
          "responseSize": 1679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceae96d7-6cc9-4669-ac0d-a354cd64e9b5",
        "cursor": {
          "ref": "343086fa-cba4-463e-b9cd-1218031f04c1",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "a818666c-db3b-4386-b13c-0c0b16728f3f"
        },
        "item": {
          "id": "ceae96d7-6cc9-4669-ac0d-a354cd64e9b5",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "7614bd5f-d304-4885-b34c-1cb3ea379e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 205,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c060296f-e534-455c-965f-ebb598fb3c22",
        "cursor": {
          "ref": "50119e3c-440d-45f0-a3ef-b713f20dc99d",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e2b31801-6d07-4b38-ba31-f9ba92755c99"
        },
        "item": {
          "id": "c060296f-e534-455c-965f-ebb598fb3c22",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "b5e6595d-7c16-4a9c-ae93-f6623414f5c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da809d7c-346d-4321-9d50-f50ab6eca494",
        "cursor": {
          "ref": "7daad9e7-5038-4993-822d-b7778ba5130f",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "bd637400-beb5-4fce-9da0-2f52a2b1c519"
        },
        "item": {
          "id": "da809d7c-346d-4321-9d50-f50ab6eca494",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a9598103-2cf3-41da-94a4-7b6a5eb63d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 202,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccfcfa72-7bed-4784-839a-c5b395a458dc",
        "cursor": {
          "ref": "bef20cf8-7f5a-4f02-b08b-85a28ab46482",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "2ac84cff-66f8-4134-9cfa-362f53c2d253"
        },
        "item": {
          "id": "ccfcfa72-7bed-4784-839a-c5b395a458dc",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "faaaf0d7-c39d-4fa9-9546-c504f5840178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 195,
          "responseSize": 1250
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b695f456-0781-43b6-a50e-50c5bcaad9e2",
        "cursor": {
          "ref": "d1f87c0b-940a-4f29-b710-241ef5b2e5b0",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5467f4db-fad3-4f94-8488-8d20f24cfcbe"
        },
        "item": {
          "id": "b695f456-0781-43b6-a50e-50c5bcaad9e2",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "618122d8-a19f-42a8-8ec0-ef0c7cd86f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 200,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c1c8fd8-b04f-4e27-a9fd-a13be06cbd7d",
        "cursor": {
          "ref": "568ada88-e6b4-4bcc-8f90-9d1f50db8f29",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6ff23eea-4299-4f56-b05b-04343b3c92b2"
        },
        "item": {
          "id": "8c1c8fd8-b04f-4e27-a9fd-a13be06cbd7d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "0cecde42-fd27-49f9-a752-abda55b934b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 188,
          "responseSize": 1249
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d49dd4-f362-40f7-bfc3-694a388ccb0c",
        "cursor": {
          "ref": "0d32ca7c-f257-4e0f-b598-905f639cd84e",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "8f601bf1-4cfa-4be6-b4ea-9b653a9bd2e9"
        },
        "item": {
          "id": "d3d49dd4-f362-40f7-bfc3-694a388ccb0c",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e9db7d86-ddbf-4498-b05a-d9875882827d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 184,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb7b1928-1172-41b0-88db-c58cfff25f02",
        "cursor": {
          "ref": "79a97752-2cc7-4960-90d7-5c3e48103784",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "367f5c97-b916-488f-96cd-084a3ef8172a"
        },
        "item": {
          "id": "eb7b1928-1172-41b0-88db-c58cfff25f02",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "222c8566-cc32-4186-a268-9712e6ce00ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 188,
          "responseSize": 1227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e2a4ae-88b7-4d1d-9387-90d6dc499680",
        "cursor": {
          "ref": "d6ecc598-2cd6-48b5-a0cf-b015fee2aad3",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "9b2ea80a-798f-4fa4-9800-a8bb44275ebf"
        },
        "item": {
          "id": "14e2a4ae-88b7-4d1d-9387-90d6dc499680",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "53a21c18-22a2-4486-8042-6632f15ced90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 194,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24f14df6-fe51-4c65-8ef9-69195b132204",
        "cursor": {
          "ref": "9da0e181-4eb7-49fe-ba10-c8f4e218d7aa",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "fa341bfe-c8d8-4aed-9c7f-5118097c0e20"
        },
        "item": {
          "id": "24f14df6-fe51-4c65-8ef9-69195b132204",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "89de5aae-0153-4832-9c39-d43b7d76dac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 191,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1afead0b-9559-46d2-ac76-093986c95ecb",
        "cursor": {
          "ref": "3dfa2f93-3691-4702-b92a-b0dcf527234c",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "2ac4f2cb-a090-490f-b71e-0df637d99359"
        },
        "item": {
          "id": "1afead0b-9559-46d2-ac76-093986c95ecb",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "acb68492-6e7d-420c-ade0-4b55dc6b911a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 195,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d06b94-4952-46ca-bd9d-7b24b1cd29ac",
        "cursor": {
          "ref": "eba7fc02-337c-4c77-80a7-9093e93a4c0f",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "925158a3-634b-4ec2-aebd-e74facb25aed"
        },
        "item": {
          "id": "54d06b94-4952-46ca-bd9d-7b24b1cd29ac",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2fd7f10b-efc6-4a44-b7ef-e3ea1ef8067c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 216,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e1df47e-4695-46f3-a1e1-9f20a8318713",
        "cursor": {
          "ref": "9c40e123-d68a-407c-a12b-ffcf0710cbcb",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "8b421ffa-b963-4cda-a178-3c500c04adea"
        },
        "item": {
          "id": "8e1df47e-4695-46f3-a1e1-9f20a8318713",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "5431c172-a2b8-4261-9d83-efb15bb54731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 197,
          "responseSize": 1239
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4053f7b7-e1a0-4519-85a0-0b5cad6271be",
        "cursor": {
          "ref": "d1d359b2-8ede-408b-8882-89eadb81a88f",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ed0665b6-99d5-46a4-9e7c-8c5c05d80c16"
        },
        "item": {
          "id": "4053f7b7-e1a0-4519-85a0-0b5cad6271be",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ddbc9b47-02e1-4c61-b980-3dceed93cde0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 223,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2340e958-77c0-4ef6-98ec-0a4fcc21ad92",
        "cursor": {
          "ref": "721b4e78-d1d2-4309-bafd-cd6c3a896211",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "40274094-da5e-4bf9-84af-747611c49edb"
        },
        "item": {
          "id": "2340e958-77c0-4ef6-98ec-0a4fcc21ad92",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "162e51b6-4eb6-43db-849b-e62ab72647ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 195,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d95e7a8f-964d-428d-ba04-de206308fec8",
        "cursor": {
          "ref": "47637dc3-0609-4816-82a1-a9fd6c41e7f7",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "4021f64f-4e7a-4f8d-a254-104dea008f2a"
        },
        "item": {
          "id": "d95e7a8f-964d-428d-ba04-de206308fec8",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "8d539965-2557-4a22-9d27-c5f37265b859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 207,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6420ebd-ba4e-449d-b7d0-2b39f6032be8",
        "cursor": {
          "ref": "0822220a-aac8-40b8-8ebe-da1413bffd79",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "03563659-21db-4970-8730-32a5cbc9f440"
        },
        "item": {
          "id": "c6420ebd-ba4e-449d-b7d0-2b39f6032be8",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8ad783ed-1e8b-470e-82a4-c7e1560efd74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 213,
          "responseSize": 1255
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfeea86e-9071-495e-bef2-4f27694745ea",
        "cursor": {
          "ref": "d981703b-0983-46e1-84a1-4c5e74293999",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "9ecaf6b7-04a6-4acc-817a-9ccdd2f71a72"
        },
        "item": {
          "id": "dfeea86e-9071-495e-bef2-4f27694745ea",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "19838363-19a9-4d24-b68d-c7eac0dd9a76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 201,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62721e39-a1e0-4573-91da-c90358e1447f",
        "cursor": {
          "ref": "4c05b4dd-d05c-404d-99c8-7423d0217e62",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "591e0515-62bc-4f32-9ce7-078c94b24670"
        },
        "item": {
          "id": "62721e39-a1e0-4573-91da-c90358e1447f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "cad6ef39-059a-4968-a249-18d685bb8cd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 224,
          "responseSize": 1282
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ee889d8-c697-470c-a932-bac1acbe0996",
        "cursor": {
          "ref": "7b9692e2-7717-43b8-889f-88b218c73e39",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "abe2a3e8-98dc-4bd6-9779-265ffd9fa1d1"
        },
        "item": {
          "id": "1ee889d8-c697-470c-a932-bac1acbe0996",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "66c9e161-dbf5-4ff1-9dad-239a6c7e65a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 226,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a906809c-7df4-4c0d-97a9-9e647f5dcf38",
        "cursor": {
          "ref": "316a6b44-965d-46b7-9acf-9cdb4f9ba189",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e4b27304-459b-472b-9330-c596c9a8fa4a"
        },
        "item": {
          "id": "a906809c-7df4-4c0d-97a9-9e647f5dcf38",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "cba272b1-34a8-4bff-baa3-c4d0003daeea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 214,
          "responseSize": 1668
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3df4287-f881-4a98-8894-cf6d0f9d9b20",
        "cursor": {
          "ref": "bb0697a8-134b-4747-ba1c-d60801de6e85",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d6d3aee7-a330-4840-8b39-9a060e1b9679"
        },
        "item": {
          "id": "e3df4287-f881-4a98-8894-cf6d0f9d9b20",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f75351d5-3d57-404b-8764-2a094c5a543d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1654
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdbe7508-8bf4-476a-bf12-9523b0390d29",
        "cursor": {
          "ref": "a06a929d-e266-4763-85df-0eb21b45d13e",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c4754c0b-4e97-4d5d-8d89-18435228a75a"
        },
        "item": {
          "id": "bdbe7508-8bf4-476a-bf12-9523b0390d29",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "7b54f940-7d36-4769-b465-fe56ea77255d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 180,
          "responseSize": 1652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a941b1-56c1-46b2-af9f-4a92d09f227e",
        "cursor": {
          "ref": "e041ff80-b4a0-4fed-814a-71af1b2d7981",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "50cee454-72fe-45d8-940a-a50a67681d4a"
        },
        "item": {
          "id": "f4a941b1-56c1-46b2-af9f-4a92d09f227e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "e8581043-c79c-45a7-abfe-970e683ba7af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 217,
          "responseSize": 1653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81089c34-ac85-4df8-a3bd-90f4a9b8eb45",
        "cursor": {
          "ref": "05573a8f-9d33-4bf0-9f19-e9a7bd6e54a1",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "31728fe5-2a27-42a3-b0b6-5a8c7cfc4021"
        },
        "item": {
          "id": "81089c34-ac85-4df8-a3bd-90f4a9b8eb45",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c22fbafb-b758-4d68-a2a4-c546b22379de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 197,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc6d05d-06bf-4f49-8833-87e235fff242",
        "cursor": {
          "ref": "32121c2f-8fb5-49c8-b8b4-258450c672d6",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "6e4b3741-efd9-4d56-84c1-e153dfbfb938"
        },
        "item": {
          "id": "4cc6d05d-06bf-4f49-8833-87e235fff242",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c0dd6b6e-6cb7-40aa-b617-c6c1ff4e032b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 209,
          "responseSize": 2027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6617fc9e-09e3-442f-8c3d-f00f74af454f",
        "cursor": {
          "ref": "5485d3d8-d35b-4b11-9aa1-25e098ceb4e4",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d359fee1-c0c0-449d-b126-f04ae597d3a4"
        },
        "item": {
          "id": "6617fc9e-09e3-442f-8c3d-f00f74af454f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d90ae55f-7e55-44c7-a3b8-6a9402fa948e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 188,
          "responseSize": 2013
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed1e135-3a31-4dd4-b980-11856acfecc4",
        "cursor": {
          "ref": "d07650a0-624c-4324-9a8f-541e19d32357",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "625a00de-494a-48b3-a4c5-74909be5c55d"
        },
        "item": {
          "id": "1ed1e135-3a31-4dd4-b980-11856acfecc4",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "34c7acf3-b1e9-49ee-b498-13ee07eb2e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 201,
          "responseSize": 2011
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa50e91e-cf2b-4bf7-9c30-7b5d38c5c54b",
        "cursor": {
          "ref": "964e1313-9de8-4b59-9ce6-36c6cb020e7b",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "1a1f78b7-d617-4143-bb08-22a08e7a7f48"
        },
        "item": {
          "id": "aa50e91e-cf2b-4bf7-9c30-7b5d38c5c54b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "512e7003-91f5-4049-a76b-e2df9a12ba43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 199,
          "responseSize": 2012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aba46590-3f55-4414-991d-abb1a64b3a40",
        "cursor": {
          "ref": "976e49d7-bc11-4be0-8433-80ad24d295a0",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "bd1f016e-81b0-455f-a009-a2fa8f46a8f7"
        },
        "item": {
          "id": "aba46590-3f55-4414-991d-abb1a64b3a40",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "adc91971-dd07-419c-a486-23df67fce465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 219,
          "responseSize": 2033
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33160b5-12fd-49a6-b314-fc3b1ed71526",
        "cursor": {
          "ref": "9dc8df71-adca-44fb-8c11-a5bce118d17e",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "c3d9117c-d878-46b5-bfc9-f251a267fa05"
        },
        "item": {
          "id": "c33160b5-12fd-49a6-b314-fc3b1ed71526",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "3d5da946-e129-4212-85e1-1dee32ee599a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 1237
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e12ab2a-9ba4-44d6-92de-e632267860b2",
        "cursor": {
          "ref": "446c0da9-6da2-4627-ad2d-b7108f1b0e9a",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d982be0e-f792-4d3e-9f51-1cd683c716d1"
        },
        "item": {
          "id": "6e12ab2a-9ba4-44d6-92de-e632267860b2",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "98a7af7a-c559-43fa-afd6-bb70739a6b51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 227,
          "responseSize": 1261
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a64e142-96af-42f2-95aa-0e789021105d",
        "cursor": {
          "ref": "b6a4556e-aa79-4bd0-840d-4e7c5efd5f3c",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "07fbc7cc-8a93-4882-ac16-c4104f167a89"
        },
        "item": {
          "id": "1a64e142-96af-42f2-95aa-0e789021105d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a06a8a6f-0fa1-4ec1-8d0d-6f0f46f24496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 193,
          "responseSize": 1242
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b0feca-0f2f-4d1f-8d50-f000038ae1a5",
        "cursor": {
          "ref": "03f159e5-0c66-40ab-9afa-14c286cc0546",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "91a069f9-bb59-45fc-9dbd-b3d8e1cab220"
        },
        "item": {
          "id": "80b0feca-0f2f-4d1f-8d50-f000038ae1a5",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "7582b5a0-af6c-4b6f-9743-3e2575572069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 195,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "440f9eec-9d19-4e0f-9835-244cc9f8c3e9",
        "cursor": {
          "ref": "7e485770-da44-4b0a-b8fe-28ceec0bc5eb",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "da7905b1-0395-4410-8db4-73233f22ee7d"
        },
        "item": {
          "id": "440f9eec-9d19-4e0f-9835-244cc9f8c3e9",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b44d6518-3715-426a-8695-20e5de729ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 203,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2cf9ee2-6327-4619-8788-a2d693be9326",
        "cursor": {
          "ref": "78a168a0-c6db-479e-b0f8-d32489d70b31",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e1fae097-4abb-44e0-bc72-1c80c9aa387a"
        },
        "item": {
          "id": "a2cf9ee2-6327-4619-8788-a2d693be9326",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a9dc64c0-ce89-4933-bbd5-577d9c32bc95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 203,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "395b798c-4b39-4855-afb2-40a1849169b1",
        "cursor": {
          "ref": "bc0c41ba-9c9c-48ae-91b1-02d3e09afd79",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "0915c0c8-933e-42ba-ac23-4bc7824c240f"
        },
        "item": {
          "id": "395b798c-4b39-4855-afb2-40a1849169b1",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b18d5eab-2d2f-40fe-858c-d80edee84ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 196,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc7024c-8b2b-4bba-a702-63df64c5d047",
        "cursor": {
          "ref": "5b7cd5fe-9f33-4e6f-be2d-fdcb829a77c6",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "eb655c11-186d-4646-8420-7eeb06138264"
        },
        "item": {
          "id": "9bc7024c-8b2b-4bba-a702-63df64c5d047",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e16c84be-536b-455d-bd83-265f53f17935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 199,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0712c2c3-83fd-4aad-bb90-f2d76ff7f6bf",
        "cursor": {
          "ref": "f43f709a-c4dc-4684-a0f8-84c76c5d4217",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "1225fd0b-b57c-4998-b96f-8e1d0d860f1e"
        },
        "item": {
          "id": "0712c2c3-83fd-4aad-bb90-f2d76ff7f6bf",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "4b4a50bc-26cf-4c3a-9ef6-ac75ab78afd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 191,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56387dfa-e48a-42e3-89af-2a83eb45cfdc",
        "cursor": {
          "ref": "d0f87221-d82b-47d4-a5a3-3cd3394a7616",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "bafee101-33ee-40c2-9057-af0031d9768c"
        },
        "item": {
          "id": "56387dfa-e48a-42e3-89af-2a83eb45cfdc",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "0f2f5ce6-2b32-41e6-979a-c05a40e2c7d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f683e05a-1d35-491e-b8df-fc6ac80751e1",
        "cursor": {
          "ref": "9aa0e64d-a437-43f7-b955-1d2a01802c25",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "d5dbc880-832d-4c3d-aab4-d01db4374bef"
        },
        "item": {
          "id": "f683e05a-1d35-491e-b8df-fc6ac80751e1",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e027843c-255f-4e34-899d-94241fb1a638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 215,
          "responseSize": 1538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67789697-7ea9-437e-81f9-cca780c41340",
        "cursor": {
          "ref": "1b8964e2-ae1f-4d1a-9e9d-c1174593c745",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d4af52af-803f-4f07-aa4f-6f66d2fb38aa"
        },
        "item": {
          "id": "67789697-7ea9-437e-81f9-cca780c41340",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "69743e0c-312d-4cba-a09b-a2d6df69f6f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 183,
          "responseSize": 1539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da2ad217-d619-40f0-807b-59bb18d70d73",
        "cursor": {
          "ref": "4d701552-0ff5-4ec5-92c6-4cc50f66be5e",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "75b3da5b-6240-423c-bd97-558e5a388319"
        },
        "item": {
          "id": "da2ad217-d619-40f0-807b-59bb18d70d73",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "8f0ed7ed-bb17-4362-89ef-05bca3d9bc3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 209,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de9727f-911a-43f6-9157-0c0e0b5ba6a5",
        "cursor": {
          "ref": "bfedcd20-f19e-49ca-9f60-2e682de05c07",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "052b8cf1-0b90-43a0-82d1-32e04e5bb2c6"
        },
        "item": {
          "id": "6de9727f-911a-43f6-9157-0c0e0b5ba6a5",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "33a1fcc0-2b64-4381-b35f-f55bf2c78e11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 2076
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ebaba66-645a-44bb-9f6f-a1a3fe9d218c",
        "cursor": {
          "ref": "1e682110-7f80-48aa-ac04-61ec2f9a733f",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f9b32560-6918-4aea-a987-41ca054c786b"
        },
        "item": {
          "id": "0ebaba66-645a-44bb-9f6f-a1a3fe9d218c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "17fe4593-9170-4dfd-b5c4-f794c23e4f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 2062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6ef05b-cef9-43ce-a7bb-e9d192d4cde5",
        "cursor": {
          "ref": "25cf64d9-4c14-4f52-8937-e13cf87a1970",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "de012d1a-9e1b-460c-936b-9177e9a8c880"
        },
        "item": {
          "id": "5b6ef05b-cef9-43ce-a7bb-e9d192d4cde5",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "fbf62e08-b601-41ed-88c5-037a4cd9dad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 2060
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f05be48-b517-4c7b-a121-f67c91e409f0",
        "cursor": {
          "ref": "dfe8250d-0cd5-4d06-8643-e1b78c4ca7c5",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0c3d352b-5da7-4cbd-a1fd-ea1e1f692717"
        },
        "item": {
          "id": "1f05be48-b517-4c7b-a121-f67c91e409f0",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "0a8f682c-40e7-4047-b86a-0a90251e6eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 208,
          "responseSize": 2061
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af6d717-954c-43f8-93a3-4f846a2c6b95",
        "cursor": {
          "ref": "505ddb54-e19b-4100-a2f1-5633b5f03859",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c08848f1-3919-4dd8-9bfa-99673b8ee70d"
        },
        "item": {
          "id": "4af6d717-954c-43f8-93a3-4f846a2c6b95",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9bc5bab5-0294-4552-b2f1-c2c16d173dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 183,
          "responseSize": 2082
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b73ccb-d33e-499f-8307-a44e69985298",
        "cursor": {
          "ref": "1184ea23-f1f9-4ed7-baee-e0629c73b587",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2131f781-a89c-49e5-ac3c-157d21e03f59"
        },
        "item": {
          "id": "80b73ccb-d33e-499f-8307-a44e69985298",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "8b22ea6a-f270-4086-bb2f-2f51fdeed744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 192,
          "responseSize": 851
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d20a8d-ded7-4f47-8831-8f791623a6a1",
        "cursor": {
          "ref": "9c7798c4-b728-4a9b-a89d-c7a37735bcd1",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "25209eab-3941-429c-9ef6-abfc5d93d010"
        },
        "item": {
          "id": "c2d20a8d-ded7-4f47-8831-8f791623a6a1",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "09f45757-093e-4df9-b70e-df77603f2bf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 185,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9749e7-daa7-42c7-815b-d17680698b3e",
        "cursor": {
          "ref": "31ce2a2f-49d2-4ac6-a3e0-6522c8e4c162",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "bb450557-7717-4da5-ad15-1b88c3d135bc"
        },
        "item": {
          "id": "2d9749e7-daa7-42c7-815b-d17680698b3e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "2d968e3d-36e4-46b4-a4b1-3469a63c1e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 195,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f3737c-f807-4475-9fce-749eff415d42",
        "cursor": {
          "ref": "321072f9-965f-48db-9a80-fb9a4d892064",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c1e7d484-d956-4c57-954c-2336e12be6b9"
        },
        "item": {
          "id": "05f3737c-f807-4475-9fce-749eff415d42",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1e7f0194-7054-4c51-9a42-05d6cdc8ef2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 209,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c4b320a-8a69-4707-9f18-7ab5e468e891",
        "cursor": {
          "ref": "f405bd3b-6037-4eb7-af5f-e2d2eb37782e",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8400cd2f-427b-4e9a-966d-f5620717f2d6"
        },
        "item": {
          "id": "4c4b320a-8a69-4707-9f18-7ab5e468e891",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c1b7ba76-0b80-4472-9d7f-9772a8ee567b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 200,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "370d8014-2523-4b04-8062-84b0a7a43a31",
        "cursor": {
          "ref": "019a0308-16de-46dd-adb4-3d457e29f0a0",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f83036f6-fa5c-4e89-8cf9-d548d93a85f1"
        },
        "item": {
          "id": "370d8014-2523-4b04-8062-84b0a7a43a31",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "8f8ecd06-306f-45be-b2ef-3b7bf51b5485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 197,
          "responseSize": 868
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc36178d-908b-466a-9c91-226096144fd1",
        "cursor": {
          "ref": "f926c614-7125-4cb8-ada1-75ea2852013f",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "81e73133-d4b8-47e9-9a57-692fb6c542a0"
        },
        "item": {
          "id": "bc36178d-908b-466a-9c91-226096144fd1",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "1f683df9-9413-46f7-acd8-58c76fa6c65e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 194,
          "responseSize": 1209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b9b921-8f5f-4daf-a103-ddb4221e45a2",
        "cursor": {
          "ref": "da2e97e7-b661-49fd-97a0-91f6d8367488",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "2aed6f81-9ac3-4bf4-b58c-a17d3f2aa151"
        },
        "item": {
          "id": "48b9b921-8f5f-4daf-a103-ddb4221e45a2",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "5376f63b-9030-44c5-9d6f-ea6663107b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebaf82ca-1614-4ee9-9072-6e23b57c243a",
        "cursor": {
          "ref": "83290029-6526-41b5-8aab-3f4e3b0354b2",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f463f9a9-fab0-490f-be7a-0c4d6e522cd4"
        },
        "item": {
          "id": "ebaf82ca-1614-4ee9-9072-6e23b57c243a",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "baa73be6-712e-4505-95f0-23dd4baece5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 209,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c78b9151-9c61-45e2-a87b-59cfdad59836",
        "cursor": {
          "ref": "11a3f96c-69dd-489b-ad55-aac57e432c16",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "7260da3d-4de5-423c-9222-fd9585cc100d"
        },
        "item": {
          "id": "c78b9151-9c61-45e2-a87b-59cfdad59836",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "3b33295c-aa32-44df-a39b-5ae1554dcccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 191,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "502fbcd0-7c9a-4746-b9c1-a3823b679219",
        "cursor": {
          "ref": "cf7d85fb-221a-435d-aee4-6e22960cb390",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "0a76f7c4-4638-4b8e-bb0c-fbeea2e40db4"
        },
        "item": {
          "id": "502fbcd0-7c9a-4746-b9c1-a3823b679219",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "bd5e4fd6-0574-46f4-aa54-5c11337e1179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 219,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "558ea62b-be1d-48fc-913c-be671a71a932",
        "cursor": {
          "ref": "9b2a8483-5dfe-44fb-9ab2-39b6aa1be264",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "2449e2f8-5eee-473a-80a2-003523c5d6b7"
        },
        "item": {
          "id": "558ea62b-be1d-48fc-913c-be671a71a932",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "07f0276b-2217-45fe-b9d3-65b28bb7d912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb0291a-19c8-459e-a109-fe41f5df5955",
        "cursor": {
          "ref": "37a533c7-3f66-49b1-a01b-fdd598284c6d",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "26fe040d-1ed4-4dca-9d45-9b52b35583c7"
        },
        "item": {
          "id": "ffb0291a-19c8-459e-a109-fe41f5df5955",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ea66d30b-c466-4d69-a623-a16d2c7f36b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 211,
          "responseSize": 1246
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675eec56-39e7-4a6e-a910-8a2a7f7c404d",
        "cursor": {
          "ref": "e411c988-0254-4666-ba01-8c5f90cc1d4f",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "609c6adb-1f40-4df5-9142-128d63be8bea"
        },
        "item": {
          "id": "675eec56-39e7-4a6e-a910-8a2a7f7c404d",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "6002d9ac-6f9c-416a-a801-193817ba4e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 204,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f11079df-a688-4892-98e1-7588c0b959dd",
        "cursor": {
          "ref": "1c8984a5-5718-424e-9070-70e56ad372d2",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a0397231-cd20-4302-8192-9df3a0a9865e"
        },
        "item": {
          "id": "f11079df-a688-4892-98e1-7588c0b959dd",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "f2b0e5f5-8d35-466c-83ea-808e795e8da8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 195,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e8ea1a1-34fc-43b3-a429-036015db3a8d",
        "cursor": {
          "ref": "04b2d62a-792b-4213-a08c-b2c34fa072b3",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "cf6cc0d5-8ce4-4bd8-a6f3-a838fb9b87ae"
        },
        "item": {
          "id": "9e8ea1a1-34fc-43b3-a429-036015db3a8d",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "29e7ebc8-f253-4e0e-8981-56925c94fb02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 202,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ba60fff-621f-4675-be94-78a97296b35e",
        "cursor": {
          "ref": "5174cade-af99-4f90-9d9c-6230061d14ac",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "03c83585-0832-4bea-aeb4-992ef0e94884"
        },
        "item": {
          "id": "0ba60fff-621f-4675-be94-78a97296b35e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "b2fe868b-c562-42d9-85fa-4e6894942f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 229,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b796c40-ab8a-4d8e-9eda-7d2142127332",
        "cursor": {
          "ref": "be19f056-b7f6-478e-853a-968c62ec2e3e",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2d36bfee-457c-4097-a683-7779b91847c9"
        },
        "item": {
          "id": "7b796c40-ab8a-4d8e-9eda-7d2142127332",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "653f8a84-fd21-42aa-8621-bfa8b6e0f31a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 201,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9553972-177a-4873-ad09-5b70ed895612",
        "cursor": {
          "ref": "e51a86fb-0392-4d2b-ad15-ec616c94afd9",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "21afce54-655e-4e27-a94a-7861e138e306"
        },
        "item": {
          "id": "b9553972-177a-4873-ad09-5b70ed895612",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "8d54ffe5-7488-4bed-9377-b9edafbc50b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 184,
          "responseSize": 1200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "480f4575-747f-4914-9f05-9745ce195a46",
        "cursor": {
          "ref": "6ae228c0-571c-4755-9607-c753d3765461",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "aa9ab78b-1189-4a0d-965a-f035920ee915"
        },
        "item": {
          "id": "480f4575-747f-4914-9f05-9745ce195a46",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "fea832ea-595d-4fb9-ba96-ec88ce6b050c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 200,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476afd7b-081f-43f1-98dc-fe4ccfe03d0b",
        "cursor": {
          "ref": "aead5df5-efe9-4c40-848f-d666dca70357",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "1eed2a5a-b712-4497-9eab-02929e790877"
        },
        "item": {
          "id": "476afd7b-081f-43f1-98dc-fe4ccfe03d0b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "85363809-7463-4c47-9946-9b7d8eeb4ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 206,
          "responseSize": 1135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a674534-e186-454c-89a3-a87be7acc23d",
        "cursor": {
          "ref": "ef5054bf-829e-4933-b06f-fcd0ad9d5bf3",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "87184df5-41a8-40c0-bea7-9357189cd4b2"
        },
        "item": {
          "id": "3a674534-e186-454c-89a3-a87be7acc23d",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "cce2435c-b15c-49bf-b50a-4d828db17b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 203,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5892e85a-aded-47e3-bce1-6a69659c1569",
        "cursor": {
          "ref": "8f655696-44a2-4824-b611-6c3b8d4d6688",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c0fd882b-6ab9-4a3a-81b3-f347625cd26a"
        },
        "item": {
          "id": "5892e85a-aded-47e3-bce1-6a69659c1569",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "0767abe7-7515-4b61-98cc-6de4939f94c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 222,
          "responseSize": 1206
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a28f3c-bc3c-4121-87f1-01e86746ab3e",
        "cursor": {
          "ref": "c978ace2-2857-4f69-aab4-7d3eb96b2173",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "1a3a7586-83d7-4a9f-b2e3-9784f4f7bae3"
        },
        "item": {
          "id": "25a28f3c-bc3c-4121-87f1-01e86746ab3e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "bd6860b3-2cab-4209-b800-b1aa70e25e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 213,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c6132d5-c1e3-4b15-aeba-b191452f0c46",
        "cursor": {
          "ref": "506ddde8-277a-422d-acea-1494ba7757db",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "31350107-e43c-41d3-bec3-069c4887406b"
        },
        "item": {
          "id": "9c6132d5-c1e3-4b15-aeba-b191452f0c46",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "289074fd-d590-4f52-a1da-80e78f1797cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a2fccd-4d23-446b-b412-7161b531a5cc",
        "cursor": {
          "ref": "c67aeba5-fa02-428f-bcc7-12380818031d",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "0494e9ce-0925-43d6-8ff2-1761362a0e57"
        },
        "item": {
          "id": "25a2fccd-4d23-446b-b412-7161b531a5cc",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "7c2a0c64-37db-44a4-9a76-d134f6dfac38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1096
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5180733c-ca46-45b8-b8ca-540ec16f612f",
        "cursor": {
          "ref": "a8cc89cf-b317-4e3c-b5c9-88a8abadb853",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b12fe3ca-570c-4b1a-8ffc-9f4a5ef91d6c"
        },
        "item": {
          "id": "5180733c-ca46-45b8-b8ca-540ec16f612f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f389dedd-62dc-464b-b6ca-7deec284526f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 205,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f136e0c-9f7b-4973-b411-4d64ad8d9a16",
        "cursor": {
          "ref": "f5c0e199-55e7-43d1-8c83-40b5494594ee",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a0e03c78-fcdb-4dbd-9c9a-f5fe3a3b3130"
        },
        "item": {
          "id": "1f136e0c-9f7b-4973-b411-4d64ad8d9a16",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "966a33b0-64c4-4d0c-a430-aa3f2d23f582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 206,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec9db46f-ee95-447a-bd5b-3828bf2ebba5",
        "cursor": {
          "ref": "d86a55ed-9990-45f8-a62d-6d3d29f9ee91",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "126bc151-69c0-4e55-a1f8-d652b31eb140"
        },
        "item": {
          "id": "ec9db46f-ee95-447a-bd5b-3828bf2ebba5",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "761fd4d2-1255-47eb-9002-7552bd3056b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06360a57-d12b-48a9-b7bd-cf8b08047cb8",
        "cursor": {
          "ref": "985e5cf2-4f70-4c94-8b78-1b31282cf3ad",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "cd4c8c33-0dda-4b63-addb-9f4a432a122d"
        },
        "item": {
          "id": "06360a57-d12b-48a9-b7bd-cf8b08047cb8",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9bdd0eb5-53dc-4ee6-8c28-361f4a797cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 197,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3cabc25-3dcc-49e7-8593-2fd212821c43",
        "cursor": {
          "ref": "f3beb338-7d8f-4778-b3b6-bf42a5faba8a",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f82d4196-8ef0-48ff-bb3e-31a893e0c2c1"
        },
        "item": {
          "id": "c3cabc25-3dcc-49e7-8593-2fd212821c43",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b58d2b32-ebe8-482e-a129-25e7ad754920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 198,
          "responseSize": 1225
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f254c64e-4ef5-4558-b898-4507f35e4398",
        "cursor": {
          "ref": "125ce63e-11e9-41b7-83dd-0a47a046a3c8",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f1ba4024-30e2-44a2-8897-a80dff550995"
        },
        "item": {
          "id": "f254c64e-4ef5-4558-b898-4507f35e4398",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "2837c1cc-b240-40e7-a82a-297900963899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 199,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7178d330-c14c-44b1-81cb-802d91785a74",
        "cursor": {
          "ref": "70a9f8db-4eef-4085-8169-5662ea702805",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "2689e871-9d03-48d7-8a6c-eea2ba5fcc2c"
        },
        "item": {
          "id": "7178d330-c14c-44b1-81cb-802d91785a74",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ab0ae878-6811-4f8f-984f-adc1e70bc812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 188,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b324a0-33b6-4500-b110-e72a1487303b",
        "cursor": {
          "ref": "1b568833-77d2-44c9-b842-c7085d4ec3d2",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ead07e4c-f89d-42e4-b1cd-8361d069b2cb"
        },
        "item": {
          "id": "96b324a0-33b6-4500-b110-e72a1487303b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c87e2839-faa3-4460-b4fd-cbdc6a4d652d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 212,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "937340d5-3cd0-4532-8c65-c8a30a217b48",
        "cursor": {
          "ref": "8fb69538-0bc1-4b2d-b905-978f7179b5c0",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "af12047d-2966-455a-ac94-15752a567e47"
        },
        "item": {
          "id": "937340d5-3cd0-4532-8c65-c8a30a217b48",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "f0c58997-ab4b-49ac-b3e9-75c9aac724c3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d51262-2cbf-46be-b252-ac4e6e66a4bf",
        "cursor": {
          "ref": "a9862682-c2fa-4742-8cc2-8abe2c8cf16c",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "40b32930-d47a-4155-a954-58df5b0dfda6"
        },
        "item": {
          "id": "d3d51262-2cbf-46be-b252-ac4e6e66a4bf",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "7f190ad8-04ed-4be9-b89a-af24a4550f47",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 259,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "007a6ec6-2a85-4e81-a611-a2b58f90e606",
        "cursor": {
          "ref": "5f3e5172-a550-40f1-a570-7bc0668965bb",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "48663b5e-cd1c-4a97-8272-aa5e18f3b889"
        },
        "item": {
          "id": "007a6ec6-2a85-4e81-a611-a2b58f90e606",
          "name": "credentials_verify"
        },
        "response": {
          "id": "b6311e2c-d40d-4079-a86b-a8c59c7021cc",
          "status": "OK",
          "code": 200,
          "responseTime": 429,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "099e76d0-312a-4a61-a61a-9b5f498fef2f",
        "cursor": {
          "ref": "a80a7068-b06e-4e8c-9fb1-57a83a682928",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "58bb7eea-a092-426e-80e1-c2edb063592f"
        },
        "item": {
          "id": "099e76d0-312a-4a61-a61a-9b5f498fef2f",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "f5c70472-d44d-4e4f-827d-63db57d9dba1",
          "status": "OK",
          "code": 200,
          "responseTime": 374,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d56c298-e530-402f-971c-c4e42204d29b",
        "cursor": {
          "ref": "05fb1b47-dce4-4c7e-8a3f-67f18c8f353e",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "3e0e29d1-ec7d-4550-959d-6af907e183ce"
        },
        "item": {
          "id": "7d56c298-e530-402f-971c-c4e42204d29b",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "4cae0a1b-430f-4ac3-a265-055aaf557b73",
          "status": "OK",
          "code": 200,
          "responseTime": 386,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebd5420f-3a06-4cc5-addb-5730105e32ec",
        "cursor": {
          "ref": "afeb754b-b1a5-4707-8506-b097be961f52",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7e6630df-4cc9-43bf-ba6b-723c0f5a38fb"
        },
        "item": {
          "id": "ebd5420f-3a06-4cc5-addb-5730105e32ec",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f177b0a9-2d5a-408a-9ebe-889c3f39387e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebd5420f-3a06-4cc5-addb-5730105e32ec",
        "cursor": {
          "ref": "afeb754b-b1a5-4707-8506-b097be961f52",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7e6630df-4cc9-43bf-ba6b-723c0f5a38fb"
        },
        "item": {
          "id": "ebd5420f-3a06-4cc5-addb-5730105e32ec",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f177b0a9-2d5a-408a-9ebe-889c3f39387e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebd5420f-3a06-4cc5-addb-5730105e32ec",
        "cursor": {
          "ref": "afeb754b-b1a5-4707-8506-b097be961f52",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7e6630df-4cc9-43bf-ba6b-723c0f5a38fb"
        },
        "item": {
          "id": "ebd5420f-3a06-4cc5-addb-5730105e32ec",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f177b0a9-2d5a-408a-9ebe-889c3f39387e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45194b15-8864-4520-a553-538d6ab86206",
        "cursor": {
          "ref": "db4a3b50-b1cb-46f8-9940-712aa7680988",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "682a10d0-b542-4bc9-81c0-498b84256c5b"
        },
        "item": {
          "id": "45194b15-8864-4520-a553-538d6ab86206",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "b750cfb9-130a-48c8-b7b7-1b240a89a481",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 196,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e23f5e10-5f5d-452b-8d9f-d963929366bd",
        "cursor": {
          "ref": "6f7ddf32-9a0f-4eaf-9435-4d778c7f344e",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "62f26051-b80f-4b53-a7b2-7f27b6f2a194"
        },
        "item": {
          "id": "e23f5e10-5f5d-452b-8d9f-d963929366bd",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f463d1ae-baed-4ae9-b93a-5aa278c421d0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e23f5e10-5f5d-452b-8d9f-d963929366bd",
        "cursor": {
          "ref": "6f7ddf32-9a0f-4eaf-9435-4d778c7f344e",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "62f26051-b80f-4b53-a7b2-7f27b6f2a194"
        },
        "item": {
          "id": "e23f5e10-5f5d-452b-8d9f-d963929366bd",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f463d1ae-baed-4ae9-b93a-5aa278c421d0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5010e69f-06ae-4262-98a1-74d51baf24bf",
        "cursor": {
          "ref": "8a766673-b5fb-48d2-ab5a-a759372e0c52",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e7881fa4-6392-4cbd-a4b8-7373c0f83ebd"
        },
        "item": {
          "id": "5010e69f-06ae-4262-98a1-74d51baf24bf",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "713140c3-e854-42c2-951d-0ca5cb57a6a5",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 407,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b89c1c-590b-4c52-a85f-722e4445eb15",
        "cursor": {
          "ref": "6a4b913a-ba14-4a95-aaff-486a3c911c18",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7f29be85-d438-4c7c-a72e-ecbe676c8a60"
        },
        "item": {
          "id": "a6b89c1c-590b-4c52-a85f-722e4445eb15",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "78b86709-f648-4106-9f9b-40f435a0994e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b89c1c-590b-4c52-a85f-722e4445eb15",
        "cursor": {
          "ref": "6a4b913a-ba14-4a95-aaff-486a3c911c18",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7f29be85-d438-4c7c-a72e-ecbe676c8a60"
        },
        "item": {
          "id": "a6b89c1c-590b-4c52-a85f-722e4445eb15",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "78b86709-f648-4106-9f9b-40f435a0994e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3648be82-1be0-4e22-be2a-90d802bbb49f",
        "cursor": {
          "ref": "329c0a65-604b-4cf6-b15a-21be0332c4cd",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "82b97100-4b50-40d8-8d17-cbc4d5948dc1"
        },
        "item": {
          "id": "3648be82-1be0-4e22-be2a-90d802bbb49f",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "a129e7ee-8e7c-4291-8ef6-cff9440c589e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 505,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}