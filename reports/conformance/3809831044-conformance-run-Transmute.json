{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "80df36b7-d2f1-4c38-a2bb-30d6505a120d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "5ae1e908-e06b-4955-8e73-2698fd1d40be",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7ce2738f-5760-42fe-bd08-956611996418",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6bca6811-4d97-4d47-884f-d7563ff46320"
                }
              }
            ]
          },
          {
            "id": "e3c999ee-3380-473a-ace4-27759804532c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b533d66a-c327-4504-b658-9b7787d88e32",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ef4ac797-8b20-4598-b0bc-38b4f70d662c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "98be2786-7ff2-432e-a572-11083c5a15dc",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "158642d5-ea93-48d6-81f9-8d7755ac56ef",
            "name": "Positive Testing",
            "item": [
              {
                "id": "aac01d7e-ed28-4c6b-a01f-a2eda427dbcb",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "45b8481e-cc46-4e8f-95ae-b4804bfe9185",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cdbcc6be-5366-4370-be23-5b4c74eb3e5c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4736a106-e0eb-44fe-a862-28a3ad96effa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "41264cdb-712d-4017-bbdc-3022b22eb4a3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "15a7558b-0751-4c00-ad38-0d3a8ac15c56",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1f65806d-8987-4a22-8af4-1c2dea6d37db"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8adb8d63-ae5c-4327-ac59-78f478953619",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "cfd50489-d42e-4d2d-9417-6950765efd8f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "94493f0b-0e93-4bff-ae3b-e97501d30874",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "61c46535-3543-41e6-80d4-124e799b44ab"
            }
          }
        ]
      },
      {
        "id": "e5bde29e-da53-4562-8afa-3ad16ad08377",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7a24aa96-85c8-463d-91ea-b53d131bc8ac",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d122542e-4a3a-48d9-9a7f-9179547e6c38",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f235a786-4981-454c-98eb-130cd7d70e5a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca29f843-6253-478b-bebe-0e3d9c472479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "78098da2-f737-4767-ab36-779b9337542c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b017c4-032c-49a9-9266-0b8fcb1c1ff0",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcd7f2f8-8595-42ba-af02-dda2ae6b590c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cc2285f7-7e84-4da3-af3a-41997aa20ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a7b92b0-e46d-489e-962e-1d5fb2dca097",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f39d30-5a62-40d6-a919-da2baf9abe2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "69f8d7dc-1588-4d22-955f-9bbb9271728b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "42643b1b-e179-4620-8bdc-8e3d22ce3c7c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "38016057-0694-4dea-a630-d53d1ab5cbc8",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de00aecd-7b4d-46d4-9cb5-c834e71065b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "052e3fea-d8d8-441e-90ee-ddf62c0fd03b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b36c4d3-f879-450e-a6f3-55e39073231e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ee930c0-053a-4949-abc8-aca7cf029f4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4649e82-e9f2-4517-a9d6-93e9dd0f569e",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77adfaae-2b99-4357-bca6-4bb1c6040c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2e04aca7-12d0-4e27-bcda-87cfc5ff9372"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae54689-5398-49ea-bc00-e829623b0165",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "b4198f81-030b-408a-9314-e93cf721d49a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1565515b-2d9c-4a46-985f-348f27d97432",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e51779ff-49ba-4702-832c-4162c157e756",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c508c1b1-57ae-4980-91a8-83bbff42a5e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "26fc154b-e239-49aa-aa9a-4dad754a8643"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3b66e4ed-29cf-45e6-b61e-c90c2628f176",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "4cd8fe26-e807-4f6e-8e8c-ff916b2b6242"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d5cd11b7-a74e-493f-be73-ed2edf6b180b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6db40291-5764-4ba7-8412-b477a3ac0f50"
            }
          }
        ]
      },
      {
        "id": "42b8ae12-2ac2-425c-bc65-5a12277a015f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "89b3589d-1aa7-4981-bca1-6f897d0280d5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "86e4bcfe-93d1-4961-bac3-62b65ce60180",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "32a3c9ea-c6e3-4166-96b3-785dec69f904",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a859a789-a432-4b4c-917a-5640a9ccc9e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65feaa51-581c-4700-a0ed-78af7ff4c341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bacdffc5-64e8-4c8c-908b-871c296bfd49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53091cbd-e0ba-4c10-aa61-2ab5d6262301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0623b470-8654-4735-a23e-6a72242a647c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db73452a-6edd-4209-8090-404769864c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fb0dcbf-c017-4f4b-9d09-8bb415b37a90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13b9e32a-d9aa-48a3-a10a-99f0716ae861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf3f31a1-3178-485f-a64f-47499254714d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e6f735-395e-4cb1-911b-386e018d9afb",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2f7e349-0ce2-4c66-b1a4-7dc295b7db58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a4db10b-a932-49e9-9ee4-cd179bcd40a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f60e84-d742-4cfd-8484-d2a890702284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fbb8e479-b9a6-4531-92c4-cf93521c59e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae94258-f0b7-442b-95a3-af4da8746ccf",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd8b4519-a169-44d8-a4df-4e9204fa2d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04f96aaa-d9eb-496c-8e57-4f79ebeec4ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "844c6715-0839-48e6-b3f3-2a8ea6775313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d69e1ab-4c0a-4c20-8139-bb2c5cf4ad7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e74ec745-aa85-4105-a2e1-a7b172c00e08",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97cfcc3-0768-4121-b7e9-0dff2d972e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0145696d-1c02-435d-970a-0c9719d45ba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba7ca9f-9001-4580-b1e6-beb474cc7f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6988eab-3571-4057-8cde-de1f4f7b1b5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a821ca59-3f75-4ec1-97d7-4d2ee25b904a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1afbd6fd-fc51-48e1-9baf-9006ec562470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93aade74-e57a-43a2-b176-7fc4886581ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d1b9af9-ec42-48ea-9a4f-2df0052e62d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47c8f1f5-70fd-45d2-8ebf-b124ed841e30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19652b5c-f871-4957-8138-98f4d2864c46",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d0e93d-3f1d-404c-91f1-07186c77560c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b5da4aa-e13e-4b3f-a7ab-30bd6ba62f5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558a2a06-1445-49df-933d-7b6b600d0f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32e2524b-a41c-426c-883f-7dcaf20df0c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77fc6191-bb7a-490b-911a-3b5708aa49a3",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea17ce3-feb9-42e1-8ed0-5ca3456a23a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6b3041b-f7c4-4c1c-9654-0b85a8932a06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e4ee74-c80c-4a20-ae71-d2783814352a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96fcf422-6dbc-449f-910a-5b3d640074b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac8e292-bf8d-440e-8c7b-43ed8d393ddd",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf2a91a2-a8a5-43ed-b7fa-e20265740a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97173d9e-affb-41bf-a066-6b91da0db11e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "856d0da6-b0a3-4179-ab07-f04717c9783a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87a35c0d-e559-418a-9aa9-92fd7fd56409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1169724-dade-4ac9-b9dd-42312584d89f",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47226521-ca09-4f4a-83dc-3400eb5ab116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bc06823-c97c-4006-8167-08b40ae2b683"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e471d78-0d28-46f3-942f-576ca8f76ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c0e95ab-80c0-4d3a-ab51-9e3edc1e6abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "632f31fe-505d-412b-8b8f-1c2eb1810d10",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6fb2aa6-d583-4e1f-bb6e-cc16d2164064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "203401b8-8309-4e35-ae01-a64de09bda30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d394142-e92a-42ff-b818-8f46a33de818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2dac9cad-613e-4610-9a9e-68b0e149497a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "015e5719-b401-4931-b18d-1ca028fe4f52",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17e00e6b-d6f4-49e0-8b13-e54c902c7eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d5d6038-2fe3-4409-b936-f7866bc5922f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9bf8622-e566-47b7-b380-f77d01e59550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b2eefa2-169e-4c47-ab98-9e85a253f2ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1ef35e3-e147-4d15-9f0a-33dd0fcc20ca",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b72b81f7-d7e3-4569-94b5-8a5a40e2cbe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15fc467d-5f56-4996-a0e5-f188e632879b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce56d983-0743-480a-9517-4c6bd57d8f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af407706-29c3-472f-bf80-c64a6f8a399c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e289e125-51e6-40fd-bd84-aa0234caaaad",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eadb9bb6-b694-4090-a0a5-b7c8a053cb25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf1a68ec-2ab3-469f-806b-4e0b39c54c28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "465715db-7980-4714-ac2d-595ece9c0792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "9591ef80-6382-44f6-855c-36248704313e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d13951-7bab-4917-835c-b1fea64131e2",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7db4f97-2b68-4a32-980b-4237ef6ece4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09ea5356-53ee-4911-a16e-284f7e365a52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c38157-3f0c-4ed5-9288-5da9db25e400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dfb6e14c-f061-4fa0-82ec-35320308e5f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ce34e3-a884-4c03-9a01-ecd99ae5a5c9",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0037458f-d8b9-4016-b262-e3f7b9fcf066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38e6022a-5e67-42a8-998e-6870c55bf8d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e6cd8d1-d4ff-458a-b78d-01c3e9e70d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10d156f8-2124-4d86-8b70-c3565397ec9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0126b4e4-6644-4eb7-bed9-7d8e116d2cb8",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4626fa2-3fe4-451a-86b5-82807048bd79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8242bc2e-8617-458e-920c-2791f637cc7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d019ffe2-258f-4875-9750-d68938929c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c20ad4e8-4eb7-428a-b48c-33142637db67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef460500-ea34-4258-9a92-37039d2ed577",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb3d8384-0ce6-4964-bc4a-623dfa8c4700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75ff7119-6145-4b8c-88c7-c0be81d2c03f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84081186-3ee8-4adb-84be-8205d12fc8ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8e9e3e1-b98d-4450-a15d-9052ef460d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27900a5e-0820-4227-8d78-b21cccb564f6",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0077eb8c-7455-4ff5-9562-5ed6a585ba5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e6c58d4-8c77-48a4-a766-448103b69224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3896ac6-61fe-41bf-aa51-83117288bab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a39eda66-1936-4dfa-ad84-439760250f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38715f5d-6806-447b-bb68-f526b23b41b4",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ccecefb-c564-4499-8279-b8575e1a4e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc5a47c2-fd54-4ed3-82ef-1190ad6a143b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3d07f19-5d59-4d5f-b44a-e86cfa1cf34a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "61043391-465b-4c3b-be5a-1384450d3016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa318f6-4033-4f69-9503-023d0f49b359",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e432b0-9080-452e-b681-8855a45b3b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5073619-68b8-461c-ba98-4069919c995e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32db9726-12f1-49de-8bbf-250b6dbdf5a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "614fb9b9-8564-4a5d-8ea8-1eb3215b7418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b09703af-33b5-465a-a2b7-90b7bcf269b6",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b6caef-a16b-41aa-bcc5-59a83ecc5d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "038eb2f9-a39d-4d34-afc4-c9250ab86f9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cd20dfa-3e8d-4d33-870b-882778edf850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e686d23c-9f9f-4f18-83e4-a912534ffa48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82494f70-346c-40b2-9b9c-fdb2b86fa5e5",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac8f53d6-86be-427a-a9a6-790189161f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "530b4565-e545-481c-b1d7-88e9ab81d8f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6c5cf9-610a-491b-81f6-b4420e1e922d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "65beb211-fea9-408d-a363-87ad5de04aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9022389-f02f-4734-8b39-ff63d064577a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "792d1308-8264-4fa4-b93d-cd3c2e966d2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01aba2c5-3fe9-47f4-812e-2f4e5b2251d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd0c507f-0217-4ebf-abe4-cfda6b320a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0639487f-4e1d-4ef2-8e42-770c7ed06fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29975612-50b4-46bb-b050-ad66b43b0cc8",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb0f8ec0-1239-44c9-9c51-208b4141035f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a86cdb5e-4339-4c0b-bdfe-65a1b05b2cde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9076b59-ae68-4e96-ab40-ffb48b642fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "618d044f-5c4c-48ff-9e98-8ff02b1c17c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea4d762a-87c5-4245-ad62-26cd30c69a41",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe279e4e-dddb-48be-b220-959da0aeac81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34b86117-3f1d-4c98-8117-817bc9aab311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8a2609c-8635-47b9-ab6c-fa069cdb6cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "92c477bf-c1aa-4799-8f92-4b2124efeba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55f250c-942d-4bd6-9ebd-1693a8e2ea1a",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8239a27-eecf-4869-81ee-b8bbdc33a652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd9368e5-7b8a-4d1e-a39a-bd523c1fff3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bfb2744-41cc-4ca5-973f-01a33584201b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f577122-54cc-4ea8-a247-cf5cf323ed04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0140cc3-a755-44bc-b9e0-d5ad7b649e92",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f155aa-5aca-464f-b01c-477649d9a372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8757d5c6-a562-4cdf-945e-ceb3f9f19f75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e68adc-8340-4690-ad27-807eb3fda8bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0dec2ba-a664-4166-8d68-e59ef839f400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bdbcdc9-88ae-46eb-8f14-35c895d71f61",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7ce01f-5969-4ac9-841e-8ab41af71b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6eb757b-e9f9-4d8f-8428-085aff202931"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32abda35-8584-47aa-8d0b-df58431ccccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a07a5d4-8226-475c-95a1-ee278f8bdbb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be2339d1-d136-4b5d-9b97-5d980c451eb7",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46de13f2-d74e-4d7e-92eb-d997fff808c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26e51026-f4ce-4d42-adf0-f9cf59bf4041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b89375-8a0a-4372-a6b9-2344795028ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "82945835-9ecf-4066-a83d-d681d0b5b996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b6120e-3a27-47a9-a475-8460964b90c5",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a98e28d-9674-47ea-9686-c20ae141b6fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3914633-5fbc-4b11-bc27-2855e3472b90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c47e89d1-f505-474a-9f67-99249fee3b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "247c5de5-ab3f-4b21-9523-43c4345dcc7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a1dc86-5bac-4d35-929a-213ff3530713",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73ddffd-d89a-4bbc-bf2d-9c4a7f3babc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f58b26e6-cd68-4652-bdc2-33e82b99efae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02894ea2-5462-47bb-ae02-c96a0767ead2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "00c5e525-fe97-4379-9106-e4d0b8a5ecae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f18bb1d-e054-4d73-82c2-ab304061c8be",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d1d4fc-4d97-4824-9987-43ba81e85890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc485a11-b6c2-4b4e-8cf0-19eb03e54842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b084d8-fbf6-4b5c-88c9-e003cba2b3c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e92c4bb4-ba2c-45e2-88d2-68a1e764388e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaef60b4-9690-423c-b17a-2f99ecedecbd",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29dc020d-2374-46be-9b00-796efb792c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1633ca4-7334-4cba-b44d-5604a24b239f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd60d81-efe7-486e-9c75-37581cc274fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fc15a9a-1c33-4c7e-a0ae-55a2e09c5bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe13316-1078-4d30-8097-c464c079dcbb",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f8d1ac-c352-4836-87d0-2ee1e6aed137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dc12dfe-d787-48a4-a933-c684bc2af72f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb01a7d-4403-419f-b7cd-0dc05ed20494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8ad9430-6c98-4589-a957-a91bc07b75b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eac18db-4b9e-46b1-b8c0-b61940a7c476",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a63e7b73-4b81-4eb9-ae2f-be106043c12d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e90c7e15-72de-44bf-977d-eaa1dd4bba6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f07c6704-b668-475f-afe3-d38319353f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "17d17941-addd-4c56-9744-f68611010288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f49fbad-1b9b-4240-bab5-ac10218538dc",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6303efe4-06d4-4ff5-ac42-d081e8c00b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf2dee61-f7df-483d-8fb5-384ee48aab28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b8b887-f1dc-415e-a704-2484855cd9e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "74d0e424-80d3-4753-a8c3-50071b4b36cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec5d4b4a-a7ff-4683-85f8-d29d9ab90901",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09968380-3e47-434e-b77f-0d373c714058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f0c91552-0208-4a2f-9b08-84739df60a06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b5ddb1a-473c-4181-9bfb-a9570778f317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d0ed1dbe-cb15-491b-aec1-8f19db861e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85237773-c029-4c06-823d-406a16d6da12",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf33eb0-f3e1-49b2-a64b-d96b4476ff24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92c3557c-0dda-4e70-8ac0-0d0fcbd3698d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "348b07c2-abc3-447c-84ec-3ce9b24c18c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "953bd134-5167-4c29-9684-70873f812a69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa864663-3bfc-430c-a33d-8bc723ab678a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f58c3cf7-096d-44ca-8423-bc70ab267b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f270b698-d70d-41c3-98c2-db0b7ce5f83c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84adb91a-ca08-4d88-a287-c31113baacd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0da8b90-c865-4b29-bd79-63106b3bf522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "289ebfeb-d71e-47a0-aad4-013af631496d",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75fedc47-f1ed-457b-8fcb-aca1dee411e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57e02590-998b-4dcf-b398-71b7f1afb8cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca2d01c4-0f3d-484c-b0c2-7c4819a2bf38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4655b071-80f9-41b5-97ec-5b42e81188ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c23553c6-4f4e-4a79-9f10-624b4939991f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e291b1be-8453-44fd-ba42-63774d633ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d6e08c0-0bd2-4c06-b249-6ebd0fa09db9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b143d8-4cdf-43af-92d3-cfdab1f2a6ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7a8bc97-5ba0-46a9-89da-b71af0026724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcc8b96e-5f6e-49b4-ad16-b8e5bf05db1a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "405abe5d-5ab0-4c07-92ee-cded1c2d4e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a43f5855-3f57-4741-9c7e-1c3eef386122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "165afa2b-ad50-4481-825d-619b2239c841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "747ccc6e-4cb7-42cc-b6b8-4f76d37053b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fda248e9-95b3-44e0-9e73-25e7c6b9c21c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c7959b-f5f8-4396-8e9c-88ce3f910d2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cba7ed13-9951-4cc5-a902-0a098712f0ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64fca62a-ab27-4ac4-879a-79bfb07d8e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "6c24c4fc-fdea-4705-b5c5-f8885ac5c27d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb799e6b-fbea-4038-8e44-34eb16bff2a1",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f82f659c-36cb-474f-9e0e-4aa6ed49fb36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cda17db9-c68d-4bb8-8629-58295cde202f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3bd6332-4f75-4fe2-b0f8-83f76666bece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4efc7aab-7410-4043-a645-103d0a4a773c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "461b5120-f787-4698-93a5-3041c65098aa",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bfdc28f-7449-4cf7-af79-e71e27143126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17a2f676-69db-404b-9aef-e5c583f728e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8593f775-32fa-4844-bdef-b1be70037ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "df7ea9cb-5f8f-4cba-a06e-4d438a8e92ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2847dd8-41a1-41ce-a5b0-72d24abd85a4",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7be683-6325-4662-8871-fedf8868c1dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8f504df-3920-4f21-9063-6df8a6fa5734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8df444a-0bdd-4894-acf9-151fcad1d9c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e6626e5-e378-4367-abaa-794ff0e8bfea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b3b674-427e-48bb-a9b2-019dc3eff63b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccba056c-5c80-4ad0-81a0-87f5204da504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b78915c-0116-472a-9540-47f13e3ed9f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a3fdc8-efe6-44c4-9876-218236d48e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "53e8e7f4-97d7-4a5a-8b7c-8b5fdb782ace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b2418d0-3321-47b9-b3a7-e19fa29305c6",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeaaa93e-2a9a-420c-b1ee-b472c12bbfa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f28ed47-b178-4a2c-895f-a248db867ed9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d342cf2-d079-4967-b43c-3ac9f3a0c70e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a24d885-7048-4298-8048-deb3cce46720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27fbbed2-6c26-4de4-9de5-41b4ea295513",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c3f5d4-5d4d-4faa-acda-3fed98d71fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f765d5c-ecc3-41c3-a03d-fe0becd294da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3ffc9a-5477-4cbd-b743-1b97fcfe6690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf2e6573-cbb9-487e-b3b4-2713ca38be21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62aea08b-709b-4969-b236-330d04d74b3b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9466d48e-7390-4f18-9e92-72b80dcc653c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c412a4ce-8616-4815-b11e-5807c4bce8f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f14f7f-e599-4243-b0ae-daa780232a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cabd8f6e-173b-4afa-843f-a13c3a7ae5ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4aea81f-b80b-49a5-9137-3fda164101f2",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31cb96c7-030f-467b-b12b-fc1cb2c1b2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "621f5c66-c6ed-4d5e-a6cf-8a6d802c0e24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f45bf11f-6185-406b-a89c-8f5b8c2526b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "24bde7fc-fd0d-446b-b122-2f9d94d06cd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "195c5bc4-2ee2-4aa3-86f3-61389109ad0e",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6c9bc5-874f-4786-bed2-70aa458c72e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e6bc7f1-eed4-4f18-bf10-5eb844d47b8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "281fb32a-99ff-4498-ae74-c19e21c03e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5be36cb-ac07-4a9c-9271-de3b6724be18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4af8294-d41b-4e63-b61a-f3987183c87c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d34fb99-629e-42fd-87b3-2aa1a478cad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1c74a2b-bcf7-4389-865f-c2efb718304e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc4bd63d-7400-476d-94d0-834a92fcf18b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "78e03d68-5f99-4ef3-bd3c-4e6f108cb96f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2991aee0-e452-4cd1-8ee0-31136933710b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ba42e8-d403-4116-bb5b-ed780dff75d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab48efe7-608c-47c7-ac11-6a5dab3b192c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05a80628-3fcc-4290-b946-c37f529f0950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "335c5dfa-c1a1-46b8-92ce-6bbdcd2b51f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d72b1e64-db1a-46bd-8ddc-9dab72253011",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c45c4d-126e-4b30-a515-4d90c6dd77c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86b9e269-a469-4b29-8d20-939041fe538f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca2af3c-83f8-4bc1-9371-517b6eaf8529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b110b1b-fa7f-48a8-a557-c6bfb9bb7c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a10f486a-3e62-4137-bbba-aed89c626c1b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ab3049-a699-4f9a-820e-55b889fbf63e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8807fa79-45a4-4552-937a-97de661aebff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e41903-f3d1-455c-87f2-83796bdcf8fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb209b25-b863-4841-bf72-8e64a20bee88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aba09cf2-d800-412a-8a14-27bfe2f9e092",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36522896-18cf-47cb-939c-f719b23cc837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bb3e3c0-b8fb-4591-ba8b-12eb2c510e1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f68cbab-65cb-4829-8b4c-48ece2357ba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "7579ac6e-4fe7-4f95-aeb8-f03bdbfbbfdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2cc954e-dbe1-4769-aab0-203f0f44b50f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be06989-275e-47a8-a338-f05fe009cf31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ada1559-17e4-4233-934b-4938454719b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65492821-0042-4068-a123-45d816083d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "388a09d6-6dea-4678-82c4-19f2b8c2ef5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "548eff0a-ea29-4bff-ad13-0a776c3fa713",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd9709a1-edd7-4ee4-9f67-6ade498b6390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d481d4c1-45cf-43f7-b3aa-46ea9f7e07f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab80fc9-8d42-4fb2-bfe2-e11224071116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff741c82-3e2d-407d-a86a-f10ee6b1a020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "186b7435-2c11-484d-b706-4e69145a053f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a951b8b0-0490-4ece-831b-7890b58f82e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dba738c-57cc-4546-8ef5-3de51bb8c802"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e8efa87-a0fe-4a4c-9839-1107b600648b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "11642130-8d98-43cd-95ea-d8ccd4c61ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f5eceae-f517-457c-9331-be2d57772c73",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c9a4d8-90d4-4574-8c66-abf84ba97793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "754391ea-f587-4404-abe1-21528188fe06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9902af71-bfaf-4c71-bd14-bd91bdc78e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba946680-5ad3-484c-9b74-b28550cd412b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "390b1513-c55e-435d-83b2-76f7f903613d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a15e6717-669c-4c4d-863c-16f87561e939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7143630e-e649-4154-b89a-a59d9093e13c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eb240a7-108e-4832-967b-b0d32c4c069b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "25ac5f4c-2edd-471e-8ba7-aa9ad11eb231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2b95974-7725-48c6-9284-391d05c644e8",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce5375ff-de03-4478-90de-aac8d04a1c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73a82c23-864c-4db3-be23-fbfbe3c7838c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb77faf0-6da8-4eb3-9e33-1e090f78f5f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "fada0ef4-551b-4c13-a4f2-cdba10a68093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34ebbac2-776f-47de-bf4c-27f1bf6d9bf7",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f87be5c-9906-4494-a44d-ea0b8fe3b154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9102b570-d325-4255-96a2-ecae1c59541a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a427f9-1f8f-47ac-a82e-25b756c6a530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef9473ba-619f-4d45-b74e-3e3b301b1afc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9a82d88-2ed9-4451-a6cf-4744a7d57f17",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a77f9b4-9d11-4fd3-bf3f-8819ea49c9b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2252f96-b7f9-4b40-8d7b-daf816ab405c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a3ca4bf-48a5-4aab-a579-31f4a3b4faba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c49c6d7-2dbd-459e-9a8e-063a6f8cd6f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc9538e-3262-408e-a782-a613db3b6424",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3be7f8be-ea32-48c9-8487-00651306cb6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36152545-fff5-4ed2-a5a4-c00b8a7238d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b96a5817-2836-4ae1-9309-ab1a5512fe1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "60acdf09-fab1-41f1-a7e8-52567c58939f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b85cf608-c47c-444e-8f37-a572907cb7d9",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb5eba04-52fb-4d47-9198-ddb4596a1499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a252998d-65a6-4f69-aec7-6f72d5d344f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc1fa20-1e6f-4521-9958-3cb1c3b8d025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d492ae06-135d-452c-830b-c34e2ae53083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cabeebe-f4bb-4174-a80c-14e8719c079d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a9b492d-0ac7-4f56-8545-5e1466753ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f022fcb-6e2e-49d7-a2d4-2cd058208f95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6891be8d-685f-4ce7-a9dc-fce32e5b3983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "29eb2865-9c30-40b0-af4b-86cf54ed21dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b31ae9-cfb2-41b2-80d8-280b22d2c0b5",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de48f6c5-3209-4ef8-b120-5116a76dbbf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f9baf7d-98c9-42cf-9742-2c61b9f5b104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d4cf689-fe7d-4032-9949-402190e8495e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a262d645-8e9c-47b4-a71c-bdea5331db56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b579407b-72d3-416f-a751-0c87ea66b4dc",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f10554d4-263e-4033-a6d4-71d8dcb7f69d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6b8cef6-dc0b-45f8-9f2b-38c207990378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5030443-f29d-4fdc-8d98-1875ffa6b7dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f23c1ae-d93a-48c3-b9ce-63a84b9e798f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78cc23a5-cfa3-4a3a-9fdf-e80238c90348",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af12932-197e-4ba0-80b5-ee5ad5064443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e25cc4f0-b5e3-4d76-ba33-f9aea5addd4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d90e4d3-1af3-453b-99c6-1f2075a784e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9da3cea-8a78-45e1-ad62-a7c4cdcdd1c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a441b9ae-bafb-4836-962d-0b1e2cf3a4bf",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "805ca0c3-07aa-4128-8abe-0ca40d9f3585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8893e39f-0b0e-4d80-bb3e-b3e36d26ccd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd027764-336c-49a3-83e7-9777c42a0a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "203107af-78f7-4c71-bd64-368ab7d33389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eefd9a18-d6ca-49e4-a02c-f9ec4f290f96",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d605a6-c6ff-4c08-9d99-1aa11be3f2a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d18e6851-8628-4f03-bc39-e8a0816b8382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f5f4af6-6208-485e-930f-804b47f838bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "034283ee-d65b-4fff-bec6-bceffcf35a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c43469f3-58fb-4540-b3ac-6dc92762617f",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec46a1b-405b-4f0f-a6e1-3ed391722c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1593e0b3-1c5b-4908-aa65-4bdbbcdcfbfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f095e54c-fb4a-453a-b56a-17fbfda2b24f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca559a60-67f6-4fe2-8587-82c8b3f3e40f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38adb451-beba-4889-a3ac-bb10a0a68605",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c5fa2c-e381-41e7-a991-a5ecb674630a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "004d6239-24f7-4afc-9f06-acff6d6e1094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f7744a2-220b-41b7-87e2-a554a03503b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7cf71ba6-e246-4712-a699-7f6365747e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af909c88-33cd-478a-ad77-b13e2430b65e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "210d0cbf-646b-4a83-ace6-efa051b77ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92ad0d0a-0d60-4caa-b03b-49cdb474a61f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d459d769-9b52-4f44-8e89-377684ac60f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "306c04c7-7baa-41e1-81e6-6771f60d4dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e24fe1-f0c6-4127-a028-36c8781db8a8",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e969c838-4a55-4541-91d1-3018bd2ef476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43b2ca4d-17c1-4803-a0c9-631b5bef99e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46da3a8a-40fb-425f-8956-2a05642de659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "db868d24-6af0-46fe-aab5-cd4fc676e4de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b8e6703-115a-4fbe-bba5-46d879379ca6",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a0cdb2b-019f-4888-8b4f-0c6f4de5fd44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11b5adca-0a6b-4081-9861-d1e764d912f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc3e3497-e298-4655-af03-61becc7999d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddf1f33b-3662-4280-a29e-e1c2141bd7e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed9fdea4-97e5-4cad-b0c7-2e18341b3461",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c196d1d4-b9be-4950-b643-d6c095b2a1f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d2b6f0b-7194-4b18-a964-be772dacc39f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5133b725-8107-438a-bd32-f630d0f3f1af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f1516f9-c5ba-4adb-b605-6f704a7d406b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0a50f18-e8c9-4f98-ac0f-179fc8a7f3dd",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f21347-18d3-459c-b86c-f9d36755632d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75acfc02-7879-4216-a728-ce09322bc046"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5003d184-dcb8-4859-92b7-6011900b0a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d72f7150-c8c0-41a6-8cb4-4d4d0dbe608c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d480e5ec-fef3-4d4a-a410-2956db3d8922",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b94041-8542-4d3c-9271-460e18bb23dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "065c1eca-68dc-4dc1-b747-3a9cdf7eef8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da5cc50b-9237-4ff9-87b8-0fccd5fbb335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "78862a80-d13a-468b-be6a-8d6b1fbb2bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08397c02-5f2c-496c-89ac-99f6879b1bb0",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "595bab88-79d5-41f6-b72d-c09e6c041db3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40adbb21-d7e2-4dad-b871-95036ca57b91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb8ae4f-7505-4b6f-8c87-a6887c35b761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7919318a-c762-4f56-8700-85579a99a1a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83e5c591-75c1-453d-ae73-c223165d47b4",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b055d328-8709-4dce-a679-25e59225ec8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0dade68-8deb-4c2b-9b26-1ef084f2b2ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe9ca1d-aefc-410b-9eb0-d39ed3a786d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1a55a13-421b-41da-b64f-7d15a52b5caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef3d047a-fdd1-44c7-aace-d9940cf258c6",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd3691f3-9c52-4266-addd-6e7361a335ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "217c4a35-b14c-4d9a-b757-cb4f5fc1917b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28029738-47de-4c40-b5c9-00bf4cf7c948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3be55b98-14c7-4fc9-a670-91217c45dbe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce37046-db44-44b0-a656-6987198e201c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9084680-63eb-4949-9468-46f7f382290e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b36e0ef1-2f54-4854-a659-605996374a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a14e0e6-81a9-4538-a44c-4ccab6b99921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c838bfcc-acbd-4e31-a234-c218cf16a09f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b0599ee-7771-45be-b713-9fff2031cee6",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8dc22a8-b395-4e74-8efd-79995b3e09b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e293b9a5-0aca-401a-a898-79e33a2cf937"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f37270-f78a-4fee-b283-6fe840c9a0e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2e819900-d25a-429b-8d94-b0739bac22c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04446883-d363-41d9-b499-7b7fb35d014e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "970333fc-81e7-4e00-b309-800f128a0301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe278a5d-3868-44fd-be78-e214c250906f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c1f33f-0cbb-444a-b798-4581a0e69df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "653c236e-fe7c-40d7-895c-e207b5c9d848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0934d5f-1ec0-4f79-9e71-0f1f4e706e55",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77e4c20d-09df-4af8-8897-2e9acf1eebe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31009c67-5a69-49e3-8524-617715e15c21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a7e7db-150a-45d3-8b70-50854072286a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "81284445-042e-45d9-996d-e435de1b51f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8e5cec8-c4dd-47a6-8bc1-86ae00b92a7b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dccb550-dd93-4180-9f9d-d49f3fbbc5e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1394d2a6-7dee-4556-a5e9-954c76d38c12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78b7609e-7a90-4989-988c-8cede3cb6833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8fa7e829-2eba-49ec-ab8f-c6d6539bd30d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2753d007-4320-4e24-a2f0-90a74c0e1d14",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7c03dde-fd65-40e0-8248-5864720bd26b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b85e2337-8b7a-449a-93db-c6904eb0a90d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012689d4-d850-4140-a36b-be83d8755736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e8da8fb-7111-46b3-8d4e-eea7df82ef84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e810812-566f-407c-a8db-750df7048231",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "304348f9-25c7-4caa-b1ec-00015c26e67d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb9ecdea-25e8-43b7-be7d-08691948347c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ed6f48-aaba-4082-bae4-262018b92deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "04329729-d742-4391-849a-02f7fac17a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d927e280-96fb-432c-880c-4fafd01b0bca",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec7b7a9-30e1-4a31-9ad1-33ec7b0e7efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d7129c9-9963-48a0-b7c3-ca956b9d39d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abf230ce-167d-4f78-80d6-b72b5c9293ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "51e7f4a9-bbf9-4fd7-8d83-a743a54e1bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74f596e5-c5db-4bf9-a087-f87d2bcf9b6b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62720ac4-c99d-4311-9a16-fc59ed08651d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f08aa31a-b4d4-45d3-bd7c-4d282ceddf8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44087ac6-2d4b-4e8d-870c-d71b4aa7e849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "95234373-89c4-4afb-9fc1-642013f7c0d8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dba94cfc-93d5-40cf-bda9-51374e786550",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7ba6809d-a82a-4d80-b600-128fad24b6ec",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea7c64f3-d526-4bbd-8f13-4faec92b1b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ce8c097c-35b2-4693-ae38-dc13ae8d0122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21af3baf-39cf-4478-97ab-8c2b824f3d6f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "d183271f-e5ad-4a47-8345-ecf0c8774b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7072a0b6-c690-4239-9577-93de017d029a",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "375341f3-61f8-409d-b79b-b4a5225563bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dfee3580-d31b-4884-8572-91027cc98e3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc7fb15a-f3ca-4ecb-beba-8026cb2a2b36",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "af2b3c36-7aa1-4c66-bf12-9923a74bbb75"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d46eac32-703d-4f6a-a87d-d66d73e850da",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c453725-8242-4256-8201-a218787f386c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "58a2a3d9-caf6-4e87-8a5d-43ec75a8685b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4530ebd0-bbd3-4294-bbaf-1d38b0b41fe3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a4b2bbde-91da-4305-a702-5b63b9240205",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6fdc838e-a24c-4dc3-856f-fc0ec48a6b4d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a7b48db5-514c-4c88-845a-fc9afcb5e80b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1ae53066-4e54-4202-8927-40964ae142c1"
                }
              }
            ]
          },
          {
            "id": "e6dec52e-7261-4554-8ae2-c866d00aed36",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d4e4f698-328e-4fa4-ab84-0d06926db050",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aaee5494-1e43-457b-9160-2eef6d655cbe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "008bca5c-5b2a-412e-a88b-465872778ed8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62f1411b-a83c-43cd-a968-a0e51e37cea7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "04bb52c4-b1bb-415c-a30b-2968aed6ffe9"
                    }
                  }
                ]
              },
              {
                "id": "015d6f12-1242-4d05-be38-50654276f46e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "565f2e01-44fe-4faa-bc11-d76cc640662c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b07b6d02-958b-49db-a9d5-17b43bc204b8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e50ed8c3-cd92-448e-8334-5a205fad5624",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ca3dd40d-dbc5-4289-8738-f68be2aa4893"
                    }
                  }
                ]
              },
              {
                "id": "b4fffeae-cc26-41db-ad0c-8724f8bb5363",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "29e44e06-ccd9-4743-912d-635c211a8315",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "24ed147e-9c1c-4c8c-b9a3-b25101037661"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a7caf997-e9ea-4d11-a067-a53dc7f7197c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "73359e28-c4ea-4450-bf8e-1dbf216dcfe2"
                    }
                  }
                ]
              },
              {
                "id": "fe0d916e-f95a-456d-ade8-3cc939626eb7",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "81e6e37d-b831-4996-b01d-485dd7d3c781",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b2f6b19e-6006-43e6-afc6-d88ca4d67452"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c3ae028-cd82-42d9-8fb6-86811e7ebe26",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "061f9319-d815-414a-b48f-09282c9d9e7d"
                    }
                  }
                ]
              },
              {
                "id": "50d582a8-015a-4fa0-8397-241128cdf14b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "96196e56-01e0-4392-9649-e63acbb5c9ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9a938fdc-a83b-42cb-90e8-c694f2c146cf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c2a35bdd-9d9d-4a96-926f-6fdc84fe3519",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3a92b96e-a565-448f-9112-f44e4a903335"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0a47d61e-d4fb-4228-b840-e711f2fa59b5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7d5c1c87-00c8-4bb2-a7a8-5e247ec6bf8c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "54321361-13fe-46a2-b81a-63041d88428c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b7a8414f-8e29-4d03-8a22-488f2cfa5661"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4679b995-e706-4c7e-a047-2e8d368b406c",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "910907fc-423f-4793-a2be-b93ca9115592"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "34b1d1ce-0791-475a-82cf-f25433dee66f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "19c4ed0d-9e1b-4a26-a4d4-e74518b4f775"
            }
          }
        ]
      },
      {
        "id": "299b7aff-fada-486e-8aeb-10946ebab375",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "25bb021e-fb5b-408a-abc5-4a553e63c2fd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "07ace490-0a54-43b7-977c-2b3c5b64803a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "62ccd423-bcc6-42ec-ade5-c25a3a60729b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4f0408-6529-4f4e-901f-0f0ccc5eb7d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7519f53-50eb-4efd-a099-6cb9cdcd5328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17af80a3-2389-467d-979a-882112dfecc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "39e057f0-79ce-4406-8fbc-5b04c42dded8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42853a56-76d7-4077-9c1a-0816733688fd",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e98700f-71bf-47fa-81dd-a937ec0d0fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5470969d-02ec-46c9-854a-f7841560fb76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d5b939-7527-460c-81cf-a6db1a95f95f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3e4ccc7-8704-488e-9ccd-95b5f191871b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b82f7b68-9b77-4a1f-9a0f-47942abafcb7",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea48f7b0-405f-4dc1-b647-b9cb391265bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9395b284-83f3-4299-8aca-f295a7a60a85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55418b5d-f5fe-4cef-9d78-d04b21e970be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "32347e3f-ccf6-4c25-8f92-a8b6dbb562de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7cf432a-8812-492a-a4fe-a1c27085bb8f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "291e3db6-a4e8-4f70-b13b-d192106be011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "243ba911-b90c-4c02-93b3-432051d8a033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d3ba5d9-59da-47f0-be02-7f0077c17eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dab04a85-79cb-4f32-b055-cbb837857369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21fc5b98-43eb-4c06-818f-371206d7bb56",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d02c495a-70bb-4eb1-8bc3-c33a913a8558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b11a765e-8dad-42ba-99f6-ba3dcf9dd348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f155bf03-b7e2-45f2-9474-833ef1111d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6cdb74e-b8c5-4e97-ab3b-57c7f2f450cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ea2836-af68-4bb3-a2ea-fd1a0e0c58a9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f7b295-bd31-45d3-a6d1-9b829ed97662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e0453ff-d9c3-4a8c-8237-ce15f5ce943b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6397b8c6-fdb4-4cab-bb3c-c2213a80e7a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd9317c3-0c84-4a19-a5a9-d13733914b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "118b97a6-f828-4274-a4b3-967f271d55b0",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9521ef71-fa91-4755-82dc-f81bb5096a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4719f03b-c073-46b4-86b9-28bfe2e89868"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced675a5-d34a-4653-8ce0-f1a1bd0c3128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "76a680c0-a67a-473b-90af-96336fefb4ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38f060a9-f1c2-4cc0-9cca-a5257695c0bf",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73dc01b5-fb8e-4d92-b7f0-fe097400e74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebda59a7-b18c-4723-b770-3a3345698fd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18841a13-58ea-4654-943a-fdd13af4c04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f6b1664-90bf-4b21-b2d1-4093e6fdf167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51787730-3131-429b-942a-efbbc6457cb2",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e839342-8a28-4b71-858e-dacd9e576694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4cc9395-9f67-4086-9069-71644fbfc5f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d218d877-5c23-4aa9-b4a9-8d37b03bfeec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d429cbe1-a15e-4706-86da-150369af00c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d10f6ea-b8b5-48a0-8227-5cd689b76147",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55dfbfc-d36e-4adb-9798-14f5a8d1c8d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c21f57d8-f166-4815-9cd4-46cb18b9bfc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7937679c-0cde-4f1d-9692-04cc1bb65a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b83453a0-b0a8-4c24-a183-6331d1b9d526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3795ff65-f34c-4965-8209-66bd6be07815",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e5fd3e-88ea-4239-9f7f-634e476bd1f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0740cd0-1af6-4869-be25-e0fb79924fbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71da57a3-5ad6-45db-9ed4-97c8ab1e7714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "afb14595-7a43-458d-80f4-9b1019e27826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96877a0c-1e28-4603-b430-c268a3981362",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e068f6b-da8b-4f5b-9a34-af5a388fa232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7e77424-b272-46fb-b7e2-9032e642e0f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e03c3c-9727-42ad-a611-746db8c7af70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b8873822-b795-4b3e-8267-251ff98e71a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aff3479-5a2d-4ca7-88c1-797359228941",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0340dc91-ce62-4cae-a909-bc43cfdf3086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb010979-f435-4539-bca6-d43a1a14023e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "087c0ddb-87fd-49e8-b8bb-25dfce719c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bcab6ed-1c1d-43c0-b07c-87241b0b86fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99381af0-8603-455d-a9fc-738274e2a716",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf509545-c299-4d50-b7a0-d614091ba3b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "805938b9-269f-4fb6-87fe-6dc7198ebfa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "098f0483-190d-403d-812f-ab410b56d9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "74599af1-ebbd-4c5c-8383-3432b03015a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ecb748-8db8-417e-8bbd-7226c15d20bc",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f73fcbf-2d60-4cba-b1a4-89a0194427fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f655f6dd-8700-434f-8538-226c7150c89b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a20600f-b844-4810-896b-870285c1a129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe249d84-6cef-430f-9b60-ec0323896a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc62278-95d9-4c70-b747-a2867ed87e5b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de87bab-ab9c-422f-baf6-e5b66b1a7650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ab6b6bc-4c22-4584-8921-02a9f8798fc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "287b0320-706f-4f09-b0da-5437434a22e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "db2e47b7-0cc8-4d8b-999c-e246817a6d00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97da9b6b-2c3b-437c-9072-889865ab8bef",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "415c2bd3-e331-4789-898a-a76eb2679146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a83581b1-eef0-4b29-99d0-c909bf6ce0ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ae75f76-0fac-4d17-a2d1-ccae2f9e853d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "79438cfb-47f1-4f09-a991-dde34ceb3c70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d738b0-1fba-4a75-aa27-73cec87f93c7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc3b9cc-6838-43ea-bb43-9a844e10d97f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27f2d914-e10c-4e54-a2d5-6656f997febf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e70114c7-2469-4444-9253-0ab7de09c2a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "35dbe25d-4078-49e6-8ff3-7d06a0e53836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f6c35b-46a3-4681-bc6f-376d306cf9e0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55bf032b-b639-4ea7-96d0-ac4bd611c1fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1a4056f-d94f-4377-8c5c-fba0c298ecfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ed7234d-7686-46a7-8f53-43fe4d52aa66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c0364fe-f286-42e7-a923-89d1fca13ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03158062-92f2-4ae8-9d2c-1a1bdcc92b85",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e873719a-4191-42c1-aabc-11b513e01eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "584704ba-0bab-4cb3-b6a6-da089ed14bf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "622bb9cd-71bb-4356-96e2-34797d324ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b07be7d0-160d-4611-b05b-9fd234e58865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c793f7-b5e5-4f10-9fcf-1ab6cdddaea5",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb89a7b-2a54-4726-81c0-0c32e76e337b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa140658-1934-43ae-b77c-00cb6eddf638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38980686-287d-4945-a088-bf33b6e09f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "106dd596-8928-41ae-88a8-09e4ef0e9073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf7d0be-4b4d-464b-974f-3f3a8011d783",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ddf91f5-5640-4e82-96d5-cc52128e66e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9730f5cd-d9a0-470c-bbbd-821265f4eecb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a64f1d5-fd57-4ce5-be32-04589e06daec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5b23596-3818-4cf6-b041-c6a1d82714c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e119472-801a-41b5-a5a7-b03d61466834",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45db07c9-37df-4d3a-8f03-5fe691a17631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1db69a6-31b5-49d4-aa76-ac7a71f630cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19664b1c-4675-4350-822f-c05aa984d069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "958d5722-31bf-43d2-b187-75405106eb43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61ebf5ef-da69-4e62-ac30-4beed066873f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a3a3c5-7e95-4ac6-9580-3948e0713ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1568d10c-2f17-4bc4-ad46-ed0a39fa194b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94403056-d95e-4cbd-9cee-1d7f4bb58848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e77abef3-83a4-47bd-8b31-89929caea7be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95010296-a92d-4632-8083-df30c19a5e69",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "227d31e6-9342-49ca-8c84-a1366af58b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cbc3e7b-3b9c-424c-adc1-5a15335969b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aedcbdb6-4555-41b6-95db-b9179f042e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2187a0f2-17f5-434a-8d60-7a795de58cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc4651dd-1300-4602-b6ae-b06bbc6e4510",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a3bc8ba-a3a3-4568-801a-dba00efd73e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cec9c9c8-c997-4f6b-860e-c1e43baa7e11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a30989e-9743-42a7-97d1-e7872edc1f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f494f89b-26e8-4e80-9fa5-42c5e25fb5cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b50dd5-f2f5-436c-bbe2-9b141e9bbd48",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8041ea9-8055-47bd-867b-356073f35359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c905aa62-7d7d-457a-a733-b110870b1b44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e2bacd-2fdc-4b50-b49f-5cacee366d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "552891fe-5710-44fd-80f2-3cc5b0a10c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d11c6c0-2f01-4b46-b3ff-ffe3f26c9bf7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7615c93-4ddc-4c2b-983d-f9bb4e8254e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e4cd183-20af-41ce-866d-b2f2e44719db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bd3967d-211a-4e0a-a023-085894553d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfcc77ea-e03a-4c51-8e0b-cf4ac4793140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec72ed16-af3f-4436-8be1-59f82dd76316",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1981827c-50d3-4131-bc11-f07470e65f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d0f4036-bdc2-4401-9306-12c7261e444d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be4d5494-9c4e-4427-89b9-8f84c9b8605f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa2cb809-dd99-424e-ab94-bfebac9b4f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d1ad3d4-e295-463d-943e-f7f2e671ed77",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c85563c-d4f9-40d0-9803-08b74e20147e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71dedfdc-244d-4702-a77f-88c05c0486b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e0a004a-c568-4fa8-a634-14df00b44ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c805d210-9992-4bdc-bf49-9fb91bb4915b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3f4d60e-07d5-40a0-9efc-2760dda7f307",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc025d7-05f4-410d-acd4-45c876505987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53a94f4d-37d8-4b70-af7b-1ef7a2d3ae22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "700472a7-56db-4ed9-aaa7-0406d29d6e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b89c6a96-d926-4188-8bab-37a807a2cf9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "302a5808-0fea-4095-8b71-2ab8861803fa",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e18fedc-3461-42df-9756-6f36d5a9375c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c1db1de-1ff8-45e0-bf8e-154e2f6412ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c37426ae-6b45-4796-b187-d5fa5328ac7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a0c4235-c3ce-4645-820d-f4fc4c537469"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "015dcc28-061f-4701-9c59-4f12b22c664f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "94f6fe00-cba9-4f45-abd5-3708813278cf",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e81cb5e2-574c-4c24-8e32-71c70a1cad14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61a7c799-cc3c-4a8b-a0dd-c1af71caf2c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c4565db-a6c8-42ca-973b-c502f0c79cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b91b6d4b-9823-4fa1-bf71-8751d42054c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3678b7f3-8169-470f-af88-d6ee3cb8c33b",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e664cf20-2676-4c97-ae77-736c7ae6d61a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "9e8026f4-be0e-4dc0-b74c-a8b2e5c0825c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3280e81-e7ba-45a4-ab01-28c0602aadf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "24e87d87-8982-4e5a-8092-1fbbc7ebab96"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8fcf8364-2545-4873-ab2d-ca807401caf2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb004750-6906-49c2-9f39-270aa254ca6d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "deed46dc-9f28-4211-92e8-22a144e15f39",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a3ded4b8-f2a2-48d7-8f7e-7af9eb3b724c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "92ee94dc-7553-4d3a-ab80-8183077c0fa2",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b17ca86a-42d1-43bd-bd84-bf2436dd543c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d4ab50ec-54ce-489f-9d5b-c1230cac6f63",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7857db36-c04b-42c3-aba5-6bdad24031c4"
            }
          }
        ]
      },
      {
        "id": "29657d92-7eaa-4b91-85f2-73d7ecb25026",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c64009d6-b489-41ab-8b3c-63f2405a01c4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "139737f6-27e2-412e-8196-017afed3e85f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bca5bd09-a1a0-49c7-b4ea-f1dec446d617",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b49d5b0b-9a08-413b-8be9-39660ca7dcdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12f805a4-c788-4011-8e7f-5db1665aa4eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56beb923-a5f4-465f-a8d9-4ac8377759d8",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fd413a6-54b6-4537-bb81-2635a8dc8991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bfc8ca6-c148-45d0-8151-87af1fc334ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff2619f-b7d9-4046-a137-7f7f1f241fe4",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c58d420-7d28-4e71-9956-4dc599f5a464",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a66c199a-bd13-4fe5-9d03-9e490d797139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c48b616-818b-44bc-945b-78dde988969e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa3f15a-fe13-45de-a1ba-2d568f00bbfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c656cdd-196e-4c0c-b438-f0aab1c21597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0250befb-96a2-4e0f-b50a-5fe96546ac85",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad02c0f-1cac-4dd3-8a5c-a2860d3df78d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dcd64d7-6a21-41a9-956c-f00b189ea290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b3586c6-7c6a-4cf9-a23f-54ced92cb777",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d1c027-e195-47f8-a7ca-fab34c6392cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4ba44ca-e29c-45c6-b498-b9fa0a82cefa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e2f254-4bfc-4bb9-a47a-ef91a5c88953",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe8ed6d-f01e-4677-a84f-5c3b2e13c1be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75187ee4-dbc7-4424-92c2-5441a60f22ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29896aa6-fa4f-4fc1-bcbb-8b7e3fdbe352",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0131b69d-681f-4052-bcf4-8a6959c3eefd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aefd4d3f-415e-4728-a52b-d2b6cbc96b49",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a791387-c67c-42eb-86e8-0103bbca77ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7d07633-7da5-474f-99fa-fd5a5d7ee5fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a58f21-c3bd-44c0-910d-88605f93c89f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76ebcc1c-b932-4ec5-b6b4-6577977a7ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4246755a-0817-4499-b9d3-5daf5f42edaf",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f0e18f7-abcb-4054-b978-3d47ec4a7de1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da246865-4073-4091-b489-dd0327aa6499"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb0aed7-300d-41b8-a61a-804e574909a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80c502d1-fb09-4762-a55b-dacccf94cdbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e928c636-2a22-4be2-a534-07a71d327328",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57a59fee-ba53-45df-8db7-263567c0949b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0fb243f-74a6-40c9-a98e-ce632340dc51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba09daf-9cd4-4ea6-8de5-334f7f6dea4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef90f79f-d984-4fb8-9e42-ed23d91dbd7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dfd5c6f-b72e-417d-8a48-553168f85d8b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a390a75-cf0b-4519-89ff-b06548d7d521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50c71fdc-e967-4088-90c7-aa5330776191"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f91b3593-7cb5-4cb4-97f4-123978fa8a80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbc58f64-02f4-4d49-aacd-1e4df96c12d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2801d756-921d-4d96-b9c6-7ca9d8ad82b6",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "263b4072-d50e-47ae-9b80-99c2ac8f8592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d85a551b-faa5-4d77-8990-c4ddd5dc2069"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68301ac7-6945-42b4-8f65-7b21537d3be1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3069c372-8744-4326-b33f-67b288c6c117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ae0313-bbdd-4af8-baad-18a2d24adc36",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e5d9d41-09f6-40a6-87ab-221a694a4f79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cea922d-a09d-4f0a-a3df-3ad41cc914c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d0af58a-38eb-46eb-94aa-b3e809829a5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9531e308-f9c2-451a-933c-890c1a0f6473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b99c47e-4502-4210-8ff9-c3fb5d8922f5",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "770d0f2b-174b-4303-9221-d200bdacbcf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d306d7eb-3c62-471f-8cc2-19bd5a1765c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21c4e0d-e70c-4fec-be70-55898939450e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b95769e4-3d31-4480-aac8-f31706db515a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7b56a43-89c9-49dc-908b-d4f1adf74fa8",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd54a0eb-583e-4504-abd7-665d344ec29a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfca5683-f8ce-4f80-b2a3-6ce13b6db02c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eaeec1f-f8e3-4f76-b812-70dab4e88b98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f20e1132-fa89-4ade-9866-069711401e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ea9012-ec93-4cc0-beb9-64a35d2e25a7",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c99b7f-53a7-4287-b8be-f5d894edec7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cdf7a73-0c54-4ca9-9be4-0320d05b2aa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b47ba6-2d13-41ce-bf79-c95b71c48496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68ce0f1c-32b3-4a06-a17c-24a50268287b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a9f0e4-664d-457d-87b4-c035042bb87d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0cc5a92-f847-4072-8b27-14720d0a6e40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e9fc660-38e8-4487-8eaf-ce31238fea20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b83ccf-866f-4470-a598-17abda71279a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13b45d12-c2f0-4688-ab7a-9cf917a06d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe0a711e-29b5-48a5-9942-3a013aa119df",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "897d7bef-3cee-41c7-bc11-67d0c1989a9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f502894-b0a2-43d2-9c41-ae2375b53266"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da414e37-a63c-4981-ab05-046e6d55ecc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39aa242b-b468-40bc-a722-fd4e05996315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a1d97c5-98da-4b5a-b403-01cd70ab7b53",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "577e2316-3a27-422d-813f-fc30c0db7efd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1c1893e-faeb-4f3a-80dd-488b4879b63b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbff89b1-e447-470e-9d0b-1e67e3a6efee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "648e4b4e-ec1a-4468-9e5a-ca15740dd12f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87e01a14-002d-48af-abdc-a42faf29da96",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "851c8c6f-42a5-4568-a2c5-58345e2bbb10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed7ef43c-bdf2-4cab-b59c-f068b3e0e4c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca2eebc0-7a86-4a2e-8a4e-1bdf449e4430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd950129-cdb2-4ba1-aa36-1ec1977b3433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e9110d-fdf5-43a3-b9da-5bd5b6acd269",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc323b95-87fe-4c15-b112-ae0dbf5fb76e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b309fa6-f4a0-4660-a95a-535b2bea5f5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9859d97d-ea80-4012-8d48-4f33ee3e7503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20e44517-a63f-4b78-b284-daf763be063a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2235ad86-46ba-4829-a642-7429cd4689fd",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc4d689-f605-4197-b6bc-f3ba39b67026",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04e6f45e-06e3-4dea-adb4-a12c7ae7cb23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "364c01c5-d2a0-45ff-b4ca-1aeaae832e3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1949f1c4-5604-4b23-b9ea-8d20bebde371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d54228e6-c59c-4263-97e8-665f5a8ee17d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f229188-ce40-467f-b477-8fc37ec62619",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53a51d95-0e8e-4a77-a209-e9673f16a9a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c2ade64-ed3a-4e1d-9946-827d25387f25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68b2e062-9251-4b8e-afbd-1d168a7ca582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e28b10-17f7-4ee4-b704-4c0b4e230e5b",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ed9575-e1de-4265-bf57-48e350a6450d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e0d185b-7351-4dc9-ae86-f5a818728e1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc4dbc20-130b-451d-94b0-67c3eaeb0761",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91df205f-8234-4500-b618-faec0151ce15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d719647-f489-45b3-9a8b-3244fbc5d8bd",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f5e6489-7c0a-4a2b-a7c8-5fd8e01cca36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f324373-c718-4a2d-afc0-5fa321661336"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee2025ec-5f38-43d5-b898-69301f8c6efe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3739fb3-6455-4cb1-b8c3-b5a7d78c3ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1febdb66-af6a-41de-b4ea-f6a5639404e4",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa584b8-196d-4d5f-b148-3db07d5e7c2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7af3e79f-95ce-470a-b935-90ef30c544a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec485ebf-3f35-4c3c-9775-2295861f9684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "196b093c-e794-43c0-938f-7c283bd8cc09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06fff4ac-9022-40ed-a3a4-b94ffff7ae51",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f8f06b9-5229-4ada-aa62-f61c3629632b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe82be78-3fe9-4bce-a7e9-b971f6c6b364"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae5a903f-ad88-4e8e-9ada-31b0fc4a22e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb5710c3-cb36-4721-8dc6-84d09b69426f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e344929f-a4e4-4268-8059-8b86ac6f1259",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f2a2164-7de6-43e6-a18c-ed51ac7f4ac8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9f79b9c-2472-46b9-9399-75250088c372"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a32f1541-477d-4023-9d7c-88829942de46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "649bbb84-89cf-4655-82ad-d4e9f1f9176b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce6cf705-0d5f-48c4-acef-11bb603774e3",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df69190-da6e-48b0-b7e2-263eff04c325",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1929984e-ae21-47d4-b42a-bb3328413b55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a52416b4-d45f-4f40-8048-2cd7ac9de59c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e60bd419-ce00-4978-90ac-d8dba197fdee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eddbbd73-9492-4408-b83f-5731e19b6772",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e8c04d1-7709-4478-8f51-32e7011ebda2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab4bbfcc-340e-4100-b0e6-02c7ad67212f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e31888e5-091a-44c9-b539-1a698ced49ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "361c7899-ffd9-44bb-b833-a959be121658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f26a662f-1dd4-40b3-bce8-a1bb440d5b2d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c3246fd-e99e-46cb-83b1-9b07806dbde0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c09ecaa4-4f7a-484b-9d78-99cf357455e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f0c592-8d64-483a-8dff-8c71cce6897a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "616f1229-26c7-4250-b8e0-c8064e830423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e8cdbe6-7599-450e-9bae-bb1d398956b4",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7a8f3e6-c9a7-401e-851c-97bf4acdef40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f244c7c-7616-4449-a904-e8cc2fc02123"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32cafaa6-e628-4ee4-9de1-9e348ac95701",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74cb6fd9-bf10-4aa9-9b68-2c304eecc61d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cbc8f36-823d-4327-88c5-8503baf0fdeb",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa48abf-85da-4a43-ad55-db6b11accc80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9a3ef65-0219-4be3-b90d-9a7124f99390"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba2489a-e00a-473c-8499-b8630bde2fbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3b3d490-181f-4c12-baac-aeed7ba3edd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0914b87f-48ef-4f42-98bf-1139ab044f9d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc9a1e2-0010-4849-b554-86d0804532e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3371083-2b8a-44b1-b76d-76e6b6edd2ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba39aede-cd88-4771-b3dd-2700cc1d5bfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9d40c75-34cf-43a5-85e4-3ad754deee6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d81c601e-50de-4fa6-813e-a46ae2b7a800",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad8bb0e-3acc-4cf7-b942-3027198cb7ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a60a5cb-4af8-4df8-9129-4f900ca6f217"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d6027ff-db55-4201-a8fa-4735f3066887",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04d5b30b-1755-4c59-9042-347c75ba7001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0165f3e9-871b-4b7d-bf45-7e216f5252a0",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ae1e92-5bc7-4e59-8d7b-db48d7e0126a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93f769c6-90c4-44cf-93f0-15c72f5ed0bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "685f6d7b-e821-4c37-b6b4-5ada11de3372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ccd1401-3f55-4dbd-85a8-2d07b6544776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f42f7c-2089-400c-860c-d17c460b1000",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33708680-7f6f-43a1-8c8e-dc9b0e03576d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b356e25-8ef9-4b7f-b396-0e014f71064c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab73ca9-5089-437d-b24f-35b590e0869d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6ea5b9d-7ef9-4839-9bea-b3af5de88173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6260fe65-2b7c-4843-9e32-28dfb12d80a4",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1540b004-4cca-485b-95e0-973791062fd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4462e227-e3f1-4104-b3a0-4e6ccb308657"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "996df75e-6ae2-4ff1-8124-5fb692fdbb7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6afc9e4-218d-4b6c-bd66-244eef45c791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75aae3e2-04e2-4c06-afd2-97d812e08f12",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c665c7-03a2-4e0b-b2ef-7918faa5fe5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f649518-87d4-48aa-a24e-c7528900b06e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "644a010d-cd17-44b2-8d67-7ebc4493fdc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e94f101-b3d8-4bf0-9242-850156206964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a5b50e-e836-4032-82c0-5c3eb90bc21d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "744f3440-d85c-414a-94a4-41cf0610f7aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be5edd1b-20c2-4695-b531-b9cc6ac8dcc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78703dcf-4c0d-4427-bedb-1fcfa2d3e246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e96f0d8-3033-4975-b354-dd25cd7a9a47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b85febdd-02f4-407f-9d6b-12c427d044bf",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7392dacc-103f-4463-87fa-4d7615a4714c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68cb7830-d173-4474-bf4a-e23b9b9d466f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8414c2e0-b468-4634-a3bf-b40386481a3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f4c7d80-a412-4c9e-85b3-c1888c5c7bba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e8bf3dc-da28-4bad-a5d8-6b64cb862d2b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a76db26-7cb1-45a9-868f-0018e228ee44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79f40572-7a23-456b-a7d9-ceb3e18271a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5420349-fd4d-46ba-8db4-7f8376dd466e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbbf51d1-71da-4ce4-9e47-b7244afe9725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7570c42-e533-47b3-b654-be9fec565bcf",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb50f33a-f4fb-4ec9-ba3b-645a0a3f7605",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbe7a7f2-291f-4502-9839-e56e8b53ef19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2efbf8bc-a96f-4bfb-8046-ea47a0955c9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7c6890e-a344-4901-82d2-dfdcd328683b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c13c52e-59d1-4c07-975b-982d2e27f847",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7945c6d-01a6-463c-8d6b-8e859b47fb90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d81fbbf-94bd-4f32-b0b9-fad97cb03928"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc23e6f7-c17a-4b94-9365-943a75f6c66e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "723640e9-df82-4872-b97d-cf41812f2960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8ccc1d7-3040-4f56-ad93-1feae1d0dabf",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f3a16d4-2e91-4b8a-a2a1-e1689678fd67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ca967bd-dd0b-4aa5-b1d5-1b0d36b55ca4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa712e74-98b3-4561-a159-d22266909ba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "947705bd-1c48-4702-8afe-40de73529523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "672f2d3a-a44b-40ee-9a7e-9e417ffbad99",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af2a1ba-ee94-4bdf-b5e8-d42efb6e2414",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb380ae0-d938-4a6c-8977-a2c4ad780a9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "211643f6-b7ad-4632-8a99-cbcdbd7386b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a936e566-c37d-44e8-a26a-42953b20c9f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf3b8e4-81fc-4402-96ba-71ac4d3b49e0",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a9b3a00-5c68-4d79-9297-35a0a270b8a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f810634-01f9-49a8-94b4-cac9d070e735"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b8169c-f651-4b92-b1b4-6bceade1810a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "367189ee-0232-48cb-a2cf-abef5b2f4381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d46d1adb-e0b3-4a1e-84f6-7324c3cf70fd",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c62cf2-1121-44e9-a24b-4b2dca31c9c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "876d58f2-e224-48e3-b0ba-2988ccabed7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a9ac51-a9bd-40a8-99a6-3ee1cc9f998a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "049c277b-dce4-4df1-b69b-cbece315c683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de28b299-9132-451f-b5c8-d7d318caf4c6",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee31f668-4b9e-4517-9e5f-6fca2b7817c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64fc84b2-c03b-4ce8-a643-49404799da06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67771988-3dd7-47dd-9b59-6bd948ffed1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb3f34ee-0adb-4a64-9049-e221f5a3a0e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2449167b-5beb-4654-a62f-2fd2916d16ea",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ab2018-6e0b-44b0-afaf-fcd3e1e7aa7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c570a6f1-f1ba-4ecc-a70c-0a48c13fe96b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e13cc7f6-66a8-4605-8ce5-be9b39294d3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12e94efc-a59e-44ab-a61c-a4fd2e037f43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bfa80df-d329-42f7-add1-fe07d13e39ec",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a9b941b-25a8-4c12-9036-d04dbe874739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b59e1cd-498c-4730-bd47-a232a3b533f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d55c5f-fa22-4804-9930-69f7997d3978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "193ad7b2-4dd1-4d69-a178-cd01c907ef53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5278f67-0f78-40c1-81b7-7771c3b1b1f1",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "198e9c0d-cbd5-42ce-947c-edaa8f970178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7746c8a2-c594-4da8-9f2b-1e1447c53922"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdb556e7-ca26-4574-b25b-32d127254338",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da212ec6-b77e-421f-a221-ae7e0f4567b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d44281b-30b8-403f-b213-dffcc27f51f3",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72624542-7737-443d-aaef-44d8b08aa382",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbaf2a58-70d7-4202-8c88-f386dcb09294"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8705701-3ccb-451d-a5e7-cbabba0c07c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ca7e2fe-2853-4518-bf34-3057db91089e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1f833a-a31f-4251-bbe6-24013d65a348",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e950beb-d6a5-4dc1-a682-4813a3d8fce8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73b41994-609c-4797-8959-91707cf8b71d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e77b42db-fffd-4bc6-9bef-42ac8c3cfc7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eae1606-98a8-4ab4-87d2-37bb6b28f5cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a498a8-4ddd-4e28-a437-9b72b59ae259",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75fc8317-8bc9-474a-9afe-c02ad5717286",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d282dce-c262-46d3-8027-10b7fba7b486"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e62bfc-bc6a-466b-b6b7-10e333f119fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b416ed76-5ef3-4b13-aacb-80c9fe6e15fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2fa13bb-2902-417d-80a7-82eb48f6ae8b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca916c8-bc9b-40b6-8bae-e1efd4c9e5c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7284a42-b313-4db2-b40c-45a4d6c10f44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac45c4a3-14b6-406d-a93c-8aa9e7988757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cac46a5-7c86-4b9c-a7df-740fa172f00b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf3977a-d1b8-4cbf-9438-ac8dcc40756c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86db4001-2b86-4977-ae1a-b0da8c40b939",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d077b2ce-e5f2-4506-94e4-6be04a8b8d46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d76a580-a835-41b8-8927-f1369c57ff74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0fc7633-5f1b-4232-8e10-e013b364acbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e06112f6-78c0-4420-989d-8228ada3a75d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c578b68b-80da-45d5-854c-9e06e6079474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b13c723-6cb1-4113-95e4-e14372c72fb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0947eb1f-97bd-4091-813b-3c33f3cd23b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cfda709-b446-4bb2-8d5c-9ebf8bff94ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb8f0d1c-c763-4eb6-9612-3647cdfbb04f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c48310-537c-4d36-a8a3-d58acd88628f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d9246d6-ce00-44f1-9352-448753126849"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0624a81e-12b0-4cb8-b579-4fce570474dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0af64cb-d36c-4003-ac3a-e68c01511be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b22dc116-e941-451f-a89b-4c08f6543012",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3347a2eb-082f-4d00-9f81-e30fd6307011",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "761482fd-4003-43e4-bfbc-0cd303c97585"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1ff805-2fe0-4adb-8f3e-6e0dd68c358e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "629682d1-9019-4c4a-be83-a2e269965d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33804f3e-14bd-42c4-8e94-d869621591da",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97cb083a-b4df-49e1-a0ec-ed7b65e901cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "403e89dc-f654-416d-bafb-ba983e1ab9c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee39772a-ebb1-4da3-b422-3bc09ad185d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c34f7c36-4a24-479c-a24d-9c5a824a18bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "641d2ff2-e24c-4d3f-9f04-dccd745553cf",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6169c6dc-a8b5-4bac-a22c-b942186506a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0458695-9a6c-46b9-b1a0-1c8511c6281f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f46d9d-6976-49ea-b2b2-c6f40123edff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0938d631-774e-495c-a72a-ebdd184ed8cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5d3a337-ebac-475a-a0f7-b796427073d3",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a600547-80df-42d7-819a-eddbccc4b56d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "577c7369-9bbd-4a4d-a29a-c1926b2ec574"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2083919-84d1-4a58-ab27-7f6045021551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b97eb55-92b6-4566-9dcb-dad501d503fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d3b686b-c2b4-41ab-88f1-0354e5095b38",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f73272-e5c9-43bd-a2ae-a60a1068f690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18bd2a60-3b01-491d-bd4a-a18ef947d639"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c167031e-3284-4067-be0b-a80333b7e306",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22ad3947-2ec4-47ba-8dd6-1bd81855e72a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e13f325-c2ce-4f08-b424-1cd1a511ce8c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aedbe6a7-d7d4-4931-b4f6-26bc39c9dbd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4677923-c1de-4549-8b11-cea921143060"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c55c0c32-c959-4595-9f92-0b5d6f5b08fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7631544-06ed-442a-937f-4a3d89a1fd02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2439403f-770e-4eeb-80d6-57d1b2af0187",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49c98157-d54a-499f-bef9-91e384c287f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e71a27f1-7c5f-4258-98d0-c6a7b02f619f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52aec621-eb0b-44ab-ad69-9bff39aa5f0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fd459f1-8118-4e9a-8359-ac24f58f403f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "644c3451-9381-41f4-9569-25f629e25e62",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c906fc2e-648d-4d85-8e78-f54c86f6c670",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd0bf676-55e6-44bd-af4e-1329d95a5746"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfa98787-ef46-461d-82f2-e1c0950cdbad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d854b514-901d-4130-8fb5-382ced2d3835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec8ad8f3-5e6c-4623-b602-74c8d8c456c6",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb98091b-7edf-4260-bcc2-eb3ccd7c0a11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "178136b1-d66c-4723-8f1e-3965842929b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb38ff63-5a73-4d06-8efb-dec581f8d40f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7025a11d-06f2-4423-bc8f-6d386816a7c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e6deed-b3ee-47a4-b5cd-d6465c7713ac",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c6b5ba-8384-481d-8d27-03eb988bcd24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47e189ff-7ed0-4b6d-be4b-81f1b503e230"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6a949d0-dfbe-4654-ab45-e414143a3f45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6de35df0-6268-4e56-ad49-6c9f8e2a36fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba2bb22b-8f50-4b3f-9330-b568026ff960",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a40e15-c88d-45b7-87fa-5e3f21bc138c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff1cb2f4-b734-46c8-a4ac-19fe087bb807"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf6cbf9-16fa-4d1f-b5f4-de3b3d2befc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28e64272-22ce-4044-8c6e-3ce308cab331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a285812e-b7e7-473b-a4c2-0bd533c02e2f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8812f84-3a6d-4756-89d4-05cf95c33bf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7225648-72f2-4286-88fb-366062d94d4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b068ea-be7d-4ac7-af9e-9a77fba8dd2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41d87ca7-773b-4040-ae07-4107d0cae9e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d4d22d-b789-4465-a56c-e1468999ca3c",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25934c23-730d-427b-a394-c8a276a877a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c84b6e7-875c-49a1-89eb-8563ee6b71f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "347c3404-721e-4e23-b347-0030282b367e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a04f0037-53b8-43c9-83f1-cbdb32169983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a35042-6fa2-4e17-9a0b-ad5492de0145",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077b1d06-3338-4c7f-8303-536aa00a6690",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d54ea1e-18e9-43dd-8ab5-0eaa573e5665"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bc9f7fe-4aa2-481c-b06d-b865ed1a5c2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2ed928e-8a12-414a-ba74-f1ddcc695fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce57b31-5814-4c50-ab91-eb0e6624472a",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48537819-ebdf-4ebb-975e-c5764e4636c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9244cea-43e0-45ab-ba09-4755001fba52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e54eb37-f62e-44ec-ac67-5a4d2ef3170d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f20b3abe-1a6e-41a8-8b88-c4824416b11b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1afd041e-0073-4dd8-9961-a3538fce05f8",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9033cdc0-c714-4edc-b3fe-aaa52813aa5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acc8c8bd-2588-49e2-8544-b682064cd28f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c427c3f-90d3-45ec-a82d-099b4c159049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23e2256d-0f7f-43cf-9f1b-6aea612a6cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b03cfd75-d179-4e41-8c85-2768f8ebd162",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "540e15b2-2a5a-40de-8298-427fde40d6df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05c6c298-2993-4ec2-9a37-0e5b17c37c02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c631991c-5662-4a32-baa7-bb5adfcd086f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79d13474-cd42-42b3-ba2d-ca7ffc7b3e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe57491b-29ed-425f-9ad3-aa64ed49b04f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "487ed386-dd6f-451a-bfbb-9d303c48df48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44b24ce1-980a-440d-a397-5ddaa700d516"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e87a8ab-2d49-45b6-aee9-1768d7e5dd0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "076c47f8-7f35-4caf-9860-532da2008419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37b6c22e-4b87-4a01-aae6-aba5ec508601",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c712de5d-8b6d-480b-b6b3-fb76060a897c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72890ff1-bdf3-4257-a675-8da7936bffbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bbd226f-6cf6-47c3-8fab-9078affa4f2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99b7931c-45a8-40ba-a31c-a2b46d59ef7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c49f70e1-7f3a-4ce3-a440-e44bd4eef6aa",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce472fe5-5566-46df-a68f-7ea5f7d9bbfd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a6062fe-dfa4-4ac1-a9a4-ede1a2056d60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea48810-793a-4030-ab10-b16a8c731854",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddb0646a-71cf-402b-9616-0f699c3cfcd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eab40cf1-5a28-4c85-b412-5d0d26a59d59",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcc0d47e-4056-41fd-9610-36d0c1474cf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10b69f8d-27d4-454f-8d91-cb1f7868bd49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c5a0c36-1224-40c9-915a-3447eb1d6c6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4957c17c-ffd3-4d65-b857-13c1a8ac79a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9695e9c-50eb-4e06-8dfa-793817bed1a4",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad96194c-2702-4784-9db3-a6f038e0feb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ec090b6-6e38-4e33-85a6-ebdd39ce5df3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31d53d14-ee05-4bbe-b6e3-f9bfb1483158",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "172a3206-4779-4dfb-bb15-4d3e5a94b247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b3e3b2a-daf4-409e-94da-1ba172b0353a",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2add2aca-8761-4285-8226-44c2257224ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7aa2a003-3a1b-4108-a3d9-d23d7cfde778"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9464f446-958d-4a17-85ea-d1d63ac50db8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58a54afa-1623-4e3d-9b78-0499bfb03945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f1c6c6f-efd8-4f22-afd4-88a179625a4b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d591d89d-8368-4b64-85bd-de7e37f9733a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4ff93f4-7700-4cde-991e-273acfaa09ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ddcbc3-e8bb-4184-9847-bf6796525505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d5e96bf-de80-4aa2-8d9d-a68051cc72c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a6304d-7dea-4219-9440-38ad0687da69",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad22cfeb-4a7d-403f-8b12-d58c391384e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6ce3ac6-6c36-4f04-9985-c79738f29006"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c611a0-1603-4325-ae57-9f6978d35f37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cb8a6d2-874e-48ad-8150-72dea3ba3c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb2432f6-693a-4636-8cec-a75c71b872c1",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c386ce-93e1-4c04-ab23-ee357de76974",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c720aee6-d841-4366-9770-e802272854ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df80f9b7-fbbe-470d-9d30-cbb7799c07f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1524c726-d5ba-4c1b-8f0d-2cbbf039c1e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2bdf9a8-4715-41e0-903d-1b286600e10b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "753e2865-e99e-4dc8-aa92-7915fb1b10df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d1d39d6-34d6-4142-9c5d-b726236e8545"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c45c3d6-2f9f-41b4-9638-ea0fa0ce8c4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "437f5814-c027-40be-9a9b-941def30e779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22be8894-9b2b-4260-a4c6-f964876b610a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a23c2c-4fc3-4661-ac73-2b40fe0831c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5c25736-f88a-4e5a-8088-bd305e209540"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f331311-ab16-463b-b840-8b7dac489cf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d14b35a9-0e95-420e-b549-290afe4e559a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "368dc6f6-2db2-4714-b0d6-36e7eec900a3",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f629ff-5f3c-4c2b-bfbb-3698a71e7fb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a0ad50c-24df-4ac6-843c-a475adf0fe3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39914c73-120e-41be-8193-3455b67ef14a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "201a7329-b25b-4be5-b09e-0043724b5525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24b78d1e-d0f7-4ae4-9294-93385492b20f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b7e0f4-66e3-46d0-9c63-f39eafaead3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01bd5aa3-491b-415d-af4c-ba206607779b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee58c151-f37e-43d5-a92f-b584a74d5625",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcfbcfb7-e260-44c3-8b92-5f125207dc80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db789d4f-488f-4451-a1db-b5c9d5882175",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeeb558f-6521-406e-9e83-83a87ca9a274",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c71170c-9048-46d0-abcb-b1d39071265f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ce08b3-f44b-4e37-81ff-5db157d5cf88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad00f85e-b4df-4cb4-860b-85536b676a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54103b2a-8290-4dd1-9f29-9e7d92179052",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcdfd12c-bbba-4d5a-9853-0eb0c4fdb917",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66227d1d-c1c1-4ff4-a279-ac00e39f5f80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "719efd74-a24d-4696-88b4-e4ad48f6f804",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e49dbb37-98fe-4b65-a6f2-e15b8f4d4177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a8f05ad-b1c3-4a15-b177-0b761d737ea3",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a1cdeb5-0a83-4489-9eac-5c5fe0e6dcb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca406a28-906c-4987-81b4-a7d07ae0b541"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80144691-7c70-4847-9bb1-477a61726c7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba62f755-16c6-4e10-8db4-90e5b311abc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "698764e4-5fb6-46d7-a2f1-86b188147c2a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac56f909-1c2f-44d7-b449-5bccfba2a95e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c649ade4-70ec-4736-8259-3309eb91b8db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66605396-c126-4bee-9dc3-c0fe8d0fc4ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "955e4931-f7d2-46d9-9f03-54a43dd97a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f7589b1-91fa-4b90-ab11-5e80633997b4",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17991a68-f948-4e66-a972-0924d9ab9e37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbdd44cb-6b2a-445f-bff6-2aab6d716a65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b6e3ee-9dd1-459f-8863-0cf85333529f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97e1c34a-0704-48d4-98a4-70e5285537db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8adaca1-bd3e-4fe0-a285-57057ac178f5",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04896d78-e860-444e-a5a3-d0bb43831620",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ece10a92-a86d-4e3d-8adf-aa7b62accf7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eff6fcc-24fd-4349-a524-469db5865e16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72d73c4b-7f0c-4bf7-924a-0b52dbe363d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2082eb59-a113-4b16-885f-341cd0a10949",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "586ea148-1c1d-4953-b75c-1fb4e2fffad9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12cc910e-dfde-4c2a-a0dc-92157c7ecde0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d07ece0-e966-4274-881d-153c0cea9ded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9ab8ac6-3fc8-4b34-9054-a50ff38e76fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6564c01f-8e5d-48ac-90bd-a36c6a4e76de",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13202a5c-0885-4bf5-b3f5-eeb38697567f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "241881c7-81d3-4c08-8914-dda4e05aa607"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ec682c-364b-4cc7-8300-6867f8a62b1b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "011666c4-ba9e-45f0-9872-b07f51d3fce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "669288be-9efe-48f3-af01-18f64d64bbb0",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05be1ecd-5138-4cce-851a-d3e193b11ae7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9872669-a4ce-4dd8-92a2-94d5ec62670b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d220118c-7dda-4f5c-87c0-44f220084848",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26d47075-f398-4e69-87ec-5e73b7fc0d79"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55872d7a-1bd8-44db-bd17-bb27b30167a5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d475568-a74c-4210-add2-3d92c99bc46e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5693df52-a820-4e00-86ed-ec2b641db4d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "92222a5a-e3f3-4973-8ab3-79d8cbb9f818"
                    }
                  }
                ]
              },
              {
                "id": "24a55d05-4d0b-4f50-b74d-b650b6fd52ca",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "46eec94a-1901-430c-85c5-9e160597d309",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb1405a-8c99-4248-ac24-9714996cb4cd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "190a0543-3184-4018-87e7-24afef036b22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ecfe9bd-dbdf-4cb3-abaf-fccd343a4b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c82aa652-d66d-401f-92e6-5cc21d2f0306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3718063a-4f22-4ca2-ba45-cd2442404167",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd81575-6d6e-4cb4-bf0c-a203f0093a8f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "51d5cece-a381-4124-a2b6-09e619ca0d43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c1f8ce-090d-4715-89d3-1b5e66eadb19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "92ee0bbe-73b8-4a17-b7c8-cff0f1a0b07f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1842bfc4-8842-469d-9a10-15547af1372f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e903cf62-92ad-4bd1-954d-e95364fe17cb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8e7ddd5-d92c-4f2e-b82e-2b6a59506461",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2096a39-16cd-4a9a-acdf-8007886e7413"
                    }
                  }
                ]
              },
              {
                "id": "8b75ddcb-f484-4a06-9efe-91dd17cc32f9",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "744af79f-6c0d-49bc-880c-041bc2e9f8c2",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79748614-129b-4c3e-93cb-41d79d0c34ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "96a9c840-1ec0-4c30-b407-7c6d9e8776c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f8a0587-19fe-4e38-b999-6f8f113bfa45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7ff7a2c-c6f1-4d25-aaa9-0afb93697f60"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "83dd258e-6c61-43a8-9b4b-8cdfc991f348",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d3f785a4-a962-4c57-9b8c-06daba7139fd",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "29c583bd-2c11-4179-af50-efc9f89a95d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "27b91513-60a1-4aed-8f28-339a1e1ab4d7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a2be1ea-b9ca-455f-b405-989f328c8949",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1228cad7-d031-4679-af12-19145ed18089"
                    }
                  }
                ]
              },
              {
                "id": "c638afe2-39e6-492b-b1cb-f165cf94ee67",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f3a909a-976c-44e1-9776-fab7ee10e348",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2dacc130-34fe-4c66-be9b-fddb6cab7027"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "26c5a481-3606-414f-b9ed-4c2acf6e457a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b22ec0a6-bca7-4183-9663-1462ead2dcde"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ccc0bdc2-5da1-4c0c-8e66-e020946d58b2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f853afaf-e733-47b2-bbe5-0c187eb80f25"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b69daccb-37e0-4842-82d7-2c1d023549d3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d0bd462c-4a5d-44d7-8030-f877ac0e8a5d"
            }
          }
        ]
      },
      {
        "id": "90217593-ea58-4403-802e-bcd0537aa509",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "b8096513-2905-43d0-9835-338e78da569f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d59e8063-ccb2-412e-9d3c-35d3745bf4ad",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bf1af672-eda1-4ff0-8ad9-3a9df212219d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b4c2068-56e3-43a4-ba71-2ce68fd271f4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6858dd64-97a0-473c-b224-af1cdbfe09e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41383e20-f379-40cd-94f7-885920d24f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1bf80b09-a52b-4a8f-a3e0-c598c54da36a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e652382b-a5f0-4398-a8d6-b4de940b6817",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6e45341-2a84-4b22-a4a7-a0afda863419",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "06ddd53b-3ccc-4662-995f-5d94e70b2880"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5030f2a7-2227-40e8-b06f-5b7804779b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cd4c9b4c-e44c-4b3d-8cbc-576037bc045b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8497539a-c228-41fe-915a-e8c877fc618b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "90977137-f75c-425f-b529-a8e644200ea2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a9cc93f-da2c-4736-8099-12afeeb85bc5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "acf25bdd-ee47-4f4f-b909-a50a27000621"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "17ef6b90-bd00-40be-8e29-7307d07739e7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7d987538-0aa0-4514-bf73-251b2a545f42"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f5ff5fec-6e18-44b6-847e-133366874880",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ce046310-5108-4576-9013-4a1028fcd529"
            }
          }
        ]
      },
      {
        "id": "f41f791c-c51e-4b32-bf55-fe977a3ffdb4",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "1b3a466e-5aef-4f84-baf8-89be2a0773f9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "55116159-fc63-4e48-86d4-aefd5897b795",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "48bdf9c8-084f-43b6-91c1-4157fc9a561e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a897c852-7a10-4b48-928d-9cb9c0e683e6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "48cdba40-460a-435b-b48f-4c98af5f355a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0acb8876-790c-4ce7-a625-7c7ecca989ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "519c95f7-1ff0-4632-9dfe-05b6822a6ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab2e2051-1f8c-4d7b-8455-0a5baf50e936",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3280d8c7-af80-4c45-a430-6b78cabac6c3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b6bf8881-8659-477f-a801-b19360fd5eca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae3503b-a7e8-4e02-bc51-18db6f371dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4cac23a5-8593-4a74-a90c-ef2c6185d81f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0119fe08-823c-424b-b46a-bbea2424169f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "45c2128e-005e-4c64-a10a-a4519673c595"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e65e601b-5a52-41f3-8ed7-27f99b28e853",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8684c580-814a-4352-83f7-e970272948bc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4171cdfc-bdf9-49f6-b556-cc1d04a5d311",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3d22fb50-e771-40b4-8afb-ec4ab827b152"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0f31979f-0d80-4d25-89b9-f41ecbfc3758",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "085dd733-97da-427d-b215-a4b2966e118e"
            }
          }
        ]
      },
      {
        "id": "d74aa63a-5ea6-47cd-b375-16edb5f39971",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5cb6ca1a-7177-4f29-8869-3d15c24f1488",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1cf7fa88-5c5e-4772-8144-1b23788f2887",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3437ceb0-d677-49a1-860b-09335952ffc3",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "732356c1-2811-40f5-9f5b-296e718de2e3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "30512c39-54bf-4316-9872-06c5403c13f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c90f71f2-8479-4cfc-af13-398ca87d36b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8992c31a-74b5-4fa7-9ffc-4357fef64937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29929e93-2388-4fc4-9408-ccc9aac5fb27",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d64ea4a-8191-444a-adc5-ce6a26bd8603",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "fcd3eec1-555d-42b4-9a77-155d01415502"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20fbca06-7221-4de1-80d6-6742625ba178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe2259c9-7734-4907-bdbd-dc024ede900f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f08df2f8-feaf-43d5-8a21-b2939fc1f7b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e283ceec-421d-458f-92c3-d4114ed5e48b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4086f1f9-3230-4b4b-aa48-42f0c940ad82",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e880991d-7919-4a10-b907-4a52068f0631"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "107c261d-420f-4626-8486-3e1e4c03da59",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "bd7c621b-f049-4d42-bd29-8a81f9bb5b0d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8f51346c-6018-4dc9-abc6-4356ee7ff043",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a725ab2a-96b8-4372-9f8f-dfd615d5f20c"
            }
          }
        ]
      },
      {
        "id": "355eec5f-4c5f-4784-ace9-8b94644859e0",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dbd39adc-58ad-434d-9755-640b7a80d526",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "413f0dd1-b471-437a-8801-4cb1b8c205cc",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "2449789a-ec64-4582-89ca-28140c119d01",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "210d37ff-309e-4212-a127-79866b133016",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e29bc779-6c0a-44cc-97a5-dfe53e449ad5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 23
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 617.4312977099235,
      "responseMin": 10,
      "responseMax": 5361,
      "responseSd": 737.2532690226448,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1672447007495,
      "completed": 1672447180203
    },
    "executions": [
      {
        "id": "5ae1e908-e06b-4955-8e73-2698fd1d40be",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "6cc51506-5c1c-4a6b-ae8d-56e37497809d",
          "httpRequestId": "ee71b9ef-da55-45ad-a975-bd2be2f63c63"
        },
        "item": {
          "id": "5ae1e908-e06b-4955-8e73-2698fd1d40be",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a2767a3f-f0f6-447c-a7de-7f399c41c41c",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "e3c999ee-3380-473a-ace4-27759804532c",
        "cursor": {
          "ref": "c0b393df-a5df-48d5-8f9a-9192cb73b48c",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "0de219a0-0d9c-407c-b892-56a15e8b4e73"
        },
        "item": {
          "id": "e3c999ee-3380-473a-ace4-27759804532c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "2a6916d0-241c-4d0b-90ee-c95350a52421",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "aac01d7e-ed28-4c6b-a01f-a2eda427dbcb",
        "cursor": {
          "ref": "1a95cad5-7923-4356-9fff-c9188bd522e7",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "5a4bf64e-0fe3-48e5-a753-6d0af4d77a23"
        },
        "item": {
          "id": "aac01d7e-ed28-4c6b-a01f-a2eda427dbcb",
          "name": "did_json"
        },
        "response": {
          "id": "061fd8c1-a746-4948-a99b-26b3ac411b71",
          "status": "OK",
          "code": 200,
          "responseTime": 1012,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f235a786-4981-454c-98eb-130cd7d70e5a",
        "cursor": {
          "ref": "43040883-66c5-43a3-b04b-d076e9e262fa",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3a86b1f4-b2cd-42a5-9d77-e40cb4ac5fec"
        },
        "item": {
          "id": "f235a786-4981-454c-98eb-130cd7d70e5a",
          "name": "did:invalid"
        },
        "response": {
          "id": "67548e37-8c95-4974-9613-cb5aa5411d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f235a786-4981-454c-98eb-130cd7d70e5a",
        "cursor": {
          "ref": "43040883-66c5-43a3-b04b-d076e9e262fa",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3a86b1f4-b2cd-42a5-9d77-e40cb4ac5fec"
        },
        "item": {
          "id": "f235a786-4981-454c-98eb-130cd7d70e5a",
          "name": "did:invalid"
        },
        "response": {
          "id": "67548e37-8c95-4974-9613-cb5aa5411d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b017c4-032c-49a9-9266-0b8fcb1c1ff0",
        "cursor": {
          "ref": "412c92e9-8a01-43cc-9594-31a6e6c0210f",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8fcf7cc4-0240-4dde-a86e-96ba38071796"
        },
        "item": {
          "id": "89b017c4-032c-49a9-9266-0b8fcb1c1ff0",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d117077a-d12d-4f83-acb9-2815c65a4d33",
          "status": "Not Found",
          "code": 404,
          "responseTime": 639,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a7b92b0-e46d-489e-962e-1d5fb2dca097",
        "cursor": {
          "ref": "18ddbd6b-d792-45b0-a046-4c0f93ee202c",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f37e0d52-b323-43a4-9f15-4d8865d2f339"
        },
        "item": {
          "id": "0a7b92b0-e46d-489e-962e-1d5fb2dca097",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c841a0a2-4cc6-414e-b4d6-2714c61634b8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 589,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38016057-0694-4dea-a630-d53d1ab5cbc8",
        "cursor": {
          "ref": "5b7cd19e-5e71-4072-852e-ec0067943389",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "bd0466a6-8545-4fe8-b5d9-8f12c5963676"
        },
        "item": {
          "id": "38016057-0694-4dea-a630-d53d1ab5cbc8",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3053203f-c3dc-4cdb-a1c2-90b75a3c16f3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4649e82-e9f2-4517-a9d6-93e9dd0f569e",
        "cursor": {
          "ref": "71f9dfb6-3d6b-49ae-8e91-8ba24378a8ad",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2ecdd442-1396-4263-b469-864efb9d89fd"
        },
        "item": {
          "id": "d4649e82-e9f2-4517-a9d6-93e9dd0f569e",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "9f8f6d14-e397-4353-b08b-e10ce15bdbfb",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 550,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4649e82-e9f2-4517-a9d6-93e9dd0f569e",
        "cursor": {
          "ref": "71f9dfb6-3d6b-49ae-8e91-8ba24378a8ad",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2ecdd442-1396-4263-b469-864efb9d89fd"
        },
        "item": {
          "id": "d4649e82-e9f2-4517-a9d6-93e9dd0f569e",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "9f8f6d14-e397-4353-b08b-e10ce15bdbfb",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 550,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e51779ff-49ba-4702-832c-4162c157e756",
        "cursor": {
          "ref": "caa70724-129e-4f54-a24c-356bff7ead9e",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f3f5b436-ae30-4793-a071-83b368dc3d18"
        },
        "item": {
          "id": "e51779ff-49ba-4702-832c-4162c157e756",
          "name": "identifiers"
        },
        "response": {
          "id": "214fb89f-6ada-4330-b94d-9ee0ec38e634",
          "status": "OK",
          "code": 200,
          "responseTime": 939,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32a3c9ea-c6e3-4166-96b3-785dec69f904",
        "cursor": {
          "ref": "da45cd60-c941-4989-b8e5-423bad9285d8",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "031cb889-599d-4806-af3c-32f1db35d136"
        },
        "item": {
          "id": "32a3c9ea-c6e3-4166-96b3-785dec69f904",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8cec8513-43c8-4c3c-9fac-f1eeb28b7130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32a3c9ea-c6e3-4166-96b3-785dec69f904",
        "cursor": {
          "ref": "da45cd60-c941-4989-b8e5-423bad9285d8",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "031cb889-599d-4806-af3c-32f1db35d136"
        },
        "item": {
          "id": "32a3c9ea-c6e3-4166-96b3-785dec69f904",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8cec8513-43c8-4c3c-9fac-f1eeb28b7130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0623b470-8654-4735-a23e-6a72242a647c",
        "cursor": {
          "ref": "c87b2171-eddc-4461-8cc9-a956014996d9",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1d9f058c-cfe0-4567-94b9-7d11c7e9f8f4"
        },
        "item": {
          "id": "0623b470-8654-4735-a23e-6a72242a647c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "654a13ad-9bc8-4c02-af7f-9b556d35cbca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e6f735-395e-4cb1-911b-386e018d9afb",
        "cursor": {
          "ref": "bc7743b4-600c-484d-95a8-1ddf47b3fee7",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "51bed0a7-38fa-440b-b0ff-b4d8f948e3fd"
        },
        "item": {
          "id": "10e6f735-395e-4cb1-911b-386e018d9afb",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "52ee364a-a4a3-4bde-b53d-d7f40dc94e3b",
          "status": "Created",
          "code": 201,
          "responseTime": 2592,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "2ae94258-f0b7-442b-95a3-af4da8746ccf",
        "cursor": {
          "ref": "a8a3cdcf-6edd-4120-90af-d601d839d3f6",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "bcd1761d-eb77-4eec-9c18-b884b19135a2"
        },
        "item": {
          "id": "2ae94258-f0b7-442b-95a3-af4da8746ccf",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "513fa83a-e469-4af1-8a09-3522b6ac13d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e74ec745-aa85-4105-a2e1-a7b172c00e08",
        "cursor": {
          "ref": "2b0e90c6-6a0a-4bd7-917f-688f43ab42d1",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5bb376b2-5af9-4726-9d46-ddecf439eb42"
        },
        "item": {
          "id": "e74ec745-aa85-4105-a2e1-a7b172c00e08",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "eff2acee-38b1-4ce4-9e9d-318697499fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 729
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a821ca59-3f75-4ec1-97d7-4d2ee25b904a",
        "cursor": {
          "ref": "04cd6e1d-df94-46cc-b988-ebf0b9e975c0",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "08fa6d74-0c11-4df4-bea6-37d6c91f17a6"
        },
        "item": {
          "id": "a821ca59-3f75-4ec1-97d7-4d2ee25b904a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c16daeaa-e18f-41bd-b135-4504c178e7e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19652b5c-f871-4957-8138-98f4d2864c46",
        "cursor": {
          "ref": "b526a9fd-5c77-43d2-9fe4-c64b57fe3378",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c978f4cc-0161-46a0-8476-30b5213d3878"
        },
        "item": {
          "id": "19652b5c-f871-4957-8138-98f4d2864c46",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "111a4b6b-db30-44ba-a90b-7e74c7d47239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77fc6191-bb7a-490b-911a-3b5708aa49a3",
        "cursor": {
          "ref": "2f0bea5e-24a9-4d7b-927b-13466a5c8cfe",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "fba57a7b-29e0-491f-b5ba-dd465adec439"
        },
        "item": {
          "id": "77fc6191-bb7a-490b-911a-3b5708aa49a3",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "62bc14f1-fecb-4e80-b518-b70fd12ab026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac8e292-bf8d-440e-8c7b-43ed8d393ddd",
        "cursor": {
          "ref": "e2a9a902-c14c-4e68-ab66-e03da80ff29d",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5887c6d5-6f35-4a80-8d94-6845e7683bce"
        },
        "item": {
          "id": "fac8e292-bf8d-440e-8c7b-43ed8d393ddd",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "55a00d21-ab75-45aa-8614-3625d874ddf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1169724-dade-4ac9-b9dd-42312584d89f",
        "cursor": {
          "ref": "19196c65-b276-4fc8-87b5-c8a3fed4633d",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5c3fa65a-7559-413a-a985-c8aafa990b48"
        },
        "item": {
          "id": "e1169724-dade-4ac9-b9dd-42312584d89f",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "01cd9aed-065a-4f0c-b944-cbf76d2835f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 1003
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "632f31fe-505d-412b-8b8f-1c2eb1810d10",
        "cursor": {
          "ref": "15b2522c-9cc5-4c3f-a8d3-f2fa310503cd",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b0a2f0ad-9b6d-438f-b5d1-cd48c68c43b5"
        },
        "item": {
          "id": "632f31fe-505d-412b-8b8f-1c2eb1810d10",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "50a2c8e7-2db5-45d8-b657-827abfef2337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 1000
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "015e5719-b401-4931-b18d-1ca028fe4f52",
        "cursor": {
          "ref": "5099746b-c5c6-4bed-9926-5d16e0e7d3ec",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d6336eb3-3fc8-460c-801a-c6e4846e237c"
        },
        "item": {
          "id": "015e5719-b401-4931-b18d-1ca028fe4f52",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "a4ae0b64-1e7a-4311-8f28-e8fcd16f2882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 1002
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1ef35e3-e147-4d15-9f0a-33dd0fcc20ca",
        "cursor": {
          "ref": "2115910c-9e6e-47f4-acbb-cc5c4e0892a7",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "b3137528-99f0-4c48-b94f-2740b0714269"
        },
        "item": {
          "id": "c1ef35e3-e147-4d15-9f0a-33dd0fcc20ca",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "5d0de5e6-2e6e-4c0a-aee9-47bb762496c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 1043
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e289e125-51e6-40fd-bd84-aa0234caaaad",
        "cursor": {
          "ref": "b5f49739-fc53-4299-b502-83bf21164a80",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f5a04148-a6f8-4be9-8a69-a7e142e19879"
        },
        "item": {
          "id": "e289e125-51e6-40fd-bd84-aa0234caaaad",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "a9469f5b-384f-49d4-925d-080147c8254f",
          "status": "Created",
          "code": 201,
          "responseTime": 5361,
          "responseSize": 671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "02d13951-7bab-4917-835c-b1fea64131e2",
        "cursor": {
          "ref": "d1fedbe1-9aa9-4b4a-9cfd-8167e3f8afed",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "fa6c9ebb-e867-40ac-bcff-aa15727a4781"
        },
        "item": {
          "id": "02d13951-7bab-4917-835c-b1fea64131e2",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "54aa7fd2-5b34-4d31-93d4-ae1b5f103aca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ce34e3-a884-4c03-9a01-ecd99ae5a5c9",
        "cursor": {
          "ref": "bbffeb03-daed-43df-9898-02954814b8bd",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e39e9b94-049f-4f8b-a4ad-f465d6a47ce2"
        },
        "item": {
          "id": "78ce34e3-a884-4c03-9a01-ecd99ae5a5c9",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b6c2e874-28cd-478f-9862-4903012369ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0126b4e4-6644-4eb7-bed9-7d8e116d2cb8",
        "cursor": {
          "ref": "6ca51ca2-2833-42ea-bed0-daceb41b8016",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a34447d8-bb00-4243-acac-02045cef86f6"
        },
        "item": {
          "id": "0126b4e4-6644-4eb7-bed9-7d8e116d2cb8",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "938cdf03-304d-4f7c-8717-085ebe6a0ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef460500-ea34-4258-9a92-37039d2ed577",
        "cursor": {
          "ref": "ccd3f6de-225c-4db4-a893-4ff3acfdb9bc",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "8ca8222b-59ea-404e-918e-d001e423c6e5"
        },
        "item": {
          "id": "ef460500-ea34-4258-9a92-37039d2ed577",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "a0c37e58-fb83-48be-af1e-5be31807e63c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27900a5e-0820-4227-8d78-b21cccb564f6",
        "cursor": {
          "ref": "7fd907d5-8be2-4550-b27b-c03af95d1e0b",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "1d6a8afa-2440-45fd-814d-bb2f2a398efc"
        },
        "item": {
          "id": "27900a5e-0820-4227-8d78-b21cccb564f6",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "85837ccd-2e23-4433-8419-714e6f5cd529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38715f5d-6806-447b-bb68-f526b23b41b4",
        "cursor": {
          "ref": "d3c01206-506c-4513-8d4f-a9eb301ff5c4",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ef5d1ca7-a9cc-404c-a810-51d94a8cffa4"
        },
        "item": {
          "id": "38715f5d-6806-447b-bb68-f526b23b41b4",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "21bcadf7-21cd-4da1-8963-b1ede156b6e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa318f6-4033-4f69-9503-023d0f49b359",
        "cursor": {
          "ref": "c783052e-c946-4171-b534-2059c1dc1174",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "6a334bb5-9fba-42d5-bb72-cd9cc20055f1"
        },
        "item": {
          "id": "8fa318f6-4033-4f69-9503-023d0f49b359",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "dd3c7dd3-957e-42b9-8e11-951b38289c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b09703af-33b5-465a-a2b7-90b7bcf269b6",
        "cursor": {
          "ref": "4e997829-ee72-43e6-b2d7-2e4d0e776d3f",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "44d24e78-55bc-4ce3-9e11-eaaf9f2f1d68"
        },
        "item": {
          "id": "b09703af-33b5-465a-a2b7-90b7bcf269b6",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "4fb3239c-4d9c-4298-a962-82393638bd41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82494f70-346c-40b2-9b9c-fdb2b86fa5e5",
        "cursor": {
          "ref": "e06e75a6-6086-461e-8981-da88ca5d5750",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d89ca89d-1a6c-48a9-9185-eaced1507f77"
        },
        "item": {
          "id": "82494f70-346c-40b2-9b9c-fdb2b86fa5e5",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d0987ad5-eca9-4a86-b703-b0555c8cfbbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9022389-f02f-4734-8b39-ff63d064577a",
        "cursor": {
          "ref": "f479c5f4-67a0-415a-9162-b49152f48e4b",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "32adc134-3aea-467e-854e-5de33e0fa6d8"
        },
        "item": {
          "id": "c9022389-f02f-4734-8b39-ff63d064577a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "82f95d34-337a-4701-abc6-39c49c548f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29975612-50b4-46bb-b050-ad66b43b0cc8",
        "cursor": {
          "ref": "7459fd71-7283-4840-9395-aff4c355bd7f",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "871fb68f-892c-44be-800b-4bbe2b816ea8"
        },
        "item": {
          "id": "29975612-50b4-46bb-b050-ad66b43b0cc8",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9f0a0b4c-9d09-4828-b396-edbdc25bf5e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea4d762a-87c5-4245-ad62-26cd30c69a41",
        "cursor": {
          "ref": "9e256698-dba4-4f7a-9dca-db2246497eab",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4927a22b-8d9a-4515-904b-d1e97486436a"
        },
        "item": {
          "id": "ea4d762a-87c5-4245-ad62-26cd30c69a41",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "76625b1c-0768-4572-b4ad-7cd207e868a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55f250c-942d-4bd6-9ebd-1693a8e2ea1a",
        "cursor": {
          "ref": "0d9790dc-cfb7-4075-a513-5f852ff8f08c",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f2aa4217-219f-4403-ad1f-b73b17d53f04"
        },
        "item": {
          "id": "f55f250c-942d-4bd6-9ebd-1693a8e2ea1a",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b9f8b992-e43e-4a5c-abdf-220a1cc14e8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0140cc3-a755-44bc-b9e0-d5ad7b649e92",
        "cursor": {
          "ref": "3513c003-5e8b-4f54-973b-3ebdf7dad430",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "2b5bef3a-22d5-47a7-8689-73a7f287a737"
        },
        "item": {
          "id": "d0140cc3-a755-44bc-b9e0-d5ad7b649e92",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "fb3eda07-ff0f-4fc5-8ec3-5d6e845f405a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bdbcdc9-88ae-46eb-8f14-35c895d71f61",
        "cursor": {
          "ref": "15931ceb-fa69-46ea-98cb-6d8e5acbe7cb",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a1121fa7-1ae6-44e3-b061-4313d8325c94"
        },
        "item": {
          "id": "7bdbcdc9-88ae-46eb-8f14-35c895d71f61",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "1a0009f7-69ef-47e7-93ed-e3baf3f84ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2339d1-d136-4b5d-9b97-5d980c451eb7",
        "cursor": {
          "ref": "c4603b84-305a-4111-8445-de8a2198045a",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f82fc02c-4ed2-4d2f-ba04-e077344115d8"
        },
        "item": {
          "id": "be2339d1-d136-4b5d-9b97-5d980c451eb7",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "775073aa-3c95-4a7f-946a-0eaa45121246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b6120e-3a27-47a9-a475-8460964b90c5",
        "cursor": {
          "ref": "58efeef3-a916-4d7e-bc6f-c99825ade37c",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "9eee684e-4eb9-41e5-9131-21211fe140fa"
        },
        "item": {
          "id": "98b6120e-3a27-47a9-a475-8460964b90c5",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "77220582-eec3-43b9-ae0c-8a1df67e55f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a1dc86-5bac-4d35-929a-213ff3530713",
        "cursor": {
          "ref": "3e066221-4e22-4b52-b223-8a873dbcc677",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ab9ccc45-56c7-4a73-89a4-f9140ba31238"
        },
        "item": {
          "id": "c7a1dc86-5bac-4d35-929a-213ff3530713",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "997fabf7-4065-40dd-b785-032d889a9221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f18bb1d-e054-4d73-82c2-ab304061c8be",
        "cursor": {
          "ref": "803f4ddb-689d-47bd-9545-e8a49a3751e0",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c51a500b-cae2-4be7-adde-fe24dd020c37"
        },
        "item": {
          "id": "3f18bb1d-e054-4d73-82c2-ab304061c8be",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "fe4d722d-630e-4e30-8aba-31375f53fdf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaef60b4-9690-423c-b17a-2f99ecedecbd",
        "cursor": {
          "ref": "15c727ad-25db-47f1-9c52-e1bef62d6335",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b49db159-a3a9-456d-b39b-26881fd390f3"
        },
        "item": {
          "id": "aaef60b4-9690-423c-b17a-2f99ecedecbd",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "b5974f54-a222-4604-8cd9-de4a56d3d790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe13316-1078-4d30-8097-c464c079dcbb",
        "cursor": {
          "ref": "33152e97-3c99-428d-9fe2-69a6065132b2",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "add46057-ca85-4dfa-90b5-4dd689220e7f"
        },
        "item": {
          "id": "7fe13316-1078-4d30-8097-c464c079dcbb",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "68eb5a75-c67e-43b8-bb2e-67e6df3d8800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eac18db-4b9e-46b1-b8c0-b61940a7c476",
        "cursor": {
          "ref": "7e514f17-5cac-494d-b133-9f539bbe42b1",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5bf81f0c-a266-40fa-9503-e183b1d1fbb2"
        },
        "item": {
          "id": "0eac18db-4b9e-46b1-b8c0-b61940a7c476",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "17f8c405-1e4a-4002-b80d-cbb8e60e2d24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f49fbad-1b9b-4240-bab5-ac10218538dc",
        "cursor": {
          "ref": "e407803e-7d94-4888-9257-f10902965997",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "5c9d91a2-eedb-408c-bf5b-159ce049dd36"
        },
        "item": {
          "id": "0f49fbad-1b9b-4240-bab5-ac10218538dc",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b1266134-307c-46aa-a10f-13db0a2aebc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec5d4b4a-a7ff-4683-85f8-d29d9ab90901",
        "cursor": {
          "ref": "25950abc-303e-46e5-aba6-daa7c7a450fb",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2ad81e25-3e59-4712-b23e-c9782cb59aa1"
        },
        "item": {
          "id": "ec5d4b4a-a7ff-4683-85f8-d29d9ab90901",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "f43122dd-d2ce-4684-9e70-d940aee5fc75",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 652,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85237773-c029-4c06-823d-406a16d6da12",
        "cursor": {
          "ref": "a9e23d81-99d1-4316-a281-f5daa5a7b7aa",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "25f19615-3230-4e99-a550-88e4e29a79a5"
        },
        "item": {
          "id": "85237773-c029-4c06-823d-406a16d6da12",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "7b5d634b-6bef-4cb1-8a58-beaea44772e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa864663-3bfc-430c-a33d-8bc723ab678a",
        "cursor": {
          "ref": "b74fb6f3-5e62-45dc-b4a8-608249b5203f",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a0dabc01-d8b2-4ccb-b722-3586dd1973ce"
        },
        "item": {
          "id": "fa864663-3bfc-430c-a33d-8bc723ab678a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "a9c148eb-994c-419d-bf8b-28e14e619bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "289ebfeb-d71e-47a0-aad4-013af631496d",
        "cursor": {
          "ref": "eb3f5f3a-04e5-48b9-b31a-c55ff9060c0e",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "619acd9a-3bd5-491b-9773-954cef075c11"
        },
        "item": {
          "id": "289ebfeb-d71e-47a0-aad4-013af631496d",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "7b1ceac6-66e7-4f4a-a6dd-a7746fe54ef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c23553c6-4f4e-4a79-9f10-624b4939991f",
        "cursor": {
          "ref": "687e61e7-5430-4e1f-938d-ec900f8f7819",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "db8fa4a0-a46f-48e5-a331-c3fba070363e"
        },
        "item": {
          "id": "c23553c6-4f4e-4a79-9f10-624b4939991f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "9d2e132b-edfd-4c3a-83b6-4f7d4e961e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc8b96e-5f6e-49b4-ad16-b8e5bf05db1a",
        "cursor": {
          "ref": "22634705-d090-4ccc-8404-0d26a7b53873",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "bbd81f08-5626-4cf8-b0fa-c887650cca0e"
        },
        "item": {
          "id": "fcc8b96e-5f6e-49b4-ad16-b8e5bf05db1a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "84cfe915-555c-4ce1-b34e-9c9d04e614c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda248e9-95b3-44e0-9e73-25e7c6b9c21c",
        "cursor": {
          "ref": "244c3eba-6436-43a7-886d-c2de849edd0c",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "4241a0e5-0381-44e1-893c-bfb0b89c3be9"
        },
        "item": {
          "id": "fda248e9-95b3-44e0-9e73-25e7c6b9c21c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "3886a2ad-f9b5-49aa-9075-df0b0ab6252e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 1724
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb799e6b-fbea-4038-8e44-34eb16bff2a1",
        "cursor": {
          "ref": "c9a0df1b-ab6a-4b3a-a023-cd03aea7987b",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b29667a9-0d0e-4417-9e87-01e1de7f8013"
        },
        "item": {
          "id": "bb799e6b-fbea-4038-8e44-34eb16bff2a1",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "181b26fc-6b62-4575-bc15-256329126ece",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 641,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "461b5120-f787-4698-93a5-3041c65098aa",
        "cursor": {
          "ref": "acb09eea-c33d-44bc-9157-eb9d2e41a804",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "2d8417fa-d776-4b46-91fe-b5579596d38d"
        },
        "item": {
          "id": "461b5120-f787-4698-93a5-3041c65098aa",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "33d5ba7c-b40a-46fc-887e-92b9fcf6b681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2847dd8-41a1-41ce-a5b0-72d24abd85a4",
        "cursor": {
          "ref": "d062855a-4e6a-4435-b6ca-e0c8dd156e31",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ae7bd312-b283-4add-90e9-d09041cfb6de"
        },
        "item": {
          "id": "f2847dd8-41a1-41ce-a5b0-72d24abd85a4",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "03c17cb6-bd2d-44cc-991f-124d00b5f1db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b3b674-427e-48bb-a9b2-019dc3eff63b",
        "cursor": {
          "ref": "ada0940c-67b5-4818-b52c-2d4f8f3f7db7",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d5152ac1-d423-4282-b98a-7d3e4f1889f2"
        },
        "item": {
          "id": "88b3b674-427e-48bb-a9b2-019dc3eff63b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "558b6369-aa27-489f-b0bc-f8270d3c3ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b2418d0-3321-47b9-b3a7-e19fa29305c6",
        "cursor": {
          "ref": "07a732c0-ea23-423a-8619-4fd3f0006545",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "60d3a238-af70-499d-ab9c-830397043b45"
        },
        "item": {
          "id": "1b2418d0-3321-47b9-b3a7-e19fa29305c6",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "980b5c96-8580-4730-b5a6-31d7f46dbb27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27fbbed2-6c26-4de4-9de5-41b4ea295513",
        "cursor": {
          "ref": "e1169adc-9bd0-4f3a-9a2c-0fa73b7a049c",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b0adf16c-8d7b-446f-8ce3-0debaed9e4b0"
        },
        "item": {
          "id": "27fbbed2-6c26-4de4-9de5-41b4ea295513",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "88871801-e906-41c3-9ffb-7fb923bbcc79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62aea08b-709b-4969-b236-330d04d74b3b",
        "cursor": {
          "ref": "ecbe0fa4-4b41-4415-bb07-58b9dd743dc8",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ffdbb115-6d54-4f14-b2a5-405aff43e5d6"
        },
        "item": {
          "id": "62aea08b-709b-4969-b236-330d04d74b3b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "51c26224-57cb-458a-8d19-0a85e4029553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4aea81f-b80b-49a5-9137-3fda164101f2",
        "cursor": {
          "ref": "eaa75b7b-54c2-42cb-a920-ea8173e2759a",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e41f1220-6968-45da-98d9-0e3e5f3a4ad8"
        },
        "item": {
          "id": "b4aea81f-b80b-49a5-9137-3fda164101f2",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c6edde95-f58e-4776-8bfd-d364cb558ec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 667
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "195c5bc4-2ee2-4aa3-86f3-61389109ad0e",
        "cursor": {
          "ref": "46a0da1e-6453-4254-bc6a-87336b5d4914",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b8e92a76-120e-4ecd-8d3b-d14b1ff5e5f6"
        },
        "item": {
          "id": "195c5bc4-2ee2-4aa3-86f3-61389109ad0e",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "779eb853-383f-42ee-8265-4a2be70a5ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4af8294-d41b-4e63-b61a-f3987183c87c",
        "cursor": {
          "ref": "05177ba7-abe7-42d6-a2cb-2c28fa7c34e9",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b8a8af9f-7cff-48a8-8285-adad6b915f19"
        },
        "item": {
          "id": "d4af8294-d41b-4e63-b61a-f3987183c87c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "755dc966-3925-4a55-9f77-a07eb8d70ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 1108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2991aee0-e452-4cd1-8ee0-31136933710b",
        "cursor": {
          "ref": "3211db34-4c0e-4597-9a7e-5fb517528b1c",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f2deb076-a948-48a2-9296-dd3637e9279d"
        },
        "item": {
          "id": "2991aee0-e452-4cd1-8ee0-31136933710b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "4d8caf54-9e75-401f-9ae9-0a0ab0ce9d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72b1e64-db1a-46bd-8ddc-9dab72253011",
        "cursor": {
          "ref": "f99c173d-8ced-451b-872c-c429c2875e34",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b0698214-244d-4bb3-9a59-127eb80252c1"
        },
        "item": {
          "id": "d72b1e64-db1a-46bd-8ddc-9dab72253011",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "78b8a9cf-3b9c-4d5b-befa-82655e6aa83e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a10f486a-3e62-4137-bbba-aed89c626c1b",
        "cursor": {
          "ref": "1cdc13aa-7016-4a78-b944-df77842e9633",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "053bc7e3-a687-453e-abec-693afccf3f39"
        },
        "item": {
          "id": "a10f486a-3e62-4137-bbba-aed89c626c1b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "11254f1e-d4d9-4f49-abd3-b924fd35efda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aba09cf2-d800-412a-8a14-27bfe2f9e092",
        "cursor": {
          "ref": "793eafe3-7700-491d-ad6f-b51d56635075",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "de93c483-1fe4-4e1f-98ca-9eb30c2cc502"
        },
        "item": {
          "id": "aba09cf2-d800-412a-8a14-27bfe2f9e092",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "62e518e9-53c4-434c-b897-7f8fa660fbe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2cc954e-dbe1-4769-aab0-203f0f44b50f",
        "cursor": {
          "ref": "4a4d3b08-fee8-4500-8998-19a8fbfdfed8",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "737a7745-c0ba-4d53-aa84-e56a5bdb23d4"
        },
        "item": {
          "id": "b2cc954e-dbe1-4769-aab0-203f0f44b50f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "1387cbd0-695c-4863-be9e-dde82a4d408c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "548eff0a-ea29-4bff-ad13-0a776c3fa713",
        "cursor": {
          "ref": "083d967b-26f7-4401-b10e-2cb6876ac61f",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "5350bc88-de2e-43ed-bc8f-ef1428ba02ca"
        },
        "item": {
          "id": "548eff0a-ea29-4bff-ad13-0a776c3fa713",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "72ae6ee5-0780-4ce3-95a7-c5a3efd7dd86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "186b7435-2c11-484d-b706-4e69145a053f",
        "cursor": {
          "ref": "868809ce-404d-4938-875e-f23fb3fa4173",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "02c2a94a-6b39-4899-987d-f811e298f301"
        },
        "item": {
          "id": "186b7435-2c11-484d-b706-4e69145a053f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "ded087b4-d28e-48c6-a16a-1c902d1022da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f5eceae-f517-457c-9331-be2d57772c73",
        "cursor": {
          "ref": "91272aae-6e5a-4218-be33-bef4f9867053",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "5d0c7817-465c-4f87-923d-bd11d8ba7288"
        },
        "item": {
          "id": "9f5eceae-f517-457c-9331-be2d57772c73",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "2020c8c8-960e-408a-9f4b-3fdfbe51a499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 1408
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "390b1513-c55e-435d-83b2-76f7f903613d",
        "cursor": {
          "ref": "d8cfcc3b-9e64-4312-8352-e62c64c13427",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "5b024f77-e593-45a6-9984-13c0570b46f6"
        },
        "item": {
          "id": "390b1513-c55e-435d-83b2-76f7f903613d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "424b9d79-2926-425c-99b7-32509947ec91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2b95974-7725-48c6-9284-391d05c644e8",
        "cursor": {
          "ref": "01ad68b0-8ed0-4b77-8bca-525ab0dfefc2",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f947a89a-623f-4034-92d9-81c8e497aa34"
        },
        "item": {
          "id": "d2b95974-7725-48c6-9284-391d05c644e8",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "0d4a93a9-fb03-4445-8d28-cebeb19cb76e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ebbac2-776f-47de-bf4c-27f1bf6d9bf7",
        "cursor": {
          "ref": "12b99dba-d3ce-4eb2-b92d-4c14d36c8a9a",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8a308814-3e8d-4105-b457-f00d7379f050"
        },
        "item": {
          "id": "34ebbac2-776f-47de-bf4c-27f1bf6d9bf7",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "eca9a5e3-433f-49b3-b56f-a416e0b62b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a82d88-2ed9-4451-a6cf-4744a7d57f17",
        "cursor": {
          "ref": "e4669fe1-2743-483d-9f32-8c52266b761a",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "93a73cc9-bda4-4a38-9efe-bc09ea647c72"
        },
        "item": {
          "id": "b9a82d88-2ed9-4451-a6cf-4744a7d57f17",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f1dcb076-5b1d-4331-a89a-62da74a4c285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 568
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc9538e-3262-408e-a782-a613db3b6424",
        "cursor": {
          "ref": "ae9a83ec-b8d5-44fe-bb0d-2eca68711cfa",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "fd2c5021-2ef2-4156-a8fe-c32909b0db64"
        },
        "item": {
          "id": "2fc9538e-3262-408e-a782-a613db3b6424",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "3dfef07d-b217-41ef-9e49-dbf3d53116ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b85cf608-c47c-444e-8f37-a572907cb7d9",
        "cursor": {
          "ref": "0641bcea-9ffc-4757-9923-10f8cf636d76",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9d7a3ca9-3167-4edd-93ee-26231f878244"
        },
        "item": {
          "id": "b85cf608-c47c-444e-8f37-a572907cb7d9",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "717d0a8a-e02c-45d5-94ab-895b9c6d92e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cabeebe-f4bb-4174-a80c-14e8719c079d",
        "cursor": {
          "ref": "2ab27a38-7b98-4c97-a349-c82b9329bfae",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "72eb9798-e989-4cff-8326-243e8ec3c710"
        },
        "item": {
          "id": "1cabeebe-f4bb-4174-a80c-14e8719c079d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f885859b-23e0-40d1-91a0-d9283a0caf9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b31ae9-cfb2-41b2-80d8-280b22d2c0b5",
        "cursor": {
          "ref": "fec10386-c764-4c35-85cc-ed07d2ef6b0a",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "50a03617-a224-465a-8d49-9843fa6ae728"
        },
        "item": {
          "id": "29b31ae9-cfb2-41b2-80d8-280b22d2c0b5",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b1913c31-3645-446d-8ed7-b4e67556a412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b579407b-72d3-416f-a751-0c87ea66b4dc",
        "cursor": {
          "ref": "4817bf85-aaae-4bd4-a683-a999bf86d3b1",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "602e0de9-67aa-4f03-83a2-8118b7649e50"
        },
        "item": {
          "id": "b579407b-72d3-416f-a751-0c87ea66b4dc",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "b1cb113d-c235-44e5-a749-43b622b58132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 844
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78cc23a5-cfa3-4a3a-9fdf-e80238c90348",
        "cursor": {
          "ref": "9be0a4dd-3bad-42e9-94b5-a61fdc40e000",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "70feac05-9f5c-438e-a4e5-5784492109ac"
        },
        "item": {
          "id": "78cc23a5-cfa3-4a3a-9fdf-e80238c90348",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2ac4ff56-95c1-4d88-8a77-72f725aacadd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 825
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a441b9ae-bafb-4836-962d-0b1e2cf3a4bf",
        "cursor": {
          "ref": "b4a5addc-3144-4905-96b5-b3c92af01d98",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "42b71adb-b8e2-4028-b70c-e92f4b50374c"
        },
        "item": {
          "id": "a441b9ae-bafb-4836-962d-0b1e2cf3a4bf",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f93d0357-aa03-4b32-9aee-ca6e08fbc364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eefd9a18-d6ca-49e4-a02c-f9ec4f290f96",
        "cursor": {
          "ref": "d3d9beb4-e68e-4ed6-8f4e-82c1dfb52607",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "1b56c732-8421-4400-8548-987512e6a276"
        },
        "item": {
          "id": "eefd9a18-d6ca-49e4-a02c-f9ec4f290f96",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "10cf0906-1f6b-4b61-a5d9-78218a44eadf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 824
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c43469f3-58fb-4540-b3ac-6dc92762617f",
        "cursor": {
          "ref": "af6ec869-1cca-41a2-bab8-e862ab36c759",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a6518c7c-42f7-433d-80ce-26df7bbcb883"
        },
        "item": {
          "id": "c43469f3-58fb-4540-b3ac-6dc92762617f",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f0f960dc-3bb5-40e6-a335-bb40441de2dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38adb451-beba-4889-a3ac-bb10a0a68605",
        "cursor": {
          "ref": "d5e64751-e18a-4f41-bef0-4c0702a0524d",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c2e726fe-0396-408f-bc80-a3526b259add"
        },
        "item": {
          "id": "38adb451-beba-4889-a3ac-bb10a0a68605",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "3e3a7c51-c6c8-4346-8bdc-f2ca44bbdb97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 693
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af909c88-33cd-478a-ad77-b13e2430b65e",
        "cursor": {
          "ref": "32411070-6082-46c4-8d64-c7e8ae4dc1fc",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "60d4700c-29e8-4328-b53c-5a4b9517806c"
        },
        "item": {
          "id": "af909c88-33cd-478a-ad77-b13e2430b65e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d3f3e965-6e46-469c-a9d5-774c3f2388ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e24fe1-f0c6-4127-a028-36c8781db8a8",
        "cursor": {
          "ref": "e7171b99-7d45-44c6-8cb3-b89359f356a4",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ee2b38d0-9bde-4627-9301-66ab7b3e7720"
        },
        "item": {
          "id": "f0e24fe1-f0c6-4127-a028-36c8781db8a8",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ae519f53-5b73-4b8a-bee0-0fe05138d4d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b8e6703-115a-4fbe-bba5-46d879379ca6",
        "cursor": {
          "ref": "89a053b6-7942-4a41-887a-b0e5d7229f3a",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "686b7f6b-afa3-47e7-8e2a-fd9669d13b6c"
        },
        "item": {
          "id": "9b8e6703-115a-4fbe-bba5-46d879379ca6",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "676af77d-8f12-4f88-98de-ea1c3ddb4820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9fdea4-97e5-4cad-b0c7-2e18341b3461",
        "cursor": {
          "ref": "e37b7228-54de-4937-9f70-374f266e91bd",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "234f6c13-68e3-4223-a8f9-7abbf1817a5a"
        },
        "item": {
          "id": "ed9fdea4-97e5-4cad-b0c7-2e18341b3461",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "deec3264-b237-46e9-b266-e74a341c1e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a50f18-e8c9-4f98-ac0f-179fc8a7f3dd",
        "cursor": {
          "ref": "de1c6a1b-6cb6-466a-95f0-d56fca1e7298",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "aef661f0-798d-49a5-95b4-d1ea3552fa59"
        },
        "item": {
          "id": "b0a50f18-e8c9-4f98-ac0f-179fc8a7f3dd",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a6f4fb7b-67a0-433b-bab8-4cd80c28023e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d480e5ec-fef3-4d4a-a410-2956db3d8922",
        "cursor": {
          "ref": "a3b41098-80b2-4827-87bf-7f0ed4f1efc0",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "89f1616f-e60a-434f-8ef9-1991efca5fb4"
        },
        "item": {
          "id": "d480e5ec-fef3-4d4a-a410-2956db3d8922",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "61f96788-942a-4b44-8fd2-2ed2154e7250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 692
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08397c02-5f2c-496c-89ac-99f6879b1bb0",
        "cursor": {
          "ref": "ad818db0-0f12-4cf4-a457-e69cfbdf19ab",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "4f8d6382-b649-4b8d-8aba-0435e9a6a967"
        },
        "item": {
          "id": "08397c02-5f2c-496c-89ac-99f6879b1bb0",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "61f903f5-6da3-411a-ad8e-71d1f297b3fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e5c591-75c1-453d-ae73-c223165d47b4",
        "cursor": {
          "ref": "9868b867-6e74-41e5-80fd-464ec52b90f8",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "cd4fbf29-1cde-4d3d-9c8d-fcc0231863c7"
        },
        "item": {
          "id": "83e5c591-75c1-453d-ae73-c223165d47b4",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "799c0604-dcd6-40f9-af15-adaf0aea1c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 664
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef3d047a-fdd1-44c7-aace-d9940cf258c6",
        "cursor": {
          "ref": "f552a1c1-1f18-4b1d-b97b-2bb9ba16b20e",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "142b6716-a7f9-4635-b860-b05d44b4c848"
        },
        "item": {
          "id": "ef3d047a-fdd1-44c7-aace-d9940cf258c6",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "369ae96e-bf82-483e-bcf3-73330100ea70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce37046-db44-44b0-a656-6987198e201c",
        "cursor": {
          "ref": "624ddefe-d3af-4139-845d-7b5aae62e3e4",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "fbb9e2a8-1935-4708-a7a1-5aa3388765c1"
        },
        "item": {
          "id": "5ce37046-db44-44b0-a656-6987198e201c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f89fb797-35dd-4044-8a7a-1a397e93e5cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 663
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b0599ee-7771-45be-b713-9fff2031cee6",
        "cursor": {
          "ref": "5fa93350-de5f-4035-baec-d00001cea8a2",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "abe62705-9fee-49f0-a024-9c114fab8795"
        },
        "item": {
          "id": "0b0599ee-7771-45be-b713-9fff2031cee6",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "5283b90e-caff-430f-8d00-8d83a0a9f393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04446883-d363-41d9-b499-7b7fb35d014e",
        "cursor": {
          "ref": "904ffd0c-6ff1-487a-952d-695fb6d6e462",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f69ec2b9-e18c-47bf-8794-06d95e5aa436"
        },
        "item": {
          "id": "04446883-d363-41d9-b499-7b7fb35d014e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "5da41367-4736-4551-84b6-518c48957b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 698
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0934d5f-1ec0-4f79-9e71-0f1f4e706e55",
        "cursor": {
          "ref": "0908fa92-77bb-45e7-a320-52655a541330",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ec6bd8f0-1887-4391-afa5-e235bdcbb1dd"
        },
        "item": {
          "id": "a0934d5f-1ec0-4f79-9e71-0f1f4e706e55",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c54721a6-ef78-4cbc-9d62-6428f96b8b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e5cec8-c4dd-47a6-8bc1-86ae00b92a7b",
        "cursor": {
          "ref": "e174f409-9cbd-464e-8fb4-0b1aae99c0d3",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "1a055c82-7603-4294-a106-ccdf2975b7ef"
        },
        "item": {
          "id": "b8e5cec8-c4dd-47a6-8bc1-86ae00b92a7b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "cc62c748-e1ff-463b-9916-631eebd3907d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2753d007-4320-4e24-a2f0-90a74c0e1d14",
        "cursor": {
          "ref": "1c8e216b-9ed8-42d3-a987-043a23e2cfca",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "9bf4a154-f1ea-42fe-8c8e-574fab79e3e1"
        },
        "item": {
          "id": "2753d007-4320-4e24-a2f0-90a74c0e1d14",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "674ade9a-2ce8-489c-b657-669ade39440b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e810812-566f-407c-a8db-750df7048231",
        "cursor": {
          "ref": "3318bff0-615d-49ac-8afd-6b63bdb5038f",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "8013eb9b-4ce0-407a-b313-4fd195d04260"
        },
        "item": {
          "id": "8e810812-566f-407c-a8db-750df7048231",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "8c6b05f2-33ed-44d1-9c60-f1dabe648f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 937
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d927e280-96fb-432c-880c-4fafd01b0bca",
        "cursor": {
          "ref": "e626e8b7-2e20-4040-9ad0-58dc2f60e619",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "63357a14-cc95-4c7a-b347-a76e89aa2482"
        },
        "item": {
          "id": "d927e280-96fb-432c-880c-4fafd01b0bca",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "8ed1b510-7b36-4d74-9a0e-6e36c7bd55c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f596e5-c5db-4bf9-a087-f87d2bcf9b6b",
        "cursor": {
          "ref": "7bcba466-b98d-4449-a524-8505a72943f1",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "7fd24371-f27a-4784-acf2-2bac679d4b03"
        },
        "item": {
          "id": "74f596e5-c5db-4bf9-a087-f87d2bcf9b6b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "4b611747-320a-41fe-a905-1b447b667a69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 761
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba6809d-a82a-4d80-b600-128fad24b6ec",
        "cursor": {
          "ref": "54d53408-ac6e-4972-a4af-539046b81300",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "3fdeb6f1-83bc-47db-a936-f936a517d806"
        },
        "item": {
          "id": "7ba6809d-a82a-4d80-b600-128fad24b6ec",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "4afdb350-8c44-459d-adbd-dd4f5b03902f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7072a0b6-c690-4239-9577-93de017d029a",
        "cursor": {
          "ref": "72a61c39-9e3d-41c2-8ec1-82cc3f847c37",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "2dddad3b-67b6-4d63-afd3-bd1ec48c7e1a"
        },
        "item": {
          "id": "7072a0b6-c690-4239-9577-93de017d029a",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "d4f984fe-1f1f-4ed7-a401-73b22d853b75",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 560,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e4f698-328e-4fa4-ab84-0d06926db050",
        "cursor": {
          "ref": "8b308452-0695-4ca2-8025-464e89d90d8d",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "51830b59-7d96-42c7-9154-3570b14996bf"
        },
        "item": {
          "id": "d4e4f698-328e-4fa4-ab84-0d06926db050",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d740e39e-da6d-4176-9f46-e02fb5732292",
          "status": "Created",
          "code": 201,
          "responseTime": 3938,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:106)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:106)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:106)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 6,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:7:106)"
            }
          }
        ]
      },
      {
        "id": "015d6f12-1242-4d05-be38-50654276f46e",
        "cursor": {
          "ref": "a9419689-abe7-47ac-b7af-4cc74210913f",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "363e0582-0e17-4897-965c-602417b59787"
        },
        "item": {
          "id": "015d6f12-1242-4d05-be38-50654276f46e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b1b8745c-94a5-4145-813d-f0daecb5658c",
          "status": "Created",
          "code": 201,
          "responseTime": 4888,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:107)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:107)"
            }
          }
        ]
      },
      {
        "id": "b4fffeae-cc26-41db-ad0c-8724f8bb5363",
        "cursor": {
          "ref": "c158d29b-0e69-481d-9806-baec1b908c34",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "68599f13-2b4c-42bf-b4c7-144c0df8e4a3"
        },
        "item": {
          "id": "b4fffeae-cc26-41db-ad0c-8724f8bb5363",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "01aeef63-5500-4e62-bedc-3274fbe08187",
          "status": "Created",
          "code": 201,
          "responseTime": 4664,
          "responseSize": 746
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:108)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:108)"
            }
          }
        ]
      },
      {
        "id": "fe0d916e-f95a-456d-ade8-3cc939626eb7",
        "cursor": {
          "ref": "62a26ea4-3eed-4703-b654-4dd3eaec6a0c",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "00f8e907-a194-4183-8827-ef2d0b101be2"
        },
        "item": {
          "id": "fe0d916e-f95a-456d-ade8-3cc939626eb7",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "0e0db9fd-1782-47da-96a6-bed72cab2e1a",
          "status": "Created",
          "code": 201,
          "responseTime": 4002,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:109)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:4:109)"
            }
          }
        ]
      },
      {
        "id": "50d582a8-015a-4fa0-8397-241128cdf14b",
        "cursor": {
          "ref": "ff34b746-4b55-4c07-a529-15999377deca",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "92912555-308b-481f-851e-2a2f3dbcae10"
        },
        "item": {
          "id": "50d582a8-015a-4fa0-8397-241128cdf14b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c6844425-0769-4507-b55b-25d806c0d92d",
          "status": "Created",
          "code": 201,
          "responseTime": 4931,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:110)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:110)"
            }
          }
        ]
      },
      {
        "id": "62ccd423-bcc6-42ec-ade5-c25a3a60729b",
        "cursor": {
          "ref": "1433015d-6813-47bb-ad08-c4e32756c0a5",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f5c6566c-c9bf-4766-8400-32a4648ee158"
        },
        "item": {
          "id": "62ccd423-bcc6-42ec-ade5-c25a3a60729b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "215ad27e-416e-4c6d-8244-b2efa9cec24e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ccd423-bcc6-42ec-ade5-c25a3a60729b",
        "cursor": {
          "ref": "1433015d-6813-47bb-ad08-c4e32756c0a5",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f5c6566c-c9bf-4766-8400-32a4648ee158"
        },
        "item": {
          "id": "62ccd423-bcc6-42ec-ade5-c25a3a60729b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "215ad27e-416e-4c6d-8244-b2efa9cec24e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42853a56-76d7-4077-9c1a-0816733688fd",
        "cursor": {
          "ref": "864f1569-9a45-4174-b4c2-b7c71fe50458",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "5fb802c3-2f31-4c97-8485-6951bc313137"
        },
        "item": {
          "id": "42853a56-76d7-4077-9c1a-0816733688fd",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4350f4ec-675d-4170-94de-8dfceea3ad8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b82f7b68-9b77-4a1f-9a0f-47942abafcb7",
        "cursor": {
          "ref": "d9c35d39-bdd9-4b32-9bf9-e4c4dccff21f",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b62de003-340e-4d10-b37c-406982772b4e"
        },
        "item": {
          "id": "b82f7b68-9b77-4a1f-9a0f-47942abafcb7",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "142c5f6d-9ee5-48cf-af60-e43429ac6d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7cf432a-8812-492a-a4fe-a1c27085bb8f",
        "cursor": {
          "ref": "86fb832b-40a4-472c-983d-f122fb19e26d",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5f5a07e6-c6e5-4545-b1c9-cbcbc71ba64c"
        },
        "item": {
          "id": "c7cf432a-8812-492a-a4fe-a1c27085bb8f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c019e394-6561-4440-b294-9b508a74fe31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21fc5b98-43eb-4c06-818f-371206d7bb56",
        "cursor": {
          "ref": "18f67170-4671-4261-8938-22c89298f989",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "152d05b0-36c4-4d13-ae5e-de848abbdce7"
        },
        "item": {
          "id": "21fc5b98-43eb-4c06-818f-371206d7bb56",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e8a4f655-1e93-41f1-be91-1317661071a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ea2836-af68-4bb3-a2ea-fd1a0e0c58a9",
        "cursor": {
          "ref": "c21dd9bf-f803-4603-b863-febe0884c8ff",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "dd22bfce-55bd-40b0-9641-5642e0da996c"
        },
        "item": {
          "id": "e5ea2836-af68-4bb3-a2ea-fd1a0e0c58a9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "fe1ee336-cdaf-4edf-9d44-dee56d6ef608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "118b97a6-f828-4274-a4b3-967f271d55b0",
        "cursor": {
          "ref": "0f568ca3-0636-4a01-829c-79d5fcaff244",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "2ad8df5d-e527-406b-85ab-272adc1248e6"
        },
        "item": {
          "id": "118b97a6-f828-4274-a4b3-967f271d55b0",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d7421408-ea77-48e2-a56c-7dbd05833331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f060a9-f1c2-4cc0-9cca-a5257695c0bf",
        "cursor": {
          "ref": "ce8acf1d-87cc-4d10-851e-6a0f44a8c3df",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ba551a26-6924-46df-9a37-f9aaca8aa8de"
        },
        "item": {
          "id": "38f060a9-f1c2-4cc0-9cca-a5257695c0bf",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "87aa264a-651a-4b3c-addc-29b5b17d37e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51787730-3131-429b-942a-efbbc6457cb2",
        "cursor": {
          "ref": "e14e636a-1449-4779-9873-dda5b86431b5",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "c1622c2e-8ee9-4a4f-95dc-a41cdc12d002"
        },
        "item": {
          "id": "51787730-3131-429b-942a-efbbc6457cb2",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "96be8bc8-a6cb-4bc3-92cc-7458a675371a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d10f6ea-b8b5-48a0-8227-5cd689b76147",
        "cursor": {
          "ref": "c8c1683a-9ed5-4d13-b08f-f4e6988bc6ec",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "773ca6b1-4ff5-4afb-a3fd-89489758c4bf"
        },
        "item": {
          "id": "1d10f6ea-b8b5-48a0-8227-5cd689b76147",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "22312955-8f71-401c-bb7c-3383f8bbb44f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3795ff65-f34c-4965-8209-66bd6be07815",
        "cursor": {
          "ref": "d25a8806-35a2-493f-8d42-aa7ed4c43ca1",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "78e9747a-6c23-41e8-b612-9cb836731fad"
        },
        "item": {
          "id": "3795ff65-f34c-4965-8209-66bd6be07815",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6697fe16-ac19-41d6-84fd-16b51888dba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96877a0c-1e28-4603-b430-c268a3981362",
        "cursor": {
          "ref": "2a92dc77-9a97-4283-8280-62bbe5a75239",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "932d59ab-a8bb-4d07-88b4-1b05618cb61c"
        },
        "item": {
          "id": "96877a0c-1e28-4603-b430-c268a3981362",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2bf325a7-a0bf-4e6e-8fa3-ac4395421549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aff3479-5a2d-4ca7-88c1-797359228941",
        "cursor": {
          "ref": "5faa8700-a26d-4934-9355-e8c749adf806",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "bba4451f-f27d-4420-a9bd-7dc7d504ac34"
        },
        "item": {
          "id": "6aff3479-5a2d-4ca7-88c1-797359228941",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4dcd2f38-33ca-46b6-9807-3a99d80fae14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99381af0-8603-455d-a9fc-738274e2a716",
        "cursor": {
          "ref": "943802ad-1f19-4c0e-a560-bf1688efdd5d",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f576e8b2-eae1-4934-b797-052ca52555fd"
        },
        "item": {
          "id": "99381af0-8603-455d-a9fc-738274e2a716",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4b68606c-5b57-4dfa-b93d-de4aa7632e97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ecb748-8db8-417e-8bbd-7226c15d20bc",
        "cursor": {
          "ref": "a3ac9d03-73da-4078-a47e-a3fabd780bf1",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d97cbb35-eb3a-46b1-be75-e221d7721c86"
        },
        "item": {
          "id": "77ecb748-8db8-417e-8bbd-7226c15d20bc",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "97f8338e-7260-4566-b86f-6ff7ef70539b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc62278-95d9-4c70-b747-a2867ed87e5b",
        "cursor": {
          "ref": "caf33698-30d2-45b9-99a5-ba6de88659ce",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "52098c5b-ac38-41bc-b811-ae69b1c26d32"
        },
        "item": {
          "id": "fdc62278-95d9-4c70-b747-a2867ed87e5b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a88545a6-4cc1-40e7-b0cf-c869ec7f83e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97da9b6b-2c3b-437c-9072-889865ab8bef",
        "cursor": {
          "ref": "2f351849-002c-4fd9-be79-14c8d0e21ae1",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "faede110-d5d7-4fe2-acb6-76452ccaed30"
        },
        "item": {
          "id": "97da9b6b-2c3b-437c-9072-889865ab8bef",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "56492229-175e-45e5-b50b-1b234b4952ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d738b0-1fba-4a75-aa27-73cec87f93c7",
        "cursor": {
          "ref": "1fb0ce56-bdb8-4efe-9f57-b6fad9b7588f",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "74e664f9-dae2-4487-9798-9e186d36c4eb"
        },
        "item": {
          "id": "47d738b0-1fba-4a75-aa27-73cec87f93c7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b0b31fa9-41c1-4cde-916f-c7486721d733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f6c35b-46a3-4681-bc6f-376d306cf9e0",
        "cursor": {
          "ref": "742a429c-d175-4478-95d3-dcc6946c502f",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c34a018c-746b-4270-9971-adb536f66809"
        },
        "item": {
          "id": "66f6c35b-46a3-4681-bc6f-376d306cf9e0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a6f2f648-9cf9-4949-b4f1-828dbd9081b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03158062-92f2-4ae8-9d2c-1a1bdcc92b85",
        "cursor": {
          "ref": "c296cce2-799a-42cb-9cc2-0e0dbc432312",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "eeaa9446-261c-4a8d-aab4-d5abf3d7609d"
        },
        "item": {
          "id": "03158062-92f2-4ae8-9d2c-1a1bdcc92b85",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "fe9d9662-b558-4e09-af4c-28128144a54f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c793f7-b5e5-4f10-9fcf-1ab6cdddaea5",
        "cursor": {
          "ref": "b764c367-bb2f-4aa4-b1d4-6fcaef37f4e2",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "137318a3-9aac-4655-b111-04d92745aa55"
        },
        "item": {
          "id": "53c793f7-b5e5-4f10-9fcf-1ab6cdddaea5",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "238b6b24-6322-47b6-b6d9-ec5208f1633d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf7d0be-4b4d-464b-974f-3f3a8011d783",
        "cursor": {
          "ref": "79ddcf18-e940-4308-a6ea-c05d1f38a2a5",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "2ee97572-872f-450e-bb9a-46a01241ff80"
        },
        "item": {
          "id": "3bf7d0be-4b4d-464b-974f-3f3a8011d783",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e22eaa11-e8ea-4fd3-9d66-32c303a575eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e119472-801a-41b5-a5a7-b03d61466834",
        "cursor": {
          "ref": "2aeb5259-a49b-41d5-970a-52ce0d62ed7f",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "82ed1451-d960-4b8d-a91b-1709a49b37e8"
        },
        "item": {
          "id": "9e119472-801a-41b5-a5a7-b03d61466834",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b67d5b4a-47e7-46db-acf6-6e156716d769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61ebf5ef-da69-4e62-ac30-4beed066873f",
        "cursor": {
          "ref": "4313bb58-8c6c-4f59-864c-ed72d3780881",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a0e05c40-b99c-4eb7-ab50-1531889b39fb"
        },
        "item": {
          "id": "61ebf5ef-da69-4e62-ac30-4beed066873f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ba76b2c8-5779-49aa-b7a8-6ecfb70cf830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95010296-a92d-4632-8083-df30c19a5e69",
        "cursor": {
          "ref": "13daaa81-6ffd-4403-a50a-0e78bc5de6fe",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "107d238f-d328-45fb-b046-adeb33631fb0"
        },
        "item": {
          "id": "95010296-a92d-4632-8083-df30c19a5e69",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "69940d33-cd77-4060-9aa7-d463981dbf6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc4651dd-1300-4602-b6ae-b06bbc6e4510",
        "cursor": {
          "ref": "7cc5ed60-98a5-4bbe-a2f6-adc4e73afa78",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "bf5f5a0b-5464-4501-a5fc-05c0e12b84c3"
        },
        "item": {
          "id": "dc4651dd-1300-4602-b6ae-b06bbc6e4510",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c44bb082-31e4-4539-a195-e5ba6740e619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b50dd5-f2f5-436c-bbe2-9b141e9bbd48",
        "cursor": {
          "ref": "e2ba59a7-cc2a-4666-ac6a-3ecedd8d8b54",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "bfe8d7af-d39f-4c27-b9f9-6d215f688dd2"
        },
        "item": {
          "id": "d5b50dd5-f2f5-436c-bbe2-9b141e9bbd48",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "fb6ac3dd-74ac-403c-9cbf-9ee747fac09a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d11c6c0-2f01-4b46-b3ff-ffe3f26c9bf7",
        "cursor": {
          "ref": "33d05100-5dcc-4afb-a9a4-f01577d488fd",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6eae9e09-fb0f-4f1a-b8c7-cd547963f69d"
        },
        "item": {
          "id": "1d11c6c0-2f01-4b46-b3ff-ffe3f26c9bf7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "db0d7a81-07fc-4966-a6c1-32d0a35ca798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec72ed16-af3f-4436-8be1-59f82dd76316",
        "cursor": {
          "ref": "3d9015be-c0dc-4f43-b2ca-589d45b71fce",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b18223df-4c2c-4e30-8e32-2ad68f4874fd"
        },
        "item": {
          "id": "ec72ed16-af3f-4436-8be1-59f82dd76316",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "085a8612-8fd2-4988-b32a-ba163dea050a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d1ad3d4-e295-463d-943e-f7f2e671ed77",
        "cursor": {
          "ref": "96140a55-e20a-4905-8dd3-c9d405c82f7c",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3c93e321-2147-45c7-867d-d49fb690011f"
        },
        "item": {
          "id": "5d1ad3d4-e295-463d-943e-f7f2e671ed77",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8d9a5e61-43fa-465e-8d1c-21cfe352c1bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f4d60e-07d5-40a0-9efc-2760dda7f307",
        "cursor": {
          "ref": "663b15b8-b361-430c-8bae-8342f346c933",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "85b075a0-d9d5-40b5-8ade-98286f995590"
        },
        "item": {
          "id": "c3f4d60e-07d5-40a0-9efc-2760dda7f307",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "46fbe3f4-7104-448a-9957-c01a3080ebaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "302a5808-0fea-4095-8b71-2ab8861803fa",
        "cursor": {
          "ref": "b155f967-1a29-4931-8a10-a7d6043f71a7",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "7f338fdd-547e-4c3f-9017-aba50eebb195"
        },
        "item": {
          "id": "302a5808-0fea-4095-8b71-2ab8861803fa",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "b747987c-98e2-4f02-bdf4-3fab9b303b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94f6fe00-cba9-4f45-abd5-3708813278cf",
        "cursor": {
          "ref": "0bab6af2-947a-4038-8a61-ce64614683ff",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "1cfeede8-5f6e-4333-8b9a-e48e25e3338d"
        },
        "item": {
          "id": "94f6fe00-cba9-4f45-abd5-3708813278cf",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ff771bc0-60c2-4939-a2f0-b052e1965e4d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3678b7f3-8169-470f-af88-d6ee3cb8c33b",
        "cursor": {
          "ref": "72fbefba-8e2e-4843-b4e9-1170ec3ebbbb",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "be7227a8-0a90-4a64-921c-3805c4ddcf32"
        },
        "item": {
          "id": "3678b7f3-8169-470f-af88-d6ee3cb8c33b",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "e84187ab-9cbd-4b8f-b292-1a86b0840dfd",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 610,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca5bd09-a1a0-49c7-b4ea-f1dec446d617",
        "cursor": {
          "ref": "f2824a04-e0e4-44c5-a00d-5c33e9258e82",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "68232219-85b9-4255-84ca-f70ccc0a0eec"
        },
        "item": {
          "id": "bca5bd09-a1a0-49c7-b4ea-f1dec446d617",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "240140f4-885a-4e72-945b-d295293b9b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca5bd09-a1a0-49c7-b4ea-f1dec446d617",
        "cursor": {
          "ref": "f2824a04-e0e4-44c5-a00d-5c33e9258e82",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "68232219-85b9-4255-84ca-f70ccc0a0eec"
        },
        "item": {
          "id": "bca5bd09-a1a0-49c7-b4ea-f1dec446d617",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "240140f4-885a-4e72-945b-d295293b9b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56beb923-a5f4-465f-a8d9-4ac8377759d8",
        "cursor": {
          "ref": "e0df6012-2b78-4619-8260-f7c98a2c62cf",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "60782265-a62a-411d-877d-29934c26aeea"
        },
        "item": {
          "id": "56beb923-a5f4-465f-a8d9-4ac8377759d8",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9bfb1ab7-61dd-4b78-b2ec-6d787c4f5ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff2619f-b7d9-4046-a137-7f7f1f241fe4",
        "cursor": {
          "ref": "4489e356-6725-4ab1-b645-e758fc5738af",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "44fd2794-096e-46f0-87e8-efbf0b27f270"
        },
        "item": {
          "id": "bff2619f-b7d9-4046-a137-7f7f1f241fe4",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c6354c75-160b-423e-b13b-8d43a77cc14d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c48b616-818b-44bc-945b-78dde988969e",
        "cursor": {
          "ref": "61c2c0cc-49b4-488c-8a0d-b4b4ea5ac55f",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "847c6210-8240-4229-b837-629749d00888"
        },
        "item": {
          "id": "3c48b616-818b-44bc-945b-78dde988969e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a9ae47f4-5107-46c5-873e-c6defd0eebd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0250befb-96a2-4e0f-b50a-5fe96546ac85",
        "cursor": {
          "ref": "d60fa800-7bb3-42e8-a527-4328730ec55d",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "5d1d7236-4a7e-4fd5-af00-f48ada4b4b9b"
        },
        "item": {
          "id": "0250befb-96a2-4e0f-b50a-5fe96546ac85",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "9586e5cb-b52d-47d5-8d03-8a1b3d2035af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b3586c6-7c6a-4cf9-a23f-54ced92cb777",
        "cursor": {
          "ref": "e878ff26-6150-401d-850c-75c0b9973b1e",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "df838e02-3940-43d3-9821-5544aa1509f1"
        },
        "item": {
          "id": "6b3586c6-7c6a-4cf9-a23f-54ced92cb777",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f91499e9-6dc0-4933-b56c-98c810bf4e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e2f254-4bfc-4bb9-a47a-ef91a5c88953",
        "cursor": {
          "ref": "8bf9bbc9-8403-44a5-bb9a-09efb72f22b8",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "59a2599e-7147-4ac3-a1f8-6de187061879"
        },
        "item": {
          "id": "21e2f254-4bfc-4bb9-a47a-ef91a5c88953",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "1129d9d3-a42c-4126-bf5f-1436ff517c02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aefd4d3f-415e-4728-a52b-d2b6cbc96b49",
        "cursor": {
          "ref": "465ab3e4-dbba-4348-be32-2db70378dcc5",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "85ba1dce-b878-4d6a-ab14-636493c2d878"
        },
        "item": {
          "id": "aefd4d3f-415e-4728-a52b-d2b6cbc96b49",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ed6efca8-1d5b-4a15-96d7-793f8f39c0f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4246755a-0817-4499-b9d3-5daf5f42edaf",
        "cursor": {
          "ref": "0663cabc-52dd-4bff-9175-77fb228f38e4",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ddca3da4-a1c8-4945-8190-9d4e9ee11f08"
        },
        "item": {
          "id": "4246755a-0817-4499-b9d3-5daf5f42edaf",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "d523e145-d5e2-4dd5-ae68-9dd54ca66a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e928c636-2a22-4be2-a534-07a71d327328",
        "cursor": {
          "ref": "e70fb8bf-d902-4d60-81a2-16637768f14e",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e0e12549-77ce-4e7d-bc27-ff7aa590e4da"
        },
        "item": {
          "id": "e928c636-2a22-4be2-a534-07a71d327328",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b40e0475-b694-4212-b97f-a65684b84aea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dfd5c6f-b72e-417d-8a48-553168f85d8b",
        "cursor": {
          "ref": "610f51d8-732a-4456-976f-b04047734bdc",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "292fbd5a-f2f3-4b59-ab3e-0cbd2d8419b1"
        },
        "item": {
          "id": "9dfd5c6f-b72e-417d-8a48-553168f85d8b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c13ad37e-9948-495c-a6a3-153cc5f05f2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2801d756-921d-4d96-b9c6-7ca9d8ad82b6",
        "cursor": {
          "ref": "08c0bfa2-f92c-4f0c-9066-ce5c26a21f26",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b12ff444-6dc4-45ae-af60-cd9649acb936"
        },
        "item": {
          "id": "2801d756-921d-4d96-b9c6-7ca9d8ad82b6",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "118784c5-d64f-4268-b8f7-034692a0f1b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ae0313-bbdd-4af8-baad-18a2d24adc36",
        "cursor": {
          "ref": "1fb3dad4-3212-46ed-97c2-01e0cca22e6a",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "78898ae3-a84c-4e97-b695-74dd626cc9bd"
        },
        "item": {
          "id": "a9ae0313-bbdd-4af8-baad-18a2d24adc36",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "50e5e8f7-6846-4035-9d00-431d6054dfd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b99c47e-4502-4210-8ff9-c3fb5d8922f5",
        "cursor": {
          "ref": "9058fae4-6281-4f92-9972-af09dceafb3e",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "fd973af6-0e13-41d5-9043-156468c0732f"
        },
        "item": {
          "id": "6b99c47e-4502-4210-8ff9-c3fb5d8922f5",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "9588e5db-4815-4500-bac3-7fe8a11851a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b56a43-89c9-49dc-908b-d4f1adf74fa8",
        "cursor": {
          "ref": "ec9b6c88-74a5-430c-8eee-37551bf52c80",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "0eaf1678-11c4-4147-9441-26e701a86459"
        },
        "item": {
          "id": "d7b56a43-89c9-49dc-908b-d4f1adf74fa8",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "89d25d35-fc43-455c-b0dc-647890b26426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ea9012-ec93-4cc0-beb9-64a35d2e25a7",
        "cursor": {
          "ref": "de52dee4-2a42-4e92-9dcb-093c1e8a7d55",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "0230d069-8fc6-409e-b97c-05bd9b066073"
        },
        "item": {
          "id": "14ea9012-ec93-4cc0-beb9-64a35d2e25a7",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b5a71b42-62f9-46aa-8f96-058378ea9e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a9f0e4-664d-457d-87b4-c035042bb87d",
        "cursor": {
          "ref": "862f175d-1628-4a52-8937-aed49979abd2",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c8c29555-6c13-4560-8196-fe1ff5805966"
        },
        "item": {
          "id": "99a9f0e4-664d-457d-87b4-c035042bb87d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "96b5900d-45c7-48d3-8220-d5db84b74b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1784
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe0a711e-29b5-48a5-9942-3a013aa119df",
        "cursor": {
          "ref": "44a04483-1c14-4f17-9a10-c5d97442c9fb",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "23f73d76-e487-423d-9952-9b1931353760"
        },
        "item": {
          "id": "fe0a711e-29b5-48a5-9942-3a013aa119df",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "4aa62c22-66e4-42fd-aa98-5b382f146496",
          "status": "OK",
          "code": 200,
          "responseTime": 3739,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "6a1d97c5-98da-4b5a-b403-01cd70ab7b53",
        "cursor": {
          "ref": "0c765c40-0885-45d5-b985-33afa6521896",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "2fb47fa2-ff32-4b54-ae87-98de38571be3"
        },
        "item": {
          "id": "6a1d97c5-98da-4b5a-b403-01cd70ab7b53",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "16da47c5-8352-4fb7-aa09-6851265e41d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e01a14-002d-48af-abdc-a42faf29da96",
        "cursor": {
          "ref": "bebd2a61-f061-4ec6-8064-27ea8d78f6bf",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "5d95b019-d840-40d9-a174-739e70ff8a9d"
        },
        "item": {
          "id": "87e01a14-002d-48af-abdc-a42faf29da96",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ccd14ccc-e487-4205-8a60-4625d38511e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e9110d-fdf5-43a3-b9da-5bd5b6acd269",
        "cursor": {
          "ref": "c482a706-8310-428f-9b69-9d67d22f014d",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "d44f8a7e-4dff-441b-a9d3-fee18ad60a3c"
        },
        "item": {
          "id": "f8e9110d-fdf5-43a3-b9da-5bd5b6acd269",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b5b3dbe1-cc32-4f13-9a5c-ef90450cbefb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2235ad86-46ba-4829-a642-7429cd4689fd",
        "cursor": {
          "ref": "3ed1b8c5-099d-4bf5-b668-7e73a13138a5",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "0bd7d543-850d-448e-a115-2797da2db1a2"
        },
        "item": {
          "id": "2235ad86-46ba-4829-a642-7429cd4689fd",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "6a23df6d-017d-48fc-8cae-9a508a70e1c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d54228e6-c59c-4263-97e8-665f5a8ee17d",
        "cursor": {
          "ref": "663e089a-ef8e-4a1a-b314-996f16cd9d2e",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c66242f4-4597-4e61-9bd1-28eeedcc630b"
        },
        "item": {
          "id": "d54228e6-c59c-4263-97e8-665f5a8ee17d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "b7e49e54-8a9b-40c7-84b6-a69fbff6759d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e28b10-17f7-4ee4-b704-4c0b4e230e5b",
        "cursor": {
          "ref": "c7dffb86-514a-4beb-ad71-dea0d70d0a91",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "4e8a3a4b-7dd6-497f-9425-686150926579"
        },
        "item": {
          "id": "36e28b10-17f7-4ee4-b704-4c0b4e230e5b",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f4e9a319-b647-4ced-9ed4-a131ba84dcc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d719647-f489-45b3-9a8b-3244fbc5d8bd",
        "cursor": {
          "ref": "6688d54a-f638-4955-95fe-b7aaef7da6f1",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "1c6e020b-db9b-43fa-af61-b503058e4032"
        },
        "item": {
          "id": "8d719647-f489-45b3-9a8b-3244fbc5d8bd",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "4f8ab10e-8962-4aef-87d7-9b9d7c115d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1febdb66-af6a-41de-b4ea-f6a5639404e4",
        "cursor": {
          "ref": "46140c76-cc80-4331-80ce-a9285f16c568",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b464330b-1f3f-4d21-bf28-50b09c26b698"
        },
        "item": {
          "id": "1febdb66-af6a-41de-b4ea-f6a5639404e4",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "6db01553-2557-4e65-84f6-ac61afdc64a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06fff4ac-9022-40ed-a3a4-b94ffff7ae51",
        "cursor": {
          "ref": "342895d3-ebf9-451a-b0a0-3c4e7d757bb7",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "7fd46040-80b7-4866-bc63-e5b261edea3b"
        },
        "item": {
          "id": "06fff4ac-9022-40ed-a3a4-b94ffff7ae51",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4402ad5a-d67d-4f91-9ba1-147834a647c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e344929f-a4e4-4268-8059-8b86ac6f1259",
        "cursor": {
          "ref": "f7702bfe-074a-42cb-8d3c-229e9ecd0b24",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "772fc588-958e-4d76-9719-925c8a337b53"
        },
        "item": {
          "id": "e344929f-a4e4-4268-8059-8b86ac6f1259",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "1b6517ed-22f1-4cc5-a7e3-5b72f9bf0ae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce6cf705-0d5f-48c4-acef-11bb603774e3",
        "cursor": {
          "ref": "a43c3ab0-d5d7-4851-a45b-cab3753ed073",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c30df918-39c8-4fb3-8b87-8edb105748ae"
        },
        "item": {
          "id": "ce6cf705-0d5f-48c4-acef-11bb603774e3",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f9debb62-4ca4-4abc-b18f-d4418707be27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eddbbd73-9492-4408-b83f-5731e19b6772",
        "cursor": {
          "ref": "a4549567-b065-460f-b2a6-00d35d4cb414",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "48ecf0eb-3885-4ec7-b3b6-6c157ef38084"
        },
        "item": {
          "id": "eddbbd73-9492-4408-b83f-5731e19b6772",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e2e15e50-ac44-44ae-a522-fbde2c8a58d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f26a662f-1dd4-40b3-bce8-a1bb440d5b2d",
        "cursor": {
          "ref": "b477bb35-199b-424c-9fd5-2e77e3c6e36c",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8f19e36e-9253-44b9-bdee-62b18278683c"
        },
        "item": {
          "id": "f26a662f-1dd4-40b3-bce8-a1bb440d5b2d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "659cffbd-4ab0-4860-8227-2f4db7834587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8cdbe6-7599-450e-9bae-bb1d398956b4",
        "cursor": {
          "ref": "19285dba-c833-450a-9841-76293579313d",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f954e708-1496-4468-a25a-746fd9d11f57"
        },
        "item": {
          "id": "1e8cdbe6-7599-450e-9bae-bb1d398956b4",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c4e48041-345c-4983-8a6d-c515763e0998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cbc8f36-823d-4327-88c5-8503baf0fdeb",
        "cursor": {
          "ref": "4c71d818-677b-463a-b3d3-ce431ef9e4fa",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "8c23809f-9441-42c3-8e90-9d83fc3b7e2d"
        },
        "item": {
          "id": "2cbc8f36-823d-4327-88c5-8503baf0fdeb",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "5aea9b26-1435-40dd-ba99-de5432a9815c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0914b87f-48ef-4f42-98bf-1139ab044f9d",
        "cursor": {
          "ref": "00d20be0-c73b-4e85-a347-77a6e421079f",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "9f557a98-1f63-404d-a2ae-f4dd29ea841c"
        },
        "item": {
          "id": "0914b87f-48ef-4f42-98bf-1139ab044f9d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "4bfc7159-7da4-4503-84d6-e18550dda54e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d81c601e-50de-4fa6-813e-a46ae2b7a800",
        "cursor": {
          "ref": "f822ce45-20ae-4c76-b82d-4aa2ae6020c0",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2ca7f9e4-0ac9-45b7-9cb1-68e429ecc758"
        },
        "item": {
          "id": "d81c601e-50de-4fa6-813e-a46ae2b7a800",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ad3a577d-8f08-4e03-94ec-40d6c718b93e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0165f3e9-871b-4b7d-bf45-7e216f5252a0",
        "cursor": {
          "ref": "c0501010-48dd-4885-bb98-485e9de4db16",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "08ec724f-af8f-4635-bbb0-4db346ff3fca"
        },
        "item": {
          "id": "0165f3e9-871b-4b7d-bf45-7e216f5252a0",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "5ee5aceb-11a8-4dd0-bd98-b4253163bf5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f42f7c-2089-400c-860c-d17c460b1000",
        "cursor": {
          "ref": "b2e75680-4d92-4ebe-b242-caafa1ebfdd4",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "a2e2591c-755f-4c4a-8bdc-5740ca5d101f"
        },
        "item": {
          "id": "a8f42f7c-2089-400c-860c-d17c460b1000",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "721aaeba-1d79-488a-92f5-8c64b9c49bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6260fe65-2b7c-4843-9e32-28dfb12d80a4",
        "cursor": {
          "ref": "e729fead-40d6-4b77-86b3-b359ca7032e1",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "624f80c9-8357-4523-9a80-69376607c649"
        },
        "item": {
          "id": "6260fe65-2b7c-4843-9e32-28dfb12d80a4",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9372c516-8746-423f-9a23-19ad128120d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75aae3e2-04e2-4c06-afd2-97d812e08f12",
        "cursor": {
          "ref": "7ebb237f-ba44-4833-8d45-b902c4f9a380",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "30756833-54aa-4bb4-aaf1-12873e7f2f11"
        },
        "item": {
          "id": "75aae3e2-04e2-4c06-afd2-97d812e08f12",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d3d1718f-4370-4f7e-8ac0-006a6895acce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a5b50e-e836-4032-82c0-5c3eb90bc21d",
        "cursor": {
          "ref": "3b40c4d0-b56f-4741-be63-ecddcabcccdd",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e76b0ec6-4837-461a-b163-c85140120e8b"
        },
        "item": {
          "id": "d3a5b50e-e836-4032-82c0-5c3eb90bc21d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "04fe91d6-900d-4eb5-acb2-64042a64f5d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b85febdd-02f4-407f-9d6b-12c427d044bf",
        "cursor": {
          "ref": "934e5a84-471d-4287-8666-bf49229461a5",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b74ffcd2-4d98-4614-934a-88778d351d9d"
        },
        "item": {
          "id": "b85febdd-02f4-407f-9d6b-12c427d044bf",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "eac7f05a-d639-48c7-b29e-43c2124ae0ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e8bf3dc-da28-4bad-a5d8-6b64cb862d2b",
        "cursor": {
          "ref": "4565e7ac-79c4-4250-816a-e39b9f366a68",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "92ad7738-0607-4979-ac82-d71c52b4fd8c"
        },
        "item": {
          "id": "7e8bf3dc-da28-4bad-a5d8-6b64cb862d2b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "8949a944-9dad-415c-a3c6-661f2084174d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7570c42-e533-47b3-b654-be9fec565bcf",
        "cursor": {
          "ref": "772a8798-4dc0-40cd-bc2c-391ccf2939a8",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "aa68335a-a8d5-4170-870c-71a47515bd53"
        },
        "item": {
          "id": "e7570c42-e533-47b3-b654-be9fec565bcf",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "af070ce9-ad3b-4d4c-bc94-8586b6237e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c13c52e-59d1-4c07-975b-982d2e27f847",
        "cursor": {
          "ref": "a86df4a1-c452-446e-a21d-7f9356f47dce",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "992c9534-3b78-4811-ad84-02eeba3f91b0"
        },
        "item": {
          "id": "9c13c52e-59d1-4c07-975b-982d2e27f847",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "f0538f52-d5ae-4252-85d2-be893f6ce631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ccc1d7-3040-4f56-ad93-1feae1d0dabf",
        "cursor": {
          "ref": "8fc4a099-a7d8-4a7a-9089-4c14a844f0a4",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "b2df770c-e1aa-4920-9512-35fbfb3f03b5"
        },
        "item": {
          "id": "e8ccc1d7-3040-4f56-ad93-1feae1d0dabf",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "5fd5d888-c0ed-44bf-afdf-d884c30696a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "672f2d3a-a44b-40ee-9a7e-9e417ffbad99",
        "cursor": {
          "ref": "66243db9-fd50-4105-b632-cb3a77230141",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "edfced00-8d50-4cd1-9104-ab29fe9ac5f2"
        },
        "item": {
          "id": "672f2d3a-a44b-40ee-9a7e-9e417ffbad99",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "822cdc5b-5ddd-41a8-85e4-7cd415f7c740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf3b8e4-81fc-4402-96ba-71ac4d3b49e0",
        "cursor": {
          "ref": "591db542-e1d1-4eba-b4c2-0161202320dc",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "67f86094-9fc2-430b-9768-9e327ac8e107"
        },
        "item": {
          "id": "adf3b8e4-81fc-4402-96ba-71ac4d3b49e0",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "553999c8-d9e2-4ab6-9561-eb15f2e5f294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d46d1adb-e0b3-4a1e-84f6-7324c3cf70fd",
        "cursor": {
          "ref": "0483581e-2a3a-4945-a21b-9f722be40156",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "3e560766-7386-47d0-b857-f805b99f9d33"
        },
        "item": {
          "id": "d46d1adb-e0b3-4a1e-84f6-7324c3cf70fd",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "11c08782-5a96-4641-8c72-7757bb679c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de28b299-9132-451f-b5c8-d7d318caf4c6",
        "cursor": {
          "ref": "70f202fe-244f-48f5-bc91-33569d2b0ef8",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f764410d-2b35-418a-814f-7c60b1a17196"
        },
        "item": {
          "id": "de28b299-9132-451f-b5c8-d7d318caf4c6",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2f30c676-27b2-4ee7-b16f-cdccf6a96966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 807,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2449167b-5beb-4654-a62f-2fd2916d16ea",
        "cursor": {
          "ref": "37a61698-87b1-4706-b49c-4185d465c6c3",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "118180c4-0f18-4a78-a8c0-8dfd90f1c9a0"
        },
        "item": {
          "id": "2449167b-5beb-4654-a62f-2fd2916d16ea",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f7b589f6-dceb-42f2-af75-13e39d9a0a95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bfa80df-d329-42f7-add1-fe07d13e39ec",
        "cursor": {
          "ref": "aafeebad-85e8-44f3-a4e6-19d270aefaf5",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a2b46440-4e20-4e71-bbfa-4138a28d3b1c"
        },
        "item": {
          "id": "7bfa80df-d329-42f7-add1-fe07d13e39ec",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "347f003e-cff7-47fb-aee2-0b120996304e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5278f67-0f78-40c1-81b7-7771c3b1b1f1",
        "cursor": {
          "ref": "843d9473-286f-4ec9-99e0-5f8ebb07a4a4",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "3580e4a6-834f-492a-86ab-a87781777eb5"
        },
        "item": {
          "id": "f5278f67-0f78-40c1-81b7-7771c3b1b1f1",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "2ea9b4a1-6010-4259-ba9e-497f36355727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 744,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d44281b-30b8-403f-b213-dffcc27f51f3",
        "cursor": {
          "ref": "8c7c3179-4d46-4b23-9a03-c19e5def49bd",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "13e79a92-3c08-41b5-9f1c-b946442b8db4"
        },
        "item": {
          "id": "7d44281b-30b8-403f-b213-dffcc27f51f3",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "702e08b6-2533-4382-8013-ef96b6804c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1f833a-a31f-4251-bbe6-24013d65a348",
        "cursor": {
          "ref": "824ffaa3-0808-406f-8e3a-71822df5c587",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "134812b6-b674-45b7-b5e1-1e78c99e97f3"
        },
        "item": {
          "id": "db1f833a-a31f-4251-bbe6-24013d65a348",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b0273e29-8b7d-4860-9c7c-dd03f4fdedce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a498a8-4ddd-4e28-a437-9b72b59ae259",
        "cursor": {
          "ref": "1cbac79a-2ee2-4945-afe8-d76d06e4e6b8",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "62905fc0-cad4-4585-ba58-0897dd4a6e49"
        },
        "item": {
          "id": "e9a498a8-4ddd-4e28-a437-9b72b59ae259",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "5b145d2a-c17a-4ac1-9d8c-677f1557b529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2fa13bb-2902-417d-80a7-82eb48f6ae8b",
        "cursor": {
          "ref": "17475ace-768e-4965-8ac7-94ebc3f9875c",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "4e22740a-671c-458e-aa8b-2801e863fca5"
        },
        "item": {
          "id": "d2fa13bb-2902-417d-80a7-82eb48f6ae8b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "88ed36eb-d62c-49c1-a25f-fecdcfda24d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf3977a-d1b8-4cbf-9438-ac8dcc40756c",
        "cursor": {
          "ref": "5b38c2bb-6e1d-44fe-9f1e-404a61486c02",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a1a67830-b933-4367-a6fe-9a1c0b647ce7"
        },
        "item": {
          "id": "cdf3977a-d1b8-4cbf-9438-ac8dcc40756c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e1c2da71-1f08-40c4-adb0-810501dee602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e06112f6-78c0-4420-989d-8228ada3a75d",
        "cursor": {
          "ref": "8681c699-101f-4f0b-9972-4b765c3f4a31",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ec9dc810-0fb4-4963-8d28-20bd09783dac"
        },
        "item": {
          "id": "e06112f6-78c0-4420-989d-8228ada3a75d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b0b726c5-c935-447b-8aa0-29b380bf634c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb8f0d1c-c763-4eb6-9612-3647cdfbb04f",
        "cursor": {
          "ref": "97764f25-e4fe-4330-a607-905938d467cb",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ecd5c010-ce4e-42f3-8c87-cb7c3c72b044"
        },
        "item": {
          "id": "bb8f0d1c-c763-4eb6-9612-3647cdfbb04f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "7a03e800-ba4f-40d3-abfc-65a8b168de9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b22dc116-e941-451f-a89b-4c08f6543012",
        "cursor": {
          "ref": "1f56ff05-2ec8-4b38-a0b2-7531768140ef",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "00b45150-16b1-4a98-a4f2-15068d2d5bcb"
        },
        "item": {
          "id": "b22dc116-e941-451f-a89b-4c08f6543012",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "0e3c88ab-921a-4cc7-b60a-0819c0f1871a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33804f3e-14bd-42c4-8e94-d869621591da",
        "cursor": {
          "ref": "1e97cdea-322a-4c05-8029-517a62699916",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ddc197af-2e71-49a0-87e5-20eca85a8205"
        },
        "item": {
          "id": "33804f3e-14bd-42c4-8e94-d869621591da",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "d1dbbd12-1c47-4559-9497-08369d4f1372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "641d2ff2-e24c-4d3f-9f04-dccd745553cf",
        "cursor": {
          "ref": "3f471d22-d1fa-4adf-8389-c95b3b583d35",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0a93d438-5d6e-4861-9825-b8bf68795436"
        },
        "item": {
          "id": "641d2ff2-e24c-4d3f-9f04-dccd745553cf",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a20ba0ab-4c90-4f4b-a61c-1cad78356c2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d3a337-ebac-475a-a0f7-b796427073d3",
        "cursor": {
          "ref": "225b90d8-e431-41ef-bf0c-6e284dc336c7",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "ba4f9efa-07c0-4f89-b14d-ee00b93cb54d"
        },
        "item": {
          "id": "e5d3a337-ebac-475a-a0f7-b796427073d3",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "8b6146eb-ed41-4270-acf8-262f6de96305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d3b686b-c2b4-41ab-88f1-0354e5095b38",
        "cursor": {
          "ref": "1991a4df-5482-40e8-9814-1ac772addf7a",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "3250220a-7ecb-43c9-b437-298ae4c8aa96"
        },
        "item": {
          "id": "8d3b686b-c2b4-41ab-88f1-0354e5095b38",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "16ee8b57-52a6-4102-bc1e-636a4e3b304a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e13f325-c2ce-4f08-b424-1cd1a511ce8c",
        "cursor": {
          "ref": "1f35b6e1-0c3a-45eb-9a17-3410c336475c",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "536c451a-91e0-4b5e-bf2c-7c1eaf32826b"
        },
        "item": {
          "id": "2e13f325-c2ce-4f08-b424-1cd1a511ce8c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "8b85b164-9b4a-4681-8d43-498676a2235a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2439403f-770e-4eeb-80d6-57d1b2af0187",
        "cursor": {
          "ref": "8090c436-3983-4dff-9203-cab94c6d4337",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "75e3eac3-b432-470e-902d-371a81be70d5"
        },
        "item": {
          "id": "2439403f-770e-4eeb-80d6-57d1b2af0187",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "89cdbba9-c1ae-4f87-a418-a0d52012cd6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "644c3451-9381-41f4-9569-25f629e25e62",
        "cursor": {
          "ref": "04fcf045-bff5-4711-a771-074573630d99",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a5c74a9f-f5b0-42d5-b073-6c675db6762e"
        },
        "item": {
          "id": "644c3451-9381-41f4-9569-25f629e25e62",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "2dc1ef61-92d9-4e0e-80e8-5d38214d2222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec8ad8f3-5e6c-4623-b602-74c8d8c456c6",
        "cursor": {
          "ref": "6078e7ba-20a7-472e-9fca-28b15db675f6",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "63bce128-2968-44d3-8e0b-3f6b097e10d3"
        },
        "item": {
          "id": "ec8ad8f3-5e6c-4623-b602-74c8d8c456c6",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "36372b06-20c6-4b79-9e54-15f8037096f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e6deed-b3ee-47a4-b5cd-d6465c7713ac",
        "cursor": {
          "ref": "e1eb30a6-3603-4451-b321-751135919775",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "404afc40-cc16-448d-8890-c16ec636627b"
        },
        "item": {
          "id": "19e6deed-b3ee-47a4-b5cd-d6465c7713ac",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "0a3f6ed4-0bf1-4e48-ab8b-3ffba614f1c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba2bb22b-8f50-4b3f-9330-b568026ff960",
        "cursor": {
          "ref": "292e2dc8-77e1-46b9-9d4f-873d3ff1d663",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "fa8a3f11-35c1-4e4c-afc0-d6148d633100"
        },
        "item": {
          "id": "ba2bb22b-8f50-4b3f-9330-b568026ff960",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "ba5ffbd7-3670-4370-9e3c-90558c5f3443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a285812e-b7e7-473b-a4c2-0bd533c02e2f",
        "cursor": {
          "ref": "033b54fe-e7d9-42de-a435-95c243a9410d",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "9c699718-36f6-4a67-aaa9-4631fa103908"
        },
        "item": {
          "id": "a285812e-b7e7-473b-a4c2-0bd533c02e2f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "7b5bec0c-ef15-4f87-94d4-8c5d3d55e612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d4d22d-b789-4465-a56c-e1468999ca3c",
        "cursor": {
          "ref": "98ed30b9-84a0-4f62-af98-7320f0722d54",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "16f41557-a5f2-4d50-b18e-b9ee7e036545"
        },
        "item": {
          "id": "60d4d22d-b789-4465-a56c-e1468999ca3c",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "4575b2f3-d7d5-4a5f-9283-1687ce9abe61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a35042-6fa2-4e17-9a0b-ad5492de0145",
        "cursor": {
          "ref": "195f8d5c-42ac-47de-ae78-c31be8d4808b",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4ddd019a-993d-4c8f-9131-76cc06463b41"
        },
        "item": {
          "id": "29a35042-6fa2-4e17-9a0b-ad5492de0145",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c92fc7ba-673f-4863-ab21-280232b02688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce57b31-5814-4c50-ab91-eb0e6624472a",
        "cursor": {
          "ref": "af2add90-f804-4619-af24-5703d9d4bdef",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "0b8c70ed-5d3d-4c6e-afe4-a54d02b806e6"
        },
        "item": {
          "id": "fce57b31-5814-4c50-ab91-eb0e6624472a",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "6eb5198a-9c37-44b8-80eb-b58264f6618e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1afd041e-0073-4dd8-9961-a3538fce05f8",
        "cursor": {
          "ref": "86afef8e-7ebb-45bb-81b2-cba2c56bf93f",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "77157d89-df73-4dd0-8a60-ca09611995fd"
        },
        "item": {
          "id": "1afd041e-0073-4dd8-9961-a3538fce05f8",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7754c656-777d-4186-898d-3213adf50bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b03cfd75-d179-4e41-8c85-2768f8ebd162",
        "cursor": {
          "ref": "a8ffa790-40ea-4116-9253-6667047f572f",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "1786b855-8f29-4850-a90d-8769f85c88db"
        },
        "item": {
          "id": "b03cfd75-d179-4e41-8c85-2768f8ebd162",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b9ab8c97-1567-4d63-b466-dd22b0b0c56e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe57491b-29ed-425f-9ad3-aa64ed49b04f",
        "cursor": {
          "ref": "a26ba3ba-86ca-4afe-ab55-790a6c595f60",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "08912142-3c5c-435b-9390-cef1681c89e2"
        },
        "item": {
          "id": "fe57491b-29ed-425f-9ad3-aa64ed49b04f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2715f8ea-fbe1-484a-b160-a8b52dec1e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37b6c22e-4b87-4a01-aae6-aba5ec508601",
        "cursor": {
          "ref": "2278e131-a918-4f3b-9cd9-1de63caa52e9",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "7f49881e-1de7-4423-893a-a7887b9503a9"
        },
        "item": {
          "id": "37b6c22e-4b87-4a01-aae6-aba5ec508601",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d1226365-95ba-49a0-b376-2d24c4ea4868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49f70e1-7f3a-4ce3-a440-e44bd4eef6aa",
        "cursor": {
          "ref": "c6f5dece-0aa2-4d4b-ba32-c1241efc00d1",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "2f7c6f84-2a25-4683-b16f-592189cbe6a4"
        },
        "item": {
          "id": "c49f70e1-7f3a-4ce3-a440-e44bd4eef6aa",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "7946cdbf-831e-42f3-8fbf-44d3e7caec72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eab40cf1-5a28-4c85-b412-5d0d26a59d59",
        "cursor": {
          "ref": "8bb3e13a-e25e-4f53-9a3a-a626b61a834b",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "a7c05ae6-7fa5-4ceb-82c9-fc9b2b5bceca"
        },
        "item": {
          "id": "eab40cf1-5a28-4c85-b412-5d0d26a59d59",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "cf1b4e8c-0cfb-42b3-a099-a66191f5b886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9695e9c-50eb-4e06-8dfa-793817bed1a4",
        "cursor": {
          "ref": "ff979e9d-f33c-414a-a769-109a1ac955c7",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "4a735290-daba-4b15-bc73-571eaefc50e5"
        },
        "item": {
          "id": "a9695e9c-50eb-4e06-8dfa-793817bed1a4",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "94a7c37b-a1fb-4f7f-a8b6-c9185435219a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b3e3b2a-daf4-409e-94da-1ba172b0353a",
        "cursor": {
          "ref": "58c59a34-6b81-4e36-8e01-68be2f119e70",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "adfa5877-565f-431f-b0e2-2f83b2abdf68"
        },
        "item": {
          "id": "2b3e3b2a-daf4-409e-94da-1ba172b0353a",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "9b725b22-1324-4356-9888-5838d0cc62fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f1c6c6f-efd8-4f22-afd4-88a179625a4b",
        "cursor": {
          "ref": "0aa568f1-a560-4880-b246-e645704d5b59",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "d744d6e3-2764-49b0-91d5-3f080b49d810"
        },
        "item": {
          "id": "6f1c6c6f-efd8-4f22-afd4-88a179625a4b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a6031cdc-a7d1-4ccf-a538-ad314c996497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a6304d-7dea-4219-9440-38ad0687da69",
        "cursor": {
          "ref": "0ce4ecc4-b364-4331-872b-69c139108d0c",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "42d9c20e-db6c-48d5-935a-20ad5fd4d9a5"
        },
        "item": {
          "id": "41a6304d-7dea-4219-9440-38ad0687da69",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "1175347e-f739-4ea7-a463-e0ab9e208784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb2432f6-693a-4636-8cec-a75c71b872c1",
        "cursor": {
          "ref": "d96e8276-306a-4923-a4fe-b4f16c03ee0e",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "008bd4dd-f614-47c5-9bc7-b4700cb8f79b"
        },
        "item": {
          "id": "bb2432f6-693a-4636-8cec-a75c71b872c1",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "e2e2a81a-788e-4338-bf68-5895fbb5cc74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2bdf9a8-4715-41e0-903d-1b286600e10b",
        "cursor": {
          "ref": "33a6a747-7768-441e-8bf4-f9ddfe597d6e",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f7677112-df89-4b06-ac3d-6cbd39d7f397"
        },
        "item": {
          "id": "a2bdf9a8-4715-41e0-903d-1b286600e10b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "40e8ea76-a57e-4f17-9e76-ddf20f96d7fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22be8894-9b2b-4260-a4c6-f964876b610a",
        "cursor": {
          "ref": "b42a86b9-6695-43dd-8694-7087fa057182",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "4d26d399-e879-487d-9f79-6a0c7eae1865"
        },
        "item": {
          "id": "22be8894-9b2b-4260-a4c6-f964876b610a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "254c4885-4a42-415b-bb9e-d11834fca261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "368dc6f6-2db2-4714-b0d6-36e7eec900a3",
        "cursor": {
          "ref": "0ce5eaa4-6a4e-4c7b-8f41-90e987b96b2a",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "5f076f1a-5257-4d49-bb47-391fbbebc3e7"
        },
        "item": {
          "id": "368dc6f6-2db2-4714-b0d6-36e7eec900a3",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "eddc7090-b425-498b-aeb1-46d3aadb1eab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b78d1e-d0f7-4ae4-9294-93385492b20f",
        "cursor": {
          "ref": "4722f3a3-13bb-4dc4-90c8-e569d0694900",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "41287f90-19a2-4cbd-9576-6f3a07b46986"
        },
        "item": {
          "id": "24b78d1e-d0f7-4ae4-9294-93385492b20f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "8c9bd338-f138-4b06-9b72-fee053d2e8a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db789d4f-488f-4451-a1db-b5c9d5882175",
        "cursor": {
          "ref": "affe1941-2ea9-41c5-a611-14a9a9c3105f",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "dca1184e-ff77-489e-9b44-d651eb873315"
        },
        "item": {
          "id": "db789d4f-488f-4451-a1db-b5c9d5882175",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "81aaef6e-ecf5-429a-8d40-4f11dce951ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54103b2a-8290-4dd1-9f29-9e7d92179052",
        "cursor": {
          "ref": "864fc8d2-a10d-46db-9ff1-aab30a6a6d6b",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "afcb8fdf-7c72-4b31-9672-9ed8ef23bf70"
        },
        "item": {
          "id": "54103b2a-8290-4dd1-9f29-9e7d92179052",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b068d959-dd53-438f-8982-305f07f6acbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a8f05ad-b1c3-4a15-b177-0b761d737ea3",
        "cursor": {
          "ref": "b863d911-6471-4b85-af9a-0f12666d7997",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "187f0d94-fadd-4198-8c2f-446e47031a8b"
        },
        "item": {
          "id": "4a8f05ad-b1c3-4a15-b177-0b761d737ea3",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "652b94e0-3c92-4c2e-899e-037256a1e278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "698764e4-5fb6-46d7-a2f1-86b188147c2a",
        "cursor": {
          "ref": "d2fd20e3-b43c-43b3-8e72-9d74afc263ef",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ae2cc12f-51e7-4095-88b7-0e40ce717adc"
        },
        "item": {
          "id": "698764e4-5fb6-46d7-a2f1-86b188147c2a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "aa837732-0a59-4314-8824-3525d4275712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f7589b1-91fa-4b90-ab11-5e80633997b4",
        "cursor": {
          "ref": "741e938c-4d82-492b-b15f-b2d42812af29",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "18065068-70ee-42ca-96c8-9c2fcc0888ac"
        },
        "item": {
          "id": "8f7589b1-91fa-4b90-ab11-5e80633997b4",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "215ca687-6072-4552-a4a1-2ad3fdea017a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8adaca1-bd3e-4fe0-a285-57057ac178f5",
        "cursor": {
          "ref": "7d973d6b-5fed-4352-b88a-b7c9ad6988af",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e20cdc6c-910b-4661-9dcd-0c8d3a88c1b3"
        },
        "item": {
          "id": "f8adaca1-bd3e-4fe0-a285-57057ac178f5",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "beac1f42-61cf-41a1-ad24-fb4310e33669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2082eb59-a113-4b16-885f-341cd0a10949",
        "cursor": {
          "ref": "396f0f1c-3d6e-414a-8a3d-a790284dee45",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "948e21db-9fa8-4c3d-a571-e8ff595b53a7"
        },
        "item": {
          "id": "2082eb59-a113-4b16-885f-341cd0a10949",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b8f10f8b-c18c-4d94-bf70-e3e5328f9752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6564c01f-8e5d-48ac-90bd-a36c6a4e76de",
        "cursor": {
          "ref": "591839c6-39a9-4dca-b7e2-a8c29ebc5ecf",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d7db941e-79c2-4bb8-b3fd-41b3ee1c53e8"
        },
        "item": {
          "id": "6564c01f-8e5d-48ac-90bd-a36c6a4e76de",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "74a50bb7-2be8-45e8-9dc3-e4cc76b9fb6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "669288be-9efe-48f3-af01-18f64d64bbb0",
        "cursor": {
          "ref": "432461aa-d18e-4937-be9f-7d0a1645deda",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "7ebf4404-ca61-466d-b0af-ad05119b0d45"
        },
        "item": {
          "id": "669288be-9efe-48f3-af01-18f64d64bbb0",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "845dd501-66de-41b7-9a5f-0f77bcc54dd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46eec94a-1901-430c-85c5-9e160597d309",
        "cursor": {
          "ref": "95ddc992-b795-4930-b0a8-32d836963a45",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "77cad50a-af83-4c72-8f65-bffa12530492"
        },
        "item": {
          "id": "46eec94a-1901-430c-85c5-9e160597d309",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a13d8698-0480-48d4-93b7-76022a3d3e11",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3718063a-4f22-4ca2-ba45-cd2442404167",
        "cursor": {
          "ref": "d761c6ba-2f86-4dd5-8826-10df131f2bc9",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "1b049e39-5789-47aa-90ac-dd4598743879"
        },
        "item": {
          "id": "3718063a-4f22-4ca2-ba45-cd2442404167",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "2c3f0f7a-1e22-4550-aaea-194a9884794e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 471,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "744af79f-6c0d-49bc-880c-041bc2e9f8c2",
        "cursor": {
          "ref": "22891fdb-fc87-4a5a-a1ee-782142b2e26c",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f9c09b79-88b8-4e00-855c-6d96edfca6ac"
        },
        "item": {
          "id": "744af79f-6c0d-49bc-880c-041bc2e9f8c2",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "bfc78f84-b1e1-4238-86fd-6b71fddd443b",
          "status": "OK",
          "code": 200,
          "responseTime": 540,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f785a4-a962-4c57-9b8c-06daba7139fd",
        "cursor": {
          "ref": "6906d8a3-e463-49c0-8cbb-6efc90449692",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f5739b9b-523b-499e-bd8b-3e32e8ba1b69"
        },
        "item": {
          "id": "d3f785a4-a962-4c57-9b8c-06daba7139fd",
          "name": "credentials_verify"
        },
        "response": {
          "id": "22d3b282-194e-407e-8353-c56217e46c49",
          "status": "OK",
          "code": 200,
          "responseTime": 3731,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c638afe2-39e6-492b-b1cb-f165cf94ee67",
        "cursor": {
          "ref": "b5ae74ed-ceb6-4297-9c1a-581fdb4d62e8",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "15da6348-548e-4b9f-87e3-daed25f19771"
        },
        "item": {
          "id": "c638afe2-39e6-492b-b1cb-f165cf94ee67",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "3e8f6340-bdd1-48f8-886e-568a3de55490",
          "status": "OK",
          "code": 200,
          "responseTime": 3777,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf1af672-eda1-4ff0-8ad9-3a9df212219d",
        "cursor": {
          "ref": "bed40e1d-4f7f-430b-a41d-d2ce5cfb6fac",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f0e935d9-a448-4319-af63-745e8917c670"
        },
        "item": {
          "id": "bf1af672-eda1-4ff0-8ad9-3a9df212219d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cf955857-5a69-4c7c-b918-c4e70a802a75",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf1af672-eda1-4ff0-8ad9-3a9df212219d",
        "cursor": {
          "ref": "bed40e1d-4f7f-430b-a41d-d2ce5cfb6fac",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f0e935d9-a448-4319-af63-745e8917c670"
        },
        "item": {
          "id": "bf1af672-eda1-4ff0-8ad9-3a9df212219d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cf955857-5a69-4c7c-b918-c4e70a802a75",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf1af672-eda1-4ff0-8ad9-3a9df212219d",
        "cursor": {
          "ref": "bed40e1d-4f7f-430b-a41d-d2ce5cfb6fac",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f0e935d9-a448-4319-af63-745e8917c670"
        },
        "item": {
          "id": "bf1af672-eda1-4ff0-8ad9-3a9df212219d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cf955857-5a69-4c7c-b918-c4e70a802a75",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e652382b-a5f0-4398-a8d6-b4de940b6817",
        "cursor": {
          "ref": "903edc99-57fd-4965-92a4-4814cffc7af7",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e44270ca-edb0-4b52-80c4-404f371b8a6d"
        },
        "item": {
          "id": "e652382b-a5f0-4398-a8d6-b4de940b6817",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "d8f0c08f-42cc-42a5-954d-6a3153e00c8a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 501,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48bdf9c8-084f-43b6-91c1-4157fc9a561e",
        "cursor": {
          "ref": "c06520c6-516b-4944-a158-15cb7f8bade6",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5106f7cc-3a04-4cd1-9d59-eed06e63971c"
        },
        "item": {
          "id": "48bdf9c8-084f-43b6-91c1-4157fc9a561e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ea8c616c-b392-4f08-9fe6-e92f1673d71b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48bdf9c8-084f-43b6-91c1-4157fc9a561e",
        "cursor": {
          "ref": "c06520c6-516b-4944-a158-15cb7f8bade6",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5106f7cc-3a04-4cd1-9d59-eed06e63971c"
        },
        "item": {
          "id": "48bdf9c8-084f-43b6-91c1-4157fc9a561e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ea8c616c-b392-4f08-9fe6-e92f1673d71b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab2e2051-1f8c-4d7b-8455-0a5baf50e936",
        "cursor": {
          "ref": "6f9c308d-c320-49a5-9779-eaf87d8d89e0",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "94f44549-e0a4-400b-8da2-78f286e47bc4"
        },
        "item": {
          "id": "ab2e2051-1f8c-4d7b-8455-0a5baf50e936",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "5df66cb8-8617-477f-a3f9-f79de5c2a9ef",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 765,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3437ceb0-d677-49a1-860b-09335952ffc3",
        "cursor": {
          "ref": "df7d5973-92c7-4b1b-9196-5f357b8bbb57",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "b9e4bdfd-0fb6-4bb1-a5bd-a4a246b89ea9"
        },
        "item": {
          "id": "3437ceb0-d677-49a1-860b-09335952ffc3",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ceebba81-7eb6-4ff3-a101-dea29cc7b2e5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3437ceb0-d677-49a1-860b-09335952ffc3",
        "cursor": {
          "ref": "df7d5973-92c7-4b1b-9196-5f357b8bbb57",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "b9e4bdfd-0fb6-4bb1-a5bd-a4a246b89ea9"
        },
        "item": {
          "id": "3437ceb0-d677-49a1-860b-09335952ffc3",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ceebba81-7eb6-4ff3-a101-dea29cc7b2e5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29929e93-2388-4fc4-9408-ccc9aac5fb27",
        "cursor": {
          "ref": "19943aac-8b9f-41d9-8cfd-32ee7f7dd0a7",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "d6d5d0dc-976a-4bf9-822e-0a55f0bb83eb"
        },
        "item": {
          "id": "29929e93-2388-4fc4-9408-ccc9aac5fb27",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "0b0da172-3ae4-4bdc-844e-1ba6c84ef505",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 702,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}