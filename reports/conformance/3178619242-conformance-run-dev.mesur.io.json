{
  "collection": {
    "info": {
      "_postman_id": "691a6d66-244e-4521-a0e5-6768dd6cf6f4",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c6d31581-24e6-42d1-bf1e-a7c6cd8bf8c7",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "95995176-4571-44b5-97e3-660e33d54fd4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ba682d6f-465a-422b-9f58-dc46fc55ca5a",
                "name": "did_json",
                "request": {
                  "url": {
                    "path": [
                      "did.json"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "91cc08a9-7823-4129-9bba-9dcf4849a53f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3744ff10-27ab-45e3-951d-69c05791b9e7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "event": []
      },
      {
        "id": "7424ccfa-6776-4242-b5f5-80c37a3b3e10",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a716a427-6b58-40a6-a2bc-b6fa6bffc8a5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ce0cff38-6518-4b47-9261-f9e7a2d294dc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1b9a2d7b-57c5-4210-a973-bc1d386bf44b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "397a549f-1a24-4cc8-8096-7a5829024ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "83b4d683-f78f-441e-9987-8e15c0dfbdf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e89289b-ec2e-49d7-b258-7d9ddcf4e057",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40152e04-1ac1-4e4e-ad90-688dd9817c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c7e77fea-71ff-42be-b8e9-1a6f6660df8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa33e776-b151-4eeb-b553-9c4c7fece140",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf9cc8a-bcac-4e90-bb47-256fdd76c0d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bea09eb1-38bd-4165-a6c6-66d1186f233c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0df6403b-d904-48b0-97ed-16125112f10e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "59ef264f-5cee-43d7-adbe-efb2892aea08",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0bab1e7-7ff3-415c-aeb0-662fd12fbb2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1fea874f-03fb-4ba0-ae80-b06a11acb1ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f6b5e09-1d16-492b-b4e3-df413f8c4426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "695d259c-3a81-43d1-91a9-a2e5667efdc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57cff255-0540-4fc4-a944-1db3654159b4",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67bfd645-e72d-4609-bbe9-1cf1ce131328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "982dd232-173d-4e92-934f-892a97585c6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b32d225-f4ea-4f1d-aeea-69a311de2702",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "ea39f744-8489-4ffb-8d91-0b84a891e81e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "68d77eea-dd8f-44be-86e7-0fa63758f832",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2127e5c9-4879-4d90-8c10-95879e3bc6a5",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "89ccdfe2-49ea-4cbc-8710-d15e06203b2f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "475aab87-2a70-4249-b9de-5f38c81adffe"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f5625292-5d86-4439-aad2-8e3df5cc5451",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "396d3020-6a59-44a3-ac59-706245033bc7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7e40df46-3fd8-4964-bd35-213b72dc9262",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "87896092-34a4-461f-b032-d5d355bc4960"
            }
          }
        ]
      },
      {
        "id": "5d41179f-d360-431a-a104-78541983193a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "783956e9-6191-4fea-b28f-16043182764d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "528635e0-fbac-4b09-b95d-668543d9e259",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "2c7a3206-e5d4-44c6-8a7a-3556b565cea5",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef68941e-ef9d-4c35-aef3-6420bdfcd5df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f103e96e-aa51-4f22-b7c9-9db6ac91a7c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df5a5ef-e1a1-4bc6-ad57-2d7a5f1264fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential is required",
                            "delete rawBody.credential",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c89a7dd-2dd1-4aab-a318-8dda4a349766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "525a3c57-f8c7-4c2e-bcc8-30e3a655d260",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42dacd66-aea5-49a3-80b7-a7d002a7e4cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e7626f6-2507-4925-8b69-7bb5c75b0699"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c58392a8-e3af-48ce-8eb9-e9dcbb2b806e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context is required",
                            "delete rawBody.credential[\"@context\"]",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36181cc9-2fc6-447c-bf2c-8744a33e25b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de420b4-57a4-485b-b528-d10cc061d7d7",
                    "name": "credentials_issue:credential.@context:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "784f8a72-d84e-40a4-bc54-f4e650638349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25f8ee9c-bdf9-4b30-9550-de8e1e38babf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf998fd6-4a2d-4513-8b92-1c847790d62b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context must be an array",
                            "rawBody.credential[\"@context\"] = 42;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "072efd73-3f85-4d9c-a7b0-86c69757f09f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c1405c-a84b-405f-a1cf-e5fa3d33c4cf",
                    "name": "credentials_issue:credential.@context.members:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd885ba5-faff-4c8b-afe0-620d2af0b085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b61672e8-816a-4b05-aad2-45e2a768d0b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07125cdd-f925-4755-a90a-adf0b43fb22a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context array must contain only strings",
                            "rawBody.credential[\"@context\"] = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d037eb71-f88a-43dd-b6c6-165a8248cd2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b48aee8d-1138-46c9-a90a-f09be91b7c38",
                    "name": "credentials_issue:credential.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a548f6c-a355-4dde-8829-99323a716956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18181b47-d0b4-4793-9615-25418d591c40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cfb836c-7780-4cf3-bd6d-5dd969703b6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.id must be string when present",
                            "rawBody.credential.id = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02952091-77d7-4635-943c-a501eb16e67e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32085e9d-1545-4d3b-b91a-b8614a0e0fd2",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "711f5f6b-0080-413f-aa45-f26b56242680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "569e0a5b-55e3-4dec-aaad-d77b72ddc190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dbb5f13-f6fd-40e2-bff3-0b53563e8170",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type is required",
                            "delete rawBody.credential.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9d590e9-392a-4574-9f68-92c0ccdacb4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17410cbb-13e8-4fff-a1f7-5646058a08f6",
                    "name": "credentials_issue:credential.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09941ff0-14f3-4e9c-a85b-21d012a12465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8107de55-dd12-42fe-8a11-d1878c22746d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c0c076-d1b8-4625-a4ca-896aa69d9d99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type must be an array",
                            "rawBody.credential.type = 42;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81c2ef58-43e9-4fd3-b054-e9ec75152623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9345ed8-81a5-4103-bfdf-7439e84f32b9",
                    "name": "credentials_issue:credential.type.members:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2176416-61a7-4ba3-9333-2d8d87400090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e40d0b36-7512-4787-b167-ac64803a2373"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c538514-a752-47ce-ad4b-9422ea38b267",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type array must contain only strings",
                            "rawBody.credential.type = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88de9325-9137-4925-ab43-7cbb790dab11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a555cbe2-e735-4103-9b88-ed8078b78ce6",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b5627d8-fb08-4ede-8a41-bcd3d2d9df41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdebd772-175e-45f1-9009-ef1ef0d744c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ff40f4f-afa7-4797-9252-8917185d80b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer is required",
                            "delete rawBody.credential.issuer",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11015153-dedf-43b0-a365-4e7406b40508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa1c8167-a63a-49e4-bb4b-faf3cd27e311",
                    "name": "credentials_issue:credential.issuer:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a3ee23-86da-496e-88cf-cae7101ae7c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6239c263-4293-4e46-aa17-b7180fb9119c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d2f385-39c4-490f-9145-30d787fc36ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be a string or an object",
                            "rawBody.credential.issuer = [\"arrays are invalid\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8540314e-543a-4e96-8c1c-f62546eb3427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da301d3-1b3a-4b1c-ae56-98ab5583f931",
                    "name": "credentials_issue.credential.issuer:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ecb45b-2e64-4dd0-8734-860a0b3685f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "563084a1-0918-420a-999e-86a6f0b5db6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58fbccff-477f-49f6-8875-21170611a1ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be a URI when it is a string value.",
                            "rawBody.credential.issuer = \"not.a.uri\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "44b8a599-0376-4895-ba8b-ea47b6244e9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b9ea70-dc6e-4f16-9c6b-bb0e80079833",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6957b8f-4287-4c3b-994c-11713ae33e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22a9d675-1469-4a7b-b529-b804d9e251d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7439489-ed70-4e60-ab94-e892d2c4316e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be known to the endpoint.",
                            "rawBody.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "67ce42e2-dadb-40a9-8ca9-59ef0af66c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c8fac28-1e02-4ccf-97c7-f6cde60d2c44",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a18c12aa-38f8-44b9-aded-fde2cfc73217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87ddae6a-d243-4f85-8f07-85ae523cd76d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04381c3f-38e1-44bd-a3f0-1a8e12b6d3dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id is required when issuer is in object format",
                            "rawBody.credential.issuer = {};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "379e86f5-9adb-45ee-84f2-02c5e9d32f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8544c476-4c41-4a60-9b33-d56c66b77c6d",
                    "name": "credentials_issue:credential.issuer.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25ec26e6-42c7-4f9f-8e17-3d2cd15924ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e644bf5-90d6-4a3d-880a-cb1150bc1c55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d77b30e4-6977-492f-ac11-22320e626c8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id must be a string.",
                            "rawBody.credential.issuer = {\"id\": [\"arrays are invalid\"]};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7e73a6e-98d0-4012-8443-88590bee2549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e0739ae-43ae-4d63-b02b-cf47b3159a3a",
                    "name": "credentials_issue.credential.issuer.id:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fec7a97-6353-4ac0-9c6d-7546eea46aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc260038-5d26-458e-a710-4a7ef4037850"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8116c0de-d4f9-48a7-abe8-10862797460b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id string must be a URI.",
                            "rawBody.credential.issuer = {\"id\": \"not.a.uri\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "aa23d48a-65bc-402f-bb06-c849e64c9ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1381f941-5a5d-4f52-8d08-67dde0dff8f1",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82fd0652-b07a-4dc2-b5ea-1ecbc3c244df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d6a0061-7385-4801-bb93-2a54a8305bac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b0f999-dc93-4356-bbd3-30bf2f952496",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id string must be known to the implementation.",
                            "rawBody.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "897d73b5-37d5-442f-b34c-f14f2f331033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a64db07-44bf-4403-8440-af4c11c9ec4a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d69a3207-32d3-4d69-a229-fff0513acb5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d788ab9f-d630-4aba-82a4-479bc1a3b55a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0786f0b-f0c8-4f09-a5e8-db332b815b95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate is required",
                            "delete rawBody.credential.issuanceDate",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3949b120-7884-4cc5-9892-80900e49f132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0f461ff-17f1-4028-be77-b9f7b23ac817",
                    "name": "credentials_issue:credential.issuanceDate:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac695996-35da-4b71-971c-f1adc3224a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "795d26bb-79e4-4034-b425-d8d05cacf397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "500368a4-3390-4bb5-81e1-533b4fe5d4ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate must be a string",
                            "rawBody.credential.issuanceDate = [\"arrays are invalid\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e19bfc9b-f776-4422-9db6-b4a9069a2ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aef3c19-f137-4be0-874c-a6537ec1d4c8",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e81b3adc-8c7b-49eb-aae9-762eb3f9e27d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f588e9e-c8a4-4993-8d2f-c068e96d7357"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c96d00-def1-4a58-be58-ce3873570250",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate must be an XML Date Time String",
                            "rawBody.credential.issuanceDate = \"not an xml date time string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1e11427-c941-4fea-877a-c7eed0ca88df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a195864-a0d5-42a4-b663-203d073e2a70",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd90b39c-e27c-4b0e-80b2-9c56d6f45165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55b4f4e3-cd58-414b-9f1c-130c79cf492a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee39a45-5fdc-40ff-894c-cd6a94521087",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject is required",
                            "delete rawBody.credential.credentialSubject",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c409be33-838d-4e7e-9ecb-c6606cd876ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90737e21-be58-4e16-bb42-371de5ba00e8",
                    "name": "credentials_issue:credential.credentialSubject:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a4f374-7a14-4b19-bee3-51a0242109c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dac10884-6794-4346-95be-446f94f1a3e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "089def37-e323-41c0-80f2-c3b0cec6f701",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject must be an object",
                            "rawBody.credential.credentialSubject = \"did:example:1234\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67c1173e-f1ce-45b8-acb4-87aa2fc6aedf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df931e18-f10c-4870-bb59-9bf59b1b8f18",
                    "name": "credentials_issue:credential.credentialSubject.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca609ffa-43f5-4c01-9a87-4d8a6d18c4e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e6c0ff1-5cef-48d9-8370-d70015e266c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7548fcc0-3b2f-4576-ba5b-fcfef8bcc0cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject can be an object with an optional \"id\"",
                            "// property that must be a string when present.",
                            "rawBody.credential.credentialSubject = {\"id\": [\"did:example:1234\"]};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d8e3429-b68a-4e7e-80c5-f62419654018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "561e2e84-2f9d-466f-84b8-48c9ca783497",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de14f5bf-3820-4f15-af6a-3c28f78df1f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86f4936b-8c9a-4a97-82d1-96ff980ad2f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d3fe7c-421e-41fc-85c8-f1a221330cbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options is required",
                            "delete rawBody.options",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5509769d-eef7-4fb1-b535-0fa97bd20c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b01c632-a7d6-4085-8768-0a2bb5abee5c",
                    "name": "credentials_issue:options:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8196ef6a-eced-40bd-85bd-3a21567fb76e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b405a7e4-32fe-4653-9ea8-57d86179f54f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06cd7a72-20cd-4e3b-89fe-088f0b5436f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options must be an object",
                            "rawBody.options = [\"array\", \"element\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7969187-1c6d-4166-b80f-c55d4b3e4fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf25fd64-6abd-48a6-98a1-a9f6c3446067",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd94fd04-7dd8-4a7f-946e-53bb3012cf36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a9f259a-d702-48ce-8089-9d2fc12f66c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0d81704-7da6-4f0b-954a-adc051cda91a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type is required",
                            "delete rawBody.options.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b08f32d6-3a83-49d2-8fcd-6473ce7ab7fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f5cb1ad-c920-4648-9dc3-a95e40721286",
                    "name": "credentials_issue:options.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18824955-6cec-4ad3-b14a-40cff6ce5fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03b24777-6a39-49ec-814d-e26ae414cfd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd10f0f7-dec2-49ba-8d1a-4ca3876d81ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type must be a string",
                            "rawBody.options.type = [\"an\", \"array\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e55ac513-c06b-41fa-ba37-e88e59147319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d687d397-752d-4234-9957-d50dcd2e206b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd179e4-33fe-495f-9f75-550e638bbad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93672e9c-2492-4b91-ac8f-6f3969b162f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e3ee2af-4140-4054-a078-3d367bc0cfb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type must be valid",
                            "rawBody.options.type = \"invalid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bb54b4f-acc6-41ea-b070-215a7111b3a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c9a10e-fbbd-4ab3-9423-9eea2d65937d",
                    "name": "credentials_issue:options.created:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{access_token}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f7f99bb-9e3a-42bc-a800-f2ee167a5b2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f992b70-41e6-4c9b-81ca-2ea8633b908c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0faf4180-1b0b-4766-9b50-def1d8597c60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.created must be a string when present",
                            "rawBody.options.created = [\"an\", \"array\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0979c534-16a2-4979-9e75-7edf3e6372de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a9ee24-4209-4fa1-868d-9d79e409a0f3",
                    "name": "credentials_issue:options.credentialStatus:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15635fe-6da7-4086-9e23-a008694a0f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4e1e77d-3140-4203-92e7-d43ad494de1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f40f2a27-0407-41b5-9bcb-a9a561f24e98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus must be an object when present",
                            "rawBody.options.credentialStatus = \"a string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9669b656-e008-4d76-914b-084df3b9f6ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d41a0d09-0923-4255-ad58-ab9128488789",
                    "name": "credentials_issue:options.credentialStatus.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6391770-81eb-46cd-9d75-1a3169e5f028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffc2265f-f30e-4b52-bba9-8b04162b741e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa405848-d006-4ab9-9ae0-dc5b5b91aa1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus.type must be a string when present",
                            "rawBody.options.credentialStatus = {\"type\": {\"foo\": 42}};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2aff655-197a-4ed6-98d3-b8a997b178e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73cbf063-1d89-475e-a9e4-60f31fbcb2b8",
                    "name": "credentials_issue:options.credentialStatus.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44920ed7-71d8-4d98-af08-c65b0d15216d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "77fd37cd-3916-4cb1-a221-1eb7c76c23a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0efb6d0e-6763-4738-b332-67e2b0ffee2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus.type must be valid",
                            "rawBody.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a36d55e-68c9-455a-b32c-9aa582db48ed"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9ba74824-c600-4104-80af-5c243c937618",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "36a16983-ea18-4cb4-aca1-2006ab99aff4",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf7aa45-78ee-4095-8905-ba5916611b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "25605ddc-d3ae-4582-8805-4538390e0eaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d20ae64a-9a3b-41dd-b41c-f08b4ccf9761",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "c3f88740-505c-429a-9fd5-5f57f36e334c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4512303f-6c3b-4a65-980a-20be9db9a25a",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd94f02-4b46-4c5f-9481-73d31b86280c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "07a56b98-b953-4e34-af9a-7a7650a5e201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c8df66-7a8e-4fa9-8ac8-9857fe2a46da",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "45924e95-1c5d-416a-8672-9d3586c78251"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e3685ce0-0648-49ee-90d1-ae51a4deee31",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0dd52eaf-d1b8-4d95-ae29-719c1ac284a8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "633647c7-0fa3-4dc0-885b-8aa1be65daa3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d0af1f4-06c7-468f-9300-1012c2d15c16"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1cf138dc-dce0-493d-9672-d603045917e1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5df8f817-1747-4c1a-a328-4c34565742b2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4207f46e-0c15-4bd6-85e9-465ce12e94b0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1965e6cc-21e7-4f57-95ce-c5e37f137195"
                }
              }
            ]
          },
          {
            "id": "93693626-6015-4b78-933b-e4ef582fd5ed",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e10b680f-03f1-4411-84a3-1c2ed55c76eb",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ddb7102-1dc2-43fc-8aa1-65eee7b851cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json();",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json();",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuance_date\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bd868830-d657-4862-a00d-05ee861bc785"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2fddb434-7514-410a-97f5-ed5221877381",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "4e889510-1c3b-4f90-9b4d-2e7be7020099"
                    }
                  }
                ]
              },
              {
                "id": "4a2f510d-4717-435c-94ab-8d5e23c2d6ed",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff0eed2b-34ee-45d9-9b2a-6d49f5db5f1c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "89341bce-e1d0-4228-9ed1-2a65b14ae28b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f836231c-3a4c-4aa6-b233-71587290d6f0",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.id is optional",
                        "rawBody.credential.id = pm.variables.get(\"credential_id\");",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "ce766519-9fc3-41db-b15c-fdf93029d907"
                    }
                  }
                ]
              },
              {
                "id": "daa05e1a-39ee-4bbf-b3c8-cb9de25386d7",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "498cfa4b-ac48-4bd5-a1cb-7cfa858cafc3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json();",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e3d5f441-8333-4c69-b666-937989ec04af"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "19dcb0d8-74b5-4972-8890-efc204b3abba",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.issuer can be an object with required 'id' element",
                        "rawBody.credential.issuer = {\"id\": pm.variables.get(\"credential_issuer_id\") };",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "2187bf1c-3320-457b-b635-b6bf5085bb9e"
                    }
                  }
                ]
              },
              {
                "id": "6bebdcf2-caf1-41d9-b5d8-d2b5600be520",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ebf3337-f614-41fb-8754-d51d7dcfe885",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credential_subject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "084eed8c-e1cc-4511-a907-69a447e1f718"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "15834038-2886-4af9-91a3-b6dc158f863f",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.credentialSubject can be an object with optional 'id' element",
                        "rawBody.credential.credentialSubject = {\"id\": pm.variables.get(\"credential_subject\") };",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "ecfc1952-8826-43b0-a7bf-9fc4257336cd"
                    }
                  }
                ]
              },
              {
                "id": "023f12e7-cd26-4dae-95c7-2adf74f83ba3",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fba4ccb9-c639-47c4-9a43-7a081934364f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d27bc401-55b9-4726-bda0-df0b9580ed13"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4ac8bd3-c0d6-471e-a23b-4a903440f320",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.created can be an optional string value",
                        "rawBody.options.created = \"an arbitrary string\";",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "f2bd759b-39c6-420b-b602-f9887dd42ca8"
                    }
                  }
                ]
              },
              {
                "id": "b693fa24-15b2-494a-b470-1220cb95a6be",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c54c2e5c-885d-4590-9e4a-4028423abe4d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a125f476-6f05-4c32-a050-8ae8bd1f1f90"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "811fb13b-f352-4641-88c2-2499605273cf",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.credentialStatus can be an optional object",
                        "rawBody.options.credentialStatus = {};",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "88541727-c5be-4a75-abbc-5f7b097073bb"
                    }
                  }
                ]
              },
              {
                "id": "f9500151-0762-4694-add6-1bbb63bfa922",
                "name": "credentials_issue:options:opt.credentialStatus.type",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b87c60a8-f729-4070-924a-dca8877751ae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "862b3d9d-3eba-49ed-81d0-b2eb0971e1f2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f45bec2-ab41-4243-beff-164c7ff99359",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.credentialStatus.type can specific string",
                        "rawBody.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "5b1f79d2-ca1d-401e-81f4-343ab3fe01e6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2237d968-fd7d-4259-b8be-c8700aecc71a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5df0332f-e4a4-486e-b7f2-a140dd810838"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2ed352e7-ce0c-48f8-b016-01b46460ae73",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7937372c-a2b3-46be-9694-d8ebcc2f5807"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5a4032c1-1b8e-4517-bcf1-f7562902e25c",
              "type": "text/javascript",
              "exec": [
                "// Raw body should exclude all optional items and should contain",
                "// first alternate version of any 'oneOf' elements defined in the",
                "// OpenAPI schema.",
                "",
                "pm.variables.set('issuance_date', '2006-01-02T15:04:05Z');",
                "",
                "pm.variables.set(\"rawBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": \"{{credential_issuer_id}}\",",
                "        \"issuanceDate\": \"{{issuance_date}}\",",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"created\": \"2020-04-02T18:48:36Z\"",
                "    }",
                "});",
                "",
                "// Obtain an access token with the required \"issue:credentials\" scope",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Obtain the credential issuer ID via did:web resolution",
                "utils(pm).getIssuerId();",
                "",
                "// Set the credential subject to use for testing",
                "if (!pm.variables.get('credential_subject')) {",
                "    pm.variables.set('credential_subject', 'did:example:123')",
                "}",
                "",
                "// Set the credential id to use for testing",
                "if (!pm.variables.get('credential_id')) {",
                "    pm.variables.set('credential_id', \"urn:uuid:{{$randomUUID}}\")",
                "}",
                ""
              ],
              "_lastExecutionId": "df26be39-81e7-48f3-82e0-b5e1137043ff"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2cf718a1-5d72-4ae4-bb5e-d11563afd6a3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8f260100-7acf-46d6-af6a-d894c0833b50"
            }
          }
        ]
      },
      {
        "id": "879d569d-228f-49b0-94a1-f8e31040b38f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "41a35b81-0493-4b33-b5c5-87153aaf0370",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0d7bed03-f3c6-4d3d-b4fd-cd2a71389950",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "35001096-1505-47b5-b005-036989d521e8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29e90a95-0fab-49a7-a856-1c873a29839c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "141d72b3-db41-41a9-ad7b-33051711b1e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f9bd9f8-75b1-4dcf-9c38-34903191feee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a6e848a6-3a2a-4670-8ae9-7ff5a46ce0aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1f2418e-b857-4e4f-a2ed-7d44bb088f2e",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3dc472c-59f6-4bf4-98fd-9c7e98f640ea",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "052e7383-9454-456a-9004-f21f258200a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ee89fb-ece0-4f7d-9b99-25321e90446e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9260e9ef-bd3e-4349-b34c-5501c51816c3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad4e2e0c-5eed-4d5f-8523-c8cffbc813dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2633477f-0b91-487a-9106-768755ad9c0e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "892edcb8-6cb0-47f3-9774-45bed61f771c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2080c51-5eba-4aad-b005-984da75c8908"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4b70256c-1fb8-4a1c-9484-1435057659a0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"update:credentials\" scope",
                "utils(pm).getAccessToken('update:credentials');",
                ""
              ],
              "_lastExecutionId": "3321348e-4fd1-4e21-abb8-e9e03e171243"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "95305088-8bf8-4e68-840b-b54040c883fb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f917128e-b074-4923-9746-860d9c2e0515"
            }
          }
        ]
      },
      {
        "id": "066f71d8-5194-42a8-a2be-d1667614591b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "1341aea0-c442-4ce5-8599-5ef64b1f5454",
            "name": "Negative Testing",
            "item": [
              {
                "id": "16e48ab0-ba42-419a-b12e-a05441fe9314",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6666b5b7-79bc-4e16-9c0d-786a0d79fea6",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5e9fadd-5a16-48e2-a2cb-7dc310db79de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "027a23d0-74f1-40ca-a9d6-ba16a78cbe91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675fb8d5-dc2f-48e4-998c-ff5f69061a31",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb28a52a-e53d-4eb6-a3d1-8fb3abc9b5f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61417a81-8a7d-451f-9e65-b09ca92161d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ba4cf5-770b-4909-92fb-5ad183d503e2",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b5a7a0-4776-4d09-aa38-0643e55a0651",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17cda117-6935-4b8f-ab44-ed98a5254667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d92b2b-2d76-4a9f-8e29-aac0fd3392e7",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ffad48a-c774-498a-90fa-7ca9891a02c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2e9e072-af47-4b93-9847-0ccd9a74d40a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6c9fb7e-e8bd-47ba-b520-0cb628ca7af6",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91cffc43-bc3f-4109-a702-bd71fd9c8a99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff11455d-447c-44fb-b8d7-4e452337f14e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5264af46-fe85-4c3d-9e05-f5fd09115fa9",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d183e10a-a673-41da-9b99-317364e51df4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6f20ecb-ee95-4cd3-9982-701838da53c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "769e643a-4805-4594-814e-65d4521cb142",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a229bdc4-e5bf-4700-a950-f29f82cc762f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8922f19b-4ad7-46c3-86f1-d4b33ce33aa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b126eef9-75d3-4030-9b63-7fb53bfc2eb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae841624-c670-4639-9db5-ef648ee9abbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4a4a57e-9aee-4686-bfe2-df9adddaa913",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3adbe363-f6af-4413-b2f4-1087531b951e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21ae70c7-6efb-45bf-94b7-adf4403329b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a618c0c5-db1a-4db7-9c89-54ef060feb6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7556a6a9-e9a5-4a17-93d4-01875617b3f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3b7758a-0cb5-4a8b-b81b-0da8326e545f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f096ea-e7b6-4d8a-b16d-ccb872dfcc7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08148fc1-083b-4da2-93b0-5ded7f80ac8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c306f49e-393f-4b01-939a-f84f025a5779",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "033f7d11-62e0-4ba4-912a-5ddb1e53eb40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48942a36-8088-4475-88eb-b399144da96a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4214f478-3245-4b24-a4ce-cfd7bdaf4685",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "796ad10c-374d-43cc-b717-c0c23c09cbd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4284076-3620-423f-89c7-27a8e4142fcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "170fcd87-82b6-4575-9b7b-271ecf0489d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf67a0f-dc19-4a41-b947-a9ad7cc33d4a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b2c7b6-37b2-450e-9025-c1c2dcd42cfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11c8dd3e-e84b-4ea7-93e1-601fc5e8457a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbdab239-d450-4852-990b-9d332318aee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92c2ada0-cb9d-4493-a8ee-095b0bc724db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7562a1a-8ec6-47d9-9ff1-d743c8b58ef8",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ddfef3-a768-4f56-bf50-628c7ac8ae2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2035ecf7-4bb7-4c4f-9426-255f4a8ab4ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "627fc8b0-ca46-4fa4-b6d6-936ed99c1e56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89d0b11a-65bc-4782-9b9f-f6c2a09d9b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "399808c3-8567-479a-8b11-a0016e487848",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7216643a-6915-4e22-899d-edba6ecd0e95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4916f730-939e-441a-b235-823236d72d5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fe10322-6641-4751-abf6-e56c35dd06c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68e70b2d-b806-4283-97c7-1730688a2759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e912137e-35be-4b96-9411-fc5c0de2ac9c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f51cb39-f683-4aa3-970a-f9f5999b6977",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff29ff16-ce8a-45a8-85ba-0730708417b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3980000-876d-46d4-9d87-c8dedda36bb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e47b346-2055-46a4-812e-f5a16d8902a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc362249-fe2c-4cf8-bd28-53c090bbca64",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "101711f5-d84e-4c2d-9e90-74457b8e42c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eca705a2-b553-4431-9811-744986279ff4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7720513c-79dc-4ead-a814-23fc04b5b017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "157122e8-1ef4-4c87-8d80-569faf0a67a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf0667a9-6968-418a-814b-290352bb9ae6",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b46f66a6-3686-4b16-b6e9-8083902f9f6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd92191d-ecab-4b4f-8d24-ff62ba2eeb70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a695af6-a37c-433f-a189-ea763549b041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05dd9840-8d22-45de-85d1-bfee9d27f893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e66b5a0-8d89-479d-a8f2-d8661c2ddad4",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd9b84e-b966-46dc-9896-d46dc689a68c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60d18133-bf8a-4800-989d-9aab4a5a8945"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e714e7-c86a-4538-9263-572e92f946c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d2857dd-ca01-4278-ad8e-4f7124d69da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a725dd77-97b6-4fe8-8cba-50d2942b48a6",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "502b5708-1220-48d0-860c-76aea8e00151",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c300c45-c77b-455e-89f7-49c64ac4b826"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be53d798-1d7d-4b62-847e-e90857f4777d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d53be6c-ff29-4d24-b505-cc09a970f2f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a1326c-1445-4160-b26d-9e35d11d154f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97996f8c-7167-4683-bbcc-79b9ac3460a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f93cd7d3-fcd3-4686-9bfd-b5f848f75478"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f8f8661-e2e3-447d-b441-0d8bd5fd8a0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63cd24d2-1fe1-40bd-8203-75148d703e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e7585b2-fc8f-4e29-9594-4f8bd3d569da",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "838a6754-df1f-4b64-a338-98149dc14161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5f57799-f30e-4abc-8a4a-873135de75fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d547efd-ba38-4928-aeff-fc79f8880e17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95164761-a723-436d-978a-ef9256201538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44716f2b-02e1-4fbb-ab3d-9b8d71541fe3",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e3d5e5-c1ab-4f9d-b480-69406f3603e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76d7e0ab-488b-4179-b1be-63fa2686c5c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f535ac-48a6-45aa-8732-5dc952611db6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c618ced-f230-411d-92db-0ad4f749eb7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb79d8b-f6f3-4a8b-aaab-a05a59036dc6",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9437459-aa23-4ec2-b6d5-1c7885a75af9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5173127-01f6-48be-a16a-2985520118fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b5da58-a104-49b7-941a-cc74b7899a46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2a6d450-9cd0-4960-8c93-0ad7a44c0c30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e530228-93ab-4888-93f5-deec790e2d26",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6121a348-1aae-4858-bb10-0f5d56d9f1b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fee21e43-61c2-454b-bdff-78cd5e07656c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13113990-6430-43c8-896f-19ed2dfde7f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80fbe368-c43c-47cd-83f6-bc75c6725425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b05e93-95bf-4d63-9629-fb897d9977dc",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d67de05-8057-4542-9c31-41ba02bbf8ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c29c4071-cb57-487e-b303-bbe17508a883"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f171fdab-bd6a-4682-bbc2-c3f73f505885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74e7c4e8-76b0-4071-ae52-4729af080573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20095f09-10e1-4815-a962-d9547775ff2f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2e0b350-d95e-4737-b3f7-ca25bbf2051f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d587ee1-8e80-47c6-87bd-27ed24c5c15c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00226a99-c6da-4ee0-9c8f-3f6efb962e9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c3161af-82ea-431d-9235-905b5355547d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b03f4bb6-f14c-49db-8cd8-f833868a7635",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "503e8d10-2628-444b-9ac2-edb2b7860534",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c41cd70-5473-4eea-af01-885b5742a67a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f8dff0-0090-446f-a216-9ed08af00894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97e2605d-b82e-4fa7-b594-afd646c33796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef64f402-a5f7-4109-b1fb-37e90ff6d0bf",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c751869-29f8-4e31-81b7-1cc15a0d48b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39cc0bb5-67f5-4763-9c3d-b2130a830f22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e29ce65f-c057-4e12-8643-488604107bb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a9170ec-3b3f-445e-aeee-3f8efd1a574d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e300b75-649c-402a-85bb-d7f2d6dd2bf6",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31238bcc-9d64-4f25-8e53-eb4d4263ddd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a972cf8d-c536-490a-b33e-6d792daa6505"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61fdb1a4-6287-4788-a539-72a22553b4a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43132e94-6252-42a6-8834-9858b0274037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba4076b-2f75-44de-b2e9-8ddf1199eafd",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34e98431-186f-4bff-a172-9bafce43e9f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60a014eb-0d37-4359-a872-9820a03fd1c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72429114-85b2-4530-bb4c-d040c19d2f53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "820af3dd-1ab1-4b96-94b1-5270bd67c48f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "990eb058-0bb3-49cb-9f5d-324ce65c83d0",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0907d97c-9baa-4ef9-a8d9-6d20ea665115",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cc79868-e9f5-4c2d-96c3-d4597409df41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c58b42-5301-46c0-a5fd-099d6815caf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fb86cc4-9e3d-4606-bcd7-5f72cd88cf02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37eeb99f-b263-4558-aea2-d1a13a308de9",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34d7b2d5-9030-428c-86ba-0484a5654e80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f737cfb3-a4ae-4b2c-a439-91430e9e7523"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "366639c8-703f-468b-a941-01b4189a5c85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b554cc9-7299-4670-8e26-a3b1ad3a11a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbdef364-29d4-4fc1-b41e-b74461198872",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f43131-39bc-4f4a-b4ef-8c6e501c1ee8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b41dc6e-d087-4e6c-8e5c-099ed0846ef0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e00d779d-2c17-4806-b639-e17a07552c04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3083f43c-445f-4ee7-81f5-9466c3994bcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab337d7-33cf-475a-a287-9f7c22e6c03f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e980491-af06-4667-a523-51f60d674097",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f21673a-1a42-42e0-a0f8-bf3a13840011"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "404940ac-5a0e-4385-9729-871edd90e502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b2604d2-2a74-4566-9ff0-bc18995fa85c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b54da925-135d-4739-9c0c-4e05e7fa6a43",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6be829e-36f3-4077-aad1-0950bb188f9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e7bd603-d9ab-480f-8951-3edf59514be7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aab17eeb-b7ca-40f1-a7ae-63284d05469f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e027abc1-68fb-4b7d-a9e9-2422609d4ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1da993b7-4a5e-4ab6-9f46-3db47fe2bf7b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc31a150-1a5a-40b0-9bbf-bb062384869e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6c5cbe7-0c46-4346-a8c4-c82f0bcdf858"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65827fa9-8575-4be7-88cf-34198f57048f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8486d44d-7e7a-4547-9d91-b2d0298745e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "388da84e-5b8a-4163-a8bd-011d5f28d60c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b852ab6-83f3-4471-9c9b-e1caa58fbeeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c394f13c-21b9-4a93-85ee-feb5c1d1be55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0adfee25-d422-4fdc-abed-7af0082c29c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea587fc5-2f4d-4f8d-a957-388a1cc23447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "506470d8-e2b3-4342-9571-e5d93efd99d2",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6929f371-3903-4725-910e-753224fb09a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eef85499-e311-4852-822c-ec7385411736"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "396b2bd4-1ffc-414b-a0f5-b902b74d1945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebbb730e-9dc2-4bb9-ab81-49de60ca86f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9f3f546-f4a5-4834-9d04-be7cc0b4144b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23c8d1ce-cbcc-4093-9991-0dc1ccd118f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26f40c7f-3f8b-4482-acdb-ea0aa65e25ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8afa72fb-6970-478e-9093-958fec35315d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d762db8-db8d-46f9-a083-2d2631bd8b79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b96c138b-92ae-4c94-bb67-8dbca86b53aa",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5905c0e3-2941-4fac-8b30-d788a47978ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad720c83-7500-4fc3-b512-20da987e5705"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30560a21-8994-406e-ba5c-c3a2dcd756bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b906c628-250e-46cf-8e69-eed357560b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "072a46af-ec69-408e-82d4-c81a160247d1",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a7d80e5-e4d3-423c-8c68-f9cb771d10d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10319a3e-ea57-4cb2-8b9b-fefb1886966d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c1a7282-f2f8-4dc3-b298-0a03088f612a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44da0544-cf0d-4faf-afc6-60740dacbb80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "931e1c17-a030-4f20-9516-1d87552b1138",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5157c23-f3e7-44ec-a264-a14316556268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ae8916c-9336-479a-b376-22df09bc63e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ff4b81-dabe-49ad-a5e5-5e8eaf4930ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6028a1a-af4d-4e45-b827-e453e73cedf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3132a283-71ea-41f0-a811-bbb4c4dda5b1",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c06e4231-3d19-4b01-a892-33e1c937e411",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf90d272-f94c-4a12-9a3c-1cb84d2e5fe3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f53f47-ddc4-4e1a-b607-bd1317ba71a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1e3ff26-2d72-44e7-b3fb-aee2af1d8fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b04782b2-b0a9-4355-9391-98a5b1bf3dab",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c73fdc08-eb4d-4f54-8e51-241215ce44b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7fcbfaa-495a-4ed0-bce2-342631244180"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1224aef-648a-499a-84e0-9ddd3fe4d986",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61cb0a3b-ba61-447b-aa38-8c466e27524a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bff78b3-1584-4bc6-8a5e-6dfc965bddf3",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52a9f316-ab99-4848-9fe9-94d094b1af32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cab649fe-f0c9-4f68-b944-dbd325ac6a1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "323fc212-dfb6-4bab-95ec-2a3c024e990e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92e21769-d7d0-4e46-8923-b0642c4721bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf27c3de-fd13-4599-8b50-065ce863f4b1",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e66748d-b0fc-42ff-aed1-8f6bd218b2ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0820cd21-bda4-481a-9d4e-a9199728a980"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f759bf-952f-4033-8a11-dda196fdd7e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7821f03e-0ff9-4235-95cd-48c06f9b8904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c486edb-e036-4987-8c2e-fb275afe0508",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6040720a-b266-42d7-913b-8fe224cabf7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec37fa77-1ab3-4c2b-ab26-6b55ca8564ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e298dd9d-6a12-416d-948b-2226d6a88f26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e59f29f0-eb2d-425b-ae71-56429ee77baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f79e6e-e556-40a0-823d-2a0e5669caea",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ceeeae5-0c35-4d4c-bc73-c57778976cb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae8a3ec7-623b-440a-8c1f-edf0c44d0ba8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "190b93ff-e527-47ce-80a2-5caf7bffa1fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2dcc289-784e-4d1a-8e61-88de623f191a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a4445a2-4b2f-4bff-9d4b-a6aeb4848756",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29abcde4-f94a-43b8-a656-6002f40462a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99b03972-0e17-4bd7-b968-3f60ae77f334"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e78576e5-ef55-4d26-9bc1-63614e4540b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc735b08-7788-48d7-a0b8-5b726d5c3196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f97b8b4c-2845-4be1-aebd-19b319e663a5",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aef6ba0-8465-413a-b1e4-8d009cbec0b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7825bbc-1d6f-4d08-a6ff-31b59da31151"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e24a05-6fd5-4cfa-994d-93318b4d8b87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "103e59d1-6763-468a-b1cb-41ffb67e440a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd35d7b-340b-4a66-b3a9-3064ff6b8d2b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3bef5de-c6fa-4c27-95d8-0dc5eb7ab194",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c01d5285-2650-4455-80ba-b809f54ed09a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af9beb4f-a51a-4cd6-9e6a-ba0196f0733d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60f594cc-11cb-412c-8a90-1091fb4d70a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c210930e-9275-4411-8bed-2b9b9b50b570",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf75ccc-c52c-49d8-a266-359c572702ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eae2ad1-fa43-4382-bfbc-94da9d122d09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7823b0f4-28d7-46dd-9339-ec7524925416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31a4b562-6705-4981-8185-f9566dde9299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59f1119a-f118-4e8b-aac1-39fc9ee5f3b7",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3122390-dd26-4853-8f62-a7c430ff93c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a50c2056-3d8f-4196-ab1b-e166604dd1ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92cdf2aa-6b61-42d5-abd5-791a7b99b601",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86076cef-12c5-48f8-ae6d-ef7ccade3cec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92121d15-22d5-4b79-a972-cc803c1d2e79",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff03964f-01c8-4f7e-8239-dd4a9f97a250",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65c73300-9db3-429f-9fb6-1e7ba5cc61cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "083d7b5f-ca42-4f87-a8ca-e5c18b90a5d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd21a45e-b941-4e15-aaa1-c068976f2d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afaf17ca-4550-4fc5-adbc-a3de672cd77e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a1813c-df31-428f-9bcc-ac5fb908c124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9815ab63-d1da-489e-a0c5-320e02c65a5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a1b3b72-3557-4457-b0b9-d1251af6fa00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b996bf2-0c3e-4e1b-8ab9-d98b03ae1104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d17c3f95-bf71-4023-ba75-b90165eb0914",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6d64764-ca03-4b9b-8e7a-6293fe577f1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd3d0459-9115-43ba-b10d-5ace22bd2b85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c15aedb8-b912-4a8e-8bb3-60b0a5e4839e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a81fcdd6-a8e8-49ad-822a-09769cd6f918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb29cbd5-e986-4fd7-8c93-556e29ae47b3",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d38d1e9f-6cec-4093-82b2-a99ac6bae763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e155fbf1-46ac-40fa-ab43-ab49f650b295"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63f7c622-b582-4f8d-a29b-03e247f26b44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eefc2a71-ef33-4b07-9b48-8a7122863f5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "254c1642-649c-4513-aee7-f6d2dc4d33a4",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c8bf39-7385-4a8b-98b7-4a49dfe95f8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5641bed7-1313-4574-a2df-a0db19e6029a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8bc5e2-abfb-48ec-883c-5a8f549817f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee1805fb-86be-4872-9df4-dcce20899a0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96797ea5-ae71-43c3-a614-7aa4f2d39561",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8466c2-c044-4398-b388-231e10cee5e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fca3e497-f87d-4275-b0d1-17538e84d1f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cea09d0-8303-4cca-8520-3185fe10efbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c52bd23-d3ea-45ed-8641-a5150f557497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0003c8-d894-4389-8d95-240fdfc7b0ac",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d77904-68a7-4ad4-8ed4-4ea81417be9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bcf8b8c-8bac-4f91-a9fa-3c867ac570f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab16ce43-df43-474c-9f47-f7310c771f66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bc46ff8-e0fb-4248-86d4-b04b4aebe51c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fbff1e5-bf2d-4db7-90f7-9d24cfe06249",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5703e317-7cd7-4729-9ac0-4aca76a28c46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c0dd8d4-2788-4a25-9ef6-3cc3dfe18de7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "187bfcda-06f7-46a9-8475-c70ee4bb5faa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87e3f475-e197-44ff-93c4-f000ded2db74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b97d9f05-74f5-4c08-8cc6-3d8eed5c3110",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2308c802-d518-4dde-a30d-29cee656d6bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f8adbe5-b472-46e2-842d-f987448a07ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d272bf6-f7b6-43da-ae18-3e5f6f36d5cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "562808f9-5d82-40aa-b853-f160e398cacb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eecb2e5-8bd6-4737-93dd-274750ddcf45",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75855a26-6275-4a58-a701-e05398ad7c8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27ad528a-341d-4202-924a-b25587298a5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68cbc069-f107-4558-aca1-eb4778c37e32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7d048b4-91cf-41ba-a166-b43c0b97a7a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d33c5443-cde0-49f9-8d78-e0829a4fd1ec",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2284c513-7917-4af1-a9fb-e721070d0269",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "060462af-400a-4569-95c7-c26f689a94a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97eaca94-ff23-45de-bde0-eb2fa31b9869",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8962e190-91df-4dcb-85f0-fece230d44ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8111c653-083d-456e-82e4-d3d4e967635b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63adb8bb-03f4-4bc6-9ebd-97fb06432c5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99329c20-4ed7-453e-9126-7d13294dff6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "297373ba-35d4-4648-a13a-1f32db12a34d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2211f892-3f00-4984-a58a-559658a94b56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcdf30a3-3d02-4990-8e73-5203998a4902",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94355eae-4926-4301-b3bf-042aafdfb3af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "492d89a7-e975-4301-86e5-19a32cff9eaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b4c0d90-53ef-41f5-888b-65d9b0aafb2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6a077aa-b66a-4be2-9335-c7d87cd3547e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23e22504-0807-430b-8adc-91bb78c4e381",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec9fb96-9923-40d2-a7a2-d14fae6deb23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ba1f728-fe0d-4ef4-875b-378b6636fc50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb93371-8be0-4949-a8c5-e6a3769f00dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c459a837-30c7-4cbb-adac-733d94b7d290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec8919c-eefa-4dbb-866d-c9d15e8c78d7",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1380670-78c7-45d8-8f8d-eff3bbdf3f45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dafdb34f-e31c-44ab-a7fe-57e02c4f8c2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4601c644-5042-4c3a-8162-99f8c3cc774f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad2ad8be-045b-41a9-b577-b0daaca05b87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a54f719-9ad4-4931-9bb3-7b2850fdf917",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e934ffb7-e962-4626-a4ad-67ae7ddfab40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c1f1f01-26d2-4155-8840-d6ced260b436"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e014cc32-b8c3-4c5e-92fc-42fe46cbc066",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00665619-baa7-4ed1-92d6-f156af31a047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f8355ca-393c-4cd0-b3e9-5ab2b09d5913",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad12def9-a5c4-4b44-b3bb-89ab9b791459",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de689af3-48a0-41b0-b268-73fe37db537b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f4d1320-a050-426c-88c8-df122f3446bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc855669-34a6-4e33-b731-da481b756c60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "241aed20-29a7-4b02-805a-182967712bbf",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ef8748-d29c-452d-9cf2-cc5d794cf787",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98c15570-3ce8-4427-aef8-af29ed152092"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ab3f970-271d-4148-8e6e-9b97afea44aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe2bcc23-38e3-489d-b6b5-5f0295e5f87a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab1e10ae-14f7-4b81-b451-6b4f091b99c8",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21dfcf25-be10-4fe6-9b8c-ce8254ff21c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd50f69c-6b4d-471e-a135-2adcd9ed8f56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e802bf-29bd-4dec-872a-20b8e3a0a110",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df84ecb7-94a2-40ea-828c-f92ddcc3aa30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed162c1d-e30f-429b-9aef-f1f403e52689",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "375f0a95-4d1f-47c9-b2c9-5b1047be57f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c15f164a-ff94-42fc-b217-be1d039d333b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd514b0-bedd-4d25-87f6-25aa37af7a4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a10f2f25-88ee-4130-9e0b-477e3966d7ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f361593-0b82-4a50-8883-a520db6d065e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6392a4bb-5d82-4a9a-8ceb-f35c90f7d337",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b07d90e4-ec45-48da-8a34-7dec53c5d7cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a12f11b-1749-4133-8feb-c27810ac078a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eef0f03-7ef9-48a4-a84a-26152177ea46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17595b8f-6ea4-4779-8d88-2eb4f420184b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f0e1463-d2e3-4c3c-b323-6f217b9af46e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c10145c5-8b4d-4e07-99e2-92fa59f73909"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55160355-8812-485b-b8bf-843bbf608c7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f0ec66e-963a-4074-aabb-60efa3bcd9a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "503cb842-2f2a-4fc2-a2d7-8b269e5ef8de",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a77388c-a35d-4045-8aaf-ffdf70d62288",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "067f5539-770e-4a81-9f60-f2259e050df8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "240a9b6f-fc0d-4279-927d-cf37999cfd57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcd580a0-4435-47f1-9f79-a0040fe82c4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad820a43-46bf-47fa-bd84-6917c14078a1",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69a49cab-10a0-4145-a5de-ff89470cc0a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c3e33ad-bdb5-4d6a-a49c-f7aee7f67089"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ed1d318-ae9c-4927-a9f8-1600d59dc0c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa420e10-18dc-4c0b-8186-e7a46d89c20a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b987df91-e042-44bd-b5d0-98b14276950d",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "711d44ad-8fca-4778-894b-83b925d853e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02087f9c-07d2-47d7-a7f6-bbfb71a50ac8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f65f984d-d3e4-4756-9b0a-d4288a886b94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "243aa8cb-342d-4ffc-afe3-efa464278882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2be2aea7-a6b6-4fdf-bec5-7957916c2ddf",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0382709-c555-4567-b5dc-d6c6530fd761",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60478eea-9ab2-444a-bde4-c60d7cae4587"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e56972a-f0d4-41ce-b711-a7dbe9199fb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91772bbc-132b-4528-972f-1aa48d377279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef1a6398-2b2e-46d5-a829-9268addeea4c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8163c6e2-99df-47af-a589-34ea588d2dc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70c634b6-63fe-41e3-943b-9e3bf8b1fde4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9b9250-99df-4ecf-99ba-85bb351b61ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ebe44e3-8d2b-4984-9c9b-9a0618e3268e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e4dd107-80e0-4176-834f-fd158ada35c8",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7c05d00-0a41-4eeb-8158-fe3e9892c7b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2aada7f0-787c-4ad8-8637-0f4a1a79917d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba59fd4-74d6-443f-a669-9e7e82497b27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4714e2e8-6bfa-4571-87cc-0b4b62608c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "212ea3a9-4df7-4346-a041-b5d9f76a7fc5",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d57ae7dd-62bc-4a0d-89d0-5d3498a1f710",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be0bb3a6-62c5-4b99-be38-700f3bd6ce75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "223c8ded-2313-425a-b76e-27e6dda62c67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46e20ecd-5020-4626-bd4f-9e254ff7c95b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d667cc9-9c61-4920-8a36-12d6836a5964",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77da0969-b533-41d6-b3c8-f49a4e0d92f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "710c06e0-1e48-457a-9063-bc699c0605e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3becfb1d-cf3a-4ee8-9802-5d03e6650818",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac734e47-7728-4747-b9d2-cf82aa3650bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd6b2c3-58c1-4e97-9d80-6de4e06a7ff4",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d7a91c-c3fd-4f55-8b4e-f9c3fa350626",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f48fcb5-73b6-42bd-853f-cfd1d264a3fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af03fa5-e386-4eef-a8f7-ef719f91d0fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e173c4cc-e4b7-4ff5-a3e8-8bbeecb7c331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a4e8a03-0786-4613-a3df-7ac40b683adb",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb89ab30-bd15-434f-9825-5b6f249176da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "618802da-3dac-4158-a016-6ea3c794ed7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02700fac-3dbc-4c32-82bd-d7d6c41b66d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "135227b3-d335-482a-93a1-72e5409a6f72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "748d1c85-7268-4390-92ef-96ef651752f9",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea1aeb50-81a8-4461-b21b-8e93cd2339b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ef840ba-612e-4d2f-88bb-36f214ec5b8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "427ef97e-095c-447d-9d59-4e94b1cbacd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c29c7a97-29d1-457f-89c3-1aabd36a4c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bbd6656-ef13-4462-99e3-e7a7b49cfc4a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3279890-d1d6-4f1a-a308-b35b4a2e8480",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e2201dd-0374-448b-8faf-0923155b7542"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d62933bb-2434-4457-b4a3-cb4cd7086377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d40369f6-b648-485d-86c4-b785ca394c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1545c08b-64dd-420c-b3b6-c7301c5c1f87",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "608fca29-d1b4-438a-ae6b-f49f39aab0af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b564cbee-5e5c-42ed-abe5-3115697b6c41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "145c33c7-eceb-4165-b581-096154b7843d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d35a03f7-7daa-4fbc-a6c2-c8a252f4ce10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45c7443e-86bd-42dd-b760-2e7fcf9db45d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a3f9be0-da5f-4fb9-951f-9a0a381a8b3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "541b7d3d-578d-42c1-be02-3bc5e17cea89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1616fe54-517c-44aa-ad31-0993d4eac991",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50d93eba-c2e1-472d-8138-20889c4f4f7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1067614a-5901-4c99-ba97-a0733103622b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae3db8e4-7ee8-413a-ac32-020bb46ca5cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0943dc05-8ed9-4982-addc-3b41d729d9f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab9b03aa-4081-4286-b69b-b128b5609d39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a18f1e2f-f954-483c-aded-0e29b5063175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c4616d5-6e62-46f3-b248-8e75595581b2",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "413054ea-247c-4cd6-92f5-546246078d24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7005b4ee-9df6-4a73-a9c4-a5556a10e5e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab41d2e3-8fca-4de6-bd32-f43ead972f0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2871fdd8-21ef-4f0f-af44-db1f4baf5e45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a87ad0-3c71-428b-a3f8-e361197240b9",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67436627-e7f7-4e07-a775-e05d2cd53d56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0286d3b5-e446-4edd-b8b6-cb486b03a3d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac23ab08-420c-4842-8351-9309fd7d24f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4d77901-b30e-4234-9bb6-a2c1e8d9211d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ecfb30-ac44-4979-b002-3d3c1a5642ce",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee4cdb4-3597-4886-b164-b274c5906cd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7924988c-d546-454e-b871-71de6dac5dd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe706d3f-41e3-4bbb-841c-30db342486eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d56ea32-a7e4-4623-a61b-831f468887e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e732d7-c1fc-43ab-bd7c-dbf5c2d66f63",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34fb440a-5998-40cc-9132-6e08c2903644",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5dae867-0777-4bd0-8e04-4709623ee480"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4494ce1e-08d4-440d-9564-6dd9c8c27f87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "358dba98-4be2-4dde-bc4c-a4368c4687a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59998c54-4375-4831-9224-5acfd86c249a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b23c00-b53a-442d-8f92-7b324ed46662",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1dd9ad2-667e-468e-9215-fe1f69a37506"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e57f3e-0f90-4ce4-9a33-49ed1d4ce82c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "388407dc-937e-4e7e-9072-9e0e9981ca7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c4d407b-668a-43be-aff1-6265d44525ff",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d3a63ec-7478-4729-b1c2-1d221eca0d1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cb2f045-2af7-458b-8875-90e2d81728a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51861f2f-867e-4fcf-9995-ed5bd2bf432b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a1d3cad-438e-4a9c-920b-9e22945c4b6c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6708dc07-7fc1-4a50-95d9-cdcf5ae71eec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da963a63-4238-4cea-b4d5-aa6ecbe985c4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a20e3313-affe-4e03-b8ef-d9c76c3376bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bf13b5d9-0090-4055-8d6b-12e4a53c8ae0"
                    }
                  }
                ]
              },
              {
                "id": "6ed6f3df-333d-4480-bbd6-db9a51eabdbe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c6a4766d-8db0-4602-b276-0b2531484881",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bbe71e0-22c2-49eb-b548-831eb0ee3c68",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ad4ac572-5add-4caa-8723-38da0f82929b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c69619-6eee-4df8-a743-613030e01e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d57bcf92-21ec-4c38-b049-14472fd5be39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9381e986-ccb4-4c47-ae26-cb057d1132e9",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7ce6214-b071-45fc-bd62-4fac15687aaf",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "41084685-1099-4519-9959-92c7ccb81b7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f4cb854-3714-47ca-83b4-9b5aca97be14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b03386c-ea2a-4ad9-8710-c8a3d7326835"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b4f29893-e45c-4b42-9730-b62a4197f5c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fd36eb53-597e-4c94-903f-42ec6fda1525"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f941154c-79d1-496c-9afc-ac9bde183678",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "11357066-40a4-4ebc-9999-bb0064c86088"
                    }
                  }
                ]
              }
            ],
            "event": []
          },
          {
            "id": "3fd631a2-73a7-4798-a99b-6238e8cb5e46",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8f23a708-0605-493b-9f2d-c1591066ce6a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "52557e1a-e3ba-4e4c-bbcd-0b46c3062a85",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "523a6eea-b779-42cb-bd69-312766cbfbc9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7f053a96-e9f2-4e51-bfd8-0890c3578791",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7a992d1f-8060-406a-b986-d64dc35e9184"
                    }
                  }
                ]
              },
              {
                "id": "e5f1ff1d-f288-43b8-bac9-1f977db4503d",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "957cee88-ab37-4031-82b6-b124e81f0c3a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "98444236-5476-4e57-bdf7-ab6308b64132"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b0dc885-59d7-4e90-bff3-40181d4edc02",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d6f5d42a-3f31-4033-ac58-7f020c33219d"
                    }
                  }
                ]
              },
              {
                "id": "5f38dc5e-7f4f-4540-8d0b-083ae052aea4",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "962aaee0-161c-41ee-ae7f-bd7aba779e62",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "808fb338-1bb0-4905-a4fa-98568369d996"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3600866f-fb9a-4f30-a702-b70abfe4e45a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "81920d03-117b-4c38-a1cc-2846991a1396"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d32c72c3-3879-4d00-a060-b22fe97df87b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "56f2f996-46e6-4e76-bf99-816f5c9f2173"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cbd71684-bb5d-4211-80e7-bc106ad656be",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1c29efec-9252-456d-bb1a-4c35ed398573"
            }
          }
        ]
      },
      {
        "id": "e34b71c4-77fd-457e-82b1-c532ba1bb64b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "77a3ee32-170b-43c0-8c73-03007f6675d9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eb4c4ee0-d97b-402d-900e-bb53520f2be0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "06095eba-7ba1-44ca-a779-237910954b38",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27bc2e87-d13f-4b0b-ae7a-3a56b0d9e65c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d63d94ab-dd44-4ade-b07b-72018386cf2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c565268-a52c-488c-871f-f2dcf41ae3a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "82f02f2d-58c7-45b6-85c0-e7f4c9869055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "808e5f5e-93db-4726-94a7-1c18be5d1399",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5164630a-df02-4d75-9287-f295cff1bbf1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "32c991f9-e102-46de-924e-3b9c4720a1ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce8eef4-2442-4a82-bce7-34da2cea5aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8bdf6f2a-1289-4c8e-b33a-08ea24bda0c8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e71859e1-cfb3-4dfe-a6b7-534571a7bb50",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f20841ff-d352-47b1-b952-dd99a7b60d4a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8614becc-fbcf-4e87-a706-a520326a9cf3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "66bb1038-2a01-40d0-8778-9f1df0fe8ecd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3a9cbbdf-317e-43b5-9625-337def2f1b19",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope",
                "utils(pm).getAccessToken('submit:presentations');",
                ""
              ],
              "_lastExecutionId": "40848c76-dfef-49d9-bc6f-e43dcdfccbb6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fb4e71ef-06e2-4593-8112-5542653f0f30",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d4934a6b-c05b-483f-b86e-4cde83a773da"
            }
          }
        ]
      },
      {
        "id": "0551bd2b-1703-4556-b390-b0204e82cf15",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "4322bbf2-d943-41d0-81de-8d91c02b3d20",
            "name": "Negative Testing",
            "item": [
              {
                "id": "81cb00dd-8494-410a-9cc6-aea70b23662a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8b9ca969-a04b-43d6-9ebb-eadedcbfc77d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84dd4328-7c44-421b-896c-e9013590d340",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a358410-1d89-4083-96c6-97fc8dad2a60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3145c1e-c33c-48a6-aacf-3bc225359997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "06656106-9bbd-4adb-a3ee-a221ddc097ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf210e5-350d-4e98-841d-5fbd3a646c5e",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef5ed749-5286-41f5-8d59-b3c1e9b8574c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "24862823-e186-4e91-90ff-d889ac21d5f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5499c76-2ce8-4d73-9ddb-4b960be9cdc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "77c34efd-3fb2-4e2d-9b08-9ccbe07614b0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22e98d70-2cf5-43f3-bd78-5de8c89aa706",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb74e353-4b3b-43ed-826d-32a0fbf70185"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1c881a0b-3c2a-4a55-ad7d-dc944ea7452a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f8920fda-4319-4b17-b511-c009c4f77bf0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f4703f2b-e177-46f5-811f-808b69df1c52",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope",
                "utils(pm).getAccessToken('prove:presentations');"
              ],
              "_lastExecutionId": "c2386834-6c09-42c4-b8c8-a77baed7157b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "62b4302e-a64c-4554-aaec-c99cfd3d887a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b6714866-9f99-41ca-ba6b-bd91f0ee231f"
            }
          }
        ]
      },
      {
        "id": "6270b755-a95e-4daf-969e-c5c8d8c9a79f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "46d064bf-a2eb-46f2-b26c-b8ef60949423",
            "name": "Negative Testing",
            "item": [
              {
                "id": "af4e0b6f-ce7e-48dd-a671-5b8931b37232",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bb924744-ed90-4819-a3f4-28124af57aba",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "795fd34d-e02f-444e-b356-52b72a8eae01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e74c90e-80cc-4cf6-9ec6-a03052952671"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e13a1833-6b51-4400-8453-9b81f804300f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "acab107e-e0ee-47d6-b2a0-074ee4fe66e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e4e133e-2db8-42dd-98ae-bcee4bbf65eb",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc46bd2-fd07-4249-9727-2dd700babbb5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "2cdd1dba-d337-45e5-b766-073142885851"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5804844d-0f2c-4778-96b0-4b51d25a7d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5b3c3c6a-4201-458e-92dc-c94ab8fc265c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "496fb57f-b27f-4aa3-b935-722db680892b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "08e05f42-2628-48b5-8724-b810897d7458"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f7e46a7d-e9d0-4ff2-9118-aa2cfdcf83d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29282502-29b0-47cc-b7d1-19f015bd6f92"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3efde209-e3a7-4dee-8d3a-45b098c2728d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope",
                "utils(pm).getAccessToken('verify:presentations');"
              ],
              "_lastExecutionId": "e83ac05e-d5dd-449a-a7d8-8a09301c0d99"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "edc1d471-c442-431d-b96b-9c6166b0a57f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1d581e0c-6c0a-4887-8900-6b0bdec8d8d4"
            }
          }
        ]
      },
      {
        "id": "7489b3e3-7a6e-4865-a3bd-75b412715167",
        "name": "Presentations - Notify",
        "item": [],
        "event": []
      },
      {
        "id": "88a15fd4-6d29-4bde-8111-06902ad21ace",
        "name": "Presentations - Submit",
        "item": [],
        "event": []
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 155,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1211,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 155,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 203,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 155,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 315,
        "pending": 0,
        "failed": 8
      },
      "testScripts": {
        "total": 611,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 600,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 169.39901477832504,
      "responseMin": 9,
      "responseMax": 2436,
      "responseSd": 340.0583887838683,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1664845319738,
      "completed": 1664845361855
    },
    "executions": [
      {
        "id": "ba682d6f-465a-422b-9f58-dc46fc55ca5a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 155,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f7930faa-895b-49e3-845a-6391c737d4d2",
          "httpRequestId": "5a739f1c-538a-4278-b77a-ed2fbfb49e89"
        },
        "item": {
          "id": "ba682d6f-465a-422b-9f58-dc46fc55ca5a",
          "name": "did_json"
        },
        "response": {
          "id": "46da6d9f-1563-446c-96c7-a47479f5ecd6",
          "status": "OK",
          "code": 200,
          "responseTime": 2436,
          "responseSize": 1369
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b9a2d7b-57c5-4210-a973-bc1d386bf44b",
        "cursor": {
          "ref": "38670951-bad5-4860-bc7a-d3b0b4f557cc",
          "length": 155,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "dc967f47-da71-4ff5-9a54-20461a2f187b"
        },
        "item": {
          "id": "1b9a2d7b-57c5-4210-a973-bc1d386bf44b",
          "name": "did:invalid"
        },
        "response": {
          "id": "3b94950d-75da-4857-9442-23209916d272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b9a2d7b-57c5-4210-a973-bc1d386bf44b",
        "cursor": {
          "ref": "38670951-bad5-4860-bc7a-d3b0b4f557cc",
          "length": 155,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "dc967f47-da71-4ff5-9a54-20461a2f187b"
        },
        "item": {
          "id": "1b9a2d7b-57c5-4210-a973-bc1d386bf44b",
          "name": "did:invalid"
        },
        "response": {
          "id": "3b94950d-75da-4857-9442-23209916d272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e89289b-ec2e-49d7-b258-7d9ddcf4e057",
        "cursor": {
          "ref": "1a1ea68c-d993-4f26-b723-418a72938762",
          "length": 155,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2637d26a-ee5d-44ad-bfa3-05d4af1478db"
        },
        "item": {
          "id": "5e89289b-ec2e-49d7-b258-7d9ddcf4e057",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "4f8a1d3b-d060-4bd1-97f4-d5050c60530e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 304,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa33e776-b151-4eeb-b553-9c4c7fece140",
        "cursor": {
          "ref": "77261418-7a8f-45d7-b9f2-db794f36d18c",
          "length": 155,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "30236aa9-9bf1-4d83-abc3-bf9be81a1ffc"
        },
        "item": {
          "id": "aa33e776-b151-4eeb-b553-9c4c7fece140",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "0ae1d58a-6b17-4114-8dfe-230823351167",
          "status": "Not Found",
          "code": 404,
          "responseTime": 12,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ef264f-5cee-43d7-adbe-efb2892aea08",
        "cursor": {
          "ref": "ad91004a-0cf9-4fe8-a0fb-9da4e7c6ac01",
          "length": 155,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "eaa7ba6c-4d42-4700-9a16-98074bbd877e"
        },
        "item": {
          "id": "59ef264f-5cee-43d7-adbe-efb2892aea08",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "7165ec29-7d78-4616-ad9c-c4c37cff5f87",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57cff255-0540-4fc4-a944-1db3654159b4",
        "cursor": {
          "ref": "890f5719-7273-45dc-8f68-f136f27b8941",
          "length": 155,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "de3844b7-075b-463f-bbd5-14d418adfbab"
        },
        "item": {
          "id": "57cff255-0540-4fc4-a944-1db3654159b4",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "d8c418f7-0386-4f3f-91a0-6fb7fabc5771",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 11,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57cff255-0540-4fc4-a944-1db3654159b4",
        "cursor": {
          "ref": "890f5719-7273-45dc-8f68-f136f27b8941",
          "length": 155,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "de3844b7-075b-463f-bbd5-14d418adfbab"
        },
        "item": {
          "id": "57cff255-0540-4fc4-a944-1db3654159b4",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "d8c418f7-0386-4f3f-91a0-6fb7fabc5771",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 11,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2127e5c9-4879-4d90-8c10-95879e3bc6a5",
        "cursor": {
          "ref": "3dad04fe-15a8-48cc-8fa6-9e2cc2284762",
          "length": 155,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "1037f4b9-99a8-4375-80f8-18f4fc5b92b2"
        },
        "item": {
          "id": "2127e5c9-4879-4d90-8c10-95879e3bc6a5",
          "name": "identifiers"
        },
        "response": {
          "id": "5f7bd25d-eb4c-4d6b-8382-7f61f6fa4e24",
          "status": "OK",
          "code": 200,
          "responseTime": 76,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7a3206-e5d4-44c6-8a7a-3556b565cea5",
        "cursor": {
          "ref": "66ef046a-927f-42bf-ae18-520e99ee3f33",
          "length": 155,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b5b951fd-9cd3-4949-9187-a90d83b9d194"
        },
        "item": {
          "id": "2c7a3206-e5d4-44c6-8a7a-3556b565cea5",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "6439d3f8-c6aa-4537-a819-b9e1428e0bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7a3206-e5d4-44c6-8a7a-3556b565cea5",
        "cursor": {
          "ref": "66ef046a-927f-42bf-ae18-520e99ee3f33",
          "length": 155,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b5b951fd-9cd3-4949-9187-a90d83b9d194"
        },
        "item": {
          "id": "2c7a3206-e5d4-44c6-8a7a-3556b565cea5",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "6439d3f8-c6aa-4537-a819-b9e1428e0bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7a3206-e5d4-44c6-8a7a-3556b565cea5",
        "cursor": {
          "ref": "66ef046a-927f-42bf-ae18-520e99ee3f33",
          "length": 155,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b5b951fd-9cd3-4949-9187-a90d83b9d194"
        },
        "item": {
          "id": "2c7a3206-e5d4-44c6-8a7a-3556b565cea5",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "6439d3f8-c6aa-4537-a819-b9e1428e0bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "525a3c57-f8c7-4c2e-bcc8-30e3a655d260",
        "cursor": {
          "ref": "cc031feb-78ef-4be1-9067-cf168c2ee704",
          "length": 155,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "e4c96046-1cf1-46b0-90e1-e92a3bebfa28"
        },
        "item": {
          "id": "525a3c57-f8c7-4c2e-bcc8-30e3a655d260",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "862ff41c-446b-454b-b666-385785af2c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "525a3c57-f8c7-4c2e-bcc8-30e3a655d260",
        "cursor": {
          "ref": "cc031feb-78ef-4be1-9067-cf168c2ee704",
          "length": 155,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "e4c96046-1cf1-46b0-90e1-e92a3bebfa28"
        },
        "item": {
          "id": "525a3c57-f8c7-4c2e-bcc8-30e3a655d260",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "862ff41c-446b-454b-b666-385785af2c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de420b4-57a4-485b-b528-d10cc061d7d7",
        "cursor": {
          "ref": "74677fb1-a31a-4cf5-8b62-16324f5e0586",
          "length": 155,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0d5999b7-bea9-4b6d-b38c-7cdfa9d6cd50"
        },
        "item": {
          "id": "1de420b4-57a4-485b-b528-d10cc061d7d7",
          "name": "credentials_issue:credential.@context:wrong_type"
        },
        "response": {
          "id": "00cc8d36-4944-4c4c-99d9-6c197c73696d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de420b4-57a4-485b-b528-d10cc061d7d7",
        "cursor": {
          "ref": "74677fb1-a31a-4cf5-8b62-16324f5e0586",
          "length": 155,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0d5999b7-bea9-4b6d-b38c-7cdfa9d6cd50"
        },
        "item": {
          "id": "1de420b4-57a4-485b-b528-d10cc061d7d7",
          "name": "credentials_issue:credential.@context:wrong_type"
        },
        "response": {
          "id": "00cc8d36-4944-4c4c-99d9-6c197c73696d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c1405c-a84b-405f-a1cf-e5fa3d33c4cf",
        "cursor": {
          "ref": "4065d1ce-b73f-4cde-8d29-8373ac2322f0",
          "length": 155,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "8eda499a-b1e0-48ee-bf91-1566ff90b97f"
        },
        "item": {
          "id": "a4c1405c-a84b-405f-a1cf-e5fa3d33c4cf",
          "name": "credentials_issue:credential.@context.members:wrong_type"
        },
        "response": {
          "id": "62df1563-85e8-4739-affc-c911bb17bdf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c1405c-a84b-405f-a1cf-e5fa3d33c4cf",
        "cursor": {
          "ref": "4065d1ce-b73f-4cde-8d29-8373ac2322f0",
          "length": 155,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "8eda499a-b1e0-48ee-bf91-1566ff90b97f"
        },
        "item": {
          "id": "a4c1405c-a84b-405f-a1cf-e5fa3d33c4cf",
          "name": "credentials_issue:credential.@context.members:wrong_type"
        },
        "response": {
          "id": "62df1563-85e8-4739-affc-c911bb17bdf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b48aee8d-1138-46c9-a90a-f09be91b7c38",
        "cursor": {
          "ref": "9bdcfcfd-ca81-4a75-9a1c-493628364e5a",
          "length": 155,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "0e7a693a-29ef-4a35-a168-c4fdb3b976cf"
        },
        "item": {
          "id": "b48aee8d-1138-46c9-a90a-f09be91b7c38",
          "name": "credentials_issue:credential.id:wrong_type"
        },
        "response": {
          "id": "0fa1f1fe-f59e-44eb-95bb-eabee0e1a07c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b48aee8d-1138-46c9-a90a-f09be91b7c38",
        "cursor": {
          "ref": "9bdcfcfd-ca81-4a75-9a1c-493628364e5a",
          "length": 155,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "0e7a693a-29ef-4a35-a168-c4fdb3b976cf"
        },
        "item": {
          "id": "b48aee8d-1138-46c9-a90a-f09be91b7c38",
          "name": "credentials_issue:credential.id:wrong_type"
        },
        "response": {
          "id": "0fa1f1fe-f59e-44eb-95bb-eabee0e1a07c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32085e9d-1545-4d3b-b91a-b8614a0e0fd2",
        "cursor": {
          "ref": "4d6c428a-1fc3-4eec-9d43-1ded6283d7ff",
          "length": 155,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e982db86-c569-4c42-9ca0-e264bd11a6a0"
        },
        "item": {
          "id": "32085e9d-1545-4d3b-b91a-b8614a0e0fd2",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "39a39f36-26a7-412c-8ca4-3f668d503973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32085e9d-1545-4d3b-b91a-b8614a0e0fd2",
        "cursor": {
          "ref": "4d6c428a-1fc3-4eec-9d43-1ded6283d7ff",
          "length": 155,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e982db86-c569-4c42-9ca0-e264bd11a6a0"
        },
        "item": {
          "id": "32085e9d-1545-4d3b-b91a-b8614a0e0fd2",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "39a39f36-26a7-412c-8ca4-3f668d503973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17410cbb-13e8-4fff-a1f7-5646058a08f6",
        "cursor": {
          "ref": "69a11c3a-df18-46ad-8ecd-048f94ca7e5e",
          "length": 155,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "de2bd8b0-b4c4-47f1-80c0-6b5bfb70184c"
        },
        "item": {
          "id": "17410cbb-13e8-4fff-a1f7-5646058a08f6",
          "name": "credentials_issue:credential.type:wrong_type"
        },
        "response": {
          "id": "9716e393-1b8e-405d-a2b7-c45939bce7a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17410cbb-13e8-4fff-a1f7-5646058a08f6",
        "cursor": {
          "ref": "69a11c3a-df18-46ad-8ecd-048f94ca7e5e",
          "length": 155,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "de2bd8b0-b4c4-47f1-80c0-6b5bfb70184c"
        },
        "item": {
          "id": "17410cbb-13e8-4fff-a1f7-5646058a08f6",
          "name": "credentials_issue:credential.type:wrong_type"
        },
        "response": {
          "id": "9716e393-1b8e-405d-a2b7-c45939bce7a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9345ed8-81a5-4103-bfdf-7439e84f32b9",
        "cursor": {
          "ref": "34027fd7-c80f-46e9-8c35-646f257e5909",
          "length": 155,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "79ab2fa3-9a32-48cc-950d-f5aaed1da56e"
        },
        "item": {
          "id": "d9345ed8-81a5-4103-bfdf-7439e84f32b9",
          "name": "credentials_issue:credential.type.members:wrong_type"
        },
        "response": {
          "id": "6d4f0f21-9ccb-4363-b064-7c367ad12ca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9345ed8-81a5-4103-bfdf-7439e84f32b9",
        "cursor": {
          "ref": "34027fd7-c80f-46e9-8c35-646f257e5909",
          "length": 155,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "79ab2fa3-9a32-48cc-950d-f5aaed1da56e"
        },
        "item": {
          "id": "d9345ed8-81a5-4103-bfdf-7439e84f32b9",
          "name": "credentials_issue:credential.type.members:wrong_type"
        },
        "response": {
          "id": "6d4f0f21-9ccb-4363-b064-7c367ad12ca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a555cbe2-e735-4103-9b88-ed8078b78ce6",
        "cursor": {
          "ref": "214b90c0-cd8e-4abe-96b4-7ea22e97398b",
          "length": 155,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "027b0a93-860e-4d0f-a0a9-6e7c420b6b2f"
        },
        "item": {
          "id": "a555cbe2-e735-4103-9b88-ed8078b78ce6",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "7c6223ee-83f5-4dd3-a18f-ef0e6c57d07c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a555cbe2-e735-4103-9b88-ed8078b78ce6",
        "cursor": {
          "ref": "214b90c0-cd8e-4abe-96b4-7ea22e97398b",
          "length": 155,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "027b0a93-860e-4d0f-a0a9-6e7c420b6b2f"
        },
        "item": {
          "id": "a555cbe2-e735-4103-9b88-ed8078b78ce6",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "7c6223ee-83f5-4dd3-a18f-ef0e6c57d07c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa1c8167-a63a-49e4-bb4b-faf3cd27e311",
        "cursor": {
          "ref": "1162d310-02e7-423f-8447-ae5d04c7ad74",
          "length": 155,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1412f7e0-f720-40bc-8f4b-925461674448"
        },
        "item": {
          "id": "aa1c8167-a63a-49e4-bb4b-faf3cd27e311",
          "name": "credentials_issue:credential.issuer:wrong_type"
        },
        "response": {
          "id": "a036643b-7ccf-4bda-bcd8-35849a23f177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa1c8167-a63a-49e4-bb4b-faf3cd27e311",
        "cursor": {
          "ref": "1162d310-02e7-423f-8447-ae5d04c7ad74",
          "length": 155,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1412f7e0-f720-40bc-8f4b-925461674448"
        },
        "item": {
          "id": "aa1c8167-a63a-49e4-bb4b-faf3cd27e311",
          "name": "credentials_issue:credential.issuer:wrong_type"
        },
        "response": {
          "id": "a036643b-7ccf-4bda-bcd8-35849a23f177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da301d3-1b3a-4b1c-ae56-98ab5583f931",
        "cursor": {
          "ref": "1a77cd17-e31e-4b61-b9e7-8fd106e17726",
          "length": 155,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "7aaa1243-3129-4dd9-8d80-0d945511ee75"
        },
        "item": {
          "id": "8da301d3-1b3a-4b1c-ae56-98ab5583f931",
          "name": "credentials_issue.credential.issuer:invalid_value"
        },
        "response": {
          "id": "c391e697-f631-4ac4-ac42-009274de1d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da301d3-1b3a-4b1c-ae56-98ab5583f931",
        "cursor": {
          "ref": "1a77cd17-e31e-4b61-b9e7-8fd106e17726",
          "length": 155,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "7aaa1243-3129-4dd9-8d80-0d945511ee75"
        },
        "item": {
          "id": "8da301d3-1b3a-4b1c-ae56-98ab5583f931",
          "name": "credentials_issue.credential.issuer:invalid_value"
        },
        "response": {
          "id": "c391e697-f631-4ac4-ac42-009274de1d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b9ea70-dc6e-4f16-9c6b-bb0e80079833",
        "cursor": {
          "ref": "a6a0bdee-4dea-42eb-846a-18c08391a2de",
          "length": 155,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c4e40598-39d9-4f74-b30e-d432dcbf434f"
        },
        "item": {
          "id": "b8b9ea70-dc6e-4f16-9c6b-bb0e80079833",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "9552f12f-57b4-450e-a115-ffbd80e554a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b9ea70-dc6e-4f16-9c6b-bb0e80079833",
        "cursor": {
          "ref": "a6a0bdee-4dea-42eb-846a-18c08391a2de",
          "length": 155,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c4e40598-39d9-4f74-b30e-d432dcbf434f"
        },
        "item": {
          "id": "b8b9ea70-dc6e-4f16-9c6b-bb0e80079833",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "9552f12f-57b4-450e-a115-ffbd80e554a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c8fac28-1e02-4ccf-97c7-f6cde60d2c44",
        "cursor": {
          "ref": "cbad546c-44dc-4c85-bfc8-bf4e5667f663",
          "length": 155,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b66eee52-8f3a-456d-b43f-7aaa4ffb1457"
        },
        "item": {
          "id": "7c8fac28-1e02-4ccf-97c7-f6cde60d2c44",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4b5929f6-6fb6-4923-8354-c91cdb6ef2d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c8fac28-1e02-4ccf-97c7-f6cde60d2c44",
        "cursor": {
          "ref": "cbad546c-44dc-4c85-bfc8-bf4e5667f663",
          "length": 155,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b66eee52-8f3a-456d-b43f-7aaa4ffb1457"
        },
        "item": {
          "id": "7c8fac28-1e02-4ccf-97c7-f6cde60d2c44",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4b5929f6-6fb6-4923-8354-c91cdb6ef2d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8544c476-4c41-4a60-9b33-d56c66b77c6d",
        "cursor": {
          "ref": "3e8cd7bb-0f1f-47a7-8858-ef1eddaff9f1",
          "length": 155,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1a083eb4-9358-4da5-aa4d-3daa7d490b90"
        },
        "item": {
          "id": "8544c476-4c41-4a60-9b33-d56c66b77c6d",
          "name": "credentials_issue:credential.issuer.id:wrong_type"
        },
        "response": {
          "id": "1e40d138-25d1-48f0-a50e-9dde4fd0e2cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8544c476-4c41-4a60-9b33-d56c66b77c6d",
        "cursor": {
          "ref": "3e8cd7bb-0f1f-47a7-8858-ef1eddaff9f1",
          "length": 155,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1a083eb4-9358-4da5-aa4d-3daa7d490b90"
        },
        "item": {
          "id": "8544c476-4c41-4a60-9b33-d56c66b77c6d",
          "name": "credentials_issue:credential.issuer.id:wrong_type"
        },
        "response": {
          "id": "1e40d138-25d1-48f0-a50e-9dde4fd0e2cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e0739ae-43ae-4d63-b02b-cf47b3159a3a",
        "cursor": {
          "ref": "ef954e5e-d487-440b-9f5c-0a06231bca4f",
          "length": 155,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "50fc375f-9158-46cf-9622-1aeb16ad3bde"
        },
        "item": {
          "id": "1e0739ae-43ae-4d63-b02b-cf47b3159a3a",
          "name": "credentials_issue.credential.issuer.id:invalid_value"
        },
        "response": {
          "id": "36b11d92-0058-4a28-9006-1d7079e87610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e0739ae-43ae-4d63-b02b-cf47b3159a3a",
        "cursor": {
          "ref": "ef954e5e-d487-440b-9f5c-0a06231bca4f",
          "length": 155,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "50fc375f-9158-46cf-9622-1aeb16ad3bde"
        },
        "item": {
          "id": "1e0739ae-43ae-4d63-b02b-cf47b3159a3a",
          "name": "credentials_issue.credential.issuer.id:invalid_value"
        },
        "response": {
          "id": "36b11d92-0058-4a28-9006-1d7079e87610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1381f941-5a5d-4f52-8d08-67dde0dff8f1",
        "cursor": {
          "ref": "d8d8517a-24ec-4191-8f33-bc351b6aad3a",
          "length": 155,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "6526351c-b966-4648-871f-be37475e1b7e"
        },
        "item": {
          "id": "1381f941-5a5d-4f52-8d08-67dde0dff8f1",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ee96ea85-711e-451d-b307-c54908babc3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 173,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1381f941-5a5d-4f52-8d08-67dde0dff8f1",
        "cursor": {
          "ref": "d8d8517a-24ec-4191-8f33-bc351b6aad3a",
          "length": 155,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "6526351c-b966-4648-871f-be37475e1b7e"
        },
        "item": {
          "id": "1381f941-5a5d-4f52-8d08-67dde0dff8f1",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ee96ea85-711e-451d-b307-c54908babc3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 173,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a64db07-44bf-4403-8440-af4c11c9ec4a",
        "cursor": {
          "ref": "81e958be-ef0c-4316-9b8e-d5e6b5023455",
          "length": 155,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "a3ee1275-34c2-48f2-806c-e637e28fe8a3"
        },
        "item": {
          "id": "3a64db07-44bf-4403-8440-af4c11c9ec4a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "03df3ad0-2d50-4ddc-8a40-95fa56dc2d52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a64db07-44bf-4403-8440-af4c11c9ec4a",
        "cursor": {
          "ref": "81e958be-ef0c-4316-9b8e-d5e6b5023455",
          "length": 155,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "a3ee1275-34c2-48f2-806c-e637e28fe8a3"
        },
        "item": {
          "id": "3a64db07-44bf-4403-8440-af4c11c9ec4a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "03df3ad0-2d50-4ddc-8a40-95fa56dc2d52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f461ff-17f1-4028-be77-b9f7b23ac817",
        "cursor": {
          "ref": "99e7cc0c-ebb8-4757-9e0d-f2b8950ea3ca",
          "length": 155,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "6465d691-2822-4495-80f3-212763bbcd70"
        },
        "item": {
          "id": "e0f461ff-17f1-4028-be77-b9f7b23ac817",
          "name": "credentials_issue:credential.issuanceDate:wrong_type"
        },
        "response": {
          "id": "e3295bb8-4bff-457d-87c6-f96ce5c8a851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f461ff-17f1-4028-be77-b9f7b23ac817",
        "cursor": {
          "ref": "99e7cc0c-ebb8-4757-9e0d-f2b8950ea3ca",
          "length": 155,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "6465d691-2822-4495-80f3-212763bbcd70"
        },
        "item": {
          "id": "e0f461ff-17f1-4028-be77-b9f7b23ac817",
          "name": "credentials_issue:credential.issuanceDate:wrong_type"
        },
        "response": {
          "id": "e3295bb8-4bff-457d-87c6-f96ce5c8a851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aef3c19-f137-4be0-874c-a6537ec1d4c8",
        "cursor": {
          "ref": "789b0f31-fbaa-4ac2-ae03-8c4819b801a7",
          "length": 155,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "fac7409a-a007-472b-9b01-48e37fa4522c"
        },
        "item": {
          "id": "0aef3c19-f137-4be0-874c-a6537ec1d4c8",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b017f9a9-5024-4205-b91c-67cc0a43305c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aef3c19-f137-4be0-874c-a6537ec1d4c8",
        "cursor": {
          "ref": "789b0f31-fbaa-4ac2-ae03-8c4819b801a7",
          "length": 155,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "fac7409a-a007-472b-9b01-48e37fa4522c"
        },
        "item": {
          "id": "0aef3c19-f137-4be0-874c-a6537ec1d4c8",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b017f9a9-5024-4205-b91c-67cc0a43305c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a195864-a0d5-42a4-b663-203d073e2a70",
        "cursor": {
          "ref": "79606e52-5779-46ce-8a4b-5aea44359a2e",
          "length": 155,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "62610425-952f-4b68-9afd-f0e4047d8a7d"
        },
        "item": {
          "id": "7a195864-a0d5-42a4-b663-203d073e2a70",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "0343e518-bc8c-42ad-a4b3-e2dcf541e7ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a195864-a0d5-42a4-b663-203d073e2a70",
        "cursor": {
          "ref": "79606e52-5779-46ce-8a4b-5aea44359a2e",
          "length": 155,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "62610425-952f-4b68-9afd-f0e4047d8a7d"
        },
        "item": {
          "id": "7a195864-a0d5-42a4-b663-203d073e2a70",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "0343e518-bc8c-42ad-a4b3-e2dcf541e7ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90737e21-be58-4e16-bb42-371de5ba00e8",
        "cursor": {
          "ref": "1e3c881b-0b82-4a20-a6b3-855d47168661",
          "length": 155,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8a449ca1-b361-4245-8d18-8e17e0585b45"
        },
        "item": {
          "id": "90737e21-be58-4e16-bb42-371de5ba00e8",
          "name": "credentials_issue:credential.credentialSubject:wrong_type"
        },
        "response": {
          "id": "054efa56-b5e7-4349-9f67-fcb7f43bca61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90737e21-be58-4e16-bb42-371de5ba00e8",
        "cursor": {
          "ref": "1e3c881b-0b82-4a20-a6b3-855d47168661",
          "length": 155,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8a449ca1-b361-4245-8d18-8e17e0585b45"
        },
        "item": {
          "id": "90737e21-be58-4e16-bb42-371de5ba00e8",
          "name": "credentials_issue:credential.credentialSubject:wrong_type"
        },
        "response": {
          "id": "054efa56-b5e7-4349-9f67-fcb7f43bca61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df931e18-f10c-4870-bb59-9bf59b1b8f18",
        "cursor": {
          "ref": "a643c709-3800-4dfb-9835-ef6535544a31",
          "length": 155,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "57a879d4-0c96-4739-8c21-bd5474ad64c0"
        },
        "item": {
          "id": "df931e18-f10c-4870-bb59-9bf59b1b8f18",
          "name": "credentials_issue:credential.credentialSubject.id:wrong_type"
        },
        "response": {
          "id": "33fd4ca4-ea34-4eea-83c0-4cd372a81e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df931e18-f10c-4870-bb59-9bf59b1b8f18",
        "cursor": {
          "ref": "a643c709-3800-4dfb-9835-ef6535544a31",
          "length": 155,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "57a879d4-0c96-4739-8c21-bd5474ad64c0"
        },
        "item": {
          "id": "df931e18-f10c-4870-bb59-9bf59b1b8f18",
          "name": "credentials_issue:credential.credentialSubject.id:wrong_type"
        },
        "response": {
          "id": "33fd4ca4-ea34-4eea-83c0-4cd372a81e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "561e2e84-2f9d-466f-84b8-48c9ca783497",
        "cursor": {
          "ref": "129c2e5f-fae1-49ad-91ab-d197ac212067",
          "length": 155,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5f17587d-2a78-4b2b-b631-fbbfd67d3ca0"
        },
        "item": {
          "id": "561e2e84-2f9d-466f-84b8-48c9ca783497",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f1fab6d9-3219-4e11-a477-7136ea65698b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "561e2e84-2f9d-466f-84b8-48c9ca783497",
        "cursor": {
          "ref": "129c2e5f-fae1-49ad-91ab-d197ac212067",
          "length": 155,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5f17587d-2a78-4b2b-b631-fbbfd67d3ca0"
        },
        "item": {
          "id": "561e2e84-2f9d-466f-84b8-48c9ca783497",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f1fab6d9-3219-4e11-a477-7136ea65698b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b01c632-a7d6-4085-8768-0a2bb5abee5c",
        "cursor": {
          "ref": "0e6289ca-cc97-4cca-9166-e6e0d0d853ed",
          "length": 155,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "5321234e-b69b-4bf6-9004-0850c0daf08c"
        },
        "item": {
          "id": "1b01c632-a7d6-4085-8768-0a2bb5abee5c",
          "name": "credentials_issue:options:wrong_type"
        },
        "response": {
          "id": "d089aae1-dff0-4fe2-a984-e480d7b45d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b01c632-a7d6-4085-8768-0a2bb5abee5c",
        "cursor": {
          "ref": "0e6289ca-cc97-4cca-9166-e6e0d0d853ed",
          "length": 155,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "5321234e-b69b-4bf6-9004-0850c0daf08c"
        },
        "item": {
          "id": "1b01c632-a7d6-4085-8768-0a2bb5abee5c",
          "name": "credentials_issue:options:wrong_type"
        },
        "response": {
          "id": "d089aae1-dff0-4fe2-a984-e480d7b45d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf25fd64-6abd-48a6-98a1-a9f6c3446067",
        "cursor": {
          "ref": "46b1b894-d079-48b9-9ed1-33bfd6b7db2d",
          "length": 155,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "72ba140d-538a-4c9e-ae31-311e5ec218a2"
        },
        "item": {
          "id": "bf25fd64-6abd-48a6-98a1-a9f6c3446067",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "65ff2cbe-4682-41d7-a15e-790c38c7121b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf25fd64-6abd-48a6-98a1-a9f6c3446067",
        "cursor": {
          "ref": "46b1b894-d079-48b9-9ed1-33bfd6b7db2d",
          "length": 155,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "72ba140d-538a-4c9e-ae31-311e5ec218a2"
        },
        "item": {
          "id": "bf25fd64-6abd-48a6-98a1-a9f6c3446067",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "65ff2cbe-4682-41d7-a15e-790c38c7121b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f5cb1ad-c920-4648-9dc3-a95e40721286",
        "cursor": {
          "ref": "d8c6b0ad-880c-4791-83a9-12c01c23a7cf",
          "length": 155,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "094a6af9-adbc-4eac-a4f7-fdc699e418f8"
        },
        "item": {
          "id": "1f5cb1ad-c920-4648-9dc3-a95e40721286",
          "name": "credentials_issue:options.type:wrong_type"
        },
        "response": {
          "id": "29410833-50e1-43ec-bbd6-ddea5c545cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 120,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f5cb1ad-c920-4648-9dc3-a95e40721286",
        "cursor": {
          "ref": "d8c6b0ad-880c-4791-83a9-12c01c23a7cf",
          "length": 155,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "094a6af9-adbc-4eac-a4f7-fdc699e418f8"
        },
        "item": {
          "id": "1f5cb1ad-c920-4648-9dc3-a95e40721286",
          "name": "credentials_issue:options.type:wrong_type"
        },
        "response": {
          "id": "29410833-50e1-43ec-bbd6-ddea5c545cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 120,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d687d397-752d-4234-9957-d50dcd2e206b",
        "cursor": {
          "ref": "14298901-8818-4267-8cef-4d7b35b974df",
          "length": 155,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "3b3826ac-a973-49d5-989e-8496075a1974"
        },
        "item": {
          "id": "d687d397-752d-4234-9957-d50dcd2e206b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "226249e8-8fd2-4a95-8a97-62e6992cfb08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d687d397-752d-4234-9957-d50dcd2e206b",
        "cursor": {
          "ref": "14298901-8818-4267-8cef-4d7b35b974df",
          "length": 155,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "3b3826ac-a973-49d5-989e-8496075a1974"
        },
        "item": {
          "id": "d687d397-752d-4234-9957-d50dcd2e206b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "226249e8-8fd2-4a95-8a97-62e6992cfb08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c9a10e-fbbd-4ab3-9423-9eea2d65937d",
        "cursor": {
          "ref": "77e8ecc8-b2c5-4e03-9675-dd3c4bdf5a85",
          "length": 155,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a92c4221-2bac-451e-9d2b-dd553e2c42a7"
        },
        "item": {
          "id": "a4c9a10e-fbbd-4ab3-9423-9eea2d65937d",
          "name": "credentials_issue:options.created:wrong_type"
        },
        "response": {
          "id": "0720e5a6-949a-4f09-8140-189d30eeb5eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 347
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c9a10e-fbbd-4ab3-9423-9eea2d65937d",
        "cursor": {
          "ref": "77e8ecc8-b2c5-4e03-9675-dd3c4bdf5a85",
          "length": 155,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a92c4221-2bac-451e-9d2b-dd553e2c42a7"
        },
        "item": {
          "id": "a4c9a10e-fbbd-4ab3-9423-9eea2d65937d",
          "name": "credentials_issue:options.created:wrong_type"
        },
        "response": {
          "id": "0720e5a6-949a-4f09-8140-189d30eeb5eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 347
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a9ee24-4209-4fa1-868d-9d79e409a0f3",
        "cursor": {
          "ref": "14992d57-06f7-4ccd-8d07-4ea649a65086",
          "length": 155,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d09235ea-bbd8-473c-ab38-3a4e4c521b2a"
        },
        "item": {
          "id": "35a9ee24-4209-4fa1-868d-9d79e409a0f3",
          "name": "credentials_issue:options.credentialStatus:wrong_type"
        },
        "response": {
          "id": "f32eae83-255a-4aa2-9520-ec8bee1dd946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a9ee24-4209-4fa1-868d-9d79e409a0f3",
        "cursor": {
          "ref": "14992d57-06f7-4ccd-8d07-4ea649a65086",
          "length": 155,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d09235ea-bbd8-473c-ab38-3a4e4c521b2a"
        },
        "item": {
          "id": "35a9ee24-4209-4fa1-868d-9d79e409a0f3",
          "name": "credentials_issue:options.credentialStatus:wrong_type"
        },
        "response": {
          "id": "f32eae83-255a-4aa2-9520-ec8bee1dd946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d41a0d09-0923-4255-ad58-ab9128488789",
        "cursor": {
          "ref": "3795cd7a-ce70-4610-aa96-d0537c7ffbf3",
          "length": 155,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "656883d5-6a1d-4c74-8968-c4e11d6c74e8"
        },
        "item": {
          "id": "d41a0d09-0923-4255-ad58-ab9128488789",
          "name": "credentials_issue:options.credentialStatus.type:wrong_type"
        },
        "response": {
          "id": "24d850c7-86e1-4fe5-9ef3-bcacd2e2854b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d41a0d09-0923-4255-ad58-ab9128488789",
        "cursor": {
          "ref": "3795cd7a-ce70-4610-aa96-d0537c7ffbf3",
          "length": 155,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "656883d5-6a1d-4c74-8968-c4e11d6c74e8"
        },
        "item": {
          "id": "d41a0d09-0923-4255-ad58-ab9128488789",
          "name": "credentials_issue:options.credentialStatus.type:wrong_type"
        },
        "response": {
          "id": "24d850c7-86e1-4fe5-9ef3-bcacd2e2854b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73cbf063-1d89-475e-a9e4-60f31fbcb2b8",
        "cursor": {
          "ref": "2fc57763-d7a0-4ebd-83e6-79e5aa85913f",
          "length": 155,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6cad709a-3a12-4534-a550-1b517fba80af"
        },
        "item": {
          "id": "73cbf063-1d89-475e-a9e4-60f31fbcb2b8",
          "name": "credentials_issue:options.credentialStatus.type:invalid_value"
        },
        "response": {
          "id": "3a85fd1e-c21c-4418-aef1-eb8d3c896ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73cbf063-1d89-475e-a9e4-60f31fbcb2b8",
        "cursor": {
          "ref": "2fc57763-d7a0-4ebd-83e6-79e5aa85913f",
          "length": 155,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6cad709a-3a12-4534-a550-1b517fba80af"
        },
        "item": {
          "id": "73cbf063-1d89-475e-a9e4-60f31fbcb2b8",
          "name": "credentials_issue:options.credentialStatus.type:invalid_value"
        },
        "response": {
          "id": "3a85fd1e-c21c-4418-aef1-eb8d3c896ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a16983-ea18-4cb4-aca1-2006ab99aff4",
        "cursor": {
          "ref": "8ef50623-676a-4a6e-8a38-b1f659dfc51c",
          "length": 155,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5c2a9318-ee08-4817-a7c4-3ea5249e99db"
        },
        "item": {
          "id": "36a16983-ea18-4cb4-aca1-2006ab99aff4",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a9ce1168-2b1c-44a8-8630-fa129bc9eee6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a16983-ea18-4cb4-aca1-2006ab99aff4",
        "cursor": {
          "ref": "8ef50623-676a-4a6e-8a38-b1f659dfc51c",
          "length": 155,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5c2a9318-ee08-4817-a7c4-3ea5249e99db"
        },
        "item": {
          "id": "36a16983-ea18-4cb4-aca1-2006ab99aff4",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a9ce1168-2b1c-44a8-8630-fa129bc9eee6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4512303f-6c3b-4a65-980a-20be9db9a25a",
        "cursor": {
          "ref": "0607fa27-24b1-46f2-9463-890e5fe63c62",
          "length": 155,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "ad1b2fc9-7828-4194-bf01-740cfab72a58"
        },
        "item": {
          "id": "4512303f-6c3b-4a65-980a-20be9db9a25a",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "afade54b-2750-4a39-90c3-8a4f2b9330f1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 43,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4512303f-6c3b-4a65-980a-20be9db9a25a",
        "cursor": {
          "ref": "0607fa27-24b1-46f2-9463-890e5fe63c62",
          "length": 155,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "ad1b2fc9-7828-4194-bf01-740cfab72a58"
        },
        "item": {
          "id": "4512303f-6c3b-4a65-980a-20be9db9a25a",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "afade54b-2750-4a39-90c3-8a4f2b9330f1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 43,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e10b680f-03f1-4411-84a3-1c2ed55c76eb",
        "cursor": {
          "ref": "92f830f9-e7d5-4259-a4f9-408e38cdeb24",
          "length": 155,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b02c6687-e4a4-40d0-a3ac-ac308c232d65"
        },
        "item": {
          "id": "e10b680f-03f1-4411-84a3-1c2ed55c76eb",
          "name": "credentials_issue"
        },
        "response": {
          "id": "033ca181-a02a-4cc6-84ba-a4d6382a9de9",
          "status": "Created",
          "code": 201,
          "responseTime": 1365,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          }
        ]
      },
      {
        "id": "e10b680f-03f1-4411-84a3-1c2ed55c76eb",
        "cursor": {
          "ref": "92f830f9-e7d5-4259-a4f9-408e38cdeb24",
          "length": 155,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b02c6687-e4a4-40d0-a3ac-ac308c232d65"
        },
        "item": {
          "id": "e10b680f-03f1-4411-84a3-1c2ed55c76eb",
          "name": "credentials_issue"
        },
        "response": {
          "id": "033ca181-a02a-4cc6-84ba-a4d6382a9de9",
          "status": "Created",
          "code": 201,
          "responseTime": 1365,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2f510d-4717-435c-94ab-8d5e23c2d6ed",
        "cursor": {
          "ref": "34895b11-2692-4475-8827-048a2e2632f2",
          "length": 155,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a835619b-b4cd-42ba-b1ec-cbca1b22e2d1"
        },
        "item": {
          "id": "4a2f510d-4717-435c-94ab-8d5e23c2d6ed",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "32bdce5f-457e-40d2-acb3-2f02c0baa3f4",
          "status": "Created",
          "code": 201,
          "responseTime": 684,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2f510d-4717-435c-94ab-8d5e23c2d6ed",
        "cursor": {
          "ref": "34895b11-2692-4475-8827-048a2e2632f2",
          "length": 155,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a835619b-b4cd-42ba-b1ec-cbca1b22e2d1"
        },
        "item": {
          "id": "4a2f510d-4717-435c-94ab-8d5e23c2d6ed",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "32bdce5f-457e-40d2-acb3-2f02c0baa3f4",
          "status": "Created",
          "code": 201,
          "responseTime": 684,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa05e1a-39ee-4bbf-b3c8-cb9de25386d7",
        "cursor": {
          "ref": "0281d783-993b-43c1-aa42-025f099a46cc",
          "length": 155,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "53dadee1-ff5b-465b-8f1f-55528b6c2755"
        },
        "item": {
          "id": "daa05e1a-39ee-4bbf-b3c8-cb9de25386d7",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "1a2ce700-6b3b-4346-bb5e-acfb1c0d9eb9",
          "status": "Created",
          "code": 201,
          "responseTime": 965,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa05e1a-39ee-4bbf-b3c8-cb9de25386d7",
        "cursor": {
          "ref": "0281d783-993b-43c1-aa42-025f099a46cc",
          "length": 155,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "53dadee1-ff5b-465b-8f1f-55528b6c2755"
        },
        "item": {
          "id": "daa05e1a-39ee-4bbf-b3c8-cb9de25386d7",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "1a2ce700-6b3b-4346-bb5e-acfb1c0d9eb9",
          "status": "Created",
          "code": 201,
          "responseTime": 965,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bebdcf2-caf1-41d9-b5d8-d2b5600be520",
        "cursor": {
          "ref": "e3e0757b-9496-478f-af21-dcc05e404400",
          "length": 155,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "9627585e-807b-4354-84a4-499d855d91d9"
        },
        "item": {
          "id": "6bebdcf2-caf1-41d9-b5d8-d2b5600be520",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9b0f5394-ca8f-43c9-ac9f-16395a453ddc",
          "status": "Created",
          "code": 201,
          "responseTime": 703,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bebdcf2-caf1-41d9-b5d8-d2b5600be520",
        "cursor": {
          "ref": "e3e0757b-9496-478f-af21-dcc05e404400",
          "length": 155,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "9627585e-807b-4354-84a4-499d855d91d9"
        },
        "item": {
          "id": "6bebdcf2-caf1-41d9-b5d8-d2b5600be520",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9b0f5394-ca8f-43c9-ac9f-16395a453ddc",
          "status": "Created",
          "code": 201,
          "responseTime": 703,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "023f12e7-cd26-4dae-95c7-2adf74f83ba3",
        "cursor": {
          "ref": "d27b833d-d4df-4224-a114-009f8888313b",
          "length": 155,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "1c98fbae-5a77-4f34-b30c-b044d31b7407"
        },
        "item": {
          "id": "023f12e7-cd26-4dae-95c7-2adf74f83ba3",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b0aa7650-e42b-4ab2-acc4-67f578aec76f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 345
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:45)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:45)"
            }
          }
        ]
      },
      {
        "id": "023f12e7-cd26-4dae-95c7-2adf74f83ba3",
        "cursor": {
          "ref": "d27b833d-d4df-4224-a114-009f8888313b",
          "length": 155,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "1c98fbae-5a77-4f34-b30c-b044d31b7407"
        },
        "item": {
          "id": "023f12e7-cd26-4dae-95c7-2adf74f83ba3",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b0aa7650-e42b-4ab2-acc4-67f578aec76f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 345
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:45)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:45)"
            }
          }
        ]
      },
      {
        "id": "b693fa24-15b2-494a-b470-1220cb95a6be",
        "cursor": {
          "ref": "03a1a1c7-f397-4bbc-8b57-c0bfbfa481be",
          "length": 155,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "96c73b36-eef7-4c5b-85da-a4de04ff1361"
        },
        "item": {
          "id": "b693fa24-15b2-494a-b470-1220cb95a6be",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "5cfcbc6d-b66d-4fcb-882a-ab0d07180f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:46)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:46)"
            }
          }
        ]
      },
      {
        "id": "b693fa24-15b2-494a-b470-1220cb95a6be",
        "cursor": {
          "ref": "03a1a1c7-f397-4bbc-8b57-c0bfbfa481be",
          "length": 155,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "96c73b36-eef7-4c5b-85da-a4de04ff1361"
        },
        "item": {
          "id": "b693fa24-15b2-494a-b470-1220cb95a6be",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "5cfcbc6d-b66d-4fcb-882a-ab0d07180f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:46)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:46)"
            }
          }
        ]
      },
      {
        "id": "f9500151-0762-4694-add6-1bbb63bfa922",
        "cursor": {
          "ref": "68c94496-81b4-4e93-855f-a57e24acb6b1",
          "length": 155,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "dc24f099-9f2a-4fe3-b3c9-4bd7899110c5"
        },
        "item": {
          "id": "f9500151-0762-4694-add6-1bbb63bfa922",
          "name": "credentials_issue:options:opt.credentialStatus.type"
        },
        "response": {
          "id": "e63fbdb1-467b-4bae-b463-45fd4584a2d8",
          "status": "Created",
          "code": 201,
          "responseTime": 439,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9500151-0762-4694-add6-1bbb63bfa922",
        "cursor": {
          "ref": "68c94496-81b4-4e93-855f-a57e24acb6b1",
          "length": 155,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "dc24f099-9f2a-4fe3-b3c9-4bd7899110c5"
        },
        "item": {
          "id": "f9500151-0762-4694-add6-1bbb63bfa922",
          "name": "credentials_issue:options:opt.credentialStatus.type"
        },
        "response": {
          "id": "e63fbdb1-467b-4bae-b463-45fd4584a2d8",
          "status": "Created",
          "code": 201,
          "responseTime": 439,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35001096-1505-47b5-b005-036989d521e8",
        "cursor": {
          "ref": "31a1e39d-d36f-4d03-a914-bf058ac2bf71",
          "length": 155,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "96e52d9d-5c55-4ec9-825d-fa63f1b1b337"
        },
        "item": {
          "id": "35001096-1505-47b5-b005-036989d521e8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1c698594-108b-4146-a274-fdb6d6be3986",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35001096-1505-47b5-b005-036989d521e8",
        "cursor": {
          "ref": "31a1e39d-d36f-4d03-a914-bf058ac2bf71",
          "length": 155,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "96e52d9d-5c55-4ec9-825d-fa63f1b1b337"
        },
        "item": {
          "id": "35001096-1505-47b5-b005-036989d521e8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1c698594-108b-4146-a274-fdb6d6be3986",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1f2418e-b857-4e4f-a2ed-7d44bb088f2e",
        "cursor": {
          "ref": "797f82ad-bbcc-49a1-95ea-ba32e4640dcc",
          "length": 155,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d056425b-2ce2-4e41-bea3-269a43b0fb15"
        },
        "item": {
          "id": "e1f2418e-b857-4e4f-a2ed-7d44bb088f2e",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "e20bdeba-d336-4074-bcb2-12803ca39d8c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6666b5b7-79bc-4e16-9c0d-786a0d79fea6",
        "cursor": {
          "ref": "92c30d16-3ae9-4f4f-946e-e3d6c4767991",
          "length": 155,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ef6709a1-1a76-45c6-832a-ce9ea36ce9bd"
        },
        "item": {
          "id": "6666b5b7-79bc-4e16-9c0d-786a0d79fea6",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b297a5b3-29e9-4b8f-8d28-873c773b21bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6666b5b7-79bc-4e16-9c0d-786a0d79fea6",
        "cursor": {
          "ref": "92c30d16-3ae9-4f4f-946e-e3d6c4767991",
          "length": 155,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ef6709a1-1a76-45c6-832a-ce9ea36ce9bd"
        },
        "item": {
          "id": "6666b5b7-79bc-4e16-9c0d-786a0d79fea6",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b297a5b3-29e9-4b8f-8d28-873c773b21bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675fb8d5-dc2f-48e4-998c-ff5f69061a31",
        "cursor": {
          "ref": "a5cfa72a-ae3d-4e0d-a24e-5ea966bd9646",
          "length": 155,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a8e43c25-3952-495f-b996-bff4059da17a"
        },
        "item": {
          "id": "675fb8d5-dc2f-48e4-998c-ff5f69061a31",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a2f454ea-e94a-4143-8ce8-3e8371aedba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ba4cf5-770b-4909-92fb-5ad183d503e2",
        "cursor": {
          "ref": "0fae432a-d062-46db-bb75-3268e2d3595e",
          "length": 155,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e5fc5cc7-eabf-4a39-89e4-77421c505780"
        },
        "item": {
          "id": "79ba4cf5-770b-4909-92fb-5ad183d503e2",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "cdad6979-bca1-41dd-82f6-b557816b4aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d92b2b-2d76-4a9f-8e29-aac0fd3392e7",
        "cursor": {
          "ref": "ad484d9b-fafc-4a27-9f69-4e4bc9f607a9",
          "length": 155,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "9afcbd88-d6b4-4ecb-8f25-4fa417178d2e"
        },
        "item": {
          "id": "c0d92b2b-2d76-4a9f-8e29-aac0fd3392e7",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "9dd5aff2-6529-4e54-b29a-a2faece75368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6c9fb7e-e8bd-47ba-b520-0cb628ca7af6",
        "cursor": {
          "ref": "5e77fa9e-2aad-4acb-b02c-06c6ae52cdc7",
          "length": 155,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "cf82101f-983d-4e7b-8f0d-9d16770f35fb"
        },
        "item": {
          "id": "b6c9fb7e-e8bd-47ba-b520-0cb628ca7af6",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "145a91bb-8a2b-4a6e-ae93-1003e48a32de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5264af46-fe85-4c3d-9e05-f5fd09115fa9",
        "cursor": {
          "ref": "6125f90e-ed7c-49f9-bacf-875938ac6f99",
          "length": 155,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "1cbe9226-58f3-4d7e-9823-4f5d989751c9"
        },
        "item": {
          "id": "5264af46-fe85-4c3d-9e05-f5fd09115fa9",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "6e8912bc-42c5-4619-b078-4c285016233c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "769e643a-4805-4594-814e-65d4521cb142",
        "cursor": {
          "ref": "4da0f324-6532-4020-9552-2814e4d45b2b",
          "length": 155,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "00c1d212-b145-4294-96ca-ac63b7e20008"
        },
        "item": {
          "id": "769e643a-4805-4594-814e-65d4521cb142",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "368e6ec9-10d3-41ea-bd38-2887ce9e44b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4a4a57e-9aee-4686-bfe2-df9adddaa913",
        "cursor": {
          "ref": "fc674e9a-d95f-4bbb-8467-5b115182fc64",
          "length": 155,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a74430e2-0a2f-4f9b-af22-7ee057b96e71"
        },
        "item": {
          "id": "e4a4a57e-9aee-4686-bfe2-df9adddaa913",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d8b935e3-153a-469f-8664-c15df20671ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3b7758a-0cb5-4a8b-b81b-0da8326e545f",
        "cursor": {
          "ref": "b1fd1bb5-cb33-4275-8bbc-0e853484dcc2",
          "length": 155,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "7438ea65-9a93-4f51-a922-7acc19beebf1"
        },
        "item": {
          "id": "a3b7758a-0cb5-4a8b-b81b-0da8326e545f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "0a0d1237-2393-428a-8e70-5a4fe303695c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48942a36-8088-4475-88eb-b399144da96a",
        "cursor": {
          "ref": "05317c90-2dae-485a-ae3c-774e65824663",
          "length": 155,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "fba24e3e-fd6e-4ecf-bc55-ab32f9e692d9"
        },
        "item": {
          "id": "48942a36-8088-4475-88eb-b399144da96a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e1152a66-1d52-4a97-a2fa-6de1dd550331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf67a0f-dc19-4a41-b947-a9ad7cc33d4a",
        "cursor": {
          "ref": "4eff9622-da8e-40e1-a138-7570ab537b47",
          "length": 155,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "247edab6-96a1-4436-8a71-760fdddae705"
        },
        "item": {
          "id": "edf67a0f-dc19-4a41-b947-a9ad7cc33d4a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "37173198-45af-4c54-ab6e-3b5e43582748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7562a1a-8ec6-47d9-9ff1-d743c8b58ef8",
        "cursor": {
          "ref": "f06a3697-3afb-461f-9832-2ce769e6d341",
          "length": 155,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "8873b625-f782-4c7c-a7fa-439aad813bdf"
        },
        "item": {
          "id": "f7562a1a-8ec6-47d9-9ff1-d743c8b58ef8",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "15716ade-167d-464a-80c1-f19fc09e68a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "399808c3-8567-479a-8b11-a0016e487848",
        "cursor": {
          "ref": "85fb931e-f232-4621-8913-2551ef75b246",
          "length": 155,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b9bb05a3-b349-4efb-9b6e-7f7f0938075b"
        },
        "item": {
          "id": "399808c3-8567-479a-8b11-a0016e487848",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c62fc68d-d366-4fbf-954d-f9981e8892b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e912137e-35be-4b96-9411-fc5c0de2ac9c",
        "cursor": {
          "ref": "affbc3b8-317e-4a8a-81c3-7ef0cc92d35b",
          "length": 155,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "da6c13a1-9296-4656-b38c-249b94321deb"
        },
        "item": {
          "id": "e912137e-35be-4b96-9411-fc5c0de2ac9c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a2e9477e-f0fd-46a4-9c98-94342dfd56ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc362249-fe2c-4cf8-bd28-53c090bbca64",
        "cursor": {
          "ref": "fae59561-3db2-4453-a98f-1edf7e269270",
          "length": 155,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "864a7057-e378-48cf-81aa-0cac43895155"
        },
        "item": {
          "id": "bc362249-fe2c-4cf8-bd28-53c090bbca64",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "391ea42c-20c7-414a-bbab-ab3ee4127120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf0667a9-6968-418a-814b-290352bb9ae6",
        "cursor": {
          "ref": "13964a32-7779-4971-9e09-a5ed231e71f6",
          "length": 155,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e5509b65-dfdd-408f-b97b-2ee3bfd7a7e2"
        },
        "item": {
          "id": "bf0667a9-6968-418a-814b-290352bb9ae6",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "57850154-6251-4fa5-ad6d-d9fe92da8623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e66b5a0-8d89-479d-a8f2-d8661c2ddad4",
        "cursor": {
          "ref": "fbbd3f08-ae38-4ffd-8223-28fc5bc886f7",
          "length": 155,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c8b7604b-f899-4426-b85e-7f577dbfc055"
        },
        "item": {
          "id": "6e66b5a0-8d89-479d-a8f2-d8661c2ddad4",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "fccba94d-0a34-4495-99c7-61562835ac4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a725dd77-97b6-4fe8-8cba-50d2942b48a6",
        "cursor": {
          "ref": "465ff4ff-3c0c-4d17-b362-0e7cc05ca91a",
          "length": 155,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "6ac00ba2-c55a-47b0-aacc-5c3b1261187e"
        },
        "item": {
          "id": "a725dd77-97b6-4fe8-8cba-50d2942b48a6",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "8cf8b59e-423e-4eec-a8d7-0530311cb39f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a1326c-1445-4160-b26d-9e35d11d154f",
        "cursor": {
          "ref": "37ef4198-26d2-41fd-a32a-c6d2682763f1",
          "length": 155,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "a1224da7-591a-4206-ab75-f1c1cc03ca0f"
        },
        "item": {
          "id": "42a1326c-1445-4160-b26d-9e35d11d154f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e51b45af-99f5-4286-97ea-e51fcdedb351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e7585b2-fc8f-4e29-9594-4f8bd3d569da",
        "cursor": {
          "ref": "a06895dd-c11c-425b-9f15-e8b4dc8f42e1",
          "length": 155,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "23d19c43-7233-4a16-9119-5d42b36486f0"
        },
        "item": {
          "id": "5e7585b2-fc8f-4e29-9594-4f8bd3d569da",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "bfbbac6f-be2a-410f-b87e-0ff8a281952c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 216,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44716f2b-02e1-4fbb-ab3d-9b8d71541fe3",
        "cursor": {
          "ref": "bb4ec65b-9fb4-42ac-9efc-e7e7c9591856",
          "length": 155,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "9343e4db-c939-4e67-bc2d-2321f096b11c"
        },
        "item": {
          "id": "44716f2b-02e1-4fbb-ab3d-9b8d71541fe3",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "bd141a98-eaed-4bfb-b285-9c6ac1d68143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 215,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb79d8b-f6f3-4a8b-aaab-a05a59036dc6",
        "cursor": {
          "ref": "40f60579-8bdf-48e7-b4bb-c7ac394113a5",
          "length": 155,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "1872768b-e3e4-4756-be61-34ea570afa39"
        },
        "item": {
          "id": "1cb79d8b-f6f3-4a8b-aaab-a05a59036dc6",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "86b62de7-7c93-4007-8439-4e801244f185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e530228-93ab-4888-93f5-deec790e2d26",
        "cursor": {
          "ref": "f2b1e383-676f-4e5a-9962-b2b2f05277ae",
          "length": 155,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "6aa1b030-c7ac-4483-8fa1-6241d0980cb4"
        },
        "item": {
          "id": "5e530228-93ab-4888-93f5-deec790e2d26",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "68fab43a-4b44-4001-854e-04e676e82e9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b05e93-95bf-4d63-9629-fb897d9977dc",
        "cursor": {
          "ref": "d1df72b9-b204-4894-9541-3b38d1d580b6",
          "length": 155,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "2a2b88b2-7550-453c-9ac6-091173a25e44"
        },
        "item": {
          "id": "94b05e93-95bf-4d63-9629-fb897d9977dc",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ad1d69c0-12ec-4fa9-a8d4-a08f43eb6462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20095f09-10e1-4815-a962-d9547775ff2f",
        "cursor": {
          "ref": "126137e0-1301-49a6-999c-4039d5b3551b",
          "length": 155,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "0ab45a13-eb77-4ca3-85c8-a52fb0ca07aa"
        },
        "item": {
          "id": "20095f09-10e1-4815-a962-d9547775ff2f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "4589b379-7a33-402b-a806-a8be4b0c9676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b03f4bb6-f14c-49db-8cd8-f833868a7635",
        "cursor": {
          "ref": "81f7e02e-ea2a-4402-bb24-4f96d8bac1bb",
          "length": 155,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "4ca429fb-043a-484e-9cdd-45bf2bb1991b"
        },
        "item": {
          "id": "b03f4bb6-f14c-49db-8cd8-f833868a7635",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "562f4a13-bcd7-44b4-95f6-5788f5c339d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef64f402-a5f7-4109-b1fb-37e90ff6d0bf",
        "cursor": {
          "ref": "f2ef2b04-0d21-4a61-b327-1e432a3eabbb",
          "length": 155,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "1606e708-5b81-4990-b7b7-a910a259ad07"
        },
        "item": {
          "id": "ef64f402-a5f7-4109-b1fb-37e90ff6d0bf",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c1186abf-53a8-4001-9830-43e9a1ce27d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e300b75-649c-402a-85bb-d7f2d6dd2bf6",
        "cursor": {
          "ref": "21e77bc8-1d85-41e5-b4a3-79fc040d536e",
          "length": 155,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f8714b13-065f-4a33-9c5c-0404c37be869"
        },
        "item": {
          "id": "3e300b75-649c-402a-85bb-d7f2d6dd2bf6",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "02e1f42c-ff5a-49be-b0ae-5e9e8378e824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba4076b-2f75-44de-b2e9-8ddf1199eafd",
        "cursor": {
          "ref": "1160dab8-e301-4855-b804-4023ed17f7b3",
          "length": 155,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "454ebe40-6bd4-4ef9-8418-e2dab1e56eec"
        },
        "item": {
          "id": "8ba4076b-2f75-44de-b2e9-8ddf1199eafd",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "443b1641-16fe-4450-8191-2499be8ba85b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "990eb058-0bb3-49cb-9f5d-324ce65c83d0",
        "cursor": {
          "ref": "e537210f-6410-4ac2-8f01-8c4db649b488",
          "length": 155,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "df21422a-86b1-4f29-baa4-2382e8b37029"
        },
        "item": {
          "id": "990eb058-0bb3-49cb-9f5d-324ce65c83d0",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e97dbcb0-986f-4676-a47f-097249dccbe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37eeb99f-b263-4558-aea2-d1a13a308de9",
        "cursor": {
          "ref": "5e35e478-7b31-452f-8f7b-3df6e0f14339",
          "length": 155,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "2a7026b7-74b8-40db-8083-fad2eaed9a51"
        },
        "item": {
          "id": "37eeb99f-b263-4558-aea2-d1a13a308de9",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f2558efe-0e74-4ced-b9d3-482ebfe82cd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbdef364-29d4-4fc1-b41e-b74461198872",
        "cursor": {
          "ref": "888f5783-5d57-4b0c-ad0c-788b9ba4a107",
          "length": 155,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "539909ac-18b2-4539-8b6a-f26a648ea5cd"
        },
        "item": {
          "id": "cbdef364-29d4-4fc1-b41e-b74461198872",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "38627442-dc85-4c38-a8a5-f2bbc21db768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 912,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab337d7-33cf-475a-a287-9f7c22e6c03f",
        "cursor": {
          "ref": "67c7ebad-83fb-46be-9e05-d8a66e6553ba",
          "length": 155,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "00f75603-9070-488f-acda-424d8d67fcfe"
        },
        "item": {
          "id": "aab337d7-33cf-475a-a287-9f7c22e6c03f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "2b48bc91-658e-4f18-baaa-73ca1107bc48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b54da925-135d-4739-9c0c-4e05e7fa6a43",
        "cursor": {
          "ref": "c16e065d-e560-4611-b8ac-f905b911e4f2",
          "length": 155,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "18b9474f-b4c7-4b6b-97d6-7f454bd8a842"
        },
        "item": {
          "id": "b54da925-135d-4739-9c0c-4e05e7fa6a43",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "8428e20f-c63d-4767-90f6-f69a220ddfa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1535,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1da993b7-4a5e-4ab6-9f46-3db47fe2bf7b",
        "cursor": {
          "ref": "2f52dfe1-b6cc-433c-8cd5-ab5fd27b5fb0",
          "length": 155,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "bb23f4d1-062d-4d16-b570-6cf3efcd6ede"
        },
        "item": {
          "id": "1da993b7-4a5e-4ab6-9f46-3db47fe2bf7b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "ecbd4f37-7353-4787-a309-e80ddbedd9df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 773,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "388da84e-5b8a-4163-a8bd-011d5f28d60c",
        "cursor": {
          "ref": "7471bf10-9fd9-4a37-bbfa-12e788191871",
          "length": 155,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "547cf013-a4a7-4a78-acab-1a007c6d00c3"
        },
        "item": {
          "id": "388da84e-5b8a-4163-a8bd-011d5f28d60c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c9667763-ffcd-4277-91eb-1db3ce428d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "506470d8-e2b3-4342-9571-e5d93efd99d2",
        "cursor": {
          "ref": "2f6849fe-347b-418e-9aae-2ba0ca84a628",
          "length": 155,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "782bcfe0-2141-409a-b891-d8c6e95dd997"
        },
        "item": {
          "id": "506470d8-e2b3-4342-9571-e5d93efd99d2",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c5e16b42-7dee-4aed-9f73-a5bbdd006f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f3f546-f4a5-4834-9d04-be7cc0b4144b",
        "cursor": {
          "ref": "ef2bd77b-1374-4db1-9390-9ba916a3e1a9",
          "length": 155,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "5e66c90a-4d93-4d5e-a482-3bff6c6fcad8"
        },
        "item": {
          "id": "f9f3f546-f4a5-4834-9d04-be7cc0b4144b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "e60f13cd-dde7-498f-9402-26ddc62e8e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b96c138b-92ae-4c94-bb67-8dbca86b53aa",
        "cursor": {
          "ref": "51a8bc49-c756-4473-b8e1-84b6c1db29c6",
          "length": 155,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "89f465c6-f14b-434c-92a2-7ea800b3636e"
        },
        "item": {
          "id": "b96c138b-92ae-4c94-bb67-8dbca86b53aa",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "592dec18-e12c-4dc7-90c3-68e539d8057d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "072a46af-ec69-408e-82d4-c81a160247d1",
        "cursor": {
          "ref": "5fa047f1-ccba-4de3-9cbc-f6945b58cb32",
          "length": 155,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "7c0a4b32-b4d3-47bb-8e91-69be64989ec2"
        },
        "item": {
          "id": "072a46af-ec69-408e-82d4-c81a160247d1",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "71621ef4-3d0c-4683-9f2f-4f196cec0134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931e1c17-a030-4f20-9516-1d87552b1138",
        "cursor": {
          "ref": "1b38ea68-caa0-4ab3-b37a-573e1a645414",
          "length": 155,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d6dfb06a-a28e-4cc1-8e6d-992b50f1cdd1"
        },
        "item": {
          "id": "931e1c17-a030-4f20-9516-1d87552b1138",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "0764dbf6-e4b6-4d79-b869-62a568924766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3132a283-71ea-41f0-a811-bbb4c4dda5b1",
        "cursor": {
          "ref": "9e1753f2-4876-4ad4-925a-72198654a94e",
          "length": 155,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "7a90a10d-2955-45a4-b8f7-092ffdc22ba3"
        },
        "item": {
          "id": "3132a283-71ea-41f0-a811-bbb4c4dda5b1",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "6fae4051-a16a-4405-9a15-f1ec22c48d1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b04782b2-b0a9-4355-9391-98a5b1bf3dab",
        "cursor": {
          "ref": "18fbedae-bba2-4272-864b-95c3446c0c2b",
          "length": 155,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "50c4afde-377e-4193-b385-42ea13275f07"
        },
        "item": {
          "id": "b04782b2-b0a9-4355-9391-98a5b1bf3dab",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "64568799-d75d-423d-9bc4-800d71770bd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bff78b3-1584-4bc6-8a5e-6dfc965bddf3",
        "cursor": {
          "ref": "e95d4ac7-514a-4cac-9614-026c65317d9c",
          "length": 155,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "8b1b98c0-58be-49cd-b590-b780792d273c"
        },
        "item": {
          "id": "8bff78b3-1584-4bc6-8a5e-6dfc965bddf3",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "ea633701-b0a9-48a6-bd6d-daf1c485898a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf27c3de-fd13-4599-8b50-065ce863f4b1",
        "cursor": {
          "ref": "c9150942-cdad-4719-a23a-e4e461b6388c",
          "length": 155,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0fa42396-0ba7-4ae7-9b86-266e8ecd3f36"
        },
        "item": {
          "id": "cf27c3de-fd13-4599-8b50-065ce863f4b1",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "bbb65935-7400-4041-ad59-8971ba47fe60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c486edb-e036-4987-8c2e-fb275afe0508",
        "cursor": {
          "ref": "07735b09-80fa-42f1-ac04-919c4c40c18e",
          "length": 155,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2fe04c2e-b761-44b2-be5f-4a706a6c092d"
        },
        "item": {
          "id": "1c486edb-e036-4987-8c2e-fb275afe0508",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "3cd7bb18-7098-41bd-9afa-df24dd7eb2e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f79e6e-e556-40a0-823d-2a0e5669caea",
        "cursor": {
          "ref": "982288a7-5412-4a24-b482-686b7a77630c",
          "length": 155,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "b8705692-b7cf-4196-8793-b32ead9904b5"
        },
        "item": {
          "id": "81f79e6e-e556-40a0-823d-2a0e5669caea",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d53ba436-1e47-410e-9762-b763b55f306f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a4445a2-4b2f-4bff-9d4b-a6aeb4848756",
        "cursor": {
          "ref": "3f6fb7b4-4c1b-487e-a462-19376240c720",
          "length": 155,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ced6d539-533a-4d78-ac16-ab0f1b41e135"
        },
        "item": {
          "id": "1a4445a2-4b2f-4bff-9d4b-a6aeb4848756",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "df1b8191-4d68-4a55-9474-4ac8da633c35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f97b8b4c-2845-4be1-aebd-19b319e663a5",
        "cursor": {
          "ref": "990b176a-01e5-4ae8-ae62-9a4f35ad245c",
          "length": 155,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "2422837a-67ca-4f30-919c-50e592265fcd"
        },
        "item": {
          "id": "f97b8b4c-2845-4be1-aebd-19b319e663a5",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "3c234f8c-b7ca-4ed7-a1e1-5c5c671116bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd35d7b-340b-4a66-b3a9-3064ff6b8d2b",
        "cursor": {
          "ref": "1f896b43-9e18-40e4-9063-5133857fcb34",
          "length": 155,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "cb94dcba-e513-420b-869f-468c720897f9"
        },
        "item": {
          "id": "8bd35d7b-340b-4a66-b3a9-3064ff6b8d2b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "46b53377-e08b-4fdc-9355-011a8824be72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2345,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c210930e-9275-4411-8bed-2b9b9b50b570",
        "cursor": {
          "ref": "6636d289-f2d8-4c50-9f8f-6c280563ccd7",
          "length": 155,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "8c2a4859-ae38-485e-a989-05147635dd0e"
        },
        "item": {
          "id": "c210930e-9275-4411-8bed-2b9b9b50b570",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c8ff0a93-a216-4a27-84a9-9c5ff145257f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f1119a-f118-4e8b-aac1-39fc9ee5f3b7",
        "cursor": {
          "ref": "30b99153-1045-4db8-8f94-3e5535af8700",
          "length": 155,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "dd8b547a-263b-4b5d-854d-21db941a6964"
        },
        "item": {
          "id": "59f1119a-f118-4e8b-aac1-39fc9ee5f3b7",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "312dcdc3-1a02-4508-a382-79673d8cd73a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92121d15-22d5-4b79-a972-cc803c1d2e79",
        "cursor": {
          "ref": "ca8e14c3-0358-4c22-b819-0f8eb2cdb394",
          "length": 155,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "8d3e7db7-ec3a-49d1-a111-3c7a735a5d66"
        },
        "item": {
          "id": "92121d15-22d5-4b79-a972-cc803c1d2e79",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "0a5c23c4-04e0-4ba1-a107-d42b2ee016b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afaf17ca-4550-4fc5-adbc-a3de672cd77e",
        "cursor": {
          "ref": "560dc9ea-260e-4f75-8e49-3747d296ab65",
          "length": 155,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "ee2a7c15-9b8d-4864-b223-7ef75592581d"
        },
        "item": {
          "id": "afaf17ca-4550-4fc5-adbc-a3de672cd77e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "45618be2-f809-4c9a-8a95-bfc597781f79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d17c3f95-bf71-4023-ba75-b90165eb0914",
        "cursor": {
          "ref": "fed01fdc-9b0d-4952-a3a0-cc7139ca5727",
          "length": 155,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "5088c0ea-1e08-4600-8bed-a23dc60f7462"
        },
        "item": {
          "id": "d17c3f95-bf71-4023-ba75-b90165eb0914",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7a96e539-48a4-4160-8ba1-7dfbe7d29d24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb29cbd5-e986-4fd7-8c93-556e29ae47b3",
        "cursor": {
          "ref": "18b0cc46-1d5a-403d-a251-6f70b02ef36a",
          "length": 155,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "2e305990-77ef-4d99-95e1-f806076505bb"
        },
        "item": {
          "id": "bb29cbd5-e986-4fd7-8c93-556e29ae47b3",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "3228df69-0889-4b0a-8c99-bb7cf36e5e9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "254c1642-649c-4513-aee7-f6d2dc4d33a4",
        "cursor": {
          "ref": "41ec5466-2191-484a-8bb4-b03dc0496088",
          "length": 155,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ab735478-21c2-43db-9bf0-257bd84a776e"
        },
        "item": {
          "id": "254c1642-649c-4513-aee7-f6d2dc4d33a4",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "48913805-2d65-4d43-9c6e-baf957dc1e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96797ea5-ae71-43c3-a614-7aa4f2d39561",
        "cursor": {
          "ref": "1f8af2b0-d329-471d-a5cc-d07a65b11b4a",
          "length": 155,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "876ae178-29e6-4b79-a9e9-02fda59c5990"
        },
        "item": {
          "id": "96797ea5-ae71-43c3-a614-7aa4f2d39561",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "cf8eb44a-5e6d-4994-8b6d-f57db0312dbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0003c8-d894-4389-8d95-240fdfc7b0ac",
        "cursor": {
          "ref": "65ed0aa3-0788-4be5-916b-bb9177410a2e",
          "length": 155,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f75c50ab-8788-44be-8ea8-a04839b839c8"
        },
        "item": {
          "id": "5f0003c8-d894-4389-8d95-240fdfc7b0ac",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "50fe78f8-f3c3-46bc-aa64-9e608f52d2e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fbff1e5-bf2d-4db7-90f7-9d24cfe06249",
        "cursor": {
          "ref": "3cff6946-2143-4f25-80c6-ca1d9de26aff",
          "length": 155,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ef2b38af-1d8d-49d8-bcb4-bed4df13d580"
        },
        "item": {
          "id": "4fbff1e5-bf2d-4db7-90f7-9d24cfe06249",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "6baecc4b-22cc-47cd-8774-cd278c8a0263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 172,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b97d9f05-74f5-4c08-8cc6-3d8eed5c3110",
        "cursor": {
          "ref": "3e5abc86-73ad-4a61-acc4-ab4666e4c4fa",
          "length": 155,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "61c5c5fa-1c5a-4080-bb52-0d5674d5f2d3"
        },
        "item": {
          "id": "b97d9f05-74f5-4c08-8cc6-3d8eed5c3110",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b1e56e5e-7a4c-4ce6-a993-35bcd9eb90db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1602,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eecb2e5-8bd6-4737-93dd-274750ddcf45",
        "cursor": {
          "ref": "b48feec0-aafb-43da-a1d2-86a42add14df",
          "length": 155,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6ce00019-03fc-4d6e-907a-c220e396565f"
        },
        "item": {
          "id": "8eecb2e5-8bd6-4737-93dd-274750ddcf45",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "bb7b83e0-1a65-4402-aae5-e702c77be7dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d33c5443-cde0-49f9-8d78-e0829a4fd1ec",
        "cursor": {
          "ref": "2dde48c9-8b1e-4707-b8af-1db46e6eb70c",
          "length": 155,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "368a51c5-718f-4fc6-82af-2b423f0c1d8c"
        },
        "item": {
          "id": "d33c5443-cde0-49f9-8d78-e0829a4fd1ec",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "4f3bc41e-a337-4693-99a9-e370f419ebfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8111c653-083d-456e-82e4-d3d4e967635b",
        "cursor": {
          "ref": "0261b6f3-1f01-428a-9187-0d7edefa0434",
          "length": 155,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "aaed51f5-fdaf-4209-8f56-bd7d6306180f"
        },
        "item": {
          "id": "8111c653-083d-456e-82e4-d3d4e967635b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "0e7c5b06-3b82-4d62-aa45-3133200ee224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcdf30a3-3d02-4990-8e73-5203998a4902",
        "cursor": {
          "ref": "79350d72-1938-4e20-bd76-f734079be696",
          "length": 155,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4eee9d2a-2593-4268-b2ac-9f53f2101b1f"
        },
        "item": {
          "id": "dcdf30a3-3d02-4990-8e73-5203998a4902",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "92eb0c68-2ab9-4f9b-9551-02043645e0df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e22504-0807-430b-8adc-91bb78c4e381",
        "cursor": {
          "ref": "48d18b00-84d5-4bdc-9b46-c6c6b69dd652",
          "length": 155,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "69384660-e36e-4964-afdb-109358fa450f"
        },
        "item": {
          "id": "23e22504-0807-430b-8adc-91bb78c4e381",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "7e1c6171-2005-488d-9b5e-1960237ffc9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec8919c-eefa-4dbb-866d-c9d15e8c78d7",
        "cursor": {
          "ref": "af81950b-5dcb-4019-a00e-5dc0c132dba4",
          "length": 155,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "8800b87e-0f4e-43e1-b0e7-30c7d6970e29"
        },
        "item": {
          "id": "eec8919c-eefa-4dbb-866d-c9d15e8c78d7",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "a33d8135-61b6-40bd-803e-bbea931c1750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a54f719-9ad4-4931-9bb3-7b2850fdf917",
        "cursor": {
          "ref": "0bd5328e-f31b-41f3-abbf-5d3d11c86c7d",
          "length": 155,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "854589ea-0884-4453-a871-874106170d06"
        },
        "item": {
          "id": "5a54f719-9ad4-4931-9bb3-7b2850fdf917",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "ab560790-0e3e-4741-9602-b3caca3eccbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f8355ca-393c-4cd0-b3e9-5ab2b09d5913",
        "cursor": {
          "ref": "16fe5797-57af-4eb3-87c1-c1eb2acb6964",
          "length": 155,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "970b9254-91a7-44bb-83d1-b6b32500dc81"
        },
        "item": {
          "id": "5f8355ca-393c-4cd0-b3e9-5ab2b09d5913",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "1e730cfa-ded7-48c0-a79a-06ed62a4bf75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "241aed20-29a7-4b02-805a-182967712bbf",
        "cursor": {
          "ref": "1885aab3-dda9-4dcd-b32c-95418def1c99",
          "length": 155,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "57a1f424-439d-48df-825b-41e5a9a5b6c5"
        },
        "item": {
          "id": "241aed20-29a7-4b02-805a-182967712bbf",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "6eb0720e-0d97-437b-8d0e-bf508070c673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab1e10ae-14f7-4b81-b451-6b4f091b99c8",
        "cursor": {
          "ref": "d290980e-476e-4c0c-9979-7683d83212f3",
          "length": 155,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "8058e884-25ff-4e1d-b7db-6c5342ae32bd"
        },
        "item": {
          "id": "ab1e10ae-14f7-4b81-b451-6b4f091b99c8",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "046a6733-0574-46af-a8cc-3a7ab378d044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed162c1d-e30f-429b-9aef-f1f403e52689",
        "cursor": {
          "ref": "a656f497-89d1-4428-b1b8-d85c7423b25e",
          "length": 155,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "6a9c107f-dd44-48be-9293-928bc8be682f"
        },
        "item": {
          "id": "ed162c1d-e30f-429b-9aef-f1f403e52689",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "2bf0554a-88cb-4273-b0ce-13787ec9e16c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f361593-0b82-4a50-8883-a520db6d065e",
        "cursor": {
          "ref": "d034e265-a480-4eb3-8590-1ef87ffaf0d8",
          "length": 155,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "104566bc-0bbb-43fb-b262-4a152931dc4b"
        },
        "item": {
          "id": "0f361593-0b82-4a50-8883-a520db6d065e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a291685c-3117-4064-878d-35dd1b102757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17595b8f-6ea4-4779-8d88-2eb4f420184b",
        "cursor": {
          "ref": "cb225fa8-e822-46ec-a028-ff8f3c595485",
          "length": 155,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "9c6c9347-df31-4733-928c-67488809bd09"
        },
        "item": {
          "id": "17595b8f-6ea4-4779-8d88-2eb4f420184b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "89bc0532-7611-4879-b084-d94d6ff42b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "503cb842-2f2a-4fc2-a2d7-8b269e5ef8de",
        "cursor": {
          "ref": "1e7913d4-803c-47d4-8eeb-037ffba99b93",
          "length": 155,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b9198851-9ce7-4a64-a1c9-426b03a93df7"
        },
        "item": {
          "id": "503cb842-2f2a-4fc2-a2d7-8b269e5ef8de",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "8b14da48-e444-4d3a-8f24-e6055af2a9c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad820a43-46bf-47fa-bd84-6917c14078a1",
        "cursor": {
          "ref": "d1b5b639-a0f9-4856-9ff0-c481e4c4e833",
          "length": 155,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "eb45929d-f5a5-430b-a00d-3003cf7ac7d6"
        },
        "item": {
          "id": "ad820a43-46bf-47fa-bd84-6917c14078a1",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "43709226-0d97-4b14-ac57-13d3d35cce83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b987df91-e042-44bd-b5d0-98b14276950d",
        "cursor": {
          "ref": "e78c4a76-5bb1-48a7-b6b6-9b2d910929c9",
          "length": 155,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "923af950-7595-4c11-bebc-0f8eba58b8c1"
        },
        "item": {
          "id": "b987df91-e042-44bd-b5d0-98b14276950d",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "270a8f1c-b7f0-490e-a458-9fd42353e2d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2be2aea7-a6b6-4fdf-bec5-7957916c2ddf",
        "cursor": {
          "ref": "c695044d-0ca8-40f9-b226-b4f00087a7ce",
          "length": 155,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "eddbdfbb-eeb0-42b0-b762-031c3a7d3b7f"
        },
        "item": {
          "id": "2be2aea7-a6b6-4fdf-bec5-7957916c2ddf",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "1d8897bb-e3d1-42b7-aa06-7a77a4dc0260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef1a6398-2b2e-46d5-a829-9268addeea4c",
        "cursor": {
          "ref": "2fbe8550-1c72-48aa-81de-9aeb0960dba9",
          "length": 155,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c8785aa7-7cb6-4ff4-93fd-ba29aa31fc34"
        },
        "item": {
          "id": "ef1a6398-2b2e-46d5-a829-9268addeea4c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "37ba3e3e-d30b-4f72-9688-7a0cf35ef529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e4dd107-80e0-4176-834f-fd158ada35c8",
        "cursor": {
          "ref": "b1a6c2b6-3710-45d2-b2cb-1561d0efc3a0",
          "length": 155,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "8f83fbb3-58c3-4867-aad2-19b684bda39b"
        },
        "item": {
          "id": "4e4dd107-80e0-4176-834f-fd158ada35c8",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "61dbc98c-15b9-4914-b84e-e86bf4ab438b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "212ea3a9-4df7-4346-a041-b5d9f76a7fc5",
        "cursor": {
          "ref": "80921c53-5782-445f-a8d7-888b46b91c26",
          "length": 155,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c8ad3af5-48b0-4a4e-b9ac-1d8a03733007"
        },
        "item": {
          "id": "212ea3a9-4df7-4346-a041-b5d9f76a7fc5",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "02bb0058-8802-485b-b176-239c4034e059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d667cc9-9c61-4920-8a36-12d6836a5964",
        "cursor": {
          "ref": "2fc1921c-1b02-409d-9a91-cdebfbf89053",
          "length": 155,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e0485329-3037-4973-b8a7-6373047f29ef"
        },
        "item": {
          "id": "1d667cc9-9c61-4920-8a36-12d6836a5964",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "30732f1e-7dc1-48c5-9ed1-52eb1ec6c6e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd6b2c3-58c1-4e97-9d80-6de4e06a7ff4",
        "cursor": {
          "ref": "11dd1c55-c77b-423f-bd63-e74c9ae189a8",
          "length": 155,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "76914d29-ac6a-43f8-914c-b9ba3818bb33"
        },
        "item": {
          "id": "8dd6b2c3-58c1-4e97-9d80-6de4e06a7ff4",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "0761034b-7b1c-485e-a5dc-902e8420a4e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4e8a03-0786-4613-a3df-7ac40b683adb",
        "cursor": {
          "ref": "589a2740-121d-49c3-aa84-19d6b1d82f6c",
          "length": 155,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "100cfe15-7c2b-4261-9429-752a669c7058"
        },
        "item": {
          "id": "4a4e8a03-0786-4613-a3df-7ac40b683adb",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "33dcc117-e392-4717-aa0e-0991274ad3f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "748d1c85-7268-4390-92ef-96ef651752f9",
        "cursor": {
          "ref": "fb5e8047-d08d-4d12-b69f-01ebc24e1063",
          "length": 155,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "38a0cfab-d59c-4813-8dfc-ff9b61bc5d76"
        },
        "item": {
          "id": "748d1c85-7268-4390-92ef-96ef651752f9",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "746f162a-48c6-48f3-a3d7-6decb0bfcdd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bbd6656-ef13-4462-99e3-e7a7b49cfc4a",
        "cursor": {
          "ref": "f9b50eb6-a4c5-4951-84fc-42be258a5520",
          "length": 155,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "c693a4e2-663e-43da-b522-fc2e1f2232c6"
        },
        "item": {
          "id": "9bbd6656-ef13-4462-99e3-e7a7b49cfc4a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "3c83e09e-bbae-480e-9a87-6d72a8967131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1545c08b-64dd-420c-b3b6-c7301c5c1f87",
        "cursor": {
          "ref": "6f1de402-eb07-4533-a0bc-9e173c12bbe4",
          "length": 155,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "91d5e615-b211-47d6-824b-cb929710c5e7"
        },
        "item": {
          "id": "1545c08b-64dd-420c-b3b6-c7301c5c1f87",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b7206657-fd78-4528-907e-97f6b9108c70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45c7443e-86bd-42dd-b760-2e7fcf9db45d",
        "cursor": {
          "ref": "cbcdbf67-c151-4956-869c-57ac4209b995",
          "length": 155,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2f2c3adf-e76b-4013-83e8-3b4b4b73a850"
        },
        "item": {
          "id": "45c7443e-86bd-42dd-b760-2e7fcf9db45d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "754aca54-5e4b-480e-9b6d-adbd681490a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1067614a-5901-4c99-ba97-a0733103622b",
        "cursor": {
          "ref": "2a17c9bd-8db6-45f7-a075-8ab0fb8302c1",
          "length": 155,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "42d4a944-2def-412d-94fc-e4032cd9a80c"
        },
        "item": {
          "id": "1067614a-5901-4c99-ba97-a0733103622b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "d36490b4-0f31-4e61-977c-c91955cb4ab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4616d5-6e62-46f3-b248-8e75595581b2",
        "cursor": {
          "ref": "a6ae4ff7-887e-4d20-8af9-8ef3f109a8e7",
          "length": 155,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "19c928a6-2e9f-4895-b85e-772b8264b0eb"
        },
        "item": {
          "id": "7c4616d5-6e62-46f3-b248-8e75595581b2",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "128b6e8e-0eb8-4238-a455-515e9575870b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a87ad0-3c71-428b-a3f8-e361197240b9",
        "cursor": {
          "ref": "ca1dcac2-21b0-4ac8-9eab-2a3097f4f65b",
          "length": 155,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "c0e83c28-d3d3-40b8-80bf-24b994a8fe43"
        },
        "item": {
          "id": "a1a87ad0-3c71-428b-a3f8-e361197240b9",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "96a6972a-baf6-4c3a-ba51-13e4dcc044c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ecfb30-ac44-4979-b002-3d3c1a5642ce",
        "cursor": {
          "ref": "14ecf90a-3cf5-42fd-b5b4-f9fce2cb3d7a",
          "length": 155,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c62004ea-5337-4715-9520-4f5f90ff76df"
        },
        "item": {
          "id": "e2ecfb30-ac44-4979-b002-3d3c1a5642ce",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "77e3bee4-7b14-4a98-b721-4354291f4139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e732d7-c1fc-43ab-bd7c-dbf5c2d66f63",
        "cursor": {
          "ref": "359d45fa-c1c2-41ed-ad61-0bc88b6fbb2f",
          "length": 155,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "dded9995-2530-4126-85fe-7cc633409161"
        },
        "item": {
          "id": "d4e732d7-c1fc-43ab-bd7c-dbf5c2d66f63",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "1802b617-f3d6-43a5-9a9b-a4f53663856b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59998c54-4375-4831-9224-5acfd86c249a",
        "cursor": {
          "ref": "6bff6c90-116d-42b6-8e3f-c508948c10a4",
          "length": 155,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3f541dad-bdd8-4f7c-81f3-adf2f58c43dd"
        },
        "item": {
          "id": "59998c54-4375-4831-9224-5acfd86c249a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "7ce0ddd5-2dae-41e0-b8a5-cc0503750993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c4d407b-668a-43be-aff1-6265d44525ff",
        "cursor": {
          "ref": "f1f0ded3-68c2-4e81-8642-e4869189419a",
          "length": 155,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "980893e2-8093-48c0-a212-97a2c6642916"
        },
        "item": {
          "id": "6c4d407b-668a-43be-aff1-6265d44525ff",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "41b9c748-1d69-478d-a788-b025d90f5607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a4766d-8db0-4602-b276-0b2531484881",
        "cursor": {
          "ref": "0bc8c49c-0af6-44ca-b32e-d771c89f25b6",
          "length": 155,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d12c72b1-b267-4975-beae-342c3531dd58"
        },
        "item": {
          "id": "c6a4766d-8db0-4602-b276-0b2531484881",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d83411c3-86a6-4b8e-9eb9-3102b4f037af",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9381e986-ccb4-4c47-ae26-cb057d1132e9",
        "cursor": {
          "ref": "05dc8301-e3cf-43bc-afac-b0d41c2e9965",
          "length": 155,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "59f4fabf-8eec-42c5-9205-24d699cbfe26"
        },
        "item": {
          "id": "9381e986-ccb4-4c47-ae26-cb057d1132e9",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "29d81c8e-2f51-4e71-afd6-5dce8787ae4d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 18,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f23a708-0605-493b-9f2d-c1591066ce6a",
        "cursor": {
          "ref": "3156806e-70e1-49e9-985f-a2004c8c8d82",
          "length": 155,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f3a341f9-faa8-45e7-8f33-6a41940949f4"
        },
        "item": {
          "id": "8f23a708-0605-493b-9f2d-c1591066ce6a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "1e43f152-e8be-4f4c-b0f2-f91a9baf7b4c",
          "status": "OK",
          "code": 200,
          "responseTime": 844,
          "responseSize": 18
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f1ff1d-f288-43b8-bac9-1f977db4503d",
        "cursor": {
          "ref": "2cbe0572-01e1-4602-a65c-551e69be536f",
          "length": 155,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "3a5dac6c-64ff-46df-bc24-7ca8d3a26a45"
        },
        "item": {
          "id": "e5f1ff1d-f288-43b8-bac9-1f977db4503d",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "b2f4adec-ff52-4d41-9f23-8cf30943c4eb",
          "status": "OK",
          "code": 200,
          "responseTime": 503,
          "responseSize": 18
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f38dc5e-7f4f-4540-8d0b-083ae052aea4",
        "cursor": {
          "ref": "c4d955aa-7be2-41aa-80e6-8b73f97d5dcd",
          "length": 155,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "77fcdceb-7930-40ca-a290-1cc66a0d3af0"
        },
        "item": {
          "id": "5f38dc5e-7f4f-4540-8d0b-083ae052aea4",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "1a0c31dc-8266-43ad-903f-e5aa2c7192d8",
          "status": "OK",
          "code": 200,
          "responseTime": 464,
          "responseSize": 18
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06095eba-7ba1-44ca-a779-237910954b38",
        "cursor": {
          "ref": "c4465f67-882a-4c64-b3f5-5beef2490016",
          "length": 155,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "992e1de2-7794-4224-8370-44dfad0b5827"
        },
        "item": {
          "id": "06095eba-7ba1-44ca-a779-237910954b38",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6d5edc82-c97d-4ba3-a0a4-4c0850d602d3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06095eba-7ba1-44ca-a779-237910954b38",
        "cursor": {
          "ref": "c4465f67-882a-4c64-b3f5-5beef2490016",
          "length": 155,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "992e1de2-7794-4224-8370-44dfad0b5827"
        },
        "item": {
          "id": "06095eba-7ba1-44ca-a779-237910954b38",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6d5edc82-c97d-4ba3-a0a4-4c0850d602d3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "808e5f5e-93db-4726-94a7-1c18be5d1399",
        "cursor": {
          "ref": "807c7272-a75e-4682-9ceb-abd974c84f0e",
          "length": 155,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "feb1ce46-eae1-4cce-b822-f51fd9b5e9fd"
        },
        "item": {
          "id": "808e5f5e-93db-4726-94a7-1c18be5d1399",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "a061536a-780d-473c-a352-293c70e04c42",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 58,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b9ca969-a04b-43d6-9ebb-eadedcbfc77d",
        "cursor": {
          "ref": "27e9d108-a421-4e99-9ad1-8b39e1e8ed99",
          "length": 155,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f893492d-4efc-4c0c-9583-87a1fe1b9ecb"
        },
        "item": {
          "id": "8b9ca969-a04b-43d6-9ebb-eadedcbfc77d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ffc67e18-30c9-44d4-bfa4-13fa365657d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:152)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:152)"
            }
          }
        ]
      },
      {
        "id": "8b9ca969-a04b-43d6-9ebb-eadedcbfc77d",
        "cursor": {
          "ref": "27e9d108-a421-4e99-9ad1-8b39e1e8ed99",
          "length": 155,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f893492d-4efc-4c0c-9583-87a1fe1b9ecb"
        },
        "item": {
          "id": "8b9ca969-a04b-43d6-9ebb-eadedcbfc77d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ffc67e18-30c9-44d4-bfa4-13fa365657d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:152)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:152)"
            }
          }
        ]
      },
      {
        "id": "5bf210e5-350d-4e98-841d-5fbd3a646c5e",
        "cursor": {
          "ref": "cdaa9afe-bf90-47a5-b3a5-e4ea3cc9d975",
          "length": 155,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "06517ca7-dc4d-4a52-9d93-96ba90e85a5f"
        },
        "item": {
          "id": "5bf210e5-350d-4e98-841d-5fbd3a646c5e",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "bd67069f-3f77-486f-8c01-edbc8617d04e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 403",
              "message": "expected response to have status code 403 but got 400",
              "stack": "AssertionError: expected response to have status code 403 but got 400\n   at Object.eval sandbox-script.js:1:153)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:153)"
            }
          }
        ]
      },
      {
        "id": "bb924744-ed90-4819-a3f4-28124af57aba",
        "cursor": {
          "ref": "3b5257bc-2128-4c2b-9d0d-eda8976a666e",
          "length": 155,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b272852f-dc8d-4dc1-a09b-59543b713511"
        },
        "item": {
          "id": "bb924744-ed90-4819-a3f4-28124af57aba",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1f68cc36-2a5d-48c1-af22-c63950513276",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 183,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb924744-ed90-4819-a3f4-28124af57aba",
        "cursor": {
          "ref": "3b5257bc-2128-4c2b-9d0d-eda8976a666e",
          "length": 155,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b272852f-dc8d-4dc1-a09b-59543b713511"
        },
        "item": {
          "id": "bb924744-ed90-4819-a3f4-28124af57aba",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1f68cc36-2a5d-48c1-af22-c63950513276",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 183,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e4e133e-2db8-42dd-98ae-bcee4bbf65eb",
        "cursor": {
          "ref": "ad4e487f-0826-40d4-911b-7a5ad8d255b1",
          "length": 155,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "94648786-d4d4-4ccf-ad23-c0557e05429e"
        },
        "item": {
          "id": "7e4e133e-2db8-42dd-98ae-bcee4bbf65eb",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "abb88848-e2a9-4d1c-bcb1-22a58c7ca0a6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 30,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}