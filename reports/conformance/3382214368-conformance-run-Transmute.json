{
  "collection": {
    "info": {
      "_postman_id": "f5f17919-82a1-4db5-be95-0f985635313d",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "579358ca-d6c0-418a-b0c4-9cf7c32f29ef",
        "name": "Clear Cache",
        "item": [
          {
            "id": "3c551f5e-d647-4220-aca1-e81406881e23",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "89448ac2-6411-467b-be06-43b5070af294",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "cdb7cec5-e3b8-4045-a085-23ca217037ba"
                }
              }
            ]
          },
          {
            "id": "7c55be2b-c3b5-426e-915c-26e113b2048d",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c150430c-f876-40d7-9fc5-db4477b204a3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "70b92c74-3812-4a7a-9902-ae3ba23bc5bc"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "d0ba96e9-0c88-409c-80a0-7a318da2df3a",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c3753155-5957-4603-9b33-f2ff80ab7922",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3f6cf57a-a1dd-4651-aad4-01b0dcee9dc4",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4dc1f4b6-34d4-4197-8688-3c967da902df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4d1f62d4-f4d9-4eef-855a-92d160cddc0b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f829c6b5-a51b-4ce7-b588-830c9dc8cf01",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "05ac0755-e5eb-41ed-b951-050adb807f42"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8bdb9f6e-08a6-4dfa-b49c-45bc9d38eddf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5a84482e-59bf-4195-8267-3122887ad5e7"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "63d73b29-bc74-4278-b54d-2c6433e6c09e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "355e7d1b-4e2b-4233-9b93-0d6c43fac8d5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cacf0c29-d05c-427e-8a0a-1f3112f8f3ab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4d6998ab-799a-461e-993b-f002620e746b"
            }
          }
        ]
      },
      {
        "id": "a096fa4f-962d-42f5-974f-7064a2c9426a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "2caf9538-7c7f-432f-953f-9175f9fa9213",
            "name": "Negative Testing",
            "item": [
              {
                "id": "896596be-abed-494e-aa9f-930797d957ed",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2a2cdadb-2365-47c6-8857-c7d41c0d6b38",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea0bcf5-5937-4685-af58-0829ee08fa80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9a49e95c-3c3e-4af6-9088-9ddf4912c6bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7d5457a-ab82-4efe-a77f-bdebdcde45a1",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "139d0fc9-6738-46ad-8c18-68091a068769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d46bd104-fba8-43c8-962e-2732c3598ab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1737a645-8c57-4d98-8116-6ee021a7e338",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "532a32c0-4ba5-4efa-a173-56ebe0761218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "85fd15c0-1666-4485-9f9a-7e03be2e3dcb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "05aed291-d02b-4fdd-9069-adccb7915f54",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "216204d2-2420-4e36-8a49-7dd13f2f7607",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58cf5817-daca-452d-a65c-4f81e761de61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c408ee3f-ca4b-47ac-8dff-3fcb60c545f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be3bfce2-3fd5-4d78-8260-5343f1e1cd64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c17d4719-2caf-48a4-82e0-53c59ac35179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb77b9e8-9a66-4d6f-90bc-f529b1fb3b65",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71da920c-6d6a-45c2-815b-1af85322c9c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0868ba3f-f0b9-4c00-926d-84e74ce7572a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2db6cb6c-120f-404f-a5ea-785b0ae4bfa1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "5e597168-3588-47bc-8dab-7a4e0722f2b1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f38f7efe-89bc-4b08-8809-d69bb0052db1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c19fd683-e7ca-4c2d-a74b-b29cb79397d4",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ee1ec26-233c-4d9f-b376-d14c79d941ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "cd86976b-420d-4eb2-9050-e19662318092"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "50d77cf7-5c39-4254-bc96-0412bd14227f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "356d75b0-c8eb-4b94-bbc4-57d9f8079848"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a3af7343-4037-4f9c-9a13-b13a197acfeb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "79f0a3b8-4f51-49c3-82aa-c1c837a1f3d8"
            }
          }
        ]
      },
      {
        "id": "6414b416-e25f-4850-9966-559c521f7540",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "8f717537-3e6e-4576-aaa1-3cca645f9d01",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8f7fdab9-80ac-490a-8c95-7227018e1d45",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "287a63d2-e382-48e8-8a54-d6209ee19aed",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f268b1b8-5fed-4ce3-8ded-3453db3e6650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f420368e-d56d-4000-aedd-bc103efbfe93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44842c76-806c-4f0c-80f2-c5c8b40800e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4006d2d2-5b14-4e42-856a-2b762d2a6cd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d0b7ce8-5a2c-42cd-92ec-1dafd08f9d97",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b1baca-1c54-4853-8d90-34dee0518dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cb93601-dedd-4a41-b448-7953c05bf3c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "002c8fe3-82dd-4202-b9b2-71363faade91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88f1ef83-56a4-4e79-9ad4-04c189704a87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b363b8aa-b8e8-4427-95a0-f05b9904bde0",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e903dc-e5f3-428b-8ecc-09bee82aeb51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e28aedae-3ffe-49a0-bc5e-9f846a67fe43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc938d9-2a1e-4778-bb7e-4c7fb0570ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e94d508-2715-4d79-ab27-d5820912591d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80a4666e-f8b6-40dc-95a2-f38c97d72c5e",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5eb4696-01d2-4098-8ab2-21b8fa0b2cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b410bdc8-23b7-4fdb-8bad-6d5c1e839db3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c41f62-c036-4878-b811-507211ee5b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b1eb0a9-8dd7-4323-b093-81825d198969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f1b0ae-419e-493b-a9cd-ab7d4b6c5100",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b6f830-4e4b-4801-bcb3-fe3c754283e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24dd7d26-c0ad-47b4-915a-b021d5ec3c74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab1fb76-7d09-4673-9744-7f009310ddc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6adc435f-0c78-4839-b1df-22b17bc0ac31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2fda4b6-cb08-43b3-9e64-aaa661ef5871",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69ea2a38-69fb-4574-9a9f-7cd6a7ad6e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26e80fda-4ed1-4457-bb2b-6d25582e05b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f494832-d9d8-4bdd-88c2-cf7e68867510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e95b751-1910-4185-995d-f2d84ec3f0f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c82879-14c9-42ca-b169-003fe8aeef61",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7d6afc-dca0-40f2-9801-2ea7a7367f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bcb112e-a0e2-4742-871f-76affd088966"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "455800a0-07b8-4e52-91cf-2ac3b1c5a6ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b325c697-8ddc-4876-a86c-f461c948e58c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "629e8df6-247d-415d-9233-6f76ee81a8ec",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af18651d-9735-4451-a6c7-c7fbd5405915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2748298b-8184-4977-aa5c-4ed195c9f360"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d86d22ad-b649-4d92-8876-7b3b8a6a86de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74b64912-7a05-4fb1-a23f-0b1a9a8ae304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e4be57-741e-4f35-8bac-c6d38ab4a736",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a5a4f0-d2bb-438e-a541-9fd76e0dbcfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aac665e0-4699-4aff-8924-f4ecc73b4b13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1669de00-0220-46e4-a8f2-99ba5a111f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8cec7245-b884-4a82-8c53-6f93d4efc5e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdecdb9c-76fc-4f83-bdc7-2309bf25673d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cc9ec61-eade-4ffc-ae92-ec86db223770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bfeb376-3fb4-4dc8-a6f2-27215b4b4bd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47cb1ca6-be07-425d-81ff-9d0a883b74e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "675818e0-64c1-4124-b01b-fe69ba2edf8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c60ed1d7-69db-4f97-9f4d-547e8954cb48",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64918a8e-ca85-457d-a1fe-9431e70007b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7864e29b-4026-4c33-ae40-a04febf87256"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd92e5a9-c3d8-408d-af6e-ea16c7ce7581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "145b762e-8d85-4dca-aef7-4f6db921cc5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f5a0718-4d83-4ab6-bddd-2f751bcff340",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32376464-38f7-4ee0-94a7-14c79c3297cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e96e80cb-cc77-44f9-abb9-638c82ada565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e96cd1c-83d1-44c5-87f5-9089f0f3f955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c658f7d-8a32-42a9-89f2-34b04e415305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ee188a1-0403-4def-aafe-a0fa65063afb",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0984bef-470e-4d52-b451-97f409acd464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7300007b-aebc-472b-ac9c-49ac06f17906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee345c63-6369-4d83-b986-5003a50da9c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96714a91-9ecd-4beb-b47e-9c0b4190bb76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a93ed63f-08c0-410c-8b73-d642e33cd8d6",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3576bd56-4f2d-4da2-a88b-f28c5b8e80ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1d13479-4041-491d-b495-cfc4909eab81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0b80ef3-10df-467f-a941-e3c8d3dbce8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a0377ac-e665-4276-81a1-66b00696370a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24f92eae-d5ec-492d-8b3e-de44fd084e99",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e0af67-a29e-4c1b-9ec1-ca388c6fb914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9fa8c54-33e9-4707-8f79-842d8cfea74e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11960f0b-970d-471d-903f-a3d4838be19d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40343ecc-3927-4702-a46e-ea07f3fef797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e7473d-5d5c-4d97-bd28-be8057397523",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a41c3b7c-239a-4e42-b29d-a10fd844d3d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4efdfc24-036e-4bb0-a9df-fd048d8cb762"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f7d792-b743-48e1-a82f-eda07f3ff042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c31cdbab-ace2-489c-832b-6b66802a5e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91343bb9-e66b-42fd-9859-021fa33d47ee",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e2242b-fa91-4f50-9984-2ec86212d997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e705355f-bb87-4e01-b39b-009f884222aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f808b40d-8cf3-4935-81e7-26c71aa20c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19358822-c0ae-43a1-9b23-ef8903b3d172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "049be8f9-34bb-4fa4-9b22-d5729a9d6b32",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a218ebb-c14a-4cd3-9db0-317305e8cf3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3941fb2d-76d9-46b3-8d69-61a4548c352e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6332885e-c004-4d5a-a283-22189128d877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc753f97-a6ca-4fdf-8b44-d25a49033245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01e8bda5-0e62-4a8d-ac4c-72ce917a1409",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d924000-a073-49e6-aad2-a1209b7dcecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08d13d6e-a5cf-4c23-a62c-06e96c4b8e4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f812089a-f1b6-45c4-a606-c6e21a6b7b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "19669bc8-8d91-45d6-89dd-a703c94b60ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b17621e4-998f-4493-a065-7dc08b35ef67",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eade508-62c5-4b5e-8fdf-23b1821da6b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab48d71d-3c90-46c6-afce-ee53f7fc5f51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b89d0f1-379c-4305-938a-0f246009a4b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "12f090c1-1c2d-4c33-8836-b7227cd51683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f79e94d-afec-4576-bd87-95b8b7c3dbca",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11762c26-184a-4f95-bf63-40df97df1683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0b95781-182e-4455-8873-ed86476b328e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b42ee159-56aa-42e3-9764-652d15e35b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a594883e-7c13-40f2-9572-ce6c2072c216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f9b420d-a0b2-4d47-98c5-aa6470b39fbc",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc803a58-c07b-43ee-9cd1-0778e6a5ff7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ff9dfcf-3e7a-4981-a45e-9f42df2e8c14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "020e9c20-60cd-4392-b2ee-cbe9f1a73933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "efee866b-6840-42b8-909f-c6175ff7dc15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58a5cf73-52f1-4931-9fb6-41350bdf8f61",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "633c6ba7-e0bf-4c3c-ba96-a936d89fdc81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "799416f0-8cb3-4bfd-9e5d-a84449c88f02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9068194-0015-49dc-8239-e2a559cd8600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8f0f74b2-3868-4f41-a10f-9ba83adf5d6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a7cf3c-2ae6-4dc7-b274-5bd58add8a60",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a2268eb-44d8-4309-b4a2-61057b3e2549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e609857e-0d80-40e7-9751-1449a45ba860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b2efddb-6687-4cf5-8116-c08f1a638822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "080a37a6-bddd-4b30-b670-63edbd388a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adc53a42-52bb-4acd-ba2c-6b2298912b3b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccea1316-c9ab-47dd-807b-333be4e37219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4998ad9-2710-424c-a9fd-68f35747e0c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc0cfff-824e-46c8-a664-af377563835f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b163094-bb9e-4de9-b6d8-638b7bb98557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e27592fe-161d-4c4a-bdf2-c5618558206b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70dfca12-ebaf-475d-af27-820978413f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbbe6efa-ecc3-48a9-a3df-6006c75024e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a58e8808-a7a2-42b1-a18c-e0467d065512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "abf99894-8cc3-4167-8f18-403b8976b175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e88e1327-6c94-4bd7-899d-d9f3cbd4d8b8",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc41093-cf93-488b-8101-fd715a5a1d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d5832d5-2288-4b42-af25-ed779f66d65f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5be6fcec-1d4c-4bc8-80a8-4ef870859e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e087dde-07f2-4b97-a3fa-943191592548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "534d9592-5436-44db-a74b-c1d2fdf974fb",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50074bc8-cc15-4aae-8229-de04a84a7904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "610cfe33-10f0-4410-a8a1-d58d0822e7ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe95da0-ce3d-4170-a9ca-de0a98089801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1db9c8b4-cafb-41e2-a36a-1f3971dfb228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ecea4a2-32e7-4019-90f7-edd6001f870f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb924f44-3eab-493c-919a-5624df8edd6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "528420cd-4206-4258-b276-12f683f17a2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6710989-0b14-4411-9b0a-679eb517b0be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "54a518f3-ea3b-4cf3-bd7b-a257658e81d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492dbb36-4e8d-4267-a481-b0a477a308e5",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d9cd4f-bd27-4de3-9432-b1995c6b1138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7955ed2e-5187-47e7-9de2-4224915b4055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "758d4dfd-fa31-4ca0-8a77-7779f80eebbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c85a8c1-5784-475c-9051-05a22780c26f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caae8572-1e49-4830-8d80-7daaa35ab5e8",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f459e204-d9ec-4b3d-9430-cdf98c219160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd47c2fc-3d0b-4bc4-a807-e66e065a4005"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6e10bbc-18b9-45df-ab79-8c6281a03f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "58bccfcb-cf67-4fff-9d62-9ab4bfc1d85f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b7c580-ecaa-4a73-8d8e-946292b33f28",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf85358-a9f4-4fdb-a938-02c050203335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01cde2cf-39c4-4031-98be-e3d523eae298"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "400961e0-dd90-4f0b-a5a2-9c532ac2675e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae549656-e3e6-4f16-80db-19b4aefa7761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee0acb30-c175-4d94-8e77-9b25099d9208",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f416a0-28a1-4b57-9a92-3cef4d8c9d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0abd3f4-3dae-4a93-b764-a7a9359c13ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c27e386-8442-4c8e-8965-e2776f8cbbbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fa8c788-68d1-45a5-a446-5907b7c11160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "279e0766-7a8e-4bda-80ea-0adea2f93e07",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "420547d3-a7ff-40f8-9a9e-614141eda908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dbf1c60-78c1-440a-8310-5f08a51e0ccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e334eaa-a41b-4e9a-9793-ffa5dc2cee4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9152d46a-b405-43ce-8801-2ebd36919fae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5750e47-12f8-44b0-98fb-5e44a754180e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1794f751-dd2a-4703-9bee-aff90d4b9485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b60bb25c-4e42-4ff3-b7fa-84e759e8859e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd4cdf5-d134-4f24-95c5-a206e93bd9d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "2c8f9889-68ad-4393-8a12-683e991575c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad7927b4-8102-4ac2-a2bf-10504478a312",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1360688a-efc6-45e3-b57a-47ed22b7730f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9acebafa-9ebb-4d07-9694-3c43932fe0ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2da4f1b-2395-4cb3-9dae-5040d90c640d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4ecb0edc-192c-4492-8a78-d41c41efe683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee00612-c62b-4bcb-8d0e-4e89d72a035e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa3c4a8-7bcf-419a-9db1-195f8782d183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc362d15-66a4-4680-be68-ae2f4fc249d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a463a5-a4b6-4e99-aba8-51d14cf3cb0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d49291e-1f81-4021-868d-b91d22b8c216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5c20262-7509-4ac6-b361-fcf532c0097f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bce4b199-a232-4c35-8b14-13f25bd644d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0c29a3f-3774-4dbb-8b64-86df06d3ee66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc80667-b66b-467e-b98f-3df964d6865a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "21ccc249-eb3a-4793-948d-d74d9af75671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e1fe9bb-7cdc-47ab-9c24-684dd4f384e9",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c86d55a-6807-49e9-9450-25dcc6366120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "487ab417-2b9e-400a-9eea-d68eda776215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f51e4c4f-3336-4902-896d-0a275a0706a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b14d2473-ef4b-4715-8b54-9632cf089262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2754f66-7ecf-45d6-98fb-53833afb157f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04163145-f323-421e-90f8-69b11f40e657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f37919d-ab65-4fdc-9eb9-b61a1ce1801c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01fbee8d-8a94-495f-b093-bf49e0f18319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "551e0fbb-c311-40e4-9555-cc82b6182244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83ebb4bf-4c6b-4b20-8ffb-556567c2dcf5",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3acd8ce-93fa-480d-b7ea-b0339ad3c412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fde58f10-27e0-49cf-97a3-36a764686e37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc3dbf0-2b98-4866-9e1a-6cd1989f2236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bcf01608-209c-4b2d-9368-89fdaf785365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "827123dd-259c-4cc3-81c3-bd3da8f4d9c8",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75867feb-399e-4f46-b6d5-2603943490f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e713bfa-5eae-4429-b74e-4dfaf3984f49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca9a1d14-9eff-4e41-8b61-377d57beb4ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "53fa8701-69c0-4a1d-b4c2-869b97317d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "260bf3ef-7775-44c7-91b3-8dccf36acb08",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54630f0c-6dc2-484b-970f-532d0047f2d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee8568f6-f08b-47bd-b9ca-efda52ba0304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "984161b4-3576-477f-ae53-025b95c44536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "653dc543-b63c-4acc-9a37-38a14fc95040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5733959-760e-4e60-928c-8764fb90a97b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "031a5b4a-797f-4612-b616-aae27aa60181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65859c3f-b377-472b-a112-b328816477ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ae1e5e-46fc-45cc-8d30-eb304f174773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "014a95e4-248e-4c30-afad-f3668ed0c23d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "904c11ea-b137-4da1-90c3-532ed4a97381",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "375b848d-6321-4062-a6a7-92f8867beeee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7db5952a-e13c-48ab-97a7-86ed0f96ae1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7fd28d2-6699-4e36-a45d-0cff98ce877c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7ebba37-96dc-4e55-86bb-bf2951699d7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f67c469-5cd0-4885-9b74-deee44720d81",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54d074e7-e41f-46e1-9cf0-7b64b08e012e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5941e2d1-1702-4b8d-85f9-0c7c58cba2d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c720a4-2bf3-45ab-9fb6-b1117382a617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0579015f-2213-4957-a317-bad3bc6bd883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e976caa-0029-49e3-bee8-cfe05f60a717",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2076901c-6385-4934-8b76-bb162f820769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ed45acf-21dc-4cd3-be97-a28268a48681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c096d39-515b-46a6-b894-b63fe7e7c453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd2d15c3-b911-4b5e-9f54-7ff0c54d2f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f316c04-2559-4942-bf03-350808968d1a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b513d537-4207-40bd-86bd-50d2a36b98ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75fe515b-afa5-4bc0-ae28-eae9f64ea493"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7fb9f29-0a01-44b4-8392-61e01ce68243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b947923-c1f4-4329-9b71-fdbd6ca5075f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a34e92cd-3667-45b1-b8d8-cc42d8104d2d",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "882537d5-d11e-4fdf-a8d6-a3f197f95d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0fe9990-7006-452a-a6e4-d746cb071b90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23d14ecd-b9d0-4475-90b4-73f5c3446f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "37b4b016-8214-4e19-b193-5526bce4f18f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409bfb1a-9276-413d-a988-d467ce92b656",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62fb97d5-aca3-4524-9ea5-3567bf161def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0b348b3-6fd0-432a-bc36-d9d8fdf7886a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "734c0766-99dd-47d2-bee9-ecd542ceb41d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0877a91c-2459-45cb-9212-7586633f5c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee47eb3-8c2a-4392-b62d-302d98041347",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fceb9144-ab7e-4da8-b2cd-df107421536d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "067aa638-6a89-4c9e-a51f-85c5942bb07b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d755d371-9303-4d10-87f8-f019848f449c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9c51908-5210-419f-9a85-b288124b02fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd3f6dc-3b0f-4050-b79e-c348bfe9d300",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "521aa567-f248-4745-993a-9c6a54c16411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bd90c5e-ab61-4494-b811-cb311f3baee9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be77de4d-88e9-4f2c-9b8a-0829ce8df07a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5671d876-aeee-4594-ae7d-3b1be3a36546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb531f5-650c-496d-8b50-5bb96c3a6ba7",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40b66117-1ae0-45ed-9e20-a8ff5db7d1ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a040878b-95e8-4ba1-8650-06a053eebb5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a748ced1-320c-4f93-9396-2c33ea611e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aeca759c-aa4c-49ba-a8bb-26044d773752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "218e154a-a91e-4905-ae32-c27707106aa6",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d12f38be-b6fc-4d42-a843-83abff348555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "149375da-308c-4a30-bf88-adf572ade260"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9647f4-0188-489e-973d-c436157f08bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "522909fb-6bf3-4015-bccb-fa6218a7c178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b7c61f-5e9e-4eb8-b460-84dbd4b8b746",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa3346e4-9536-4f99-a052-6d56de807ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48dccb07-ff43-49e3-ae9c-1c2604212f1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10052bc7-1309-4dda-a3c1-e89129c4b2c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a80a1d67-ccf5-42a9-bd8b-fda49eeb7f4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca09c368-0666-456f-9a64-234c0a0a3b8d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d42cc58-05c4-405c-ab46-c4c8f680d1b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75c349c3-2fd9-49c4-afbf-6efb4dd331be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1814efe-0648-40f0-8106-0f5fa59e4406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "207c554e-f67e-4e3b-bc98-92dff36944ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaea95ac-d3f8-40cd-bb72-fc9716528365",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d52a50c-3645-42c5-9b69-5944345d8343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad0c6396-a7a3-4020-8a04-f347f799d971"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19872247-ece5-43a1-b3cf-3adff200ea18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3c1a70d-39bb-4216-b782-ea40666270b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b864dd5-63a8-42cf-9b89-9b3ad2f12105",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7932855-b1a7-4afb-8845-9d9c0e675055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c62312f5-8c82-4c1a-8560-81f6872f316c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3337a1b4-c904-4182-8c66-1bd50fea299c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a824460c-6fcb-4dab-8a85-6bafa7b5abee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbfd73df-fb0c-4fbc-95db-3e9578c0e4ea",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78eaf8fb-d572-4d2c-9f95-6b349fb4c108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d001dc8-3b3e-4537-aab1-dc10b3ce7b41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5046106-e5e1-4347-86b4-b05b0e893f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1aaf8d8e-1d69-4c23-b33d-c9541fb6960f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "450c883c-bf3f-4f8d-8638-afe2994a5fd6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1393dfb4-d107-451a-872b-f54852d735b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bf30893-7b7e-4b0f-b557-b6d5f2dd0316"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2681e7b4-1cc7-41bc-b60a-e82f4d8a11fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce77f501-1c2f-4eb9-bdf8-8944a74b8a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb04a52c-0f2b-431c-a578-1c7b9e39b946",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7325e48-ea8e-4917-859c-b32611a71163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a0ca9bc-158e-4978-b1ea-ada852b53f43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c4b726-9d24-4b3b-961c-535151915946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd2ccadc-3f54-485e-8397-6d51a8629a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33487b2a-e0cb-46b0-88fa-2493980998ed",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6452af46-7208-4086-b011-1518a1b3b07b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ead9a93e-37cf-4232-b0fc-b3f0de174fc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12912541-777e-4aeb-97c3-4db87ce83fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cc798c1-5dd0-449c-b2fc-9d709d7b4140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0b71546-eafc-41dd-9ec1-e7336ee46b10",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73eceb14-804c-4461-867d-b35fe61babd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ff872d5-d59d-4e1c-a067-340d93d65564"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c080e9-2e8d-422f-8ad8-83edde23aea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "298c33ef-870b-4f27-a85d-bdfaf4a55191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf348547-8590-40d8-98a1-00df618ebbf8",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a044c35-9d28-4afa-a1f3-b2a8c0ba4099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e5f3cf6-e2cf-48b3-93be-ee02bdb7d2ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be7befd3-e459-4066-9731-4e7368bcba62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2f9dc7e-6057-4fa3-9cea-05f42df52bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b219210-cae2-4766-981d-7762a4949fa7",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a36f56a4-b698-4401-8766-17e76d6bfd18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61635714-4eea-4e1f-9043-0dd666d8b2fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc6ad45-8237-4e76-9254-33a45dd89d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3520dc5d-884e-4a74-bf45-a61c6d94945f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b29e47f2-4ce5-4727-820d-2d7ac0bc7eda",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bac347e-bbed-4953-b320-aa513adef1b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c826b0cf-fb08-4478-9f36-792e64148889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93be45bf-6133-4101-9499-377f58fdef01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a5ac615-b441-4658-9d66-f0207ff46c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38ae54c6-6e61-41d9-9a1f-3fb68ebbaf5b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a96c2717-eb5b-43a9-b72f-ba1dfb45e87a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c62b4923-dc72-4730-a33d-fa3a5aee7fc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d395a740-31e1-4b19-b76a-33e8b70b9191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "be61775c-2f37-46b2-9048-190c7e7347be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a26db29-c183-4297-93e0-938b5a7ec587",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5a8fa6b-ba4d-4ba8-9608-c30e6771e31f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c2c6fc2-f1b5-462f-9085-f1dc0723ced0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7edc3096-ffb5-493c-8306-a0e4c2a91db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c51cc479-1e66-4ac2-8f3a-bba1a48e0a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8120937c-49df-44c8-bda9-44b74768945e",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce80d85-b1b2-4abf-bf58-a0a21cdb03e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c234abf-a903-44a5-851e-e2c62bd39560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c3b93b-194a-45fc-8cd2-be7bc78f9e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "51611008-a264-4902-87d3-014927688cf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9035ef7-3fcd-4355-ac8c-d09d3a53fd2f",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11514f18-4af5-4222-92db-aef2dc77f2ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "676cb3c1-2894-4017-9882-468910318ed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fecb0684-f75d-4fe0-b660-25fbadf9fd18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "78726d92-f39f-4436-b21d-221397362d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cea566f-d33b-4a5c-8c77-e0c8eb4e6966",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46194a90-8864-4fe1-a5d3-3b5582878c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3af91a3e-f3b2-4afb-9e3c-57014a955b98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d14d1975-0a33-4553-98f6-dbf312354a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc11eac5-025f-4bfb-89ac-e7a31342d590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7760fe70-cd8d-41c8-a2d2-f881c56f6aeb",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc0591b-c730-4f7f-9f31-24e037e4fe89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bef7fd3-7621-4fe0-9fbf-e96689e81152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b77442c-5769-4e7e-94d0-56bf2c972f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "03687008-b8de-4ecf-be77-9fd1fa0a9b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4363b1d-b538-4e78-89d1-234b1a53ddc6",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5173925-f828-41f2-9d6e-14d06da6ee62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "689f5e42-52c2-49bb-a11e-b1408be7fb35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b01847e5-b29f-483c-a7c0-55e44ca80f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0763aff-0096-4f92-ab1e-a4ce4fc3a595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e2f264e-b0a1-48e6-93be-a373d100a4ab",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b94923fc-c597-48c4-89b1-e4e182c859c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b12f6c8b-4769-41a0-9550-5fff2b332250"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd5402eb-f632-4c78-9234-89f5ae15e595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6784f61b-cbb6-42be-b746-11b895a7a4a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27090747-3f31-4e1b-ae57-6678de7d04bb",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e6fbe1-d7f4-480b-932c-4e7fc95785aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "007e6eab-c749-457f-82b6-dd830347a3bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa90763-f623-475a-b657-ae01d5302dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3f7b621-49c6-4a64-b90d-c2d187b7c33f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba5d8869-ec51-4fbe-902b-4eb5d87e497c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa94a907-6eeb-4c89-a2ca-eee011e287d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6fc5522-37ab-4898-a12b-b52ffd8ea117"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd782f3-d039-4761-b940-9d98d554c7bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "422da830-ffa4-4ee0-9191-0e7e596e74bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "165ea2bc-a433-4103-9657-a97a76bfe392",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b98e2ec-6901-4b12-8d5f-4a9630925618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08497ae6-b8c8-4ad7-81b9-76f6f2548e0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "245d9108-1141-44de-a89c-28854bda3340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e32572ca-2ec1-4203-ae7a-2c1176167fad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "552f4473-b6d4-4d72-86c1-9694c260c864",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac3a883-42d6-4262-862b-09149cdbdc3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce101465-5f0e-4062-adfd-e39be0bd4d9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17104b2d-ec6f-4fa4-85c9-a7c492be28c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "54ff19ed-c9d0-4387-8e22-f11804120c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f2a36a3-d33d-4f91-96d7-d5657e3b7e79",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83ecc9f6-5392-4da7-80ad-addc219a9fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20b5aa27-8ee6-451a-8898-7c992d2af0b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df3d8c62-393e-46d6-92c8-bd5990f0f60a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f402f834-61fe-4ac0-b533-095b4cfb5e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e0d17f-497c-4cff-a551-855d1b12884c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a160e8bd-b247-4990-ac81-4cf19b22c6dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7dcbb7a-f6f6-4a25-9d22-551c4e7a6159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8668b17c-a2e8-4f43-bde2-d0993ca6e219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "23ff09b5-768a-468b-90bd-329421430363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4d813e0-b47d-49cd-aa13-ad04be50aec1",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc72af60-372b-473f-af97-773fd545bbf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96e59add-ba1b-4eeb-a78c-83ef412db7f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f184544-1b1f-468b-aa6b-fda12d5acdef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0c17a43-dee8-43b8-84fe-06188a824326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "944d964d-6005-4f15-aa1b-b35615b40bba",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ff5f6d-76bb-4084-aa47-01ec26253cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22683e83-0713-4420-9dee-174ff0bc7095"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7580133f-0fb3-4fd1-872d-3e5377b06068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f1d3ab3-e957-4b98-b136-24de8ccebdf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b423446b-ae6c-4c2a-8108-990dd584e080",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5311368-7a61-4f44-b97c-1c79366f8418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91e29e17-f6d4-406a-b9a1-f76467186cbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ebe20f-dea8-4bf5-9ca1-372def549af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c1d163b-989b-47ac-a03f-e224b687901a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e8663f8-7572-4d40-ab06-ddcbd8ffd7b1",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b981fd6b-f11e-4ca3-8400-72b9bc5c1a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d17fd70c-92f5-446b-8e72-a43a0902c9f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18bea1da-a16e-4652-9d55-53ee6c436c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5921139-0931-4f10-89bd-7c8ae4da306b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5710c2cc-852c-4f6b-ba32-86b4163a0003",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcefa060-f325-409f-9fc4-1dd607ec4aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed8da6f6-c3fb-49b4-8a88-9b609d74db4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3567a18b-dede-4ee8-b8bc-6898dcbef77b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "541d2797-3f04-4244-bc2c-67b4f99c55eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0832411-6874-4fdd-993b-220dab60a43b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dcac33f-2696-4d7b-a0d8-924bcfac24f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "838ab667-69fe-4153-b07a-e2eb309ebe5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d59c0f9-9518-4be8-bbf4-869a63c01e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0c1149c-4dd8-4089-8436-32fd15b0f4d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e9a7da6-2d89-49bf-b7a8-e0a68eab4d23",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f512fe5-f306-45af-9611-955e89671b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "590777cc-f561-44d9-ad26-43c204b73e7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d753a85-7ffc-4b27-9b3d-765b55c8154e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba562430-3b25-40ec-9d57-f28d294d132c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a983c7-128d-4a8c-87e6-98e7cca9152e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd49e79-ccb0-45ca-93aa-0658949616a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fca8f05-7bd4-442d-ba1c-800e3a20752a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aeb262a-95e8-4f55-a0da-94ffd38b09bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d8da8b5-75a7-43c2-949a-817cd3153997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f2b1993-9d31-440c-95ef-04dd9f55c7b4",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b9e38a7-9e4c-4ca9-be22-662a5824dc0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d3d595f-a968-4aa9-bbc1-fdd1b1175fdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f423f466-7eb8-4da4-a929-37bef137cfff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "921fb1fa-e958-4066-851a-118c1ab0250f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17fc3be6-6786-4d86-aadd-903cdbd8c282",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41852b02-df32-4e61-a05c-8e4a1804ce74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aafbe6a-3394-4496-a739-0c42f70d1554"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fb83c2a-9f44-4009-8470-f35e36a3812e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b381abc-74d6-4ce2-bc52-30411cdc9809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d1796f-9918-4bec-92c8-cc364667af96",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17aefc32-add7-4085-aa96-125b30575f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9284b89d-f9e6-43cb-acff-4f5871745484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2fb68bb-b200-47fb-9bb1-6af67a2981ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "15f2c7e0-3ee0-4ad2-915e-b0a713df3d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c951a6bd-a01a-47d1-b7cd-2f19e11e6b63",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a94b027a-6f87-4639-a596-8f90a5d1e179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b937fa34-1060-4476-b32d-fddc87814793"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94bf8ef4-3dc4-40d1-b269-6abb10b50016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1eae9d4-d56d-43cf-a884-af11412327e9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fc7a6964-e031-43b9-a6cb-19a0574b5875",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "21f9d74c-0932-4c9e-b288-86ce1cc295ca",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec2c7d33-6301-4c7f-a7c2-cc57500ac74d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c048c14-6211-4c86-9c05-88f2947d7453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a546f7b-ca1d-4b1a-8437-eb16e15410b1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "3799e775-41ef-4b33-849b-7a4f610415d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abebc782-5132-4fdf-9458-ea96da208199",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "226b85bd-9e76-45d3-ae23-9de819c0f792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "00738f24-6b70-4c10-99e4-7c28a9dcba13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70395692-7ddb-4d05-a6be-fd18b0a291e7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "018f956a-03a9-417c-a488-45ec078e8649"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0160597b-0bca-4349-a022-24a475068806",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7321d6f-406e-48cb-b949-fae23bc6b886"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d29ff809-363f-4fc9-8383-6d8429563e21",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6561336b-a9a0-476b-83ed-c0497d99b94a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ae2d08a3-8999-4f8d-a2cc-2d333bba6ae6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "33db62ba-4183-477d-a606-c83f31f51f23"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fd99dc73-bf1a-413c-a01d-dcd27e3ad8cc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ec68589d-8d0e-4ac7-876b-ba8e84407d5a"
                }
              }
            ]
          },
          {
            "id": "81fd7cbb-c25a-4e7c-9d92-f09c618aae76",
            "name": "Positive Testing",
            "item": [
              {
                "id": "66c7a42d-d71e-468a-a644-4951a3f63c2c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9104f6eb-cb81-4cf4-b810-eec44bb123c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json();",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json();",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json();",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5387c8d6-fe33-485c-a38e-d9533eb318eb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a45fd89-700c-4b97-9cf0-1f0a9d9236f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "408259ec-a276-401d-bab7-e92954935c20"
                    }
                  }
                ]
              },
              {
                "id": "5e186abd-4f27-45dc-bf73-732fd440bb37",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ad81cf1-4e33-4abe-be12-a596e2d9e4e4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0c59fc5c-0674-4999-9aa0-79d60c90eb22"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "63011646-121b-432a-ba86-c4d2e78b8ad6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "33d8d310-7c61-4b8c-b55e-a2f25037da7f"
                    }
                  }
                ]
              },
              {
                "id": "4a979dd0-d0ef-46bd-b19a-db9952e35eae",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4f833ce-f33a-4339-ad44-922d4836841c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json();",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9501ea6d-aea5-4ee9-a96f-2761ce3abd26"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea5dfd49-ff35-472f-a974-7cb9740c95fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "abc33633-4806-4283-9e78-69222ba87df4"
                    }
                  }
                ]
              },
              {
                "id": "d89d7893-35ca-46d2-b1f9-1b1346c409fe",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1fcc881-a555-4179-baa8-a18175b64ebf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "280de6b8-07f0-4fcf-91ac-66d58d4e41b7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f616ce09-ca0d-4f11-95db-d6edf8d16a40",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "1fe0f232-936c-4978-93a4-bc4d6ea20a42"
                    }
                  }
                ]
              },
              {
                "id": "1b7d9b73-8899-4df6-ae94-f2e7eccd85b2",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "111c038e-d7e9-4173-8dcc-0f3e1f9f836c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e33878a4-dc64-4d50-a4a1-58249c0df2a2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c2a94675-6bd4-4de0-878e-14f30f90dc6a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "99e84dae-2919-46bf-9299-a4bf54d7b80b"
                    }
                  }
                ]
              },
              {
                "id": "0d04edde-6660-4d99-963e-08fae8dc70db",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7dbd810c-acb8-4e51-b358-f40a49218e80",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0851831d-daf5-42ca-8cd3-f28ed26c5c8c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5d8bb505-c674-4535-854f-02e5b1532ad1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d38d30bb-05b7-42c6-ae99-a62b4c647071"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bb01fb87-4107-47e8-9381-9e533262845f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "52628a34-046a-49e6-a4b8-3a0545c9d6fb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5c61d51e-ef87-4230-9375-161601d8fc4a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5c80da2f-28e0-466b-bb33-3b64553d7c26"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c0800b78-2e42-4011-bca7-5b032bdc8bad",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "943040f4-f9e2-4e41-b6a4-68f171a8960f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bd87cd97-5890-45bc-83d9-51dd2371799d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cebb1741-8d4a-4a72-be6b-b268d87f30bf"
            }
          }
        ]
      },
      {
        "id": "6f122390-bfc2-4caf-a050-a1bdb3e0eeb6",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "39f0b37e-4544-4355-b587-6dd3d54577e8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9564011e-d8dc-4fff-b77e-4627d4f0cf1a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "517df576-f414-4e4c-8ee2-912bf17724a5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c9627e-128c-43e9-b427-a0e41569a03b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adcacef8-b17c-48ca-a456-f15a6a60b8f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2877566-5d82-49de-a877-ca5a955beaa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "81c02a5e-9540-41d5-bcbb-3ae2b2472bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f04c82e3-cd95-4fff-a029-f18f15a5be45",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ca1634-b198-4dac-8231-ee2192c811fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8f695e2-a24c-4457-87d6-38733863fe3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b885885c-caf9-4399-a24f-8b1c1708676e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fee26b3a-082d-46ea-b8f4-40cd2c9046a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4611803-4261-433c-ac5e-4a359d370aba",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b6ca347-ca35-4b00-a5e2-17f43cdada18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2697e2d8-7d97-478a-b4b9-421d4353aade"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcfac330-ae52-44a2-b471-fec1e3653c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "70a39e32-8f67-443a-aa57-df4c4f2c2de9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e66ac15-d24d-4207-8242-9e6b922ef132",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea39fc0f-c4d6-46aa-90fa-33c5bfcf72d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b5a378e-509d-401a-955a-471b22326fd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6668df02-74eb-4260-8a67-81b49b331ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7990e69-5ded-45fc-93bc-700e16377429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46b36802-42a7-4f9c-9e97-321379b586a3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eef6232-ec1d-45d8-9f80-a9bf3acc9820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29d6d537-3ff4-4342-95c7-e54286b6e0cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c266f67-6347-409a-bb0e-1b0a8148d311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6611040-080e-440c-bdfe-588f74bafc69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc8f54e-0e30-4e13-a8c1-eeeda72ce85b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0aad0da-4175-4b9f-96ed-5dcb28f96808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2979460-be66-46c0-b6b3-03aac60e7ef8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be9ef9fe-7d13-49ee-8a2f-bb47f7d6c5ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "54f289d1-a563-421b-b3b8-e7642a1f3959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "742b1cea-7b1c-4886-9836-ac3f8125b192",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c46251-3cca-44f9-af21-66a6d9187b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8f3df53-f101-4344-8e1e-929e8dc236c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8bf8391-0013-4925-8aa4-778ba1a0b67b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "33fc4c30-770e-4352-b4ec-915461dd3ce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f243d66-9b2a-4352-97a4-030e6e12334c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6a3a776-acf2-4c63-930f-5357b45e3024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1a27a4d-9eaa-494f-a194-020f4d366e88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1660871-ad21-45b3-aa65-20c41f06c5e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "78d47379-d000-4168-9364-c620a3b89dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9b097b9-c814-4337-8362-73386be5250d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "005f1577-a418-46ee-bff5-8e3be126b8c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0ff7f4e-64f5-413b-b039-8d372b1f9dd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f2b8033-ad3e-4ce0-a6e6-622d5e48510a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0433b5fc-9229-4e8f-80f8-950863067f79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42522c72-e984-47f4-8a6b-1532bcbcff2f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f86f0e7d-2340-43df-8d1d-ab2fe41f2f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "352698d8-ac50-4c7e-8b9c-628a82f1382e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be1e76c-08cb-4eaf-923c-b5842fc5b358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "669921fb-70ad-4ecc-a8db-bb490229e988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef53f8f-0a5f-4168-b9f7-7ebecf5caf80",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f1469b-02d9-4c40-9a35-305cb6f15c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fcf79f0-031f-440f-a044-335fb5c396e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d7233e-37b2-4f51-9066-101a6e96f284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0f0d9eb6-76e6-49dd-8e17-2a8d38d996cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "072450cc-227c-4214-8397-655a8d985949",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8020235c-dbe3-42d2-bb02-d1e2d101d443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1bcef89-1a4b-4286-9109-dbd873bc6194"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86cc80b7-d1e8-4271-bd9e-fee20f895d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f772e21e-9a9b-460a-8b69-fe9c353c783c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfdddfd0-6d67-487a-9fd2-f6d3760dcd37",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c58958f7-bb77-4454-a2bd-cddb3361bf5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "def92bcf-96a4-4020-8599-bdd9667a1157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9c38f98-e660-41b0-8e6d-12d211af6624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c823663-11de-4c51-8557-ef489d10c35f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc1f294-0ec8-4583-ae64-cf8dd76a3d3b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e75e7e-db0e-46d5-b3c0-d58baf1d3e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11a59043-a63f-4787-bebc-f59cc7612247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7943623-9dc3-49c8-8212-276064c2f3c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c6fcec7-b968-4bd4-ac6b-2ba7e001931a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "714acb61-6089-4832-8a8f-8ffac9181cd1",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d638763-1906-42fc-93bd-2a6a30f687f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6470fa6f-c86b-439e-b3e6-81f9ebe39d09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c400ad-9a8e-400c-bd0f-615970d0ebca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0155c77a-e83a-4be2-9bf8-2ca3dcd13c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d97737cc-6018-4189-85c8-f213bf2f2b52",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00419a59-728f-4fd8-b5f1-7556c3cb4eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15e65965-0feb-4bc6-8aaa-eaab9ff4b6f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f404fdbf-cbc0-4620-89ad-efdf3ba8fd72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1da1a2a4-cd97-4ec7-8286-f2a1332db475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acb0cad0-3f89-465f-9ceb-24c12d715afb",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8ee82d3-59e6-46a9-820d-1c2c35fe8f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82e7ab15-942f-403f-b929-287d3dda56e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e807e9fa-0b4c-49ec-a6fa-20d480f18e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac422b31-bebd-47ea-aca0-4bc7c445490d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11c4b7bd-8e68-4eff-abff-db2e5e951d65",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51fd50be-0242-47e5-8008-8fd07531b8e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9aa07af-4542-4737-bd58-a6750e185bfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb1a475d-2b34-49c8-a118-23cc82906703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "50c82871-796c-4e2c-bc19-1520580fe49d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "478cd8c2-eaa3-42d6-bae9-7c0626104d63",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "534d006f-fce8-4780-8663-44521a86f1dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "592de9bc-cdb3-4711-8ce5-9666029e80ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64ad1f54-1ace-4460-920e-5841fea7f5c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d52f59f0-bda3-4d0e-a806-017e1e0819a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fccb99b-e520-41e4-9fca-434b41af4f1c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6bbe20b-28d6-4311-bd3d-a8ed1293c5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbddf12e-42e4-46d1-acab-7f5fe2062127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "149b8172-8f1a-4422-9881-cb5e6e1ed10a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09fe31e2-1b7d-4b84-8cb9-043cf398a18f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4289cf0-c3f9-40b0-b788-4d4e586ededc",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8eb7b32-11b4-4bf0-9006-52bb4b7e4767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eb689a8-dad9-454b-bb70-a595f328b73a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b56787f2-3228-4921-a280-e37f37a4c363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9d5e1ca-17d3-4ac7-9a4b-506f9c73ef87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc57c18-3a8a-4296-9596-d5bba40fabf1",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb5f62fa-8a17-47f8-976d-694659c0195e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce1d4b36-6096-42c4-82ed-b8345ee65c43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee99c63-776a-4e1a-a6a5-1e34d50cba82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "654b797c-137b-4e21-96bb-1ef50136171f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a54109-08df-46c7-8134-add223ec3b70",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2241b1-9b6a-470f-8d0e-61e2e9fc1fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31ca4997-b21c-4259-ad7f-b19a79bc42cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4795be4a-b897-4666-9cb7-9f30ab69456e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e680eca0-5275-4dd2-a134-967029ebfee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c16a7c5-d6a5-4115-b27e-72e38ac66432",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "116c5cb1-6ec9-481b-b6e1-d562ec74b008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1fa05ec-d716-4e67-8488-02d367040a58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2ec0fe-dbe4-45e9-ad35-a7a6c3dd5afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6a281a1-c524-4b00-bf36-256736ea8dbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "757b5cdd-661c-4097-9c1a-25d32120c8fa",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca019eee-432a-4c98-a126-667a644365df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19f8caba-c9cf-4265-8f48-8ced002732a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce75e09-87ad-4a43-8aee-ac26cf34b704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f239ad42-530f-42e6-b85b-dccf4dcaf0c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e99e645-2d8a-462a-a4ca-e64c695d0bd6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee0b0c9f-39c1-4911-b579-b793eaa59ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a8fd7d6-0e22-4220-af9c-c94f83f18027"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca55b51f-d0a6-4235-a711-514836e5e3d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcfc2b30-5654-48f5-b6a0-2bd2ddd25ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "535edaa2-3849-427d-b67e-31d946332144",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f6dbd3e-5d79-46b8-8f09-5d42873885e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d351fd9-dcb8-4a71-9849-98a4eadb2326"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeda102f-eaa4-460c-a7ae-1d5071be161a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db220c18-363f-49b6-8095-e84da96d61c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff6bc42-ce19-4ed5-8726-3eb9bc9a62d3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70be85ff-89d8-4f89-973e-c9648db1cb70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a88a7325-428e-4ce1-93cf-2dc7a2090b40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c280c8b-39a3-4631-824f-4f8a001fca21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76f49de0-1d83-4e36-acf7-96eba22b9946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4463e7e-aa16-4ae6-9efe-e38677e6dfd8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a0065c3-d261-4fd3-81b6-da67bfd3b1a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89a872bd-7b20-4e6f-80d8-d4fc90fef277"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d33052-9e62-4d80-a5de-482d743631a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "398a613d-5359-4678-b8bb-98553a7d76fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20bcf06e-425c-4998-89bb-1733aea0438e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f52499-1780-47e9-a637-bea2c41c1f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3345da50-d32a-4d01-95cf-e90740559f33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d92f9fff-ccd6-4fb8-9e16-00c1c2b53d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "769e81eb-f434-48db-a743-bf953b1b560e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "094c0942-6751-4b2d-9212-b164c21861b8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aceba7a-27f2-4a53-b651-647fd5786a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "948b9b72-2e09-48c8-a03a-9ab98b1f44af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "508b9da3-1489-44a6-acda-823d12d95529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d28ce8a4-ec37-4b07-a090-15937ddf988f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dd7cf31-0571-4b71-ab2e-ad7ebd3a445c",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b729fcd5-2fd4-4bb3-aa1f-5626996f7d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cdd09f7-7575-4ef2-93f8-fcea95a72f72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4bf2536-f03a-4be2-baa8-ac3951389b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "527c8dd3-17a0-494f-a3b6-380de54af537"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1941139b-baad-49da-883b-98715854b2d5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "65a682a5-b300-4e74-bc7f-d95b57ba449f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02b6b670-a3c0-4e5a-8efe-eddb03746e09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e6b8d3b-72b4-4cf4-9e82-787a6f16b876"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "070892e0-f4a7-4398-87cb-f08a0ee7d04d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d5aa1e9d-b017-4be9-9a53-6e1370324004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a21cbc36-4398-43df-9039-61c506d2a389",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff567fe0-8870-4e52-938c-a5118d8bfe9e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "db937a64-215a-4f56-bcb6-e98014c841c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b474af-3eef-4bf6-b268-d3408dac4fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4c82c5c7-7148-4298-957a-75ecf66fb972"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4602a538-e033-4c15-ad3e-3c9007542cc5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63f6ee55-ae61-43e2-bb83-ea2106c5c427"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7670c05-f7dc-40ff-8777-c467a45c50dc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "73de39e8-a884-4101-bec4-4f073ad430a3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a8f74150-bfda-4a1f-84cf-f759c28c9962",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4c616b5d-200e-4a39-b0b5-8ad7372929d6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dcc67db1-70b7-402f-b1ff-400e2dbcb563",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d3af9675-9217-4c93-ad57-6b1ea882b231"
            }
          }
        ]
      },
      {
        "id": "b44f7017-9028-4071-ad75-fdb062394873",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "22a276d6-6d82-471c-bce6-054d790e1838",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b7a9b117-ad1d-4275-bb82-9d3e017859ce",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a7f1580d-6380-4721-a01e-9bff8a290076",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb4f5b7-c9d9-48aa-8958-80a1e0a9d1a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a753de0c-d897-4b51-972f-7a15b64fdec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72dd33a2-4107-40ad-b34c-6b363bd9fe46",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8424ca0-6018-447e-b97d-9c204268976b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "233257da-268a-4496-850b-f39287f29abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba18a8f-b921-4bc0-ba81-1f92827202d0",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ca8f62-a0f3-4e4c-83f6-61a8c2a85cb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "903aecbf-fcd8-4f53-9201-d04b064a0e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567efcf7-f62b-4e03-87d7-417403b4ff32",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aac3985-0d7f-40bc-9959-cef33f36e9cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3afc7bc9-eb0a-42e3-a5f0-51ae9a5e2c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "450c8aa9-e599-43f8-9970-6c8f85c36293",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5beb280-eb12-4580-898f-5e480888bdd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a9c32da-e67a-4a1e-a3cb-9bd37efaa92d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e47ea04e-7be2-42a7-aef7-f0fdd51bacad",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9469b791-1148-4293-98e1-6efb8996648a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e3c76a4-b73a-4771-834d-5dbac5702d05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac31839-89b1-4cf8-b93d-9c2c924bb151",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b42e98e9-c26e-47ec-80f4-1e9c55279a11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6f2764f-6da9-41e0-a69c-d6c86489966a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af26a436-11c5-4e52-98ef-96a40f83fcac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da513d4b-2fcc-4525-9a5c-61cca17a5070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f52d2cd4-d492-439d-a963-b904df2a8ef5",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0821b6a6-48cc-4d1a-9993-21cb570e7e43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9969dd88-5278-449e-a285-a273451d7a14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ef29c7-842b-47ca-b446-f563ec1fc988",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "145eb51d-4972-4937-b9f1-f71af11bedce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8557affc-f903-4912-bc6a-6dbb3908e486",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "890ea2ef-3f4c-4c4e-8801-fa9292d79411",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "162f0465-b2ee-46c3-8427-1750db37bf91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3dade23-35fb-4ce4-8887-247a2b8d4a1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62bcf871-9660-4cb6-93b2-06e51216b30b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "073f49ef-d9e6-4c49-a9d9-18f26e98fe85",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0230a71-1826-4e4a-9c97-04bc71b2e535",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61dddfb3-c29c-4855-a19e-9479b89b2dae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8d28154-cb70-4f12-a61d-5c2b8a55982a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd5c3bc6-0ac4-4625-8510-1bc253758edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a0dfcc5-ac80-42df-9bcd-1da8ad2ec660",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b91cf751-9f1c-48a4-9236-00a5085583b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d308300-1698-40b0-9b95-70950d7e7025"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71dbb0e-4e59-4738-9df4-082976541f74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e69871d-fd41-41cd-8567-4e3d608717c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "640f9fcd-a341-49f3-901c-234b4813b6e7",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ab0950-b14c-40b2-93a5-986e80e55515",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d49c602-5772-4d68-82f9-25ddcdb0a271"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "323abf61-8bcb-4f79-8de8-5e118e55cc64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1a12a5b-cd33-4ac6-82c9-5dd519aaee54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ef57e3-bb58-4c2f-af25-d5d83f707608",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5b7e049-5772-4a80-9118-3096e36542cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "801df9a9-dea0-497e-b075-1b5e13fd7cea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c3bd5a1-7963-4d09-a542-4fc220c11535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d06562f-e67d-41ce-a3df-d1ae19dc2258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ad7d57-eb70-4d99-bc17-869c1c53e192",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92d269dc-b7e6-410c-a429-394a19247fb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5b7c14f-a26a-4770-9f62-576bd2741c01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d3db3a-05f4-4226-a838-83b1dddad316",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb39268c-8c50-4c39-857d-78fecbb21785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a2f2817-9abe-436f-bf96-c7d5de02219c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "374804c3-2732-4ab2-a49f-9e8c374f805e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b172e185-bfaa-41f2-bc1f-87a53f72b402"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cacc684-dc8a-4955-b8e8-5b4909bd2f24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa35c222-7ead-48a7-8672-2a726e7a39fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2026c3ba-2eb8-4e43-97d7-d5b728d17031",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d29ab5-4308-4f33-8ee5-c1ecec809083",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79fb25a2-57d4-4af9-b664-77dcab4f3723"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9956295-e21f-4f93-b5bb-dcafac571c4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c67979b3-5113-4363-9120-37f5e226a8e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b0d086-9d88-4e11-8ed5-49c7694d6aaa",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f455acb1-9ec6-43cc-b553-eb43ccbc8385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dfc5718-43fe-4bb1-8167-0911cbd13353"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ab3fa7-c2af-470a-aa5c-db7b55a8fca6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f684dd39-9b31-42ae-8011-84ee6ab3877d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3561810-8609-4214-b83f-bf0386afe1a2",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e362a356-daf9-4eee-88bb-68e90a4a168f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82051caa-7b39-487a-b9c0-483f7d1c1c80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb84f823-af8c-41d4-a478-d0f723e91a67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5d3a420-67a9-4ff0-899d-763fc42795b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4507e8d-baf4-43c9-bc77-e46fc6d5f4fe",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9394dbd2-a3ab-4d3e-aec2-5bc92988c0b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e3ece94-206f-4da5-9443-539aea40bac0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a923f9-a417-4396-8dd5-0eead0574ae4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ad4f95c-e87a-42ca-a9ce-20c9171215a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38b9b707-9488-441b-9126-ecfc840e932f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "085c1df2-5db5-47f0-b3fd-ebb8634b7671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99164fbf-04b9-4d43-bf04-1427d21963ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da244baa-e0d7-4684-b25f-15a8a166de3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "411f09fe-daff-4d09-8d47-921a8b8024cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "183637ae-150e-4674-b408-5e484245dfc7",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0146e9cd-4b06-4de1-9b9d-426ad800800b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1fca5a4-6d60-4a03-993c-47cde74f49dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a23b1cf-cbf1-4eed-a5cb-0a3c3273dbad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5a9ca1c-3944-45bb-ab9a-21cbe973157f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414b713c-1a05-4df8-bd7a-f3864d25a72d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6755629-1131-4e75-82cd-4526277bce5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89b9e6bd-6d4a-486e-bc74-b0434d8b1092"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6ae764-2642-498e-88dc-b413b49acbba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32043429-839f-4c07-b4e9-fcc05bcad760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b74c80-df7e-4b30-b593-dd60e3e8c402",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5a7a059-8e0e-452e-bb35-0a04acba2b57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25cb572f-e548-4d7a-901a-b981bce3363d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "409b97e0-9b8e-42bb-adc9-8d7e1db2c007",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8d11c9b-a0fa-4f31-bd94-e1575cfa8da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "becaf818-ecc2-441e-a8ec-820435ac0920",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85cf6683-22bd-41b0-af22-1b08835a7858",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb1a5056-a8e9-4f84-b2b0-14659f38b8fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c06fe9-8365-43f8-8433-2ac8b0b01200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "679bcb06-5b75-44c6-8fb6-20286a7fcc8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5ab43d2-f08f-4855-8101-303d8296234a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb4e8140-92cd-41ff-ad66-ddaaabea200c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e8a2c51-d08e-4dc1-a269-064d73709d95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b2e58f3-72a0-4fc0-9534-584377ff7f1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "522a188f-59e2-4a90-a1d4-c44d218f94ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7460c1b1-166c-4997-a9fe-35bc2d0b7555",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "697842ee-a0aa-4beb-9e4e-7a074fe71962",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af695824-2391-4bd8-8629-5deea1a56e74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7281c323-3a44-4594-a0e8-733f3ce298a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc04e16f-847e-4f18-88be-c7475f71617b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9a16935-61c7-47cd-98e3-210afd45ac9a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da40619-2944-421b-bfc6-13a22ee1f1b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ca6dc2a-4402-43cc-a259-c2befbc7ae0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6acdaedd-86ed-4a9d-93cf-e9c03425f5b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9acd4e8b-c469-4979-9011-ec41e4434693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b0049a1-09f5-41c6-9b3b-c882259fa32e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e84b0d-f0bf-4bac-b419-8a81e73557c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c02e579-90e3-4403-b025-d06b42a841f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7754d435-2223-4a81-8d0f-21b9c4461e2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "768fa982-feee-47f2-84f7-866f42c3b4ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89f60bd8-87a3-45db-a876-953fb6b8bcd4",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb6b46f-8512-4255-a191-f56cd21d4802",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d24cd7df-1db1-4181-a351-454fdb1c2c1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf19e13-389f-4632-abed-0a630baf055a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e28b13f-6c52-492c-bdc9-b07cb8ddaf50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2058929-fe37-49f5-a7b8-8feb96bc8c62",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d63a0665-e358-42e7-87cf-4db2ba5de0bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa4b5282-d33d-4a40-a534-cee196e99626"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a107c9-fe3c-4401-94ab-1d7836023706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66f4523f-c8af-4ee3-bd5c-6a1e2dd34b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "021a2946-e57a-436a-be22-22e0cc8e3d95",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16b0c84e-c1be-47ea-8f4b-4c6831ad8981",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cd685a8-d44d-4f72-8fd3-0359f74982a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab947eb-003c-447a-8916-12c12c56d290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00d07c97-9cf6-48e6-8713-cf34c1f1a444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ccd889f-3d6d-496c-ba7c-3f04efe87b4d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d5ce8a2-cbc1-4c81-94dc-c058b0ac76b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4331763-5b23-46a0-ad44-f9cf74d6ad57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5337ed99-6b30-47b8-9b85-26c660c3cf49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ed31d58-0c63-4dec-b63f-12f606708ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a09ac90-34d9-4bab-81bc-8af03beb6047",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a4e8245-c227-4757-b72e-6cbc7693179e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78f787ab-ce60-4c0b-a1ae-85c02168afbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e510e0e-7aed-4cda-9180-71decf56ebd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a35b3422-7753-4823-8739-a45b9b6f2c75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a77e4e2-0be4-4496-bf75-1bee98e578c5",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ed3b91-f688-44ea-a0bb-83d4de1313fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fc5b139-21ce-400b-a708-2e00e662b723"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6921a961-a2fc-449e-ba7a-ac663456cd3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd6966b0-27c3-433b-95d3-ce77194f4ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e6e3e6b-31b0-4296-8485-40c73dd99f97",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6949357-3d41-4101-ad48-fc346be27cc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a3e6697-9d27-44f3-8398-703bbcdb5ea2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "694f8e7c-cf0e-49f5-a58b-079d9e00aab7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf2af57e-91cc-46cc-9498-ba96f344ae61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee9d9372-dd91-412f-b5f5-39544f78c41d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5af64f6-fede-4e56-951a-db95205ff397",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2f87169-c3f7-4950-90f8-93cc47251adb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8df9307-1271-4200-a8fc-99c36f1a77bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1330a0a7-989e-41ac-830c-f8f34b386cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "013e8852-f37e-443f-906c-55052bddb29d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2806d0a8-acb5-4279-b4c6-983acb55264a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34227f44-0763-4745-8a8c-8eaa63433913"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd8ae5e-3108-44fc-a25e-80fa024afa25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e085f3f1-f27f-45eb-8c32-15c89f0c1293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5451587f-8cd2-4789-9012-88e32f2f4f5b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02ef0d32-2074-4f12-8e3a-a84399f2d91c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f14436cc-45b4-40ae-bb41-2ad9332399d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1095d61-b28c-4b10-8caf-5f4b541139c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ef5d407-4b8e-4659-9cf7-e577aac17721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a6b6ec7-f6cf-481e-9026-7770795e7d5a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "548eaeca-dab4-425a-80bd-0881031e9adb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4769607-c629-4b49-b2b9-ed308eafb22c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48838668-d605-4901-8303-72ab2463f598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da99ebbd-35c3-4087-bc68-dbf0006784c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f047519a-ff3f-488c-9fa8-14822f119688",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f87c900-3a94-49f8-8682-4edc44c3150a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b47399f-50d5-4a99-b0c0-3ca33e4ce091"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31733796-8f5a-475f-916b-0d15144d68e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1787f1e-68ed-4c62-9818-e23d6e6a029a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38dc9f15-435e-4e5e-a627-c2582c48a6b8",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab2d247-56ef-49fe-b003-622e0a6097c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a07c3252-ad82-4344-8c40-45dea8d3e5cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6541fff4-397f-4475-9394-f010f92ddf10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f47b2f5e-0af7-4123-b27f-e3b084296e88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ef6b6d-f632-403d-8925-7e1c47a2556f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95063f85-7ed1-4563-9604-a9e90d7beb7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91253c7d-d155-4ff1-b4db-33f657e8a359"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ec43ce-794c-47da-92fe-91f46a5b90e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e39068ae-85cc-46e4-b249-a1df87f94786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf932132-b01d-4614-8f48-de5d7586559f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f29980-76ec-42a3-96ad-b35bf98a9fb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "265af2b5-9c2a-4f39-b026-b3df520639fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df614603-d995-497a-898a-229c7dc25293",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6b67a85-ecf8-4b37-b94f-6d730b739a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb0e459-0910-471f-9215-730f54dfd6f2",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f476e4d-f691-44a7-ae17-1a8416df764e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d4613e5-6dda-4f55-a21a-b82f3ada2705"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56680b74-9c1a-472b-b82a-25c10c613077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52eeac8b-a103-4bf0-95ed-5bcda6af80b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "217714cd-b53f-4629-a047-741086ad0c58",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f5f0834-a379-4970-86d1-b531f0476506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec9047bd-0138-4047-8bd9-354600af4a51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c202b60-38c7-4acc-a4ff-7d3537346772",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3962a282-f6c4-487e-9398-861a5d0375b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6fdc2ff-0c15-4d98-8de0-44b38add6147",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d8b779-6a3e-4e6f-8f1b-8024b087002e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecab84ab-2ec9-4f4f-a94f-07562425b5a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2731bee-d05b-4dbd-bdfb-f00f1c14ffa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddc3ec74-ce32-47e8-85e6-638614a0170e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c8df288-df80-4566-8328-60fd41b9dc98",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e59bce73-2733-4efe-9fa8-dee7313878a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "330396b9-8788-4db4-b383-b60c1be7a5f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae7569a4-aca6-4286-ba93-4ce9567f3fc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b5d6fb2-96a6-4ffd-85a7-48ce5cae5aa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eed3e3b-4f49-4d5f-9c0b-8af625c68ebe",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "039e57f3-036e-4fbb-a930-b192000d9099",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "262bf049-6246-4a87-af2d-a5c84af2ba65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa022303-e81c-454b-971b-e50fbb34b684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "399da633-8e27-425d-bd85-78d8d786a53a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b2a5df-83b4-4d01-90bb-21faf9d8d27d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "172fff1a-242c-4c22-8736-f1034bf48103",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a8ca62a-33d7-43f1-b4d9-822d21361b64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d28b023-0bf1-46c0-b5a0-f4656ae6d739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b21b90dd-6d8f-4af2-a278-31f73d8e8a16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf252848-a534-44c8-a603-b159f27ac8a8",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7878194f-fea6-4309-a944-bccf3378f64e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa9ab3f2-da9a-4aad-9c10-79317b51be40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3140a791-56c6-49cf-876e-6aec8704a46a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac3e4313-4731-45a6-a1e9-0aa1cc314a5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "855ba977-e684-476b-824b-9dbb7fa5706a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6cc30c4-eedf-457e-bded-ce31f59af59f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "575d530e-b551-417b-a50e-8520b7681dbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0852e218-bc05-4568-8619-8b0e77619b3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38b89577-0966-480c-a894-c29c5aeb0bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50d8c284-70cb-4930-b951-732a759dbed6",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c112bd8a-a1bd-48fa-8cc4-f7adac6647be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e91aa768-835c-46c6-ad73-b87eb72664f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce6eb3c4-aa12-442e-b9c8-9289b58d5445",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "048a18db-957c-4b5e-bf22-89b4177f8d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e469c2-715d-4f70-afa4-d007b4a8fead",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89d39977-1e10-4398-9546-3382d92316eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efc9780d-0f6a-44f1-ac94-1a13b93d87fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76143924-5e71-4e25-af5e-af9396a7ae85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cf01149-1aa9-4b03-b02c-44feee905c38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf23faa-5e9d-4271-9183-d3197a4261fe",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43306da1-34d5-4a68-9061-d4bd64627b3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35734bd7-f9d6-4e90-bb6c-0b1540df5bb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c47008-7728-476b-9279-873288986e88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0deecde-0f38-4857-bdaa-1522669da3cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f097a0-9bdf-4a15-a8c9-9da57c6086ee",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "466101e3-36de-4464-b5a7-4f625d021b15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0def1e4a-8fcc-4068-b484-d643c8ba1dde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5068666f-badd-4779-b30a-a1f8135740ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "782c182a-3f29-4e9b-89a3-76e90688c726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de474de-2e57-4575-82b2-a3afba5583fb",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad7bf17-1c62-4db8-a7c1-a2ca473ae8c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c82b56d1-ac46-44e7-b8dc-4df7f034b36f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d063824-1e4f-4b36-a726-9a9fc590ef2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0b6c00f-90c8-4d85-b81f-ef07ea13cc1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49eac97c-6947-4f94-8a25-ae7880c16423",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35cae5c4-5563-443a-af75-cff820fe4b8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b95fa065-e9ba-468a-a18b-9b620f7db355"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90086d63-f9c1-4f01-92e5-d9b4372923fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62f63bfc-e38e-4721-be34-201f1c57a532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2457d547-4a05-419f-b1ef-3dd3b620d9ef",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f5188b8-0999-48f7-b37c-0224c714394f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f8da9ff-6a9c-4436-8180-8a21a843023c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bca4863-607a-41c8-8ce1-cf5cf2064d7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2442bb88-b38f-4628-a51b-655888eb5848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e8b6243-c908-4e1b-9398-a25d82b11d6f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "274261ac-f5ac-46d5-a212-8c16fa44e7d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "348c19aa-33c8-4637-bf8a-477de658bc73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53dad06a-bf98-4952-839e-893006c9de83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a56bf5c1-e71e-40dd-b63b-4d7e26dba955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c4ed021-89d7-44c9-b93f-7115692da1d6",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf9130b4-fae7-4608-8e2d-db3bc55010cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b7d4720-20fe-48ac-bc1b-fec516befc49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8caffe4-3b31-4812-ad95-ebaaf246bf12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a712c01-fd1e-4eea-8ca4-e9e841370063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d10454d-6d3e-40e1-aa3a-079d99c5a225",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6058a2e3-f326-47d7-aabd-6dad855ae2a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bcc3548-afb9-41b0-b62b-98a7db143efa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f9ed281-453b-4059-b649-d7c78dc5a70d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68006da1-e96a-41f6-b7eb-615d4514b862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcbc5919-63be-4b5b-ae3f-2e29a850250c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ace91d5-c758-413e-8005-3ce5dc9d2109",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e006bbc-bf0b-491f-b41d-ed8b5a74913e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "626cb539-ecb4-4445-833d-b7c42f23ce63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c303a6a2-2868-479d-8d18-2f03efeb8ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a4405fe-acf0-4147-916b-3a0f2b2883bc",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bf34a46-75b1-4f2b-b9d7-40646ad1efac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3511cf53-990d-4197-9f29-9d431ee828ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d00633da-d1e0-49e1-afa3-85f9771103e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e55a48e-81db-43a3-ac34-4d65b1cc715b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b17517f0-36dc-437c-a101-39cddfa80482",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa3bd20-bded-4bb2-827f-95a71048ed79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67a0bb01-a64c-4632-a590-4fe712ee52dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e6e00f-ae4c-4ad6-8a1c-a39421bb5b37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25f48414-7db5-456f-8a17-2f356dc9a8a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "718ba56b-41f1-4f08-bb3b-41275fb5fd2d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d939a8c-957d-4c1b-9ed3-9d15e9c234af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b40d743-35a1-467c-86ac-8f4bd79074e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58096714-b0f8-42e8-983b-94f01297d841",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "811c0ba5-bce3-4272-bf19-4fa746fc8c70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e511991b-e007-4602-b038-acab90ec1295",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1fcf4bc-c054-4248-a7cb-5d9324e9b0ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "043baeb1-576b-4112-bed1-438ba9ffd488"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe860e5-3944-4466-910c-37fdb6f5a0cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05382ecb-6a1c-43ab-b9af-c32e6bf18413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27d5fa56-d0ad-49de-9755-3b910a8d38a1",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "232bd283-0079-4f0e-9bd2-a405018339c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f96e6054-6fd1-44c1-9233-cfafc36261f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07815c7d-76e1-4a6c-a5e4-adb80daf704d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a35a41a-e5b0-47cd-963b-716abb18b982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d3be229-6683-4283-beed-dc8e3ff2df00",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5307bea6-5b3f-4fa2-8e3c-940beb33a3a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42596a01-60e1-410d-877b-2cf1f6a5cce4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "690fce56-6b4f-41e7-9541-16864cc25858",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f2c1276-9249-412a-a0f8-17ba754bba8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee2e276-23de-4c04-bb80-d24ed553d978",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "026591f7-0365-4f90-b4bd-2b10d8341b46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62bac432-efe0-48c0-812d-3d97f7e5e894"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ea98298-8863-4b4e-8eae-dafd55a50da4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a16dd9a8-98da-4580-8daa-3a023aed2946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d160c5b-5505-4ced-88b3-3bd67ffdca0e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1333159c-24d9-4cbf-bfe9-cc13ed768814",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cee6fb2e-70af-4676-bb74-f114b202c2ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e8adc31-6f47-4156-a22c-84d64cbde3b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d48a02b-0d25-42fe-abc4-de080795aa2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8849721e-7625-4f73-b92d-6c02270dce27",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "030bab30-2be6-41b1-91b7-f88d8448e94b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d84c6849-9c50-4887-9065-282782e6bb44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f980fc14-fe6f-4be0-804a-2a51a42a5277",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4b45d13-d830-4eca-a40d-8761a9e83c2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdee7fc5-96e1-4f4c-86ad-1156c6990680",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f60d88f1-6c5d-488f-945c-97e053c20925",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b83592d0-d8f6-4be3-b9af-19b8ce117919"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bbcaf2a-24f5-406e-987e-c2332207c7a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e692cb60-3cd2-455f-8082-f40f496a760e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d014e84d-4bc0-439e-a4dc-c9cae8781714",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2429222-0bbb-45b8-ad92-dfdf85dd11d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c49ce7a8-8bc7-49d5-9d2f-2bad09d5c0cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23261273-b09d-4a2a-8036-26956492a3c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5573ab36-a4c2-46bc-998e-e8c439204024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423f5596-d6e9-43cd-8eb5-a59624ccca28",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce7ed574-e144-42e5-8e68-3e942ce49eee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe54b952-1ea1-46b8-b70b-2a869f953b9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e37317e3-1a80-4bd0-97a2-59cd69df45fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ecb1765-f2a2-4423-871c-e0de1bce82dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc58accd-6cbe-4c8d-bc72-a7f30b13e5df",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f1016d9-14e1-4a7f-80e4-d0e331cc34c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a88ed3d9-abd4-4db1-80e5-de6b1dc4e639"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bfa4715-d207-4a2c-bd57-4b68a688d78c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b652a6d-f0ed-40e5-ae46-24230d699d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbecb0ea-5058-4fe9-8ff9-2ee9c6db32d9",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b111e065-39f9-4d17-9aa1-58212464b33a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "735322fb-6e71-4fd4-85ba-068b84322f2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d19ef684-6cdc-4df2-b6c0-c2d0411002cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a206838f-e478-4871-8242-4775af93a148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea6f8c3a-53f6-4342-9530-d450a09082f7",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c13c103-d93a-4de8-a5bb-ccb8b03bf8b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f14cdb4-7c1f-475a-8035-7e18fcd9dc60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc78e09-a448-40da-b629-af81f26e5fa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "129afab1-3980-4cbb-a739-50b71d666519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "834d2d9c-c78d-444d-bdc0-1a4b8fb6560e",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1947c813-0300-4ffb-86f7-a97c1cd0bd3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbd7fc24-fe28-4303-8437-37506d265129"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83112551-8717-4847-bbbb-136715ed48c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "720bbcb2-0ed2-43c5-aaa6-f7d693eaef22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f533ce87-cb9c-4e8e-b0ba-054bfa6cb324",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59286177-7f8b-4b79-9c90-289fbc7e477c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3c4957e-8bda-45d8-a389-35c58d643fce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca0084f-3d06-49eb-b3a5-fb0a7cda3c61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44051568-67e4-4761-bf63-4c8812946ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2592a37d-6cc3-45d5-923c-4be94c7b912c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe58464b-8d0b-47ef-87fc-27119038a993",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7da950c6-acc2-492d-a293-77113f6078dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3832d28e-9f39-4c25-a81e-cda1541496b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfe48cc1-401d-4efc-a323-bbd96085cf08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d85a89-c082-4107-a9c1-9430a3177a4d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95cb0335-23e9-4b05-9b9b-8431f2b247d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf7709d0-583f-4524-b5ec-de1fe9c4c47a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "865f4a8f-dcc0-4a75-8fe0-1b36c5673ef0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d258e1b6-27e2-4da1-994d-20c9126e0a74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db73a43-6e35-4540-8e7a-fe04e058f4c2",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ef0599e-c1a5-4f0d-ac07-fac93b98a609",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8814205-c169-4ea7-95e4-65f052b829e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfdd7133-2276-4d76-9d3b-d4f49a166043",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99039722-4c7d-4f89-879d-7b3397124ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "475f99c8-8f3a-48d7-b59a-10b5cf3cb274",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c5ba4ae-e785-46af-b3c1-9cecd9a0ba22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0e57e5e-a4f3-4ad5-a679-8c5183c0162e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4366812e-7238-44ad-b730-9823b8d36978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33a0cfab-4c7c-4346-bee3-372896602fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f39d1289-2624-4fc3-bc45-1142b0427229",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6315f91-66a5-4aad-b6f3-13da83ef5814",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe76bcad-64fe-4815-9dc6-661ca03d0f05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba12301e-bac1-4848-afd8-3da10e5cc1ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba6d7b7c-971f-49df-9e0a-896d6a9fa98b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44fb2bf0-e9e2-47a1-b326-f577771921a4",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f63a2605-ed00-4780-9872-5a98e2a4e81b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "703603ef-b534-4465-83a1-fe199a930f54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7327b6ce-3c77-44b0-8837-762ec071445d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00007d80-aa96-4ec9-8c0f-6f4fedfcd24f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e468424f-d740-46f2-9539-97114bde55f3",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "170b2206-827a-4841-afbe-7e68cef47f76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c6d48df-f9ee-4be1-951b-92371e9a73e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca50473-90d9-4e10-a759-87b6e86be07a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e43f40a-5e37-4b01-9482-86e065a96d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d2d2afa-33ae-4a33-b3cf-ec5635ed995b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c7a7c49-eff6-4f8b-8d7e-530a4a577d25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad09a7ff-bfa4-447f-9d41-eed82462544b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6ee99e-fc05-4397-95d0-f5bec65c75be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db8b3789-2958-4161-a0e4-a1e9d85befb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa741b3f-2e1d-458a-ba77-a6b2e957d474",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6473a20-0a91-462f-8b4f-eed1509662cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecbc717b-80d5-4017-9c87-cf7a0f44828a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c69ec807-f206-4bd2-9f82-293d00ac223e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1e8c91c-532b-4c49-a42e-f50b02db51bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a85e97-ff68-4bc7-bbba-94c5df902e6d",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5366f81-1245-4584-8b35-671850546dd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9920a4f-5335-40cc-aa61-7d59850cef66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e015dd-268d-4e86-8b06-e21275f4cc53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9588550-a9f6-417b-bb2c-80ad5ebda3d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac0a960-877c-46a5-8bbc-8c351d6d39f3",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d261ffd9-b2ac-4295-b8be-28c88d9c9833",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "650e6de6-5c1a-4d71-acac-ab96ab53fa0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28b6a61e-d7b5-4d37-b73f-2566c39bde3f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a779379-65c4-442c-b5c0-93bf30929533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ac58e1-3b61-4e8e-9ed4-834d0679894d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de9f45b-ee62-4a3c-8eb9-2fa65f6881c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b25e7b0-9b58-4b8c-bdc0-bb4377ff1dca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e149af-5234-4faf-a297-80b9f8bb2ca7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ef779be-9f27-460e-89e0-2e7ff7ec613b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2dc433b-a980-4cc7-9985-ff1834c1f33a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c9d52ed-5825-4dae-b4d4-0e95be66c0ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33925784-250f-43eb-8e7a-eab169a87891"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa34569-116e-43b6-ab2c-1fb987fec4f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "054c5fe6-143a-4a9d-9019-8aa56386883d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2320c4ce-a388-4f94-a52b-5a90773bbbd7",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e84f4e6-302b-485e-813d-d8e6d3056bc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16b58839-7d0d-4b7b-8112-5c0f10712307"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "200c6b08-afca-4ae5-ba23-50ead8eef5d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb0fe7bf-34a4-4ad4-80d3-440daa269c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8269e89a-de91-471d-8066-e566dd5b8ae8",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa3a585-281c-4c7e-81d3-5f8df949dde6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6e5ceed-fc1c-42a1-9184-4160602cb03d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4a1a212-3b1c-43f1-a8f8-203bf379f0be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32e797f0-4067-4a67-b370-31a2c4c3dc0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d258499-5a62-4a85-91bd-362f06b6e94d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af731a5-c1bb-4109-b762-31b354fa8790",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d46abfd-6ee1-47e3-bf83-ef4fbee172ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5312c1b-9516-4f5a-a2ba-eee7983911fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8526c1c5-657b-4c0c-8c1d-3a948bdc772b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8cf283c-68b6-4197-8318-e94571d43be4",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ae76bd-15c5-4c75-baf3-1c045baeba1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b30f8aab-9ab9-4c13-9da8-fa18fc2a8607"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68691c76-be1c-4eaf-96ef-9d6d1e2ff4d4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4733896-9896-4c41-8086-afd4905c01fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ae2e9c-c5aa-4a4a-a717-5667f6fb6384",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bd18d66-dee0-4ab4-a7cc-ea57bcc0d431",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a11692f-72bc-4941-ac7b-4a94f96207f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c645da37-f19e-4290-a191-1506be2778b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d341bb63-913a-4a15-b86d-cb4f99d04ee0"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2f5668c6-e962-434c-b44c-be79ad81c712",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7bbd6937-899a-4d46-a3cc-ebc7668995e1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "15341693-a088-4c8d-b00d-73fab02e1bb3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "81d52bd9-f73b-45dc-9e78-be63e2e98613"
                    }
                  }
                ]
              },
              {
                "id": "e244ab05-7398-41cb-9d26-737f44f1d83f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "643284f0-2771-4190-b49c-2076e24735a6",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46b17887-7fb7-4ece-814a-024f3f803a2e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "04e83d76-0759-41b0-8af1-146659d0a254"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f78e97b-ca77-415f-97f8-74ad084fb04d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e28a1980-b18f-4797-aa42-4f2f2438fa8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07422eba-3496-4896-af97-15c92ecba886",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee9e18f-1365-4321-9f60-0e7d42a2aabe",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "309914f5-f41a-4830-9989-ebcf816da55a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df8a81fa-3911-4eca-bd42-4d25634a022a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e0c90624-8cdf-4887-b682-407215785998"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7616c9db-c8c1-4487-92d4-a65cf588f05e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "08e2a07c-a5d9-4d74-b5cd-33915b5e1dcf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ea541b1-69c7-408d-bbdc-17efdaeb601a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a276fbf4-c8a7-4b1b-a61a-d1a7b0b458db"
                    }
                  }
                ]
              }
            ],
            "event": []
          },
          {
            "id": "613c5ab6-849a-4a04-b47a-bcce8108e3d7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6cdc57ba-4c23-4215-a2a0-806704f5facd",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a3c3ad17-0fa8-491e-9c50-c3fc26e5a0ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "822f5e44-1b77-4132-913f-47924b644896"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f8c784f-a01d-4f79-91bf-c80b449e1f22",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cf8d086e-88d9-49dc-b2c7-29d20cc7d9c3"
                    }
                  }
                ]
              },
              {
                "id": "033313be-526d-43b2-8762-b748cd065eb5",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ccf55b63-078b-4486-9eb5-29ecbb440ef2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6077a669-1d7a-44c2-943c-92f20345b586"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d889ff7-0a9b-482f-9dcc-9dd5707f0873",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8f51648-9ccb-44a5-af7e-5a0b491eeb9a"
                    }
                  }
                ]
              },
              {
                "id": "df204750-3d41-4c07-be8b-5705712883b8",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f8ca2eb-c878-4d58-8337-c927bb33bbc2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ce2df638-7755-4316-a5d8-e4efd5cb130c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6424347f-4179-46a6-a88c-d2f5feb4b45f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8ebf17f4-1a9e-47b3-8bcc-33d9e8d2a58f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3bcb9d7b-4460-4b71-96c0-8f69e823216f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "8f264d3e-ac4a-49ba-8b1b-caa2fb2b0ac3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "88b64431-92e0-49cd-86ad-baa07a8dff13",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aed8be67-635e-426d-94df-347439d11775"
            }
          }
        ]
      },
      {
        "id": "f7caeba5-31a0-490e-a8e9-0ef9f8b44191",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "6cc0ce9f-4147-4bd2-a8c0-2a5f2fe3b1e3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "762c548d-1e49-40e9-9f61-873a14350ff4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3b1bf25b-1dec-4408-8cf4-dcb8c32525e1",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da68771b-4d0f-46d3-84b6-f84af2a28012",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3069e3aa-663b-4360-a7a9-fc051f835f52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8065587-1620-4f6d-97f6-0a8f176f60c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9c66542b-5513-4732-b6fd-d0593827b9cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac94e947-54e7-494f-aaba-3cd244e035a8",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c22837-0783-47b8-8031-6a88fc684de4",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "324f381d-1401-4015-9539-e4e7793d8e77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b27e1756-c58f-4fe0-bc83-ce806b91e1e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "06c95d9e-3108-47af-9a73-8878e6b1befd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "634d7bb0-855f-4e6c-bbcc-c78ed713d4bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c0cafc3-0b70-401b-9e36-cae4f8cc6245"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "545244df-5ed1-495b-93d3-8364a3f3c4d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8cadbd7-032a-477f-8324-4fef8ab7567c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b42b3d6d-c37b-40a8-a55f-91b91efb1684",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d5466106-9218-4b5c-a457-68391cd454ad"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "536bcc51-1113-447a-9b43-e9b2ace451ed",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "144b1cc3-31f8-4975-96a5-f5d8ac33da8b"
            }
          }
        ]
      },
      {
        "id": "de5c0399-0bc4-45be-8b24-72e3c8feadfa",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d18cfe17-f1cc-41d4-8cc1-fda875f7183a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a243e8ab-2f4e-4eb0-8a21-a319c6c0f3e3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "19385103-2489-4206-b045-5946aed16df7",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43c917d7-f675-43db-93b7-9449137a0a97",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "43ab9489-7fcb-4325-9b15-618d9dc2752a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ff651f-5e04-4fb6-a2c3-eaf246b1ea2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "15d54cbb-11cb-49f2-aca4-6d31fba39f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a658627f-2cbc-4a91-8bba-781e06ae98e9",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf4a361e-8a36-460a-b7b1-2523d7621de3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a24fb9a6-043f-430f-b6b3-8ad1ec05cc7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d30349cb-d982-47b9-903c-881a02220842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e29bf9d3-25bc-4a77-956a-b949a4eb3b1b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f811a1c7-a548-4588-830b-01a6902d31a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8f96f7da-8b1b-4c4a-910f-2f2b2af8542d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "42cef9e9-8912-4232-99a1-675609dc8885",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "02e0a941-a587-4c2d-b52b-1000af8fc9d4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e1f70a47-91e9-4a96-99f1-895b9bea547a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3cda2d44-5a24-4362-8968-52738cc94601"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "254d9bc4-d727-4232-bd19-cdad8ebc99dc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "123826fe-3483-4de2-966f-fa127b0f93c8"
            }
          }
        ]
      },
      {
        "id": "70adcba4-571e-44f2-bb75-81b72b74f393",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0eb9939f-fe31-444f-a95a-93b38d87d3e5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ab4daa66-721b-43d8-90d6-90956f00cf49",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b2cfce85-711f-4cbb-a596-b366d3796ac6",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca60638-5054-431b-bbdf-bd0b703d2a44",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "71228691-95a2-47a5-9d8d-187745fd5667"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee3a5b1-782e-4d7a-9f94-0d8097db50a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0fcc1db4-6311-4838-a629-af15306dbafc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38cd03a8-247f-4bc2-a162-509151c03e2c",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01d8cbea-1042-483e-820f-6e0c24c4f00b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9a499021-54ab-440f-90e2-0ba869519d4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc50223f-d0a0-4017-9055-3bdc687cf7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fc1e70f1-50a7-43e8-913f-3042ca299edc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b191d28-5a3e-46b0-af0d-929187138969",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d3827e5-fa16-40dd-9698-256ff42b1aca"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "816ed0f9-f3ea-41f8-8594-db2d2e442a6c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b33443aa-54bc-4293-ac7c-fbd5ed408ed5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dec400a5-1170-4d35-b0f6-fefc63440b73",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "afcd6f78-6d14-48ad-bac2-7c56ab7fd014"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "daaa5c79-6fec-48e3-8bc1-8973fb74f94b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a48e025e-34d6-4033-bac0-2cf0a7e9e36c"
            }
          }
        ]
      },
      {
        "id": "2d91689d-0ca2-4e33-9c07-42b22adf7e6a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0cd2bfb8-f741-44ae-9352-928509e42243",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ef113e0c-88c4-4ccd-85df-2e6bd8b44ae9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "89902e9a-f950-4efa-8451-b8ecba6e7612",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ea9e293b-4f91-4b0e-9a37-493c8e58d600",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bb0eefd1-9f60-4525-bfc1-4f6b06eabcec",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 505,
        "pending": 0,
        "failed": 6
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 461.89615384615365,
      "responseMin": 14,
      "responseMax": 6307,
      "responseSd": 487.9031200972098,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1667436611027,
      "completed": 1667436744390
    },
    "executions": [
      {
        "id": "3c551f5e-d647-4220-aca1-e81406881e23",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "db4b55cd-627b-4ad1-926a-df342d619902",
          "httpRequestId": "1c478b65-9b72-4e55-b9a3-6c00620b07f1"
        },
        "item": {
          "id": "3c551f5e-d647-4220-aca1-e81406881e23",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b5b110b7-888c-441f-a6e5-68c8b682e39e",
          "status": "OK",
          "code": 200,
          "responseTime": 121,
          "responseSize": 0
        }
      },
      {
        "id": "7c55be2b-c3b5-426e-915c-26e113b2048d",
        "cursor": {
          "ref": "8ca834e0-85c3-4dc2-9021-09fb48a86085",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "9a2175fb-ed20-4d4a-a7c6-9ce6860ee92d"
        },
        "item": {
          "id": "7c55be2b-c3b5-426e-915c-26e113b2048d",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "aa451afb-124c-4bc7-bf8c-bfa2ed67136f",
          "status": "OK",
          "code": 200,
          "responseTime": 14,
          "responseSize": 0
        }
      },
      {
        "id": "3f6cf57a-a1dd-4651-aad4-01b0dcee9dc4",
        "cursor": {
          "ref": "e88e1aad-f4cd-4cd7-9847-878e0f2e5034",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b5554cbf-bf98-4dba-babf-eb4d2da66c59"
        },
        "item": {
          "id": "3f6cf57a-a1dd-4651-aad4-01b0dcee9dc4",
          "name": "did_json"
        },
        "response": {
          "id": "a09178f7-7eb2-4a28-a348-3bf1d7f41683",
          "status": "OK",
          "code": 200,
          "responseTime": 1239,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a2cdadb-2365-47c6-8857-c7d41c0d6b38",
        "cursor": {
          "ref": "3307af88-2415-4101-b932-5c96df7633e7",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b3113892-fcf4-4cb9-9e4e-3d12fd42c90d"
        },
        "item": {
          "id": "2a2cdadb-2365-47c6-8857-c7d41c0d6b38",
          "name": "did:invalid"
        },
        "response": {
          "id": "7b671759-95ed-441c-85a5-4f33b20c8e7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 796,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a2cdadb-2365-47c6-8857-c7d41c0d6b38",
        "cursor": {
          "ref": "3307af88-2415-4101-b932-5c96df7633e7",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b3113892-fcf4-4cb9-9e4e-3d12fd42c90d"
        },
        "item": {
          "id": "2a2cdadb-2365-47c6-8857-c7d41c0d6b38",
          "name": "did:invalid"
        },
        "response": {
          "id": "7b671759-95ed-441c-85a5-4f33b20c8e7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 796,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7d5457a-ab82-4efe-a77f-bdebdcde45a1",
        "cursor": {
          "ref": "467b3e2f-3a4e-4ef3-b231-704c689e4eb0",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "391c8993-1ff2-490f-b690-123a37ad07c0"
        },
        "item": {
          "id": "d7d5457a-ab82-4efe-a77f-bdebdcde45a1",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "b12b7a1e-c6a4-4378-9566-8c1d42b572f9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 581,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1737a645-8c57-4d98-8116-6ee021a7e338",
        "cursor": {
          "ref": "e51b39f6-958f-4a01-9542-a6705dc7f55e",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b7b8c671-5053-4785-b5a2-58f1f052a8cf"
        },
        "item": {
          "id": "1737a645-8c57-4d98-8116-6ee021a7e338",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5e20182f-8950-4b16-b6d7-e499c3466f63",
          "status": "Not Found",
          "code": 404,
          "responseTime": 446,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "216204d2-2420-4e36-8a49-7dd13f2f7607",
        "cursor": {
          "ref": "30a533e7-9cd6-4267-acf4-a0dbf5ba44e4",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4e1f64db-ada9-43c4-86dc-fcc8bbcb1ce1"
        },
        "item": {
          "id": "216204d2-2420-4e36-8a49-7dd13f2f7607",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3e6b0009-9abe-44b9-bd9c-2338cc0acd0e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb77b9e8-9a66-4d6f-90bc-f529b1fb3b65",
        "cursor": {
          "ref": "be1f6ad8-1210-4ddf-82c1-8f6fd7861f19",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "5d2c4ce5-c6aa-47fa-9aa6-2bec7b9f713e"
        },
        "item": {
          "id": "bb77b9e8-9a66-4d6f-90bc-f529b1fb3b65",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "4f6c3f49-4621-478b-8297-f4b3f79c9cd4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 449,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb77b9e8-9a66-4d6f-90bc-f529b1fb3b65",
        "cursor": {
          "ref": "be1f6ad8-1210-4ddf-82c1-8f6fd7861f19",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "5d2c4ce5-c6aa-47fa-9aa6-2bec7b9f713e"
        },
        "item": {
          "id": "bb77b9e8-9a66-4d6f-90bc-f529b1fb3b65",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "4f6c3f49-4621-478b-8297-f4b3f79c9cd4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 449,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c19fd683-e7ca-4c2d-a74b-b29cb79397d4",
        "cursor": {
          "ref": "d5a054fc-4c11-4e69-982c-841f96c56db7",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "757f1643-582e-433a-a537-df0ba20e1ac3"
        },
        "item": {
          "id": "c19fd683-e7ca-4c2d-a74b-b29cb79397d4",
          "name": "identifiers"
        },
        "response": {
          "id": "3dc5ffdf-3337-4fe2-9965-57622fe14aa8",
          "status": "OK",
          "code": 200,
          "responseTime": 643,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "287a63d2-e382-48e8-8a54-d6209ee19aed",
        "cursor": {
          "ref": "e106ef44-1ff0-4fa5-a68e-8bb71d91e86e",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c501a4e3-487b-4bef-a22e-21af9505143f"
        },
        "item": {
          "id": "287a63d2-e382-48e8-8a54-d6209ee19aed",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "762de688-f0fb-4627-a090-b43aad981faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "287a63d2-e382-48e8-8a54-d6209ee19aed",
        "cursor": {
          "ref": "e106ef44-1ff0-4fa5-a68e-8bb71d91e86e",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c501a4e3-487b-4bef-a22e-21af9505143f"
        },
        "item": {
          "id": "287a63d2-e382-48e8-8a54-d6209ee19aed",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "762de688-f0fb-4627-a090-b43aad981faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d0b7ce8-5a2c-42cd-92ec-1dafd08f9d97",
        "cursor": {
          "ref": "3839a133-4c4d-41aa-8473-572576e52004",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "94754648-e577-4247-8a05-df6842b26d72"
        },
        "item": {
          "id": "3d0b7ce8-5a2c-42cd-92ec-1dafd08f9d97",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "cd2c6c7d-f9e3-4042-886d-ed9e389e0974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b363b8aa-b8e8-4427-95a0-f05b9904bde0",
        "cursor": {
          "ref": "a9759f78-ab19-4f98-9683-d9ec1bbda42d",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "7386399e-51dc-4ae8-b1d4-5f884fcf0689"
        },
        "item": {
          "id": "b363b8aa-b8e8-4427-95a0-f05b9904bde0",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c03ab8d1-aa3d-4560-9ea4-c5e528c46b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a4666e-f8b6-40dc-95a2-f38c97d72c5e",
        "cursor": {
          "ref": "f0806013-5d96-497f-8f43-f402fd451b05",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6bf6b6ec-39a7-4f48-b052-d1c1e9b6be9c"
        },
        "item": {
          "id": "80a4666e-f8b6-40dc-95a2-f38c97d72c5e",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7e75ffba-bfa7-48d0-a446-3fb39ddeac05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f1b0ae-419e-493b-a9cd-ab7d4b6c5100",
        "cursor": {
          "ref": "499dad69-b1e1-49d4-b55f-4c5055f32f7c",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "1cd8d935-272b-4149-8837-b52778805e69"
        },
        "item": {
          "id": "96f1b0ae-419e-493b-a9cd-ab7d4b6c5100",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "e3727004-152d-473c-9cac-16dbe699c06a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 678
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2fda4b6-cb08-43b3-9e64-aaa661ef5871",
        "cursor": {
          "ref": "34d1cb40-26f8-414f-928d-c11905a95007",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "feb41819-3cf5-4c26-a725-0082754d2c73"
        },
        "item": {
          "id": "f2fda4b6-cb08-43b3-9e64-aaa661ef5871",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "7c72b3f7-41e6-470d-828c-b7fd8cf7e093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c82879-14c9-42ca-b169-003fe8aeef61",
        "cursor": {
          "ref": "6fa6d5c6-fabd-4901-ad95-68897cb6d2fd",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "664d121e-cdd5-4de9-92a1-09132507977d"
        },
        "item": {
          "id": "a9c82879-14c9-42ca-b169-003fe8aeef61",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "93c788e1-6be4-42a8-9a80-995a49221610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "629e8df6-247d-415d-9233-6f76ee81a8ec",
        "cursor": {
          "ref": "abadd00c-f273-4266-b3ab-47e72025d2e8",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d89d425f-dd1f-44d2-9b7f-48481ac62af4"
        },
        "item": {
          "id": "629e8df6-247d-415d-9233-6f76ee81a8ec",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5fb63aea-e66e-403d-9536-41d7054e17bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e4be57-741e-4f35-8bac-c6d38ab4a736",
        "cursor": {
          "ref": "fe178b5a-ead3-4c13-ab76-fbd38562710e",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f1e95589-34d0-4339-bd85-93a0f9b3e42b"
        },
        "item": {
          "id": "d1e4be57-741e-4f35-8bac-c6d38ab4a736",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "8a7b0a07-b948-45b6-9ae2-b7f251fcb9f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 950
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdecdb9c-76fc-4f83-bdc7-2309bf25673d",
        "cursor": {
          "ref": "35b39b54-2f6b-427f-aa25-542db57b4c71",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "7214bf34-ecfa-43c1-9c1e-f881430a252e"
        },
        "item": {
          "id": "fdecdb9c-76fc-4f83-bdc7-2309bf25673d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "7f365b00-7dc3-417e-b689-e253eb1fd133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 947
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c60ed1d7-69db-4f97-9f4d-547e8954cb48",
        "cursor": {
          "ref": "ba8c763f-19dc-4d30-99bf-58037e142280",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "5ed607ce-af6a-4e5d-961b-099cfb3b5d95"
        },
        "item": {
          "id": "c60ed1d7-69db-4f97-9f4d-547e8954cb48",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5b4699ba-0f58-4a51-b776-a9b498964059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f5a0718-4d83-4ab6-bddd-2f751bcff340",
        "cursor": {
          "ref": "96804baf-759b-409b-bcc7-78b8b81ae3c4",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "8782ab2b-625d-41bb-ac04-348258824212"
        },
        "item": {
          "id": "4f5a0718-4d83-4ab6-bddd-2f751bcff340",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "93b1005a-f570-4e3c-8946-84e4338a0351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ee188a1-0403-4def-aafe-a0fa65063afb",
        "cursor": {
          "ref": "4fed3134-e018-4ee0-afff-946b5d605971",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ea158356-b528-4f25-b829-3b057e5e8fc8"
        },
        "item": {
          "id": "2ee188a1-0403-4def-aafe-a0fa65063afb",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d6757085-2ede-4a34-949c-144af35b2daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a93ed63f-08c0-410c-8b73-d642e33cd8d6",
        "cursor": {
          "ref": "80af99ac-b82c-450c-a92b-2ecbdcb6ee90",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "edc9704d-1f90-4f23-a554-b84669e80358"
        },
        "item": {
          "id": "a93ed63f-08c0-410c-8b73-d642e33cd8d6",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "a83f8985-0f26-4d6a-bfed-6c51bbdb49b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24f92eae-d5ec-492d-8b3e-de44fd084e99",
        "cursor": {
          "ref": "839704a9-6dfd-4594-b966-4a04dd8ddaad",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ce06abb5-b21c-4f96-bd0c-aad2d4d840dd"
        },
        "item": {
          "id": "24f92eae-d5ec-492d-8b3e-de44fd084e99",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4b71fbd7-1fe4-4891-b65b-6e9edb06e68f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e7473d-5d5c-4d97-bd28-be8057397523",
        "cursor": {
          "ref": "aa14c6af-e9b8-431b-93cb-f6c5fb4db032",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "afa18aa0-beec-430c-b2ff-598bd13a68b2"
        },
        "item": {
          "id": "d0e7473d-5d5c-4d97-bd28-be8057397523",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "00424ff2-9761-4b2f-a969-bd28b317e288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91343bb9-e66b-42fd-9859-021fa33d47ee",
        "cursor": {
          "ref": "1c136662-13c9-4210-98db-9ab63f915494",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "15272fdb-ca4b-40c9-ab32-62b7e56ae2cc"
        },
        "item": {
          "id": "91343bb9-e66b-42fd-9859-021fa33d47ee",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "85660055-aef8-46c0-8581-666edc75c3be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "049be8f9-34bb-4fa4-9b22-d5729a9d6b32",
        "cursor": {
          "ref": "c77d31c7-bca8-4ce9-9de9-de9ec3253889",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "49cf050c-ff66-4af4-ac5a-570ebb0b8f7a"
        },
        "item": {
          "id": "049be8f9-34bb-4fa4-9b22-d5729a9d6b32",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "7c1cefa4-9d65-485c-87de-7cc51e28e88a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01e8bda5-0e62-4a8d-ac4c-72ce917a1409",
        "cursor": {
          "ref": "f52ca02e-2c69-4173-8eaf-5bc59ef43b3a",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "b1a867bb-a14e-4a53-b509-994696faf006"
        },
        "item": {
          "id": "01e8bda5-0e62-4a8d-ac4c-72ce917a1409",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b6c5e226-edeb-4189-9b81-a0d2de709f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b17621e4-998f-4493-a065-7dc08b35ef67",
        "cursor": {
          "ref": "31b471ed-1611-4c45-9295-0f7b2d38bae1",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "e55a4cff-a143-46ae-9fb3-768089154fed"
        },
        "item": {
          "id": "b17621e4-998f-4493-a065-7dc08b35ef67",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "db065888-c886-40b0-ad4f-12818def7530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f79e94d-afec-4576-bd87-95b8b7c3dbca",
        "cursor": {
          "ref": "a4f344e4-c67d-417b-8475-e8ad5add8e0e",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "49ca647c-63a4-4521-8aa9-bb1f40a168c4"
        },
        "item": {
          "id": "0f79e94d-afec-4576-bd87-95b8b7c3dbca",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ee4ae43b-2a1e-4bc7-9215-bf03ccfe262c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f9b420d-a0b2-4d47-98c5-aa6470b39fbc",
        "cursor": {
          "ref": "d8656c1f-de42-4a50-a7d9-7ae57287cbf7",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ed913d9e-6006-4b5b-bb6a-1e9087668b7a"
        },
        "item": {
          "id": "2f9b420d-a0b2-4d47-98c5-aa6470b39fbc",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "65725b29-2555-45d6-9f81-a47e12dda2f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58a5cf73-52f1-4931-9fb6-41350bdf8f61",
        "cursor": {
          "ref": "319796ec-0061-48c0-a00d-42fb06cc1877",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "39312496-54b6-4b76-86fb-aa0edaec2284"
        },
        "item": {
          "id": "58a5cf73-52f1-4931-9fb6-41350bdf8f61",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "8cf11cbe-0960-49bc-b89b-b2d20eab0304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a7cf3c-2ae6-4dc7-b274-5bd58add8a60",
        "cursor": {
          "ref": "6a513e6d-9537-4fde-8ed0-14d9908345b3",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "8338de59-884f-4137-8c37-df188a524065"
        },
        "item": {
          "id": "41a7cf3c-2ae6-4dc7-b274-5bd58add8a60",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e65606f6-06f8-4dd6-9ec6-24233cbc0f13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc53a42-52bb-4acd-ba2c-6b2298912b3b",
        "cursor": {
          "ref": "a9029da1-68b7-45f4-94c7-cd80ae71d6e6",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "df6dae43-8b7c-4dcb-83ec-097a49068416"
        },
        "item": {
          "id": "adc53a42-52bb-4acd-ba2c-6b2298912b3b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e4540b23-b35b-477e-bf4a-b27771c7cd55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27592fe-161d-4c4a-bdf2-c5618558206b",
        "cursor": {
          "ref": "9e8b848a-089f-4bbe-88bd-cb255d8684c9",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ab3739da-3520-4ab3-b9de-54982b3b4a12"
        },
        "item": {
          "id": "e27592fe-161d-4c4a-bdf2-c5618558206b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "85d87c72-676a-41ff-b7e1-0b49e4d04410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e88e1327-6c94-4bd7-899d-d9f3cbd4d8b8",
        "cursor": {
          "ref": "56aeca7e-57a7-4295-bac9-a109f309601f",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "8d46cd4b-94f4-401c-988d-23204ded2381"
        },
        "item": {
          "id": "e88e1327-6c94-4bd7-899d-d9f3cbd4d8b8",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "480d184b-9dba-4bc4-8638-15836ed0672e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "534d9592-5436-44db-a74b-c1d2fdf974fb",
        "cursor": {
          "ref": "e6412502-861c-4447-b42d-754f43130e64",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "3df54d4f-7f0f-471f-9588-94295048073f"
        },
        "item": {
          "id": "534d9592-5436-44db-a74b-c1d2fdf974fb",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "903a0cd5-244c-4b8d-87e7-8cce77806c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ecea4a2-32e7-4019-90f7-edd6001f870f",
        "cursor": {
          "ref": "ef35a8d6-03f3-458f-94d9-905ca97a5dfc",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "7fa13769-31c0-4331-a649-6f6b92162dad"
        },
        "item": {
          "id": "8ecea4a2-32e7-4019-90f7-edd6001f870f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "d05bcdcc-5b58-4e60-8272-bcddee4d2516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492dbb36-4e8d-4267-a481-b0a477a308e5",
        "cursor": {
          "ref": "2931fff7-98b5-4f7c-bae5-a8f1d5fb5a10",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f65bb6b4-85cf-4b82-8df7-a0154cf2770c"
        },
        "item": {
          "id": "492dbb36-4e8d-4267-a481-b0a477a308e5",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c2b58659-6bba-494c-8d7f-5489a64dc92c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caae8572-1e49-4830-8d80-7daaa35ab5e8",
        "cursor": {
          "ref": "a048e8d9-5c5b-4a67-9339-ab1ff7622c76",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "76e91f37-e310-4c43-8793-2451c84f1628"
        },
        "item": {
          "id": "caae8572-1e49-4830-8d80-7daaa35ab5e8",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ae72713e-7152-4022-9812-3961a1ab721d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b7c580-ecaa-4a73-8d8e-946292b33f28",
        "cursor": {
          "ref": "a979b8fc-c514-4207-8f14-6bf83257fec4",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "90834fee-5c02-4e7d-8309-b9e5cf2ada5a"
        },
        "item": {
          "id": "56b7c580-ecaa-4a73-8d8e-946292b33f28",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f871e542-f51f-405e-837a-2b89caea0f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee0acb30-c175-4d94-8e77-9b25099d9208",
        "cursor": {
          "ref": "5b978a73-791a-43f9-a4e0-95d16b888375",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c9f88d95-c2d3-400d-9f6d-b3ae785c4c83"
        },
        "item": {
          "id": "ee0acb30-c175-4d94-8e77-9b25099d9208",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e1582368-37a1-447f-bdc7-79b7f4d7ed88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 892
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "279e0766-7a8e-4bda-80ea-0adea2f93e07",
        "cursor": {
          "ref": "db99fc2d-9261-42c6-a260-81ddff598bc0",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "0509d3f0-f585-49c1-814c-82d1941987b7"
        },
        "item": {
          "id": "279e0766-7a8e-4bda-80ea-0adea2f93e07",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "60ea941b-1cc6-465a-8f43-f2f55d76e19d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5750e47-12f8-44b0-98fb-5e44a754180e",
        "cursor": {
          "ref": "25468b8e-1a97-496e-8894-42f6912af548",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ee5e0537-2fb2-40b6-86ac-45226c882c44"
        },
        "item": {
          "id": "f5750e47-12f8-44b0-98fb-5e44a754180e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e9ed9d52-f250-4768-9b4b-61cbd3260fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad7927b4-8102-4ac2-a2bf-10504478a312",
        "cursor": {
          "ref": "a0238851-5e97-4ed5-a65a-fda5fba89579",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "651e22e8-d899-46b6-8f07-0400437d0014"
        },
        "item": {
          "id": "ad7927b4-8102-4ac2-a2bf-10504478a312",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "89134e06-899d-4b46-a80f-7064bc4198db",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 473,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee00612-c62b-4bcb-8d0e-4e89d72a035e",
        "cursor": {
          "ref": "92bab560-e419-4cd3-9468-ca996f5acbd9",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "1b8d498e-749a-4fbc-b31f-3aa9ea489453"
        },
        "item": {
          "id": "9ee00612-c62b-4bcb-8d0e-4e89d72a035e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "0565eae4-884d-4c63-9a97-b915b8858b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 428,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c20262-7509-4ac6-b361-fcf532c0097f",
        "cursor": {
          "ref": "b45ed46b-2432-479b-9230-73471e8bd0f3",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "dc946422-3093-403b-990c-d13fc3aa012b"
        },
        "item": {
          "id": "b5c20262-7509-4ac6-b361-fcf532c0097f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "101f05ea-7768-49ce-80a8-1141ab14b434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 1305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e1fe9bb-7cdc-47ab-9c24-684dd4f384e9",
        "cursor": {
          "ref": "84903cee-8d38-4851-ac20-687a1ddad13f",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "624b121c-f3a4-4681-b886-7f396f435bc6"
        },
        "item": {
          "id": "8e1fe9bb-7cdc-47ab-9c24-684dd4f384e9",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "688a74ae-fd5b-4c8b-a90a-44ea44d3de59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2754f66-7ecf-45d6-98fb-53833afb157f",
        "cursor": {
          "ref": "554a0170-5d24-41ec-91b0-c96833d8ff97",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "efa6f8b0-aa93-4a06-90ba-b4146619c820"
        },
        "item": {
          "id": "d2754f66-7ecf-45d6-98fb-53833afb157f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "42528f28-2d13-442f-9181-11156d3bf033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83ebb4bf-4c6b-4b20-8ffb-556567c2dcf5",
        "cursor": {
          "ref": "3f4bc793-61fe-47a5-a8ff-5652bd7efb30",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "62aa62dd-9c10-4653-9b33-0bf9da84bb09"
        },
        "item": {
          "id": "83ebb4bf-4c6b-4b20-8ffb-556567c2dcf5",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "542315bf-8a77-4c0c-9964-3f76813ae559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "827123dd-259c-4cc3-81c3-bd3da8f4d9c8",
        "cursor": {
          "ref": "24daaf21-e082-4bd6-81f0-c9e6a1b9a0d5",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "9d91001f-d8e7-46d7-8aa9-4ddf91d1cf91"
        },
        "item": {
          "id": "827123dd-259c-4cc3-81c3-bd3da8f4d9c8",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c2cf85c2-088b-4824-9411-d8f884e8eba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 1636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "260bf3ef-7775-44c7-91b3-8dccf36acb08",
        "cursor": {
          "ref": "18ac9b8e-bd50-4af3-9f3b-a29b09f4762d",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "3e499f81-0181-4d55-bfd7-90b8baf843ae"
        },
        "item": {
          "id": "260bf3ef-7775-44c7-91b3-8dccf36acb08",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "3de89f5b-3e22-431e-bbf7-b2f80503cb75",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 604,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5733959-760e-4e60-928c-8764fb90a97b",
        "cursor": {
          "ref": "d12977a6-081b-43aa-9353-06434d8c3b41",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "f9331ba2-f150-4e4d-af87-350a364c6a9d"
        },
        "item": {
          "id": "f5733959-760e-4e60-928c-8764fb90a97b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "849a8ff8-b332-45ab-97f2-517f0d3e22d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 524
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "904c11ea-b137-4da1-90c3-532ed4a97381",
        "cursor": {
          "ref": "e5abcde9-592e-4db8-81f2-dd740805ead7",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "7e0af2f9-b5c5-476d-9831-9c38688f73d2"
        },
        "item": {
          "id": "904c11ea-b137-4da1-90c3-532ed4a97381",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f99d325b-1ef9-4bfe-ae08-778ca859578a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 548
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f67c469-5cd0-4885-9b74-deee44720d81",
        "cursor": {
          "ref": "380c3f00-3b34-4424-826a-dcae72145acc",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e096de52-905c-4c9a-9092-57f26c2401c9"
        },
        "item": {
          "id": "8f67c469-5cd0-4885-9b74-deee44720d81",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "1db2358f-06a4-4d59-8f41-fb2014b542a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e976caa-0029-49e3-bee8-cfe05f60a717",
        "cursor": {
          "ref": "0efcd012-8830-46aa-9f4a-1c2cae6f2eb4",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "bbc12977-21ee-4cf9-8e39-fe21cbfa3154"
        },
        "item": {
          "id": "0e976caa-0029-49e3-bee8-cfe05f60a717",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b3f582f3-6356-4125-8cb8-3e1982af5cd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f316c04-2559-4942-bf03-350808968d1a",
        "cursor": {
          "ref": "c2daf97c-ddf0-465a-909a-1c8c3e1bb447",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "502621ef-a176-4723-84e6-047b3574e439"
        },
        "item": {
          "id": "2f316c04-2559-4942-bf03-350808968d1a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "83c8b210-c7c4-48b2-aad9-06df71d61782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34e92cd-3667-45b1-b8d8-cc42d8104d2d",
        "cursor": {
          "ref": "82ecc784-94d3-471d-a54f-2b4aaa60c8e9",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "9132e539-ba94-4ff6-b3cc-c6833e08d8fc"
        },
        "item": {
          "id": "a34e92cd-3667-45b1-b8d8-cc42d8104d2d",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c532c91d-4ef7-4b4a-869f-401c55e082b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409bfb1a-9276-413d-a988-d467ce92b656",
        "cursor": {
          "ref": "c2678af1-c45e-4c2f-a2f1-29479a94bead",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "63d55703-7dc4-4bfc-8510-cddba069390f"
        },
        "item": {
          "id": "409bfb1a-9276-413d-a988-d467ce92b656",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "fa65096a-df78-42d0-ab7a-4110a87e8096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee47eb3-8c2a-4392-b62d-302d98041347",
        "cursor": {
          "ref": "4adc9edc-d371-4727-a802-62740c0858c8",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "847eff86-6a99-40c0-a381-c3b01b0b8929"
        },
        "item": {
          "id": "aee47eb3-8c2a-4392-b62d-302d98041347",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "cb824bcc-a142-46d8-8e86-7a0b2de862c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd3f6dc-3b0f-4050-b79e-c348bfe9d300",
        "cursor": {
          "ref": "e9bc5fa2-251f-42a6-b340-05940727c79c",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "2a559ba9-7b92-4dce-97aa-43e3bf9cad9c"
        },
        "item": {
          "id": "edd3f6dc-3b0f-4050-b79e-c348bfe9d300",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "945bd4c0-6bd2-4d31-8672-ef062897cac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb531f5-650c-496d-8b50-5bb96c3a6ba7",
        "cursor": {
          "ref": "d5f42384-5a89-4cb9-853f-acc4dddfca29",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "04f37442-52da-4221-8fe1-b618a1b885f4"
        },
        "item": {
          "id": "beb531f5-650c-496d-8b50-5bb96c3a6ba7",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "923e454d-16c5-464e-be89-d624bf3533a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "218e154a-a91e-4905-ae32-c27707106aa6",
        "cursor": {
          "ref": "dcd28fe5-ecd4-4873-8024-1a404d1e439b",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ca957256-6476-4d76-9293-8693d9c29056"
        },
        "item": {
          "id": "218e154a-a91e-4905-ae32-c27707106aa6",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "243b45ee-79b4-4c74-a049-b5554eeec12a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 826
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b7c61f-5e9e-4eb8-b460-84dbd4b8b746",
        "cursor": {
          "ref": "1557c3a4-9c19-4cf0-8cca-c988f16d5f6b",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e85eff9a-547b-4803-81d8-62dc3fd08f41"
        },
        "item": {
          "id": "c8b7c61f-5e9e-4eb8-b460-84dbd4b8b746",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c13d7db9-b569-4bcb-963f-9c95c0f462c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 422,
          "responseSize": 828
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca09c368-0666-456f-9a64-234c0a0a3b8d",
        "cursor": {
          "ref": "1ee97f1f-fdef-49ec-acf5-9bd29e5a572e",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "470d226b-b8e9-4575-817c-f89fd5ab7c84"
        },
        "item": {
          "id": "ca09c368-0666-456f-9a64-234c0a0a3b8d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "6659aee6-3aa1-498c-b530-a5116e356f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 841
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaea95ac-d3f8-40cd-bb72-fc9716528365",
        "cursor": {
          "ref": "c9ce0ee9-c51a-44ff-93e9-ce91b54fbee4",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "944ea9e6-89d5-4029-96ec-2d6673913b7b"
        },
        "item": {
          "id": "eaea95ac-d3f8-40cd-bb72-fc9716528365",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "358b9989-6f4b-4dcf-b703-bcd0ad3d3014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b864dd5-63a8-42cf-9b89-9b3ad2f12105",
        "cursor": {
          "ref": "499e2daa-c54c-49d4-9b2f-0d031a33b952",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "67aceddf-c962-4c90-8cfe-86f22f6765ac"
        },
        "item": {
          "id": "9b864dd5-63a8-42cf-9b89-9b3ad2f12105",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b99c24d2-9ff6-4f08-a84a-5b3bf662b475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbfd73df-fb0c-4fbc-95db-3e9578c0e4ea",
        "cursor": {
          "ref": "8e5a5c57-e20b-486c-a0ad-457233eaf1d4",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "d7722552-bd5a-473a-8111-85cbf9817fa2"
        },
        "item": {
          "id": "dbfd73df-fb0c-4fbc-95db-3e9578c0e4ea",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "209fc4bf-cb56-44a5-ae59-d392c6057e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "450c883c-bf3f-4f8d-8638-afe2994a5fd6",
        "cursor": {
          "ref": "6aaea5d8-85fd-4461-8757-cb6a41b9f646",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "e2cc85bf-f140-4248-b11b-2c3674831571"
        },
        "item": {
          "id": "450c883c-bf3f-4f8d-8638-afe2994a5fd6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b39a9bc2-09db-4dbb-af57-7d03bce232d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 1320
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb04a52c-0f2b-431c-a578-1c7b9e39b946",
        "cursor": {
          "ref": "d3f0dc46-ffd7-4317-908b-6d98a84e994e",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "029c4c9c-186d-4d7c-951a-e78ae5e76234"
        },
        "item": {
          "id": "fb04a52c-0f2b-431c-a578-1c7b9e39b946",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "90d7d8cf-770b-486c-bc57-81edb351a906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33487b2a-e0cb-46b0-88fa-2493980998ed",
        "cursor": {
          "ref": "ebe13d83-4bfc-4e7c-a5be-d0921cdaa446",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "510b6632-ae7e-4b45-8830-b6060c55a20d"
        },
        "item": {
          "id": "33487b2a-e0cb-46b0-88fa-2493980998ed",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "409591f8-ab0e-42b9-88b3-3c63a5b7c8b8",
          "status": "Created",
          "code": 201,
          "responseTime": 1992,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:71)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:71)"
            }
          }
        ]
      },
      {
        "id": "f0b71546-eafc-41dd-9ec1-e7336ee46b10",
        "cursor": {
          "ref": "58451082-8af7-40da-a3e0-c97f5e2223f6",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "fdfbacd1-ab4f-452e-a035-a42bc7fbe8cc"
        },
        "item": {
          "id": "f0b71546-eafc-41dd-9ec1-e7336ee46b10",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "276df8f1-d3d8-4962-bb5e-33c7910e958b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf348547-8590-40d8-98a1-00df618ebbf8",
        "cursor": {
          "ref": "6001e018-304a-49d6-bd6f-b634e0fadd6b",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "0d85eeeb-a369-4ae2-a534-627af15cbb68"
        },
        "item": {
          "id": "bf348547-8590-40d8-98a1-00df618ebbf8",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "498801c4-abc4-41d0-9288-f23172eada10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b219210-cae2-4766-981d-7762a4949fa7",
        "cursor": {
          "ref": "d351ae7f-06f7-4783-8527-778549f3fbd0",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "67c46475-91c8-409e-addd-a936245d5844"
        },
        "item": {
          "id": "4b219210-cae2-4766-981d-7762a4949fa7",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "7ceb21b4-c7e7-4a0f-9c05-e24510b7a9ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b29e47f2-4ce5-4727-820d-2d7ac0bc7eda",
        "cursor": {
          "ref": "55070b78-32a6-4dbc-b3fc-55f6831481ad",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c95fe716-2c78-443d-80e9-693718ba7deb"
        },
        "item": {
          "id": "b29e47f2-4ce5-4727-820d-2d7ac0bc7eda",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "300bf4cf-4487-4d9b-9adb-399f2a496f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ae54c6-6e61-41d9-9a1f-3fb68ebbaf5b",
        "cursor": {
          "ref": "ec8f5367-ab4f-45c1-81d7-0062929eae14",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ec853ece-2907-4877-aec2-017685fdbe1b"
        },
        "item": {
          "id": "38ae54c6-6e61-41d9-9a1f-3fb68ebbaf5b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ca702075-b100-4ba8-a50c-292cf6cdd02a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a26db29-c183-4297-93e0-938b5a7ec587",
        "cursor": {
          "ref": "2dc4a54b-bd1e-4f59-a8fd-ebf1e3bd211d",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "015070cb-5b7c-49c8-aff2-a266b35a8539"
        },
        "item": {
          "id": "2a26db29-c183-4297-93e0-938b5a7ec587",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "0b47647c-224c-4703-940a-5736c37eb2be",
          "status": "Created",
          "code": 201,
          "responseTime": 1748,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:77)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:77)"
            }
          }
        ]
      },
      {
        "id": "8120937c-49df-44c8-bda9-44b74768945e",
        "cursor": {
          "ref": "347d8d79-0bf3-4e1c-8ca8-659af66d89ac",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "0908005f-5763-44d7-8df9-ee896ca4e572"
        },
        "item": {
          "id": "8120937c-49df-44c8-bda9-44b74768945e",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "5c8932cd-64b7-4adf-8ff8-5ef677466194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9035ef7-3fcd-4355-ac8c-d09d3a53fd2f",
        "cursor": {
          "ref": "22cfd19c-6dfc-4027-9235-7f356b5c3ef9",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "8e4a568a-0987-43bc-9e48-1e8bbaa73755"
        },
        "item": {
          "id": "a9035ef7-3fcd-4355-ac8c-d09d3a53fd2f",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "28b58b19-6526-4ce5-8b32-3df7ef76dfa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 510
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cea566f-d33b-4a5c-8c77-e0c8eb4e6966",
        "cursor": {
          "ref": "2b78a445-fce3-4e91-8e75-d70e0cfd0e5d",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a9645e67-77ee-47cf-a4c3-a97b6cc0d89d"
        },
        "item": {
          "id": "6cea566f-d33b-4a5c-8c77-e0c8eb4e6966",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ec1c35c9-48f2-4c13-a82b-f41089230cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7760fe70-cd8d-41c8-a2d2-f881c56f6aeb",
        "cursor": {
          "ref": "de551bf1-c539-4441-b79d-1774aaf67973",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "09b8c2d5-4eba-405a-89d4-4b291aa12c78"
        },
        "item": {
          "id": "7760fe70-cd8d-41c8-a2d2-f881c56f6aeb",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "5a92208e-5922-4ce4-b131-9df770a458b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4363b1d-b538-4e78-89d1-234b1a53ddc6",
        "cursor": {
          "ref": "9b36a407-20ee-4498-9455-0daf7c85012c",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "4afe2b7f-7282-4252-b496-fc6d8e057881"
        },
        "item": {
          "id": "b4363b1d-b538-4e78-89d1-234b1a53ddc6",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "3f002e99-7656-46bd-b0f6-4ecf9131b2aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e2f264e-b0a1-48e6-93be-a373d100a4ab",
        "cursor": {
          "ref": "19df5bfd-fc36-4c5a-9c52-b3c8dae160a2",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "f2add2fa-1d10-4dbc-890e-4b2d46cb8ec4"
        },
        "item": {
          "id": "6e2f264e-b0a1-48e6-93be-a373d100a4ab",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "203adec5-0efe-443f-bb8d-fa4d853a2d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27090747-3f31-4e1b-ae57-6678de7d04bb",
        "cursor": {
          "ref": "6a9649d3-8b86-40e3-a556-b105a464fcec",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "46920469-81e8-4a2e-8d17-7ac9ed3fef7f"
        },
        "item": {
          "id": "27090747-3f31-4e1b-ae57-6678de7d04bb",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "23a9959f-7156-420c-8ff7-767139fdf578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba5d8869-ec51-4fbe-902b-4eb5d87e497c",
        "cursor": {
          "ref": "35ccb0da-1259-4d76-9ac4-65ea2f1ba61f",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ec0d4789-473b-42ae-b640-68abb202de75"
        },
        "item": {
          "id": "ba5d8869-ec51-4fbe-902b-4eb5d87e497c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "2613f34d-e1ce-4e58-9548-cb296cc56d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "165ea2bc-a433-4103-9657-a97a76bfe392",
        "cursor": {
          "ref": "d2c2ee70-9d5a-49e4-96ea-f519b4451211",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a91dc6b2-e4c9-4650-bd83-bf6018b4ad7b"
        },
        "item": {
          "id": "165ea2bc-a433-4103-9657-a97a76bfe392",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e9b79e67-da1b-4b9e-a7c1-1fa2c8ebba87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "552f4473-b6d4-4d72-86c1-9694c260c864",
        "cursor": {
          "ref": "d2b9930b-6975-48b6-a230-6113b57f17f6",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "5a140ffe-caa1-4e2f-adb3-c20ee31776f8"
        },
        "item": {
          "id": "552f4473-b6d4-4d72-86c1-9694c260c864",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c21fd6cd-b6e3-41c6-9abe-c6b6c0c0dc73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f2a36a3-d33d-4f91-96d7-d5657e3b7e79",
        "cursor": {
          "ref": "48a14f32-df2d-439d-b6e7-23f4e4fd8ff1",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "a95917c6-fee5-4d41-9765-621335e8c5d1"
        },
        "item": {
          "id": "5f2a36a3-d33d-4f91-96d7-d5657e3b7e79",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "5307ef14-4747-4072-8551-9451e6cfadd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e0d17f-497c-4cff-a551-855d1b12884c",
        "cursor": {
          "ref": "42669ddc-9fd0-4d27-9ebc-9a01a35d4b70",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ade4a6d5-c1fe-4e43-b298-73e4c714721a"
        },
        "item": {
          "id": "05e0d17f-497c-4cff-a551-855d1b12884c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "cde7d3e8-89c3-4079-b9b4-dc3b0c0e85ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4d813e0-b47d-49cd-aa13-ad04be50aec1",
        "cursor": {
          "ref": "94d0ee31-d46f-4ba6-b1fa-df531cff3260",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a7d1660d-ae5e-4a32-9d31-1159ff754e46"
        },
        "item": {
          "id": "c4d813e0-b47d-49cd-aa13-ad04be50aec1",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "43000954-2487-4e5e-986b-0aeef0d9bf79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "944d964d-6005-4f15-aa1b-b35615b40bba",
        "cursor": {
          "ref": "1fad73f4-5a27-4a5d-bb85-8f9faf15a175",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "efcba641-5c09-4853-ad3f-37d15f8b094d"
        },
        "item": {
          "id": "944d964d-6005-4f15-aa1b-b35615b40bba",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ff4ae6dc-ff87-4996-bf1e-950aa3f951ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b423446b-ae6c-4c2a-8108-990dd584e080",
        "cursor": {
          "ref": "a8de312c-0723-4a9b-8d77-cfcf2e792605",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "4459377c-9e90-4d4d-9175-b6ebb5024604"
        },
        "item": {
          "id": "b423446b-ae6c-4c2a-8108-990dd584e080",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "9e27fe12-618d-41bc-a68d-14ff9a457177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8663f8-7572-4d40-ab06-ddcbd8ffd7b1",
        "cursor": {
          "ref": "bd0de2a4-c84d-450a-9122-bba3f827381d",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "bc8a2e26-6d4e-4d69-b920-c67d8c4e4010"
        },
        "item": {
          "id": "5e8663f8-7572-4d40-ab06-ddcbd8ffd7b1",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "0619684a-adad-4158-a7fb-93d580f1d4ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5710c2cc-852c-4f6b-ba32-86b4163a0003",
        "cursor": {
          "ref": "8dcb87a1-a0ce-4281-91f3-45fa47c4f091",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "73cad688-fdb9-4519-9e55-14583e722c42"
        },
        "item": {
          "id": "5710c2cc-852c-4f6b-ba32-86b4163a0003",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "e796ed9f-b0bb-4ab3-b809-9cab2515baa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0832411-6874-4fdd-993b-220dab60a43b",
        "cursor": {
          "ref": "d7bfbfba-b6f2-4e11-9dd4-d30fd15d74cf",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "b9bd7f98-6bd2-4092-9493-415ffbedc217"
        },
        "item": {
          "id": "b0832411-6874-4fdd-993b-220dab60a43b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f22794b5-e914-4fd7-bd14-f2a3cca6c324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e9a7da6-2d89-49bf-b7a8-e0a68eab4d23",
        "cursor": {
          "ref": "5b606706-0716-4345-b479-99d58a0bde82",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "a8ea9523-fa2d-4214-be7b-95a5151c9408"
        },
        "item": {
          "id": "2e9a7da6-2d89-49bf-b7a8-e0a68eab4d23",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "7bfc32bf-c003-4aeb-a9b3-83e1527bea5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1208,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a983c7-128d-4a8c-87e6-98e7cca9152e",
        "cursor": {
          "ref": "1eee4199-6b70-404b-87e9-87420d36e345",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1ae89ec5-eeb5-4ec7-9d6f-81701dd9b9cc"
        },
        "item": {
          "id": "38a983c7-128d-4a8c-87e6-98e7cca9152e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "278a100e-2459-462f-99d4-b9c0b76c5bdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 820,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f2b1993-9d31-440c-95ef-04dd9f55c7b4",
        "cursor": {
          "ref": "cc4eeb7e-3120-4a96-9599-aad53bb1b3b3",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "be1f78d2-ca63-4370-8167-ba84b8358334"
        },
        "item": {
          "id": "1f2b1993-9d31-440c-95ef-04dd9f55c7b4",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "30b5420c-e80b-442e-aa37-2b333c69a09c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 823,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17fc3be6-6786-4d86-aadd-903cdbd8c282",
        "cursor": {
          "ref": "0b261a15-edeb-4e52-b591-2d08017b9ea9",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "5b0c749f-262d-407d-914f-0e3519bb8696"
        },
        "item": {
          "id": "17fc3be6-6786-4d86-aadd-903cdbd8c282",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "87392e36-41f3-4d51-81d5-c1e11e452f27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d1796f-9918-4bec-92c8-cc364667af96",
        "cursor": {
          "ref": "2ceb88f1-9eeb-4aa4-82c0-a0491910aeb7",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "eec2a208-029a-449f-a2b7-7caec089dff4"
        },
        "item": {
          "id": "03d1796f-9918-4bec-92c8-cc364667af96",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "8aa6cdf4-b6c6-46ce-9d2a-f8538a669cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c951a6bd-a01a-47d1-b7cd-2f19e11e6b63",
        "cursor": {
          "ref": "09a333f4-2cee-4b77-8143-e7a1ffbfbad8",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "bb3f4c60-1d71-4e9d-948c-90ab3f35cd95"
        },
        "item": {
          "id": "c951a6bd-a01a-47d1-b7cd-2f19e11e6b63",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f33cc108-1495-4924-b212-e8e74c95464c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f9d74c-0932-4c9e-b288-86ce1cc295ca",
        "cursor": {
          "ref": "0f3bf45b-e363-47d5-afec-22c6cad43d36",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "14a29abb-3127-466c-a926-4958d894a653"
        },
        "item": {
          "id": "21f9d74c-0932-4c9e-b288-86ce1cc295ca",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "25836f79-c461-4c75-8312-16665be79059",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abebc782-5132-4fdf-9458-ea96da208199",
        "cursor": {
          "ref": "4e938079-7dc1-49fd-b187-e04cbb852e79",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "2a9062ad-9bee-409a-bde4-645c9d79ece3"
        },
        "item": {
          "id": "abebc782-5132-4fdf-9458-ea96da208199",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "9b0eec81-5f99-47fb-8a43-a9ae8674154e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 502,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c7a42d-d71e-468a-a644-4951a3f63c2c",
        "cursor": {
          "ref": "12b158bf-67e7-4da2-9b17-a395aa05284d",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "fec2169a-64fa-41db-a6d8-98333531ecbe"
        },
        "item": {
          "id": "66c7a42d-d71e-468a-a644-4951a3f63c2c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "c73a015a-6460-4d5a-8e07-ab94216b6bb0",
          "status": "Created",
          "code": 201,
          "responseTime": 1844,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e186abd-4f27-45dc-bf73-732fd440bb37",
        "cursor": {
          "ref": "376b1e91-dfbe-491b-bf15-ff70ed79bdb7",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "404b978d-bfba-47d2-9419-b7c9a2b454c8"
        },
        "item": {
          "id": "5e186abd-4f27-45dc-bf73-732fd440bb37",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "ef0bd2e2-abb5-4e6a-b9f8-9495418da24a",
          "status": "Created",
          "code": 201,
          "responseTime": 2348,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a979dd0-d0ef-46bd-b19a-db9952e35eae",
        "cursor": {
          "ref": "e6131a15-7c47-471a-a2e8-bd9f666045de",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "4777348e-ed41-4ca1-8730-efd09bdd96c4"
        },
        "item": {
          "id": "4a979dd0-d0ef-46bd-b19a-db9952e35eae",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a1442378-b5bb-4d43-9f44-21ff10e5f463",
          "status": "Created",
          "code": 201,
          "responseTime": 6307,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89d7893-35ca-46d2-b1f9-1b1346c409fe",
        "cursor": {
          "ref": "fbda26b1-e696-4288-ba8c-ed6da98347d4",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "1e252abb-b4b0-4376-a6dc-d559eab7fbff"
        },
        "item": {
          "id": "d89d7893-35ca-46d2-b1f9-1b1346c409fe",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "02517741-7853-447e-9d69-82598f80e866",
          "status": "Created",
          "code": 201,
          "responseTime": 2393,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7d9b73-8899-4df6-ae94-f2e7eccd85b2",
        "cursor": {
          "ref": "94ac6517-eff6-4bc9-8ebd-7afb8df477ba",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e26b9111-b45d-45ef-a2b2-22de9618a874"
        },
        "item": {
          "id": "1b7d9b73-8899-4df6-ae94-f2e7eccd85b2",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "393c0e37-6ae2-450f-85b5-dae346b9cf6a",
          "status": "Created",
          "code": 201,
          "responseTime": 1981,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d04edde-6660-4d99-963e-08fae8dc70db",
        "cursor": {
          "ref": "cb7536bf-bf1d-4c35-8aa5-2c4a37ce1eda",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "738ed981-3178-4977-864c-e9c715b55b06"
        },
        "item": {
          "id": "0d04edde-6660-4d99-963e-08fae8dc70db",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b0a94f89-02bb-4b90-886b-cb0fda2879fa",
          "status": "Created",
          "code": 201,
          "responseTime": 2353,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "517df576-f414-4e4c-8ee2-912bf17724a5",
        "cursor": {
          "ref": "5ead6467-de59-4589-933b-c4e5ddb7236a",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "bd2d41b9-b408-4cfa-aca8-78efdabd88fb"
        },
        "item": {
          "id": "517df576-f414-4e4c-8ee2-912bf17724a5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0065700b-9524-4ab4-b2f3-aa252ffa4db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "517df576-f414-4e4c-8ee2-912bf17724a5",
        "cursor": {
          "ref": "5ead6467-de59-4589-933b-c4e5ddb7236a",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "bd2d41b9-b408-4cfa-aca8-78efdabd88fb"
        },
        "item": {
          "id": "517df576-f414-4e4c-8ee2-912bf17724a5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0065700b-9524-4ab4-b2f3-aa252ffa4db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f04c82e3-cd95-4fff-a029-f18f15a5be45",
        "cursor": {
          "ref": "376e85f8-733c-44bc-88d6-8c5382a28373",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e9022272-2729-48ac-a809-5facd021f5b5"
        },
        "item": {
          "id": "f04c82e3-cd95-4fff-a029-f18f15a5be45",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a0ac250e-b5fa-4aa8-aaec-5d0a2a3d8651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4611803-4261-433c-ac5e-4a359d370aba",
        "cursor": {
          "ref": "c4a8155e-f7b2-440f-acea-f6b678ae1acf",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "141af6b5-48bf-4d02-b40d-022a6933121b"
        },
        "item": {
          "id": "a4611803-4261-433c-ac5e-4a359d370aba",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7770460b-c45f-40f4-8f97-daf4b535ca97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 342
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e66ac15-d24d-4207-8242-9e6b922ef132",
        "cursor": {
          "ref": "00975c0c-2721-447a-b935-654720840633",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e995b110-064e-4aa9-b4f5-33e34a8b4d43"
        },
        "item": {
          "id": "4e66ac15-d24d-4207-8242-9e6b922ef132",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "95fc2ad8-42fa-40b5-bae3-bc866d6f64ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46b36802-42a7-4f9c-9e97-321379b586a3",
        "cursor": {
          "ref": "fc9a36ba-626c-404e-81f2-16483ed6d4ec",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ac8de18f-55fd-4cfc-8394-85c010ffc267"
        },
        "item": {
          "id": "46b36802-42a7-4f9c-9e97-321379b586a3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c077e8df-4d98-40c0-81f5-38486d617bf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 341
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc8f54e-0e30-4e13-a8c1-eeeda72ce85b",
        "cursor": {
          "ref": "99c2ccf3-2fe1-4e9a-b376-37d71d0c7645",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "11b6e096-ed05-4ba7-9ccd-81fabef1b05a"
        },
        "item": {
          "id": "1bc8f54e-0e30-4e13-a8c1-eeeda72ce85b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "448e7316-2c03-4c63-8efd-1848d00a299d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "742b1cea-7b1c-4886-9836-ac3f8125b192",
        "cursor": {
          "ref": "b9d50687-cd62-457c-ab57-0b5b87469510",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c49468be-f302-4b82-8d35-100456bd34af"
        },
        "item": {
          "id": "742b1cea-7b1c-4886-9836-ac3f8125b192",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ab59298a-ab91-4174-bdc8-7e61c8e6ea8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f243d66-9b2a-4352-97a4-030e6e12334c",
        "cursor": {
          "ref": "2693066d-93e1-4a2a-aad3-231641b51d1e",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e9e605fc-589b-40fd-ba03-45ce99dfdf9c"
        },
        "item": {
          "id": "9f243d66-9b2a-4352-97a4-030e6e12334c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "783497a7-773e-4dec-99f8-f75000a27760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b097b9-c814-4337-8362-73386be5250d",
        "cursor": {
          "ref": "9f92a550-cc20-4c2b-b8c7-1c437f039814",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "35e2fa68-0e20-46c2-92b2-63a0c7079dfc"
        },
        "item": {
          "id": "d9b097b9-c814-4337-8362-73386be5250d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6dcad493-07c5-4c0f-94f0-d8334fe2fe68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42522c72-e984-47f4-8a6b-1532bcbcff2f",
        "cursor": {
          "ref": "1d9771dc-86ea-4b34-a6fa-ba57f09fcfef",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "7f7b64df-ff60-4a4a-bac3-95cfd0161ee5"
        },
        "item": {
          "id": "42522c72-e984-47f4-8a6b-1532bcbcff2f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "fd387bf3-2103-4553-b75c-e76e87fe71b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef53f8f-0a5f-4168-b9f7-7ebecf5caf80",
        "cursor": {
          "ref": "807bf69e-75a8-44d8-9224-830c7313ade3",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "8d292de3-dcb7-44a2-993e-258fbbbeff48"
        },
        "item": {
          "id": "8ef53f8f-0a5f-4168-b9f7-7ebecf5caf80",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ed529124-e5ef-475a-91ce-920ad51c9b80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 751,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "072450cc-227c-4214-8397-655a8d985949",
        "cursor": {
          "ref": "762375ce-7327-437a-84ec-47a917fe6bcc",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "6b26166e-2ae0-427f-b57d-03457234f1bc"
        },
        "item": {
          "id": "072450cc-227c-4214-8397-655a8d985949",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "29397bd2-a1bb-4642-a9ed-fe2a0493de98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfdddfd0-6d67-487a-9fd2-f6d3760dcd37",
        "cursor": {
          "ref": "d98dcc4f-a5f8-49ff-a742-fdb180531199",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f65300ec-f447-42a6-98b8-4ee821decab3"
        },
        "item": {
          "id": "cfdddfd0-6d67-487a-9fd2-f6d3760dcd37",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5a21a254-4268-4361-b727-20fd63a103dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc1f294-0ec8-4583-ae64-cf8dd76a3d3b",
        "cursor": {
          "ref": "feadcf32-23d0-45a4-a4cb-00858f6a11d0",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "60a319eb-2a41-4ce3-a543-8388af0d2b78"
        },
        "item": {
          "id": "4cc1f294-0ec8-4583-ae64-cf8dd76a3d3b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0489b70d-b0ff-4c13-a185-b43b4002880a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "714acb61-6089-4832-8a8f-8ffac9181cd1",
        "cursor": {
          "ref": "bff2bc84-3363-4377-bc7c-9234607488e4",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "fa2399e3-9025-458f-b65d-fbeaffdacdc8"
        },
        "item": {
          "id": "714acb61-6089-4832-8a8f-8ffac9181cd1",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "678a3770-08c6-4ac5-b8f8-490aefc56486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d97737cc-6018-4189-85c8-f213bf2f2b52",
        "cursor": {
          "ref": "25d54df5-c69c-442c-8e43-6821ab657fcc",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b328bcc9-9a2c-4b80-a892-90a472c7d1fa"
        },
        "item": {
          "id": "d97737cc-6018-4189-85c8-f213bf2f2b52",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7b3e50c8-396f-4883-bb2b-76dd8c72a870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb0cad0-3f89-465f-9ceb-24c12d715afb",
        "cursor": {
          "ref": "64a5e061-4a39-4929-ba82-6fbaa2192864",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "2741f8df-c877-4cde-948d-7c24fed2c676"
        },
        "item": {
          "id": "acb0cad0-3f89-465f-9ceb-24c12d715afb",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c9a451ea-5779-43a5-adf5-2900724511e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c4b7bd-8e68-4eff-abff-db2e5e951d65",
        "cursor": {
          "ref": "2ff844df-55ce-4626-913d-db8a21be4509",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "34cc7c4a-4aba-4d64-8048-945bdf5a0035"
        },
        "item": {
          "id": "11c4b7bd-8e68-4eff-abff-db2e5e951d65",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9bf10d1b-069d-47df-8edc-a2de64c7448d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478cd8c2-eaa3-42d6-bae9-7c0626104d63",
        "cursor": {
          "ref": "5deb72dc-a16b-4cb9-bf65-f4a3f0870495",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "3a94ca10-8966-439d-be64-948d3d3ff6ec"
        },
        "item": {
          "id": "478cd8c2-eaa3-42d6-bae9-7c0626104d63",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9d9ef84b-cc69-4abb-bad2-3e957f9f8422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fccb99b-e520-41e4-9fca-434b41af4f1c",
        "cursor": {
          "ref": "8656164f-4495-43fe-96d4-3981df9e06eb",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e6bac760-24f2-4bae-8a7a-656b41267fa7"
        },
        "item": {
          "id": "2fccb99b-e520-41e4-9fca-434b41af4f1c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8387db25-7857-4bc1-b5fd-8b3b42255c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4289cf0-c3f9-40b0-b788-4d4e586ededc",
        "cursor": {
          "ref": "2a2aced6-9adc-450c-83c2-4ff496d32dd1",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "17afcb29-5db9-471e-94ee-ca4c6d50019f"
        },
        "item": {
          "id": "c4289cf0-c3f9-40b0-b788-4d4e586ededc",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a754a735-e255-4d8e-a7bf-2e1b15318d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc57c18-3a8a-4296-9596-d5bba40fabf1",
        "cursor": {
          "ref": "592c168b-05c4-4c88-9658-39912c91a17e",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "11835fff-453f-4c59-8b7c-cbce824a649c"
        },
        "item": {
          "id": "5fc57c18-3a8a-4296-9596-d5bba40fabf1",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "cfcfb2a6-a9c5-4bc2-b227-de270949e0df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a54109-08df-46c7-8134-add223ec3b70",
        "cursor": {
          "ref": "1dc0328f-6598-42da-bf99-3a70e184667d",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "3f55e768-46d1-4a53-b36a-f44cd185873e"
        },
        "item": {
          "id": "c5a54109-08df-46c7-8134-add223ec3b70",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "34baf2fa-6d2f-4098-a3fc-45855f26b2a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c16a7c5-d6a5-4115-b27e-72e38ac66432",
        "cursor": {
          "ref": "6a74f601-728c-4804-b12a-4c05bc00e10a",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "95f83cd1-0e13-4c55-906e-6d2e749911ff"
        },
        "item": {
          "id": "0c16a7c5-d6a5-4115-b27e-72e38ac66432",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1f0e4952-2929-4837-9905-0a6b7f046322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "757b5cdd-661c-4097-9c1a-25d32120c8fa",
        "cursor": {
          "ref": "bfc78377-ea21-49ba-ba01-76d267b964f6",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "0621949f-5ace-43e0-916c-038f301422a7"
        },
        "item": {
          "id": "757b5cdd-661c-4097-9c1a-25d32120c8fa",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "447fac11-0294-48a5-9f54-32efd84d59ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e99e645-2d8a-462a-a4ca-e64c695d0bd6",
        "cursor": {
          "ref": "1d681de6-d681-47fd-a842-4430f5312fa1",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "7fd66635-ab1a-4f58-960e-26db5acaee11"
        },
        "item": {
          "id": "8e99e645-2d8a-462a-a4ca-e64c695d0bd6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ccb2e1ae-9118-4522-8f5d-45264364732b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "535edaa2-3849-427d-b67e-31d946332144",
        "cursor": {
          "ref": "8121315b-6f01-4284-909e-efe4469dcee9",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "99694a64-b1a8-4652-a60d-9e83c248dce1"
        },
        "item": {
          "id": "535edaa2-3849-427d-b67e-31d946332144",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "9f7ec247-6e5c-4576-b8c8-5e79aebc4c96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff6bc42-ce19-4ed5-8726-3eb9bc9a62d3",
        "cursor": {
          "ref": "af9ac9a2-4304-4fbb-8f5c-0580f21efdfb",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "8d4a5906-e6b2-4831-96fc-c603bf1697e1"
        },
        "item": {
          "id": "3ff6bc42-ce19-4ed5-8726-3eb9bc9a62d3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "605929a3-f032-4ca9-99e6-d61cb0250b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4463e7e-aa16-4ae6-9efe-e38677e6dfd8",
        "cursor": {
          "ref": "98f223be-8d5d-46fe-91f2-58c69edb124e",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "767c84b8-1c5a-419b-92ef-67f530604a64"
        },
        "item": {
          "id": "a4463e7e-aa16-4ae6-9efe-e38677e6dfd8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d3d30006-69e2-4057-b978-e4d3cb740628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20bcf06e-425c-4998-89bb-1733aea0438e",
        "cursor": {
          "ref": "51f56f31-07af-4e59-a6ad-193a9e1d39c7",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "558aa230-a818-46ea-9418-0057e0afc409"
        },
        "item": {
          "id": "20bcf06e-425c-4998-89bb-1733aea0438e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "14444682-6ea8-4d6b-86fc-dc2462cd9c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "094c0942-6751-4b2d-9212-b164c21861b8",
        "cursor": {
          "ref": "9fc17950-4e1e-4cef-822b-14fb49089d60",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "5d40d2d8-eb4b-4e0d-ac6e-6c77c20a2435"
        },
        "item": {
          "id": "094c0942-6751-4b2d-9212-b164c21861b8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9ccf6e20-edbb-4a46-a64d-6888c997ca49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dd7cf31-0571-4b71-ab2e-ad7ebd3a445c",
        "cursor": {
          "ref": "7a2d4a22-f692-464f-bef8-2ba299854b18",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "46c2d724-7d66-42c1-953f-f09e77d7505b"
        },
        "item": {
          "id": "4dd7cf31-0571-4b71-ab2e-ad7ebd3a445c",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "e97c0a07-cbc2-4337-9296-e574c1e93dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a682a5-b300-4e74-bc7f-d95b57ba449f",
        "cursor": {
          "ref": "bc4131e8-06e3-40c6-bc45-3fdf4226285b",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5f7578bb-a1a1-446c-939d-417164bba090"
        },
        "item": {
          "id": "65a682a5-b300-4e74-bc7f-d95b57ba449f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "471844b7-4ad0-4edb-b164-fa11fd474c81",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 82,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21cbc36-4398-43df-9039-61c506d2a389",
        "cursor": {
          "ref": "1e2e13e7-9ac0-4fff-b992-a3d95d662d05",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "976d54d3-aadc-4a03-a63c-d9de1a5f7496"
        },
        "item": {
          "id": "a21cbc36-4398-43df-9039-61c506d2a389",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "52b69eb7-5b16-4bf3-8cdf-dec204b30375",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 449,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f1580d-6380-4721-a01e-9bff8a290076",
        "cursor": {
          "ref": "468dd7b2-be57-4ad3-862a-da5200731f7c",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a4078c6c-afc3-4e08-aa3c-a3b9ec8ca749"
        },
        "item": {
          "id": "a7f1580d-6380-4721-a01e-9bff8a290076",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "33444ed3-972b-4636-86ed-759548743107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f1580d-6380-4721-a01e-9bff8a290076",
        "cursor": {
          "ref": "468dd7b2-be57-4ad3-862a-da5200731f7c",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a4078c6c-afc3-4e08-aa3c-a3b9ec8ca749"
        },
        "item": {
          "id": "a7f1580d-6380-4721-a01e-9bff8a290076",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "33444ed3-972b-4636-86ed-759548743107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72dd33a2-4107-40ad-b34c-6b363bd9fe46",
        "cursor": {
          "ref": "2c353c0a-2c9c-4afc-8e19-55415f2f5b83",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "16cdf631-ca0c-424f-bbf4-919883217684"
        },
        "item": {
          "id": "72dd33a2-4107-40ad-b34c-6b363bd9fe46",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e1122f12-c235-44de-ad3d-6fadd708526c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 221,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "6ba18a8f-b921-4bc0-ba81-1f92827202d0",
        "cursor": {
          "ref": "96849e9a-71cc-4836-b27d-84f66f8a3a79",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "285f732b-4aa0-4a8b-9408-7398897679db"
        },
        "item": {
          "id": "6ba18a8f-b921-4bc0-ba81-1f92827202d0",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "85025540-ab02-48b0-8635-78ac3f3852ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 223,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567efcf7-f62b-4e03-87d7-417403b4ff32",
        "cursor": {
          "ref": "adc1b7f1-b297-4071-9361-16546835fca9",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "6661e267-263a-431e-b3b5-3756fa2fa785"
        },
        "item": {
          "id": "567efcf7-f62b-4e03-87d7-417403b4ff32",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c23a7b94-3fd7-4a3d-add9-37ef684021f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "450c8aa9-e599-43f8-9970-6c8f85c36293",
        "cursor": {
          "ref": "8c1aab6b-db7b-4d3f-adb2-3a86194d4f0e",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "0781058a-ef1b-4d86-b969-d7e8701537af"
        },
        "item": {
          "id": "450c8aa9-e599-43f8-9970-6c8f85c36293",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "411d54e7-b9b7-4d8c-a5e8-43a1cf0958b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 218,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e47ea04e-7be2-42a7-aef7-f0fdd51bacad",
        "cursor": {
          "ref": "89c5a3df-0d78-4878-9286-04ba97a93338",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "bb455096-0048-4feb-b318-358fea229b51"
        },
        "item": {
          "id": "e47ea04e-7be2-42a7-aef7-f0fdd51bacad",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "a24d64e1-e2b6-4f31-8d83-ea296611e677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 226,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac31839-89b1-4cf8-b93d-9c2c924bb151",
        "cursor": {
          "ref": "5ee061a7-576d-4121-aa43-8d1f30579700",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "04b64cba-c877-4db1-a0cb-6e5212c4d4ca"
        },
        "item": {
          "id": "1ac31839-89b1-4cf8-b93d-9c2c924bb151",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "a4872c93-c329-4107-9139-7a9a27551720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f52d2cd4-d492-439d-a963-b904df2a8ef5",
        "cursor": {
          "ref": "73865f27-d72a-48e4-bc03-3ee8ddfec62c",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d5abc080-173e-4138-b24d-e5f526853c9c"
        },
        "item": {
          "id": "f52d2cd4-d492-439d-a963-b904df2a8ef5",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "0986e36f-17bb-4257-a356-6473967adc63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 219,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8557affc-f903-4912-bc6a-6dbb3908e486",
        "cursor": {
          "ref": "b6aa16ed-b365-4b9d-b750-68ab729521ad",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "21dd725b-e7e8-4b55-8782-d272f51137ff"
        },
        "item": {
          "id": "8557affc-f903-4912-bc6a-6dbb3908e486",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c617f75b-dec0-4923-a864-ca7f9798df04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 222,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073f49ef-d9e6-4c49-a9d9-18f26e98fe85",
        "cursor": {
          "ref": "3585e783-10dd-443c-b438-5db6e0757a16",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "df531d73-1b62-4940-a0a1-3b72aa81e902"
        },
        "item": {
          "id": "073f49ef-d9e6-4c49-a9d9-18f26e98fe85",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f0b2581d-5473-417e-a4d2-511d8fe36406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 216,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a0dfcc5-ac80-42df-9bcd-1da8ad2ec660",
        "cursor": {
          "ref": "5125d163-13e0-46ec-99e4-d4956be0c8c7",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "df1c52af-c8f8-48f6-8316-0cf8dc2352c5"
        },
        "item": {
          "id": "5a0dfcc5-ac80-42df-9bcd-1da8ad2ec660",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "be716da4-d6a1-4d9e-b698-c728259760f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1450
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "640f9fcd-a341-49f3-901c-234b4813b6e7",
        "cursor": {
          "ref": "c379061c-f3a7-4f13-80cd-c7620bb296aa",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e787d803-bf7e-4565-870c-d7920d7f274d"
        },
        "item": {
          "id": "640f9fcd-a341-49f3-901c-234b4813b6e7",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "05f17cfe-971c-4f84-bdda-519d1f32c003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 211,
          "responseSize": 1437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ef57e3-bb58-4c2f-af25-d5d83f707608",
        "cursor": {
          "ref": "5a769e50-f016-4fe7-8153-450d5634ede1",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "fa59b0b3-45b8-4a3e-bb75-7cc0bcb7f41c"
        },
        "item": {
          "id": "a1ef57e3-bb58-4c2f-af25-d5d83f707608",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "2514abf6-6f76-4a36-bd14-2f4a2d5e859a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 221,
          "responseSize": 1690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ad7d57-eb70-4d99-bc17-869c1c53e192",
        "cursor": {
          "ref": "12a22699-55dd-4d14-9db0-12c725992ce5",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d8e87176-c110-4b60-81c5-4dae6a604f8e"
        },
        "item": {
          "id": "54ad7d57-eb70-4d99-bc17-869c1c53e192",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "7653d232-6fc1-4e79-9177-438f496f4900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 226,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a2f2817-9abe-436f-bf96-c7d5de02219c",
        "cursor": {
          "ref": "2f7c459a-27f8-4999-9385-b199ad4cf4f8",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "cf3f4227-60ed-4e44-b44d-afce36532522"
        },
        "item": {
          "id": "6a2f2817-9abe-436f-bf96-c7d5de02219c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ffaa55c6-a47b-4446-b392-81502afe8c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2026c3ba-2eb8-4e43-97d7-d5b728d17031",
        "cursor": {
          "ref": "5db9ec5a-a7e1-4edb-86c7-2c259c1603c4",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "68932263-6abd-4b53-aa7d-0d5d9d1d097c"
        },
        "item": {
          "id": "2026c3ba-2eb8-4e43-97d7-d5b728d17031",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ed3e083c-0c98-433e-815c-da93db729066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b0d086-9d88-4e11-8ed5-49c7694d6aaa",
        "cursor": {
          "ref": "3ba02c03-0c04-4782-b783-68e6f09405a9",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "17cc5344-08fd-4aa7-ba8c-8e604d256a05"
        },
        "item": {
          "id": "79b0d086-9d88-4e11-8ed5-49c7694d6aaa",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "14552c7f-0047-4300-b18e-2b82084a6634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 220,
          "responseSize": 1731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3561810-8609-4214-b83f-bf0386afe1a2",
        "cursor": {
          "ref": "43a333f3-8421-4ff5-904b-a9aeb5aa13f0",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6e40352b-32c3-42db-aeba-266f28a9d5eb"
        },
        "item": {
          "id": "e3561810-8609-4214-b83f-bf0386afe1a2",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "256d964d-3ea3-4f9c-8753-8ac93168b71c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4507e8d-baf4-43c9-bc77-e46fc6d5f4fe",
        "cursor": {
          "ref": "86f23248-98e7-44fd-a24d-80dc3d1cdc2b",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ce0506cc-0f36-4626-9a3d-84ba39d2b5b1"
        },
        "item": {
          "id": "a4507e8d-baf4-43c9-bc77-e46fc6d5f4fe",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b9feeb9f-d147-4bcd-90e8-67b89a7a7d1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1250
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38b9b707-9488-441b-9126-ecfc840e932f",
        "cursor": {
          "ref": "d6a0ef29-64ce-4c69-8689-05d69999d109",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "229d9a87-a2a5-4f8e-8694-87c198f83d57"
        },
        "item": {
          "id": "38b9b707-9488-441b-9126-ecfc840e932f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "412beafc-efc3-4d9b-87bc-5954457143d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 220,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "183637ae-150e-4674-b408-5e484245dfc7",
        "cursor": {
          "ref": "0d9e0464-533b-4613-863d-a290f28e35f8",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "751dc5fe-5fa9-41e2-bfac-e3529ff4237c"
        },
        "item": {
          "id": "183637ae-150e-4674-b408-5e484245dfc7",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "419d8fd9-7c38-4a4b-81f8-c2394e534f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1249
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414b713c-1a05-4df8-bd7a-f3864d25a72d",
        "cursor": {
          "ref": "d798574c-0ea8-4d09-9ccb-ea19cbd1fbb1",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f69d57a5-4d26-4af4-a5c1-83b0521e1e29"
        },
        "item": {
          "id": "414b713c-1a05-4df8-bd7a-f3864d25a72d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "5cd4b3a5-6cc0-46c0-abdf-ea18cf6fa188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b74c80-df7e-4b30-b593-dd60e3e8c402",
        "cursor": {
          "ref": "39e55d87-efa4-4298-a2b9-09e41442dfc8",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e52e4b8e-443e-4f62-a225-7255f4370a59"
        },
        "item": {
          "id": "18b74c80-df7e-4b30-b593-dd60e3e8c402",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "45d12100-7438-4d7b-965e-76fb746646ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 230,
          "responseSize": 1227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "becaf818-ecc2-441e-a8ec-820435ac0920",
        "cursor": {
          "ref": "b1ff3209-11ed-4c3d-bfc2-0935cb950bda",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "61b9c012-5410-4473-87c4-99b1ab2451d8"
        },
        "item": {
          "id": "becaf818-ecc2-441e-a8ec-820435ac0920",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c9a1b65e-8cfc-4449-b0d3-638063c5388e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 218,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5ab43d2-f08f-4855-8101-303d8296234a",
        "cursor": {
          "ref": "3e6072d0-72d4-432b-8a87-afc94d574419",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "3e312149-0547-4463-821c-5c8d7d8f959a"
        },
        "item": {
          "id": "b5ab43d2-f08f-4855-8101-303d8296234a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "63b36b2c-19d0-416a-86ee-668a0fe54c2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 221,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7460c1b1-166c-4997-a9fe-35bc2d0b7555",
        "cursor": {
          "ref": "d8c35e35-fb7f-4777-883b-1348bc4e5bf1",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "bf232de2-499b-4d71-a4fe-0e6cd7e654ec"
        },
        "item": {
          "id": "7460c1b1-166c-4997-a9fe-35bc2d0b7555",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "473c88ba-43e1-4aa2-9fbb-cd95fbe86642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9a16935-61c7-47cd-98e3-210afd45ac9a",
        "cursor": {
          "ref": "f8c1d600-42ec-45f3-9e67-1ba060b5071b",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ee67bf74-735b-472b-8c29-b130d10247cb"
        },
        "item": {
          "id": "a9a16935-61c7-47cd-98e3-210afd45ac9a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "fd4847d0-8023-4f8b-90e3-ac2965743db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 231,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b0049a1-09f5-41c6-9b3b-c882259fa32e",
        "cursor": {
          "ref": "c9a0511d-48d3-43ac-95bc-4cfaae8ce23d",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "0a99ffe2-1ef5-48e3-8b24-6ff5fe2cdaac"
        },
        "item": {
          "id": "2b0049a1-09f5-41c6-9b3b-c882259fa32e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1f06af9a-d206-441a-a269-ebad142caf9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 217,
          "responseSize": 1239
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f60bd8-87a3-45db-a876-953fb6b8bcd4",
        "cursor": {
          "ref": "5e9e22f4-d4d5-4bd3-8984-d7b1b788f2eb",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "62b8dc2e-5f46-4844-b88a-040d0fe177ed"
        },
        "item": {
          "id": "89f60bd8-87a3-45db-a876-953fb6b8bcd4",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "0aa71b1c-5fce-420c-8811-84fdbe4d10be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 222,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2058929-fe37-49f5-a7b8-8feb96bc8c62",
        "cursor": {
          "ref": "094e30c1-dbb8-4029-a17d-1e270ffb6fff",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a8ae5983-8ac1-42ee-b3d6-8aed6abc3e9a"
        },
        "item": {
          "id": "b2058929-fe37-49f5-a7b8-8feb96bc8c62",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9608dcb2-e60e-498d-8234-511de1539df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "021a2946-e57a-436a-be22-22e0cc8e3d95",
        "cursor": {
          "ref": "f8bf57c6-887c-4911-abc6-57de7700cdb6",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "6ee6fa5b-87b4-4374-88c9-a407c1b206f3"
        },
        "item": {
          "id": "021a2946-e57a-436a-be22-22e0cc8e3d95",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "fb1ad929-9dbb-4049-b6fb-39b03283bd23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 230,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ccd889f-3d6d-496c-ba7c-3f04efe87b4d",
        "cursor": {
          "ref": "2322f4fb-d715-4f46-8a38-b29604afb29b",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "4a39fcb9-3220-4111-b821-2d1c9225dcdc"
        },
        "item": {
          "id": "0ccd889f-3d6d-496c-ba7c-3f04efe87b4d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d0202a82-22aa-4203-9d58-43331e2b569d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 218,
          "responseSize": 1255
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a09ac90-34d9-4bab-81bc-8af03beb6047",
        "cursor": {
          "ref": "58fb4444-0e25-4236-809c-b90b1f10e38b",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "da8f6d6a-e363-49c5-9e01-0c425373f715"
        },
        "item": {
          "id": "1a09ac90-34d9-4bab-81bc-8af03beb6047",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "7a148c64-4d2a-49cb-a9ce-023162dfaf5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a77e4e2-0be4-4496-bf75-1bee98e578c5",
        "cursor": {
          "ref": "01924851-0996-41ef-a3af-ba5cdd7d6cb7",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "80743476-b2dd-43a9-8841-249674b49a9c"
        },
        "item": {
          "id": "3a77e4e2-0be4-4496-bf75-1bee98e578c5",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e0a5e8ee-afb3-4a9a-9f10-c8f26d0fb3e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1282
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e6e3e6b-31b0-4296-8485-40c73dd99f97",
        "cursor": {
          "ref": "49c7efbc-7bff-4a1f-8b68-1a00a06c98a6",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b68e7137-bbce-4792-9c31-77f74f6b5670"
        },
        "item": {
          "id": "1e6e3e6b-31b0-4296-8485-40c73dd99f97",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e01c0052-8597-4b26-a38e-78d5adf99de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee9d9372-dd91-412f-b5f5-39544f78c41d",
        "cursor": {
          "ref": "5ef35604-28c3-4a3d-800a-af221a18a5f9",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "6a8f5a1b-e8ad-4010-abc6-e3dc4b36fe81"
        },
        "item": {
          "id": "ee9d9372-dd91-412f-b5f5-39544f78c41d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "8306de7d-7f22-4f69-8005-079e87be714d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 222,
          "responseSize": 1668
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "013e8852-f37e-443f-906c-55052bddb29d",
        "cursor": {
          "ref": "c8152dca-e389-4bc2-bacc-80adce3ed9f4",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "cc178ba1-c920-441f-b788-781ce2076fd5"
        },
        "item": {
          "id": "013e8852-f37e-443f-906c-55052bddb29d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "eff82fdc-fc58-4947-813f-f54f8c4231a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 214,
          "responseSize": 1654
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5451587f-8cd2-4789-9012-88e32f2f4f5b",
        "cursor": {
          "ref": "3fb2a5ee-4d12-4317-9498-b0202d8669c5",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "5a3254f3-12f8-4529-aab6-2894bc93e22f"
        },
        "item": {
          "id": "5451587f-8cd2-4789-9012-88e32f2f4f5b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d62883ce-cc21-4a2f-a4c0-108c3f44f75d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 231,
          "responseSize": 1652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a6b6ec7-f6cf-481e-9026-7770795e7d5a",
        "cursor": {
          "ref": "bef15f41-80e6-4bfe-a3a3-3e775da171b2",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "9dccc33c-d662-4e08-9e94-c5d11cccf140"
        },
        "item": {
          "id": "2a6b6ec7-f6cf-481e-9026-7770795e7d5a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c0dd0dcc-752f-4aa0-a034-dc783fdf7c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f047519a-ff3f-488c-9fa8-14822f119688",
        "cursor": {
          "ref": "94055c56-6daf-44a3-b32e-f6ec62d30335",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "4bdbc578-6e4d-4faf-838a-b2696ff975b1"
        },
        "item": {
          "id": "f047519a-ff3f-488c-9fa8-14822f119688",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b01d61b0-4b5b-41b2-8a97-92f89ee61552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 229,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38dc9f15-435e-4e5e-a627-c2582c48a6b8",
        "cursor": {
          "ref": "22e0efe2-69fa-4328-9e4d-95179ee02960",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "12185531-1036-44a9-b497-529f5b183687"
        },
        "item": {
          "id": "38dc9f15-435e-4e5e-a627-c2582c48a6b8",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "235edc11-23fc-4283-9edf-ded6c167fb66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 228,
          "responseSize": 2027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ef6b6d-f632-403d-8925-7e1c47a2556f",
        "cursor": {
          "ref": "1a12f449-0aca-4fe0-8283-53ad5797274d",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "3d6f46a9-ebf4-46e4-9f70-37d8046ca5d3"
        },
        "item": {
          "id": "f2ef6b6d-f632-403d-8925-7e1c47a2556f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "5725334b-4f75-48b9-ae6d-19386f8da95d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 2013
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf932132-b01d-4614-8f48-de5d7586559f",
        "cursor": {
          "ref": "13f76a7c-6777-44ce-b64d-a0744b4f25d0",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "25a9d576-75ef-4e29-9b63-061db79d8e3d"
        },
        "item": {
          "id": "cf932132-b01d-4614-8f48-de5d7586559f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "4cc4edd4-bf10-4083-aa45-8d7753ef5f3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 224,
          "responseSize": 2011
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb0e459-0910-471f-9215-730f54dfd6f2",
        "cursor": {
          "ref": "fad87b30-f372-4c13-bff2-1fd3d78b6240",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "5faf8f6f-f17f-42c1-8efb-1f0e217f23f8"
        },
        "item": {
          "id": "abb0e459-0910-471f-9215-730f54dfd6f2",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d0ce0137-7dd5-4aca-b56e-dd5dd14f083c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 2012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "217714cd-b53f-4629-a047-741086ad0c58",
        "cursor": {
          "ref": "564d5a35-2b8d-45ad-b7e2-37b7fd99734d",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "9c4dd0dd-bce6-4de6-b440-982a86d49c65"
        },
        "item": {
          "id": "217714cd-b53f-4629-a047-741086ad0c58",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "25c418f4-fffd-4dfb-b1d0-199be4f57289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 229,
          "responseSize": 2033
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6fdc2ff-0c15-4d98-8de0-44b38add6147",
        "cursor": {
          "ref": "abea21aa-5b6c-42ed-ac97-1c6a2a83da12",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d46da3da-a176-4041-8f9d-3386cf7311df"
        },
        "item": {
          "id": "c6fdc2ff-0c15-4d98-8de0-44b38add6147",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ff5372ec-0900-45f4-837c-e52f1f33f298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1237
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c8df288-df80-4566-8328-60fd41b9dc98",
        "cursor": {
          "ref": "48f11f4d-d466-430d-9a0f-f0f513d935c0",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "358fbec1-d6f8-4a4e-a2fe-bfd01b6eaf64"
        },
        "item": {
          "id": "9c8df288-df80-4566-8328-60fd41b9dc98",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "32a2571a-e231-4ad3-9342-c5c6ab6015c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 214,
          "responseSize": 1261
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eed3e3b-4f49-4d5f-9c0b-8af625c68ebe",
        "cursor": {
          "ref": "c0d00d16-4617-4d88-9903-15cb71f1cfd7",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "85742488-b43d-4332-8f83-e4b50d03b673"
        },
        "item": {
          "id": "5eed3e3b-4f49-4d5f-9c0b-8af625c68ebe",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4178c2ca-a653-4c5a-88af-e7873ec78d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 1242
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b2a5df-83b4-4d01-90bb-21faf9d8d27d",
        "cursor": {
          "ref": "d0715831-4358-4e99-b607-5d4bbd91db93",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "a9fbdcaa-cf07-4eed-9869-92402f4b2885"
        },
        "item": {
          "id": "48b2a5df-83b4-4d01-90bb-21faf9d8d27d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "3b6fad2c-b99a-4b2d-9353-3f2aa547cd5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf252848-a534-44c8-a603-b159f27ac8a8",
        "cursor": {
          "ref": "df901cd1-f576-4a7f-ad9e-6212246326bf",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "8e706310-7a06-43cf-85da-06b6662884bf"
        },
        "item": {
          "id": "bf252848-a534-44c8-a603-b159f27ac8a8",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "4ee07360-e7a3-49a8-92eb-87aca839d474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "855ba977-e684-476b-824b-9dbb7fa5706a",
        "cursor": {
          "ref": "439a7840-8445-4bb0-b4e0-5ae429340fe2",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5122cd75-8e05-4c79-a318-948bbdb1d931"
        },
        "item": {
          "id": "855ba977-e684-476b-824b-9dbb7fa5706a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "dac3f155-1652-4aba-99f5-7b949ce79b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50d8c284-70cb-4930-b951-732a759dbed6",
        "cursor": {
          "ref": "b2cdf000-9711-4458-b13f-feb5801e3fa2",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d6903227-fb0a-4df1-9fa8-a17e1462c8dd"
        },
        "item": {
          "id": "50d8c284-70cb-4930-b951-732a759dbed6",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "0d811032-b7ab-4610-85ad-1cc7b4193877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 213,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e469c2-715d-4f70-afa4-d007b4a8fead",
        "cursor": {
          "ref": "e441d7b0-b8a8-4a25-b11b-aaf68b056bfd",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c8655383-8e4c-4bf4-bc14-13e31f421bc1"
        },
        "item": {
          "id": "06e469c2-715d-4f70-afa4-d007b4a8fead",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b6af52a1-d8f7-4fa7-acba-1d2af9540871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf23faa-5e9d-4271-9183-d3197a4261fe",
        "cursor": {
          "ref": "09f9a02e-597a-41c0-a4b6-3ecdb5e9f6f1",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "5ef1b877-a63d-4556-8d49-6d846fca7ac0"
        },
        "item": {
          "id": "1cf23faa-5e9d-4271-9183-d3197a4261fe",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "4f17ccaa-9b2a-4be0-a4d3-2735013e7671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f097a0-9bdf-4a15-a8c9-9da57c6086ee",
        "cursor": {
          "ref": "fafddeb1-8ef6-4d7a-8b7d-7c80db9a9691",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "4a4ab7b6-1b17-43f2-b808-78ca3e7fc885"
        },
        "item": {
          "id": "b4f097a0-9bdf-4a15-a8c9-9da57c6086ee",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "019cad94-114f-4685-83c0-8643981e8009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de474de-2e57-4575-82b2-a3afba5583fb",
        "cursor": {
          "ref": "74bf7189-acac-4856-bfb6-998939dec059",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e7ffd2a3-787e-4cdc-9570-6616ca803fdb"
        },
        "item": {
          "id": "6de474de-2e57-4575-82b2-a3afba5583fb",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7cef70da-a870-41fb-a8aa-baef4c963ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 1538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49eac97c-6947-4f94-8a25-ae7880c16423",
        "cursor": {
          "ref": "d4e17bd5-098c-4db8-8d5c-c4326c9d0019",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "794436f4-a355-4bc4-8992-45e81f68198b"
        },
        "item": {
          "id": "49eac97c-6947-4f94-8a25-ae7880c16423",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "45e04755-b44a-484b-b04b-e4bb04cc3aea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2457d547-4a05-419f-b1ef-3dd3b620d9ef",
        "cursor": {
          "ref": "e4f484e0-2ff0-4bcf-89fd-b35d6e7d9c67",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "125799b1-43bf-45ef-9c8b-7111746f9aae"
        },
        "item": {
          "id": "2457d547-4a05-419f-b1ef-3dd3b620d9ef",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ddd5ca4c-c071-4b73-ba22-225d0d532d47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 225,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e8b6243-c908-4e1b-9398-a25d82b11d6f",
        "cursor": {
          "ref": "8e95c625-5b51-4f30-8778-163141c100b3",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f205dd38-f6cd-49ec-8ddf-5fdf39de852f"
        },
        "item": {
          "id": "3e8b6243-c908-4e1b-9398-a25d82b11d6f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1e3c4432-8941-44a3-beff-e0755541beed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 2076
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c4ed021-89d7-44c9-b93f-7115692da1d6",
        "cursor": {
          "ref": "ac72cc8e-9e5c-40ed-a694-0be8ba26bd41",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "1409794f-aa3b-4437-b009-451458bc9686"
        },
        "item": {
          "id": "5c4ed021-89d7-44c9-b93f-7115692da1d6",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "73b4e107-dde7-4b4f-874a-11a074c43f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 2062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d10454d-6d3e-40e1-aa3a-079d99c5a225",
        "cursor": {
          "ref": "e78afd5f-386a-4c5d-872e-75d20eda82ea",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ffaacaeb-1da5-4c7e-97a5-a02a762fd7d4"
        },
        "item": {
          "id": "4d10454d-6d3e-40e1-aa3a-079d99c5a225",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "00fcbb1a-dfce-4867-bcad-77543a028f0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 782,
          "responseSize": 2060
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcbc5919-63be-4b5b-ae3f-2e29a850250c",
        "cursor": {
          "ref": "a443352a-2925-4be5-b473-cbede01a417c",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "740b3d6d-b98b-4b56-a942-bde3012b1cce"
        },
        "item": {
          "id": "dcbc5919-63be-4b5b-ae3f-2e29a850250c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "4d56d3f8-6a88-42fd-bbb2-a84ceb1f128c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 2061
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a4405fe-acf0-4147-916b-3a0f2b2883bc",
        "cursor": {
          "ref": "3211b7af-7564-40e1-a750-679d889b9476",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "e19d584e-2789-4537-94d8-eaf5a1e1c982"
        },
        "item": {
          "id": "0a4405fe-acf0-4147-916b-3a0f2b2883bc",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e79a1851-c419-4409-b231-0300657e4d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 2082
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b17517f0-36dc-437c-a101-39cddfa80482",
        "cursor": {
          "ref": "b4364494-9a33-430d-b0a4-a509db6c3bb4",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "1efafd8a-51e6-4bd9-b200-e8762ffd8fb4"
        },
        "item": {
          "id": "b17517f0-36dc-437c-a101-39cddfa80482",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "89dcc5fd-649f-4024-86c0-c7324eae2144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 710,
          "responseSize": 851
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "718ba56b-41f1-4f08-bb3b-41275fb5fd2d",
        "cursor": {
          "ref": "0eea479b-d09a-4f61-922d-f2f133e35a4f",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f989d524-d248-4d4a-b7e7-8c2b5f48bd2d"
        },
        "item": {
          "id": "718ba56b-41f1-4f08-bb3b-41275fb5fd2d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "7b596c0e-aaa9-401d-92a6-1b0de4e6bf4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 882,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e511991b-e007-4602-b038-acab90ec1295",
        "cursor": {
          "ref": "0b0a7031-bea5-4b11-bed8-1a6f4e4200c5",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "77606860-f9e2-4d8a-8d7b-56a16c2611c3"
        },
        "item": {
          "id": "e511991b-e007-4602-b038-acab90ec1295",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "cf9232aa-1a93-48d4-86e4-fb17edfa557d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d5fa56-d0ad-49de-9755-3b910a8d38a1",
        "cursor": {
          "ref": "74bb6e00-0159-4a64-a48d-f33145e5a948",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3128905f-6884-4359-877f-44ae01f501ff"
        },
        "item": {
          "id": "27d5fa56-d0ad-49de-9755-3b910a8d38a1",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "18240d86-861d-4c84-b9fe-d726e63d6945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d3be229-6683-4283-beed-dc8e3ff2df00",
        "cursor": {
          "ref": "8d826bee-f8eb-4648-a465-acff88d1cd03",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "08bea0f0-a162-4f7b-bd6e-0719d921a96c"
        },
        "item": {
          "id": "4d3be229-6683-4283-beed-dc8e3ff2df00",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "38dfb58f-1e1d-462d-905d-79faf59cbeb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee2e276-23de-4c04-bb80-d24ed553d978",
        "cursor": {
          "ref": "e8539d1a-66e6-4840-ae8b-fb75f07f6c28",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "1ddd6522-6d85-4db8-843a-0a6c4770b39b"
        },
        "item": {
          "id": "eee2e276-23de-4c04-bb80-d24ed553d978",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "44a39c5e-0b52-4e9a-9453-9574c09181a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 868
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d160c5b-5505-4ced-88b3-3bd67ffdca0e",
        "cursor": {
          "ref": "bbdc3bf3-6ed2-42d2-b406-9a45ebe173f4",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "43ccf018-9045-4dc1-830a-93567e592249"
        },
        "item": {
          "id": "7d160c5b-5505-4ced-88b3-3bd67ffdca0e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "657b7e9c-b3b9-4a7c-96c3-ee50b0840a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 229,
          "responseSize": 1209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8849721e-7625-4f73-b92d-6c02270dce27",
        "cursor": {
          "ref": "dc368599-36f1-42b5-b361-71310a39d28f",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "52c0df0d-e372-4fa9-b351-786b3ac267dc"
        },
        "item": {
          "id": "8849721e-7625-4f73-b92d-6c02270dce27",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "28a26b50-8a14-41e5-bf51-41b6ceda59fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdee7fc5-96e1-4f4c-86ad-1156c6990680",
        "cursor": {
          "ref": "4122679e-a3ce-436a-aab7-b39310f56d81",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c5691084-e1b7-4afa-b29b-f8eeea4d1ed9"
        },
        "item": {
          "id": "bdee7fc5-96e1-4f4c-86ad-1156c6990680",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c8729c69-fd29-4e56-8518-14d2be2aa3f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d014e84d-4bc0-439e-a4dc-c9cae8781714",
        "cursor": {
          "ref": "6afb302c-31d1-49de-b366-6d29a8200608",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "816a26ea-92e5-4b1a-8bbb-194487378d39"
        },
        "item": {
          "id": "d014e84d-4bc0-439e-a4dc-c9cae8781714",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f66bc245-22be-474e-a61b-1d1d6a491896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423f5596-d6e9-43cd-8eb5-a59624ccca28",
        "cursor": {
          "ref": "55d89925-18e5-428c-b3d2-98fdb04a0f38",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "7b800487-37f5-423f-84cc-6fddc84e63d8"
        },
        "item": {
          "id": "423f5596-d6e9-43cd-8eb5-a59624ccca28",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "452e23c8-eb5b-48f7-bace-1866b4e4fe40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc58accd-6cbe-4c8d-bc72-a7f30b13e5df",
        "cursor": {
          "ref": "32b67eaa-8a22-451f-a284-a46d5e597680",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "446ee8dc-f361-4076-acf2-e88bbf5b0a83"
        },
        "item": {
          "id": "bc58accd-6cbe-4c8d-bc72-a7f30b13e5df",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ad06badf-c278-420e-8d15-5510d270ddbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbecb0ea-5058-4fe9-8ff9-2ee9c6db32d9",
        "cursor": {
          "ref": "8dccc446-d804-4f53-a6bf-7e7e88ab13e2",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a1f36275-5c78-4307-85e8-bba64f3dd5e0"
        },
        "item": {
          "id": "bbecb0ea-5058-4fe9-8ff9-2ee9c6db32d9",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "3ff20380-f20b-42a1-afea-54a7cd8eecb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1246
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea6f8c3a-53f6-4342-9530-d450a09082f7",
        "cursor": {
          "ref": "30a6abaf-c1e0-4e53-b300-0593891bc826",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "4f308f78-e037-4574-82f3-5045bc861020"
        },
        "item": {
          "id": "ea6f8c3a-53f6-4342-9530-d450a09082f7",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "498a7632-e823-4a63-9af4-e480f95792f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 222,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "834d2d9c-c78d-444d-bdc0-1a4b8fb6560e",
        "cursor": {
          "ref": "d191c47c-e719-4775-a2da-2632e9b52455",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f0041654-2770-46c6-a44c-47055acbfdda"
        },
        "item": {
          "id": "834d2d9c-c78d-444d-bdc0-1a4b8fb6560e",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "2cebec5d-ee27-45e8-b7de-0fd37a31e3a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 215,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f533ce87-cb9c-4e8e-b0ba-054bfa6cb324",
        "cursor": {
          "ref": "112c03c0-6971-4583-9cd5-cc877dbbdd47",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "1086b531-75c9-491c-b250-c2fef39f91b2"
        },
        "item": {
          "id": "f533ce87-cb9c-4e8e-b0ba-054bfa6cb324",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "563711c5-8ba5-4dea-b04f-072d38ff855e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2592a37d-6cc3-45d5-923c-4be94c7b912c",
        "cursor": {
          "ref": "24e87bb7-47ef-43b3-9805-8e543ab76008",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d7afce04-273a-4d63-9b2f-c0d4599d9a89"
        },
        "item": {
          "id": "2592a37d-6cc3-45d5-923c-4be94c7b912c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "2dab934f-a452-4a5a-8ef1-7a8546236a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d85a89-c082-4107-a9c1-9430a3177a4d",
        "cursor": {
          "ref": "1edfc34a-5f90-44a2-877f-854445190f1d",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "8a49e46c-635d-4c4f-958b-10754ee33892"
        },
        "item": {
          "id": "02d85a89-c082-4107-a9c1-9430a3177a4d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d6080f07-03e5-44a0-a06e-42aad1b1be40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db73a43-6e35-4540-8e7a-fe04e058f4c2",
        "cursor": {
          "ref": "b60954a5-f3ef-40ab-81d4-257a9bfa0136",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "a6d4b81f-6213-46a9-8feb-b9be0c22ffd3"
        },
        "item": {
          "id": "7db73a43-6e35-4540-8e7a-fe04e058f4c2",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "e24d38d1-c6d4-455a-8cc1-0a3cefdcd2b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "475f99c8-8f3a-48d7-b59a-10b5cf3cb274",
        "cursor": {
          "ref": "08096c26-da14-4063-8196-31584a480035",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "c78d3d23-20bc-4518-a512-4a12f7e50a55"
        },
        "item": {
          "id": "475f99c8-8f3a-48d7-b59a-10b5cf3cb274",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "aadba382-4ed7-429d-a7c6-22143cf220e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 230,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f39d1289-2624-4fc3-bc45-1142b0427229",
        "cursor": {
          "ref": "846a0d85-6081-472a-ae4a-b8ba306164c0",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "90234da1-8a57-4b36-97b0-5b187df8c5ef"
        },
        "item": {
          "id": "f39d1289-2624-4fc3-bc45-1142b0427229",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a4db2bed-b9b8-4549-a8a1-c52384611cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44fb2bf0-e9e2-47a1-b326-f577771921a4",
        "cursor": {
          "ref": "dcba0f02-0b7a-4b39-813f-f00b6cf8ea19",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d9ee6440-3853-4ed5-a3a5-7887c78d25d9"
        },
        "item": {
          "id": "44fb2bf0-e9e2-47a1-b326-f577771921a4",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "2c6b186d-87dd-4a36-ae9c-72a3bfbef6e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e468424f-d740-46f2-9539-97114bde55f3",
        "cursor": {
          "ref": "8561eac0-22d4-41ea-ae7a-2648d122f423",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "7c293c5c-b7f4-47a3-8c23-f48f2b51c580"
        },
        "item": {
          "id": "e468424f-d740-46f2-9539-97114bde55f3",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "dbf39719-65f8-4408-b254-134503370d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 226,
          "responseSize": 1206
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d2d2afa-33ae-4a33-b3cf-ec5635ed995b",
        "cursor": {
          "ref": "658b5f52-b6b8-4cf0-8a4c-0d6dcfb650ac",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "09e3c7ec-9cc9-4f0b-a009-adc06dc07e0a"
        },
        "item": {
          "id": "4d2d2afa-33ae-4a33-b3cf-ec5635ed995b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "ea6ca6c5-7039-4793-ad57-30411f3ec358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 220,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa741b3f-2e1d-458a-ba77-a6b2e957d474",
        "cursor": {
          "ref": "e45e02bd-df0c-4f62-986f-3caae5762cb3",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "07b9860b-b9a8-4124-9ce4-2053d8706e17"
        },
        "item": {
          "id": "aa741b3f-2e1d-458a-ba77-a6b2e957d474",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b5744a56-50ef-4577-a1a0-8a919640420e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a85e97-ff68-4bc7-bbba-94c5df902e6d",
        "cursor": {
          "ref": "cc0232eb-52fb-43eb-baf9-80b996744728",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "9f05856d-8827-4fe3-bd4f-a29ba4cbf1a4"
        },
        "item": {
          "id": "d2a85e97-ff68-4bc7-bbba-94c5df902e6d",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e74495f7-df44-4805-bb85-bdafe12ff0c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1096
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac0a960-877c-46a5-8bbc-8c351d6d39f3",
        "cursor": {
          "ref": "a9accbbc-6449-453d-9ce5-64fcf14258c1",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "e8e02e81-3fd6-436b-a99a-3963c3272da0"
        },
        "item": {
          "id": "1ac0a960-877c-46a5-8bbc-8c351d6d39f3",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d9bcf86e-18bd-45ab-93a6-6f3afdd0916f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ac58e1-3b61-4e8e-9ed4-834d0679894d",
        "cursor": {
          "ref": "5c4041a6-df20-4daf-a7f6-2d3618b6a945",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "02450add-ec5b-49d0-b17d-ab863d6eba34"
        },
        "item": {
          "id": "c3ac58e1-3b61-4e8e-9ed4-834d0679894d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "1c778ab0-5568-43c5-9294-5ce597b19f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 226,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2dc433b-a980-4cc7-9985-ff1834c1f33a",
        "cursor": {
          "ref": "5b865bca-c729-48f1-ac31-10d3d0592eb6",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0abe85dc-79c8-4254-bbd4-42ef3bf00ced"
        },
        "item": {
          "id": "f2dc433b-a980-4cc7-9985-ff1834c1f33a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "07b47ac2-bb73-45dc-8405-60e9283c84ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2320c4ce-a388-4f94-a52b-5a90773bbbd7",
        "cursor": {
          "ref": "b0a9455b-e05a-4327-8265-754ea700e141",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "a06a632b-5d6f-4ed7-b960-49de4781fb83"
        },
        "item": {
          "id": "2320c4ce-a388-4f94-a52b-5a90773bbbd7",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "ce7f49eb-05f2-4ec0-8e50-f9749cd5bb04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8269e89a-de91-471d-8066-e566dd5b8ae8",
        "cursor": {
          "ref": "6ebd8aa3-418d-4ecf-b4b2-e2d6b31d58bb",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2fd9b2df-d6ed-4c4f-8468-cd8dffdbb01f"
        },
        "item": {
          "id": "8269e89a-de91-471d-8066-e566dd5b8ae8",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "7b4b3e00-9610-4154-8f6b-1daebbae7adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 1225
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d258499-5a62-4a85-91bd-362f06b6e94d",
        "cursor": {
          "ref": "acdc6057-b2f7-40e7-b4a5-c12bf9aa5dad",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "bc3eb9d3-a350-41bc-87bb-28d77bf1803c"
        },
        "item": {
          "id": "0d258499-5a62-4a85-91bd-362f06b6e94d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "76e66ee8-946c-4fd7-bff6-6b5a4c3280a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 229,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8cf283c-68b6-4197-8318-e94571d43be4",
        "cursor": {
          "ref": "815e4e4a-a2fd-4203-8fc8-ff1e97e685bb",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e7464d1e-d511-48d0-818e-5473664aae67"
        },
        "item": {
          "id": "d8cf283c-68b6-4197-8318-e94571d43be4",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "f0b78002-e76e-4d19-b1b5-8aaee5091dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ae2e9c-c5aa-4a4a-a717-5667f6fb6384",
        "cursor": {
          "ref": "bc52f90c-3135-4ce7-8e70-ee14dd4a8593",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "01430c4b-c54e-4166-9a0a-9df611b5a165"
        },
        "item": {
          "id": "09ae2e9c-c5aa-4a4a-a717-5667f6fb6384",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "e2f00c3e-d660-4cd3-9d19-87ec646853dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 222,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "643284f0-2771-4190-b49c-2076e24735a6",
        "cursor": {
          "ref": "768ee04f-f2bb-414c-9207-bb5b67fef5bb",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "8fd4474e-2296-4c69-8c47-6f7b0041ccef"
        },
        "item": {
          "id": "643284f0-2771-4190-b49c-2076e24735a6",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d3cecdfb-f46f-439c-a1e1-69f8b2899a38",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07422eba-3496-4896-af97-15c92ecba886",
        "cursor": {
          "ref": "4ca9e1ca-be76-4492-aa12-5523cc3aa84d",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "68111844-39f6-49f6-bf6c-d3cb4cdb09c0"
        },
        "item": {
          "id": "07422eba-3496-4896-af97-15c92ecba886",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "721d0c6d-9655-4f64-856f-bd62db667259",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 215,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cdc57ba-4c23-4215-a2a0-806704f5facd",
        "cursor": {
          "ref": "6553f4d0-645c-4ce1-8288-77cda9ff5a22",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ddb681ff-34c5-4a76-b07b-45016479db39"
        },
        "item": {
          "id": "6cdc57ba-4c23-4215-a2a0-806704f5facd",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d670dd8b-6f0c-4412-970b-fa1c86849bbb",
          "status": "OK",
          "code": 200,
          "responseTime": 380,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "033313be-526d-43b2-8762-b748cd065eb5",
        "cursor": {
          "ref": "36221bc8-7166-4c6a-9230-949d2a9b62e6",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a7aa4e68-6d13-4648-8db3-425e9bfa76cd"
        },
        "item": {
          "id": "033313be-526d-43b2-8762-b748cd065eb5",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "4af880b8-d0a7-4068-ac04-818e04e1f456",
          "status": "OK",
          "code": 200,
          "responseTime": 309,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df204750-3d41-4c07-be8b-5705712883b8",
        "cursor": {
          "ref": "36a636ef-4779-4b37-a9b3-547d81a1b382",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "897fa103-9834-419b-8cb7-eb95f502950e"
        },
        "item": {
          "id": "df204750-3d41-4c07-be8b-5705712883b8",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "6cee5ce1-7140-4329-8a26-b22e1eacf2a1",
          "status": "OK",
          "code": 200,
          "responseTime": 301,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b1bf25b-1dec-4408-8cf4-dcb8c32525e1",
        "cursor": {
          "ref": "f0110aab-2907-413f-8d7c-8446e6657311",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "2d651d17-577b-41e4-ae7b-8bcf6b32736b"
        },
        "item": {
          "id": "3b1bf25b-1dec-4408-8cf4-dcb8c32525e1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cc6e86cc-07b8-47e9-96fd-010d89366e77",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b1bf25b-1dec-4408-8cf4-dcb8c32525e1",
        "cursor": {
          "ref": "f0110aab-2907-413f-8d7c-8446e6657311",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "2d651d17-577b-41e4-ae7b-8bcf6b32736b"
        },
        "item": {
          "id": "3b1bf25b-1dec-4408-8cf4-dcb8c32525e1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cc6e86cc-07b8-47e9-96fd-010d89366e77",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b1bf25b-1dec-4408-8cf4-dcb8c32525e1",
        "cursor": {
          "ref": "f0110aab-2907-413f-8d7c-8446e6657311",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "2d651d17-577b-41e4-ae7b-8bcf6b32736b"
        },
        "item": {
          "id": "3b1bf25b-1dec-4408-8cf4-dcb8c32525e1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cc6e86cc-07b8-47e9-96fd-010d89366e77",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac94e947-54e7-494f-aaba-3cd244e035a8",
        "cursor": {
          "ref": "cea49cc5-9a46-452b-9afd-1005e64b2a8b",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5d1f1d53-e547-4bd5-bf45-445e4cedac91"
        },
        "item": {
          "id": "ac94e947-54e7-494f-aaba-3cd244e035a8",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "fac56068-2941-41db-8cb8-07e1fd6e027f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 257,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19385103-2489-4206-b045-5946aed16df7",
        "cursor": {
          "ref": "ac4cce72-5ba5-4190-8106-de586352af0a",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8d9cc96c-4449-4f92-8335-9330f84a0bf3"
        },
        "item": {
          "id": "19385103-2489-4206-b045-5946aed16df7",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d1197444-f84a-4838-b959-ab9853814443",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19385103-2489-4206-b045-5946aed16df7",
        "cursor": {
          "ref": "ac4cce72-5ba5-4190-8106-de586352af0a",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8d9cc96c-4449-4f92-8335-9330f84a0bf3"
        },
        "item": {
          "id": "19385103-2489-4206-b045-5946aed16df7",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d1197444-f84a-4838-b959-ab9853814443",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a658627f-2cbc-4a91-8bba-781e06ae98e9",
        "cursor": {
          "ref": "9e83fa98-f97e-4766-945b-56b99dd6b4a5",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "79f975fe-c00e-487c-8e4b-fd7893faefc5"
        },
        "item": {
          "id": "a658627f-2cbc-4a91-8bba-781e06ae98e9",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "2ef0b0af-7f40-409c-9b6d-31abba573611",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 451,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2cfce85-711f-4cbb-a596-b366d3796ac6",
        "cursor": {
          "ref": "4cd6a678-9def-4e0f-a126-4cf5a51eae7a",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "300b01e2-1256-4498-919f-2697890f404a"
        },
        "item": {
          "id": "b2cfce85-711f-4cbb-a596-b366d3796ac6",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "7dee36d2-d945-478b-8dd4-aae3d0d2c8c8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2cfce85-711f-4cbb-a596-b366d3796ac6",
        "cursor": {
          "ref": "4cd6a678-9def-4e0f-a126-4cf5a51eae7a",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "300b01e2-1256-4498-919f-2697890f404a"
        },
        "item": {
          "id": "b2cfce85-711f-4cbb-a596-b366d3796ac6",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "7dee36d2-d945-478b-8dd4-aae3d0d2c8c8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38cd03a8-247f-4bc2-a162-509151c03e2c",
        "cursor": {
          "ref": "ca7b3113-1f1e-4f2e-8da6-8d08533b46cd",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "ba0380b5-89ab-4adc-a8bc-4e20be0f20e1"
        },
        "item": {
          "id": "38cd03a8-247f-4bc2-a162-509151c03e2c",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "adccf0fc-dcf6-452c-9689-68d4b035f191",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 483,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}