{
  "collection": {
    "info": {
      "_postman_id": "f5f17919-82a1-4db5-be95-0f985635313d",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e4d7e1b2-3eb6-4e40-b2f4-c2550e975294",
        "name": "Clear Cache",
        "item": [
          {
            "id": "6f3a5b8c-382a-4abd-800f-c25b5ec5b10c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7e12d8ea-19e6-4148-a248-6aeae8423175",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b3a73052-8074-42bc-b0a7-83fc57a472ea"
                }
              }
            ]
          },
          {
            "id": "b9ef781b-0ecc-4964-9939-5cf955f3e9e5",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ccd60711-1ac6-44f7-961c-a32b43093a3e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "dbf66af0-6250-46fa-9f8c-aa2efe1191d3"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9cf7a395-c6e8-4768-97c0-ea6e5cb78bea",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "ffb23f93-935b-4da9-8e27-1480d7222301",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7fc77e37-22b6-4247-af5e-e7a1696c8446",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4d7ecbb-d0b3-4eba-80a2-381eb2f72949",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "41dae0ae-7597-4d11-b28e-19b0ef5d892c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "46c609be-87e0-484a-8097-3ded00ad1e21",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "078a6df3-2496-4f45-8304-e43856a59ac4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "60d337b2-b222-4085-b2ea-5f758741e568",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8cbfad30-c353-4d2b-b7dc-7ac26f5b71a6"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5b822d9c-d097-4874-97be-067b32167766",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "1da166cd-ba98-4470-bcb7-71cb2764b15d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5cf97a3a-1b0d-41bd-932f-d78dd7347a53",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f52c8d14-0148-46c6-957d-ae7e0779eb4e"
            }
          }
        ]
      },
      {
        "id": "65c2ec9b-48c6-4277-ba59-162b4ff89ef1",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "368e5095-bd86-45f8-974b-5e3e62b7eddb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9b4ebe7f-e1d8-4260-a875-62576ed18069",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d90f3f85-a569-4768-b73e-b2a209b12383",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b29f3228-ba79-46bd-b73b-fc863a6e5169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0870ba0-83be-4ac2-99b7-0c5073cf7e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aacfd8f-d5c3-4271-9dad-ea503f616f04",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bc916e0-b15d-4a19-b6d1-8c2be1607db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5cc922ef-dd81-48af-8971-ed8cd502ebb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbdc5520-4a5e-4e2e-9a27-8895c88112d9",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15054680-2a05-4804-8528-9ffc9ea10b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e7ef4de9-ba12-41f0-9121-9cdf3b5e9587"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "44c1b18a-5e2a-4f73-9305-bd4f0faf0db3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4364a312-71c7-4980-9b3e-68aa7a30ba36",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfba1cf0-b485-48ad-bb6a-6b7df5f0ab00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "82270ff8-c93f-4fc8-a9a2-5327d1cc2c5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b1f075-7182-4dd1-92a9-116ae0d64a31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e1555f9-b72b-42e5-808f-17f746939eea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f42510d2-4296-4c87-847a-1be8214c1382",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b795efdb-eae4-421d-8cbf-7be0cc11b3b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3aa71e41-b45a-4a89-b9ef-db96a2aa0dbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9be98cc8-18f6-43bb-94c5-6e5fdf9d3cf1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "e4cadd38-f8c2-4e0e-8639-d594d7059177"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b067cf6c-c414-44d6-ac4d-bbbf9b5984e6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d88bdd61-23eb-4f2e-af95-4482260645bc",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "75245147-2ce4-472b-aa7e-0f38bd2b5415",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b43824d6-2f81-4a13-a178-40f51860c33f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9f64c8c8-c9be-4899-8209-b1f7da419e2a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "24ad277c-5fcc-4ed5-bf57-0b4a32e8f8a7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1d21a155-2e30-4325-8d03-77cf206caa4c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7364c895-5551-4fea-b7e9-eec386f8ef6e"
            }
          }
        ]
      },
      {
        "id": "9572703d-5c94-4cf5-8219-47e767dd0b4b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b91e61f5-c720-4735-8c31-df87d91e9a76",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2e6e435c-a276-4dd6-b842-81d1f5dd9a67",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "c1394a63-b381-4928-b6c1-4db27785e182",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8218cf08-5240-4fc6-a039-a070574f990f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95b84ce9-7b1f-4cda-a9fd-c4b84fd268cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a43127f-b2a1-4564-bd97-e404c6d68df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d9690e4-702e-4b64-9706-dbb322dce9cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "158c7232-ec95-40b8-afd1-38522a6aa1ce",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec5e8b0f-b198-4e99-b085-4aef0cc23f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb6ef3b2-5cce-4a1a-b7f7-2f11f71fcd30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6da6c12-3390-485b-84aa-b4edcbe6ee5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1a93ab4-0552-48ae-9304-84aabc24f629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3493d27-ca71-45d3-8e0b-f03853f0cb99",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b35d6da8-8c9c-45a1-81cb-641c76a428a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0934358d-89cb-4430-a871-ed0f85e22546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab0e792d-6ecb-43f6-ad20-4b427e536dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48ae4d07-1bf1-4132-956e-fcb8966800e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c0abd65-80ab-465f-ad76-e61ccb2ad1f7",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8827e6a-0c8e-4258-8381-a5a8eb820803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c537b74d-3799-4e2b-8a8a-f58cb150ac06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93b75c3-3e8e-4e4b-8a1f-754b063331f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "beddf8fe-e8ed-4edc-ae8d-9cd82212961b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "281e6ea5-b86c-4072-9148-b03016155e02",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84544ef3-c313-4cdf-89f2-612ee1b79dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd03f282-d121-4b40-a719-49c6ff06d64e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f48b08-ec4e-43e9-b718-fdc8ab5fa37f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c1ce0fb-6b85-4fb4-b713-fa0c5d2da439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b000f38-09bb-4e3c-8934-064b5b2650cd",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e679735-1f1a-4a20-8749-941f9945c9b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39f2748b-eaf8-4f55-8420-222cfac7098d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a32f839-c054-4912-bbaf-5b78c8ae7d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "feb092ca-3a4d-4c98-9018-9a7e48d1099f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76384df1-746a-401a-a8e7-211e5308d68b",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9007a71-4de6-4f3c-9561-783ebe9693c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "597a2879-a3da-429f-b752-3a989f1315b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "147ede0c-0abb-4292-81c9-6cff3cad56e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2be77499-28a2-4705-8c50-e30cf4ef33bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdb78538-344a-4d93-9868-c6168b9bc9b1",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7877b0c4-84f8-44f2-a8b0-ff112da2c36a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea23bc01-5edc-4d10-af88-2de26de105bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "294888b3-c5ad-4645-a35a-0f57ebd4efa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "193733b1-f8ef-4e26-a51f-2f5bf26c99c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a9efa86-8d2d-42e6-94ba-913a828780ac",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7fdd0f-d987-4529-a78a-1c98d041f958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ac01ba2-3865-459f-a3c0-e36752e95009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a81b461-92fe-4d72-bff1-315ddf8847ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "08ee8bab-961f-491a-8d0d-bd8e60d10253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecddb77f-8f5b-4c5b-9c9d-f1158982b57f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8c6fb91-b325-4085-adf0-cdd2621de172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75465510-91a9-4c5d-919a-d0ccd93d0251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff702ffb-8a86-4fc1-bf44-f37de6d1b193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a889000-cbc8-4c75-8fb1-0463a41f47af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02c1298e-b447-4ef5-91b5-a4444006fb6d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed54ec6-1de4-4b37-864b-54f43eb71165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dad9546-4af0-4668-adce-6d0b0b3907ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb43dedb-713a-4bb8-b4fc-41dc05343293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "efa05469-2007-4729-b965-b1640d0b85dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8d12349-8e64-4643-aee9-e8a9d65eda90",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2261d313-1ac2-44fd-8c90-ac42d2b0645e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf5646dd-08ac-453d-978c-adc85926ff5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b169370a-1f7a-400c-9fea-13f9d1aa83fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62ebc446-8b34-4c6f-a280-0b8e2374678e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1dbcc40-4e46-4088-9c06-7ac7e0a1c59b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c82370f7-6408-43ac-a6f0-b0d11c9a2e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4431b141-db1c-40b2-afd2-f149763812df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3381cca3-b15b-4d6e-8191-3c9aea58f9fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74f057d6-b711-4af2-b9d2-2af2f8519069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "788ee0ce-22af-492c-9f91-a57c948215aa",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe85cbf-bc90-4543-bb56-7933a2bb55c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dc18112-465a-4682-a621-d00a7bce17c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29bfed7d-799d-4761-86a1-308860f3dd56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "efe021cd-2f96-4ace-80a2-68af1d823265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb281323-2c9e-4eda-8bc3-5a0222bc9d31",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e2e8c4-3292-4409-8034-ed072530d8fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86304c45-f0dc-4888-9f3c-4022b13c3767"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adf06e23-2f82-436b-8a0b-dba80f1d85e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "975c0453-77b6-4956-9ff1-6cec55638c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acfa7514-9753-4986-9016-daa5fcfb1a9d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ff5a810-0631-4113-9aca-c2e0e6accf1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc7f0094-6465-47ce-84be-e021e2ff9f56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b97179d9-ef9a-449f-8d91-b9c960c32493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9389256d-a0dc-4604-91a3-0dfe1102f424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc2941d-8e97-405f-b1d0-aef30ddd2c65",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a0def2-7137-454c-a6ee-c7f10d8572d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7533f5b-448d-451c-83bf-73787ab42d7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ffa04fb-1443-4b9d-ab73-afe65d46e759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ab59d19-70bd-44c2-a57d-db511e7e1630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ca7529-e8af-44fd-8e2b-f23ea611fdd7",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d7e4c0-edeb-4924-866c-7becca6b9fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0ed40fc-579e-4a88-9f05-13e98e70c246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bcea230-bab5-4d86-b559-5c0e5d6c1647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "80620032-9ef6-4b66-8e71-bbcd9086ba3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da932350-adb3-41be-bbd2-92bdff291d50",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b18012c-8755-442a-854f-f583a799803a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d7a6733-2f9d-4f92-8121-700687c60e37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f1d45b8-6af2-46ce-bf22-0b027bef2f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "58a21bee-e828-42fc-8927-f4795ae8d8c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8046d70-820b-4296-8e1b-6371f395b41a",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ba5d5c-a94d-4c55-95a8-9e0ddee85e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "927484fe-1eb7-4515-89a1-4bb005eebfa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b7ae8b9-7a7c-4348-8583-67a7905ec4cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "80ae8ee0-5205-4772-bd64-a00b9e86e7fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ac6f6c-272d-437d-9885-3d9d7de57c56",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8fbbade-57e6-4515-8181-b2bee8b53abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c8e2f41-eb07-4a87-a26b-7770a09febaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59b3209a-1491-4bbf-a6be-80ab46b351f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5f799b7-d17d-491e-9a24-c0503bfe512b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce1f1904-e955-42ca-9fbd-2df89597b188",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c466e95-f2c2-427a-8425-f21206f691d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ef331f6-e19b-4c0d-99cc-5d437d874e6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e28dfa49-b5d8-4739-8609-d4c45de76a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6df80c0b-9867-4fbb-9446-2d1d99ec7c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f2502d4-0fe8-462e-a1c9-1bdb9b2eabc5",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3c811e5-6737-4b7d-a5b2-80f30f36496c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54cef83c-8e3a-4517-aaff-3c46793c3720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b221ff-4a58-4a47-80f6-5496e3bc6da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "903241dc-dc3b-4479-aa0a-74d4f13fd08a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a9cdcc-7fac-419d-91cf-f2a3bfce1d9d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b7f35c7-24de-4a85-87df-df27a2aed3e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4674f37d-b402-4381-954d-7fc91e7bef04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c8d493-98aa-4cbb-8f53-b876ac33012e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "391969b9-c72b-4b7d-ba47-c97f22db2340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f24cc2-f21e-447b-88be-35525f84e76a",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b22234d8-9a73-4006-a7e4-aebd286336a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a240c25a-cbee-4f94-b202-d3eee835e995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47ea23a1-a05d-41c6-a66f-891f37fc7f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7589934-2d45-41e0-96cb-5bc3b414ebfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a4316f-1c4c-4e76-8ac4-73cc06002b43",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93b6528f-5c6f-4688-bd60-261d0c5d8ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4210e828-f7a9-48ab-9f42-21bb07d2c735"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47602a74-b250-4684-9097-ec653764a93b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e0697a8-1899-42ff-a8f4-dcb16ff232f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2082709-dc08-4683-af94-b3faa8680a3d",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a0d7062-3053-4136-b05d-d4e1b37c3629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f07b0c1a-8f17-4940-b3cc-682ae380d329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "490830c8-1e99-4421-b711-ce93b0978e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "631ef0fc-285a-4080-bbfe-9db1700b79ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ec8d08-c460-4f96-9963-cabbdff90570",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c003d493-9f07-4f05-bae0-9ea4e4c31f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc7e4f3e-f83c-4cd7-a929-4f4acd4aff14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18825528-82d8-4ec0-9f8b-f196c86e6f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bbd6418-8580-4d1d-9c7d-8cdecb01576f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5727db62-6360-4257-aaa2-9231037377aa",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b6dfb4-9441-4c35-b6ce-828a4ec0a11b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9846dedd-cabe-48f2-92ae-3b7a8e28acd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d9d1cf-34aa-4f13-97b4-394769a4c37b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "598b4f5c-8524-4658-9aa4-1655fee9af6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e771e68-58ab-47b2-bd6e-e5c1bee965c5",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a706f479-1c23-467a-8d62-adcc0e2dbcd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e46441ee-62cf-4ecb-ab6d-9aaaad320ec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1996d2e9-cacf-4fba-885b-b0115b3ea38e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "439e548e-c80c-430f-8f26-e37f395a4b35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbb83fc2-42b6-41e5-9b83-0185ac3dd16f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b09beefe-2072-487b-80af-083947dce7ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb75e215-00d7-4327-a798-3de9f9748839"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa5b1f09-562a-4938-ba4b-e7541faae126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "97daf49f-19c5-4cb4-867e-ad772b384ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fece7b5-5688-4fd4-9468-80f3f64326c0",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df97e59-2811-4d53-86a6-b86609c0369b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f4d26c8-32ad-4803-b277-44c0f6d454cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ee9dcd-d5f3-4e93-8f98-eed0d70837ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea7c261d-9623-4a2b-a5aa-0053ec107c08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d25caf6-21ef-4ed6-8c1b-2e2e8474cc3c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "507ad9ad-a70e-46c0-af8a-601d1aac1dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dfddcae-02e1-446f-a85b-a96409940ccd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a834dd99-6faf-46e0-8a14-535521bc5f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd17c052-0372-43f4-b063-84fbccaead96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10264810-fc7d-4181-8926-81e8bc2e36f5",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "518c3cfe-ec92-4412-bd0b-8ec66828f388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d32b963-5c38-498a-b31b-503c3b0fec3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b5b3c8-ea87-47a1-b4f1-56da5dd71857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "09505297-c96f-44b3-8262-080d9891998f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d58023b6-f292-4d1c-b1e6-3fb3765db524",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0fbf1d-0a3a-459b-87b8-9ad19d00365d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f45eed2d-0085-45f6-a8fb-de8b7635bd48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e8cf592-98de-45cc-be99-31e17af9607a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "11029634-e22f-4717-8470-acf214d7f07c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f9fa4c0-61bd-41c3-a853-7bc8686a7325",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5adbb3ba-55ad-44a3-a3b4-71d048c19003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f746b2b-3b06-48ec-862f-d447b0552ae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df967f70-1103-415c-a3a9-d39371c7fdc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aa394b0f-f8b9-4ca8-bd10-64985e4f11c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ab8116-0e99-4ed9-beb0-f7777cba0629",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4d4330c-f364-4ce1-bd89-2ea753bbd410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d55e3f7-5832-44e1-b65b-00f8595b8d37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90960dc2-4b15-4b00-83e9-595c41ef6d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "24ff708f-f6b2-478b-b570-7c3b76969d4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2644e67-cc99-4e34-97e8-cbd6d5f376ab",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf47632-a682-440b-88b6-d48740d3e254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb6c2dc2-70b8-442a-b3d1-880198bc6d0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc167fd-2da1-4873-9c54-4c6960847546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ef1f237-81e4-44a3-b99b-2530344dc401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f0fddb6-a494-4ccd-8b6e-79ac4af8fb6c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ec2c6b1-a617-4f2a-bc9c-bbd295c08afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1396dcbe-8b97-4b82-9ad4-c9af4559eb93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "173765ae-1ad6-42c1-a834-1ab4b0170b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e84b0750-448f-4e12-890b-db364124d159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f3b968-8cd8-4620-80d6-dea7fb006494",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a3f1a26-bfc3-4485-ab39-f313198bb7aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a66836b3-b517-4408-bfcd-4ac5c703859c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da1b686-9326-46a2-8a08-b6febc7fd7de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ca5612f-ac99-4466-9874-170c37a1dc8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "340f41cc-06fa-4f52-bd1b-578c0276c451",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d8f9cbc-fd03-4bf0-933a-55c822bd48e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa584d79-5299-4400-9714-8d6a2d245527"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "718cb41d-2eea-4456-b45c-467f0cf3f95a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0f1985b-82c7-4e4e-a4ff-630d6e3d0b35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e467bf-09c6-4757-9e53-d300a870af42",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab07bb23-4de6-4ed3-b7d3-659ac4b0d8b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bf8624b-9146-4295-a07d-a06d6a9b6b68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc4f073-6871-4069-b3f7-4f2d9f461a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c2979fb0-7bdb-44be-a86e-fec5a0c620ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "580c7276-ad97-4761-b9ed-3c46daa5a868",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d493e4c-9f20-4ed5-bc83-ea9981b07bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9adca29d-1940-41a9-9bf5-e42ee4ff9879"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4028a636-4c92-4955-90a4-5afc530f6b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "466d0b18-a0fa-415e-abc3-868c0f47d551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b3f7143-c68b-4cff-925a-59b88429de41",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "720b1c8f-bead-4ab5-8490-eccca62e9aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "823ee9b0-8b9b-4adc-a316-1bae5c4858e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "153a1478-33f2-42b8-8244-bf195b30376d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6cfe0cf-e27d-4330-af27-afc648c125ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a699d7a-df83-49d9-b533-6e9ec46ea11c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4128cc1-ce1a-4d54-8f13-3b4fa819f3b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24244775-12ac-4943-880d-a15337545f6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78dbef33-e7de-40c4-89d8-f78cbf12fb4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8398e1d0-61bf-43f2-a24f-13b28c8eec10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d609e48c-bea7-4d8c-84c2-e13ddf8006c4",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "017e7faf-df53-4353-b78f-5f649ff7b5d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "083c501b-316a-493c-9527-9d4808268f94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a193f4c9-64ec-4666-9152-30410dd53458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8cb9678-bc65-46cb-a11f-91f752254b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05cdb6f3-e664-4dd6-88de-3557b12f5b65",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e218daa1-82e2-46a8-b9dd-1f1eb4670f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "054b5597-9b65-4626-b292-e2bda989689a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b9bd059-579c-42aa-85c9-5ee87720d132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1fd4626-a749-48f6-9dc3-1f33da8663a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd84b03-5005-4c43-9948-4833bb5d5b14",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde490cc-127e-449f-9a05-d93606ea025b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76165e16-3802-4e68-abc5-8d2b23ed6975"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6484ecb6-a55f-4e40-8aa7-b0152a049683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "84465d4a-1358-4175-8321-376bd6d86238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac763fd-e71b-4b97-bf61-844e53da1db8",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "575cc501-206c-4712-b635-3ae76dab22e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f99cfb8b-8cbf-42d3-95d8-2a8650c07f27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e67acc0-0cab-4b43-af50-95c162355bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e278c83d-e57c-413b-b333-01eb58ded433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b9a5671-dd10-4568-894a-b8ac63530d3f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ddafc4-6e0b-421d-a4e8-86aec540a4b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b06e9e8a-2157-4fe1-b610-b5412aa6655f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e073ee0-54e0-420e-991f-bc66b5ba2947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "44b910cf-70e9-45e9-a538-b416db0af264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08837719-c1fc-4516-b0ef-cbd1a39e0311",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9061c1ce-2762-41f9-a8fb-b99e172f5236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1353cb14-b8b4-4904-b89b-b05ebae3d0c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d47f9fe9-b295-465c-81b2-64f9eee4d05f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "4630c9e4-fa97-45e5-9d06-201d4e3bf2a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e3b5a9-070a-4f20-8521-df8f9b0fdc14",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "644cd3f1-b675-451e-bdfd-8ecc2e104a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2de2891-496b-4446-a8d6-d7387a61b6c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c9a825-1ed5-4289-88b0-b188fcf5d4fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9902c4c9-8b64-4067-8555-be19aecd152d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bab6ebf-8d21-4d72-92c4-0d6bf2606c13",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "856f817d-1cc3-464e-86a7-8b7fcd8b315f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c4e0bf7-bace-46c6-842d-ddfae9a7ada1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d2be32b-fa3b-4707-b777-89f8733375f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "96a626e2-f239-4c8c-bc5e-999a5284bb5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda9a5d9-79d8-478d-ad09-6269a9002efe",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3febf9bc-e925-4ce1-a254-a3ede795e7e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7341edb4-8ff3-46ea-ba77-926f2959601d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b3fab07-f2a6-459a-a298-7969e6efc99b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef4d84fc-5131-403e-931d-586f9c2c290b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "994eb3c5-b601-428e-9567-32d0bad1b96b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "052ff560-a96a-4a6b-b14f-ee037952c2e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9d74871-8da0-4e85-8ebd-51519d7fe1c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c83b01b-b539-43c6-84be-82999b7ea1cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0ba4ce9-1dd5-486a-b659-6666c9ee5ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "044ab45e-3701-416c-ab94-ca66ebf96134",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00cd76aa-b2a5-4a6e-8887-098f148c9005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f20c48ae-b2ff-422a-b4c5-0fe2f2efb5a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1defde1-20bc-48a4-afb9-d69908b8eda1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "9048d4b4-f2ad-433f-ad40-01651eb09e12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11684afb-4ef9-42d9-86b7-ad1c74e3224b",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56cc9f74-f1ee-4bf8-86d2-5ae80b2b5a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f83a1d8-0269-4ffb-bb71-25242a68647e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5819f53f-637a-4c32-8d7d-7a318ae22af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b5d560e-73f9-4ce2-8d90-8c9cac30e0ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f8b498-5176-4760-b3fe-d0580e84a2b6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30309f0f-57ac-42a1-88f0-7a17d48e0a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a9c6a54-8457-4ff0-88f7-1204ff88d092"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af3ac590-b0c3-4e8e-bd4c-da93e330e768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e70332bf-2c11-4658-bb94-549cafc2988b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8cb5c6-60e2-46b4-8c3b-bdc111e251a5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "338561d1-c1c6-42c4-827b-03acd1861188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b05460e3-d88a-42f7-a3f6-bc69d5420daa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e087bf-25ab-4216-8160-7a6bcdd823f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "83dd7254-54a0-466e-88e3-59a3c3cdaf2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7504579-1005-41d5-8c60-cc6b84d185d1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "916d0315-2354-4093-b300-86c3579b5931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "209b3de8-212b-4769-9763-6f4ea32278eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a8b0f8f-953d-45c5-8c91-130540feba99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "930d026a-f18a-420b-bdd5-05c87761e4cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31c7a9f6-4feb-42a3-b9cd-5ca255071809",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "315dd9de-8888-4305-863b-6461858ad2ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c12fe5bf-04ce-44f8-8067-a8a5488445f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3365351d-4cd9-4fd1-80be-3b31b99b039e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "396a9cf1-b203-40e0-b963-8a9aca390c80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e0e2a35-2417-487e-9793-e493dd8a53e2",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9503c0c2-018b-4831-878b-a377e5ba82ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d110b055-1dab-459c-8009-7f775fc42dab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb5f02f-b9cb-4625-a9c4-a3fef3fc67fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ab31079-44d1-4741-94ed-e10fbf81a5fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f750c457-04d6-4654-bebd-75e26b9933cf",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "238a922f-aae1-45c3-a3ad-0365877f27d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86d79641-9376-4e5b-a243-f6727fb5de30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d03b9d03-8eea-4391-abf7-4b80c9cfc03a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec282ca1-d3ab-4a23-b4dc-5c195c81cfd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c634c3-d3aa-4c2f-bdfe-367258e4998c",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1973c8b-31c4-4b41-a8ed-d4d91e5548ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d543ce22-edb3-4150-884b-bb9df84e570d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be44118-5ad3-4967-97b5-126c22c2d2c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8adedb88-dd60-4ae5-92e3-1c646457ad71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f5ada9-6f57-44f7-9a8f-c98288db030c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c029a2a-0c9e-4f70-a1e8-a0bca7ebce8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55131d7c-a1d5-4f6f-a03d-5c6821f2c589"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce77f93-0bca-4bab-9108-83d4ab5941a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "de788fc9-0139-450c-9d76-20927b2f7666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d5fa34-a237-4482-8424-e801199b9a58",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c43f9c0-19ac-4163-8228-c55b48a5d7c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f0b2aa5-726e-443f-858b-2fa91dc19282"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d728bc07-b2ac-47b3-9e6e-67df151d9332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ae09940-c37b-427c-af19-287a05f80411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b70eb82-faf3-4d4f-a08d-2b1316351f1f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a1da173-ce10-4998-920d-4c4e62bd657f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bfa96d8-42f9-4f2f-8427-2a0e43078856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "734b0dcc-0e45-4a6a-a175-4eaa38610a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "471ee6e5-4e7a-4531-940f-4383ea7536c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bafd71d-6b62-426e-a699-530b6aa1688b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aab74a5-f18d-4df4-8428-d4ba103adc52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45aeca6c-c6fc-4c78-8aca-dc6a2391595d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8baf7db6-fecd-4625-8fa7-aede8dfdd688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "cebd0177-c18d-4fa9-9ec0-4ea230396126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb50cb44-3c31-4d13-a75a-582cb480de0f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e525267-7156-44a7-8c1f-d29f65ace14c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1db08950-bf4d-4ea0-b595-f3a2f500b201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a762c9f6-166f-428b-9872-df6773bcd1e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc5f25b3-bc8f-4552-b4e9-a61a645409de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e83fb75-4aed-4098-bd2a-7c5010a87899",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5983062c-4d37-4cd6-9a42-251529a48d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd2653e2-fa10-48c4-b1cb-2468d0c52860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55800b66-42b0-4f34-a8fe-d594850f5b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e8f5adf-c175-4aa4-8937-173605982628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab9175f-d741-4837-80a0-f50fc3feb642",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df8f6daa-2a82-411a-a671-8770f477136d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d9d8552-3cc3-4c90-8016-3ebcad93e535"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05683ae3-86d1-44d9-8a29-3c31d0c57b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ed43787-0ee3-4ec1-b0e4-f6c872b01669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8423a3f5-b837-4c82-9ba4-0594a312b5d0",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "465f4c38-96ef-47aa-9b54-c6c41aecd19c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "198c3e18-a228-48a3-be96-09e3229c63f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde79a91-2198-4371-91c4-9a54b0f5ae1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1efad1bb-1fda-46fc-95dc-868fb20751a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a49a33-805a-4150-93e6-2910e520f9e5",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb8edc5b-14bd-440e-8f8f-bb6fe89d5f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67dba7f7-9d47-44e0-8402-65e08602beb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad847c92-5615-4115-9bce-544efb75a0f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc6391b8-48ed-481b-a053-1c4a8604f608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da553e2a-cce1-4312-858e-ea6f60bcf0ad",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "991ec293-b760-4549-af92-6dfd816f39aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38df5057-4c5f-4c0d-bf94-ce65d866cf5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c10502f-fc23-4d8d-a6cf-b7a61af0d698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ea3d6f7e-865c-49ec-905b-f20fd3ce633b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab376944-a258-4399-b910-83dd89993e29",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "773835f5-418c-4c9b-99b9-e174c45e697b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62c3dfcd-5a42-4047-ab93-58d641bf0d18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24eecdc-b176-4c08-bfd8-c6fe0ed243af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fdb8093-8f63-4dd9-8af3-1905ee3902bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "571b6105-ee99-4645-b923-f2ad5f73d89e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec3845b0-73de-4894-b5fa-ad9a82400868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccecb3ba-94b0-41d3-98c5-efedebfe2079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca9bcf6e-c369-44d0-b3c7-823d206a9f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9859b734-c9e5-40e6-a1d5-a6cfecf318bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a83e874-1deb-4c23-b33e-a9a5d4a85917",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3da6495-7974-453c-9a8b-e20e4c15cfb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2224f12f-ad95-4bc4-a9c9-60144f69fcb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16e08345-5afa-41ad-b27d-3e120170b75e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa5292e6-1761-4fc9-a221-4de4ebce1124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373a0d53-c6e0-4ea8-8b18-11a018a4bcd8",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cece031a-8830-485b-bf4f-6023840d3b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea3f35af-bcbc-49a9-ae89-84175bc0f585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db5a5259-c08f-4e51-acbd-6715c17513a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "93d44f79-eb73-425e-bd01-faf7659a99c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2629534a-41a4-419c-b982-dab6090e8ec2",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe56e1fa-b77a-450a-9269-41693aab9384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0098693f-e2d1-4830-a059-2872fc223e26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b52576e1-4538-437d-9816-771a95c6518e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f4df1ea-7f49-4211-84c2-d4729ef21d9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a27de73-90ed-4ed8-839c-3b616cebc494",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf49d17-5ae9-460a-bf39-81428beb9ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "998f559a-4e97-4c04-a6f7-e07524e271bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11d1bd90-54f6-4689-a852-ac5aaeb6feab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5f8d5d1c-69dc-4bab-a879-60098132cdf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f942b27c-ebc6-4c00-820f-40c0082fd86c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f37494-a316-41d7-ac43-79adb58a116a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f714f11b-35c3-49a0-9411-cb5221f1fd9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d7d7431-615d-416f-8cdd-1e3f45e6cf00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "765610f5-e787-4c81-99af-e8479199d457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b9c3b3-9d5f-4d56-a286-3f674e9c16ff",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41429c03-cbe4-4c42-8120-a6c542b36a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "357fd763-240e-4def-9c20-09108608b7b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e04ff1a-c7c0-40c3-b06e-6fcd5987af0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "84285f2f-0f6d-4fda-8ec7-77c11915cb93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6798fb7-5bb3-433d-a127-ecd4d9a84db6",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced8ec2e-5e66-4eba-8c66-9263f7b8bbf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b6c5aef-536b-4ad5-b2b7-a2ace662459b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "819385ad-a8c9-4fea-9261-8db8a4157914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3eeae023-6670-4e00-8bfa-f951b5d538d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec059cb9-43dd-49b2-9d44-86fc968a50b2",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "852f3b5e-1089-4c9b-8c1d-3080669b9b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f047d49-5aa8-42ea-84f0-b81706c1175e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d32970f-cf58-4f2f-b340-dee7982daa4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "af23cf32-3f50-48d3-9e4f-c691bb6a5d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8676b336-b4f4-4c1c-90cf-9f5e3f90599e",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ff7058-da98-47e3-9681-f9e1cd25f9e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7ff4ab8-6e56-413c-b2c0-b8f403dd010d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a5ba8a0-25f7-43d9-942b-cb1e8b33be6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f550e548-c0be-4d69-8153-e1be702a4dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e48328b-2c85-4ec1-b05b-2cda8aa3e1ba",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ebcbf6e-b297-4528-8cba-0caf61102f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70e1698f-4ece-4e83-951e-270261f32994"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bf2db7f-bee3-443b-b13b-1b4a7e4b9948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5664829e-a8d0-42c0-9174-f76db2f063c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a50a21-acbb-43cf-8c51-ed5f6fafe022",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe64308-7c94-49ac-bbb8-29877e52c6d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8d10600-265b-4050-baa4-16a7c7850ef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e75b817-b2a4-4bfd-b74d-840172d25288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "00904622-1248-4294-a9d3-07c030ddad0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c515080-624f-4290-9716-f39950380115",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df062ab-038a-43e0-be5c-9960c5de7087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe532cb4-5e5b-4a96-b271-81f16516631d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f8bd4b-2bf1-42f2-9fa7-bb86e8fe4678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "39b65c9f-4387-4536-9847-f4b3049997df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82648c35-1e38-47d3-9714-b8b883cb3dc5",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede7eea4-6a35-47ee-add1-44d0755fa20b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "906368c9-d4a1-4253-b4ed-898479e5bc2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84386e32-6a5c-48c1-9641-193c25eb401c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "880e8a31-f07b-41e9-9327-ab14a6fb4bff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "583679b4-6a6e-4a92-9081-8b440ff7bd0b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06c5faeb-8cac-4f65-836e-1cd4baca7dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b7b4f4f-e723-4f5c-bc3e-1e6292aa8cd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76de9011-e05c-4139-80fd-d7776c7f92a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f414bf4-aa6c-4d2c-9e7a-69d4463b517f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f1bb375-9b6b-4cd5-b9f9-174bf9043041",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a60f83-e02c-4a3c-87ba-e3a4d548f029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be6f85bd-dc50-4bfa-9558-544b5359a289"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ef8fbd8-934a-4d5c-90bd-e6f7fc438fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d5a1dac-4623-48b1-b49d-845e6df904be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a05d2048-02b5-4ed0-a062-b5b2169dd794",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "664970ec-ec94-43ca-97bb-8127245703f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ca9cb170-3391-4ab3-a6d9-323babfd598d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe0c6cd1-c477-4931-b65f-5f61628e8b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "18d67995-cc0d-447d-9589-ad99358578fe"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "16b321c4-3b88-41d1-b010-cd61dc33d811",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "176932a0-6d16-4199-873a-f2f6b1606203",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "565e0869-3a33-46d0-b0f5-68ffbced08cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "da3a6af5-bba0-4e16-a172-854f93688928"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7013b8b5-df46-4da0-95a3-1ad27079ca3f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "75e8c01d-10e4-44f8-8c33-376ca2bec66b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23427d0e-4dad-4858-87b9-a88a64629868",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90584ed3-4443-4789-81a9-a98fb3b012f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e9b5e8d4-c734-41e4-9eb6-dbb58795aa6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad13d8e-f656-4f5d-a511-da5815d6a0df",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "e66a6eca-8d21-4f92-874b-3e2c39d29cf4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "411c54fb-a1e5-4c28-a0ab-8574d5887201",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "16ee9cda-f2fc-4331-8b67-236923211767"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "74880a7f-2a53-4765-83fc-18420e41fe14",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fec30724-8d40-42af-a6f1-0855a80e39c6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e4b6d36d-3d43-48fa-bc84-612c23ae3073",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a4779a33-7944-4304-b2d1-7d5a9da91e4c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c3dd4f3f-2f17-4f4d-b9a7-a81c771c261b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "572334b6-0590-40e2-9b00-792e456f3471"
                }
              }
            ]
          },
          {
            "id": "a2ec9189-e3a3-4fdd-86b6-397fb4554023",
            "name": "Positive Testing",
            "item": [
              {
                "id": "06e83e47-524d-4bb6-bda3-6c96b240f495",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c1a8c063-2ec5-4667-a958-b7b0ef28eff4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c43b5852-a247-425f-9c05-9160cf96a1a9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "06bd27c1-fdc6-447d-85e5-4ddef9fde98f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9574e5c5-082a-4ef4-a8f2-a5d580de3802"
                    }
                  }
                ]
              },
              {
                "id": "6c113514-47cf-46ad-9e2a-d968405cd75e",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e2f53cd-80f3-4e9c-b7b6-4982f6733ff4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d62e905c-3d82-4d48-99ec-555ae1e10386"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3130ca56-1858-4b56-aeaa-1ed3da70f144",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6aa43e9d-2043-42a0-87ab-dd4c9cbd9dd9"
                    }
                  }
                ]
              },
              {
                "id": "89a3a70b-15c6-448c-a122-453e31efcfe4",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c251d0b1-f1f5-4c2e-90da-fde39f340442",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d26afb4c-835f-4e46-ba35-94bd789a3949"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4335b4d8-3da1-4e68-b9b3-65ebb603996c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7183a154-e0d0-49b7-bfd9-8e3b00d5b258"
                    }
                  }
                ]
              },
              {
                "id": "0641654f-eab0-4a2f-8341-5795e0bf8b4f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b10ece7-ef14-4969-a467-db7f83800709",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f7e6f411-d5e5-4bfe-99cd-18c33d2e044b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "06588ffe-d784-4d32-b561-4b234c8d2da6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "5fff0717-2ed1-4cbd-81a8-7b4fffdd25c3"
                    }
                  }
                ]
              },
              {
                "id": "a3773fbf-f278-4e85-afb8-49f2f6cfe506",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b90d220-f57c-48aa-9d12-6d35d6726bcb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0e97a860-bc2e-4727-b220-71c36516391c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "42985f1d-1b83-40be-af9c-800beea3386e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "47321b88-daa4-4f74-8aae-e887f6b503cb"
                    }
                  }
                ]
              },
              {
                "id": "49bef7b6-4c1a-4d12-9a7e-0f47ab8723eb",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "94792c40-1666-4df6-aef2-559d01dd1f68",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "009e55b5-535b-4e45-a932-ac9a981ca3aa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3320f16a-b7a7-490a-b424-bf34b5f83d5c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "535ea8cb-3337-4be8-9bd9-877f7eba5d54"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "336589f0-8a2b-4837-92e5-ea1f47d89262",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "511dd488-389c-43aa-afa5-3ec924afca78"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "685fce62-17cf-435e-9ff2-e9d21a5a8549",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "70c98e3b-3893-4bbb-95d7-4f853af5318d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "450cc3dc-01cb-49f1-b124-230fbe013eda",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7a506167-e483-4538-ab37-740c92bf4c79"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6eb6e3b7-658e-4c73-aac8-a629315548f9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2162b519-f230-4c87-8148-6cd4c1bb9b12"
            }
          }
        ]
      },
      {
        "id": "72c75e73-17b0-4fcf-96df-7e2edd7b0d1d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "42147fbb-cf5b-4ecf-ae9f-75822b362a99",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4b176fc7-b065-4d37-bc8c-136e9812f808",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "04cf5b41-7de8-4659-bba2-f66641f08f95",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a1bb308-65a9-403e-94bb-4e18b028e354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71cb12e0-3a8f-4620-bd22-6c33eb70bde5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e15debf7-9b0d-4787-9b14-73c9ff3ff03c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fe2c949-35b6-4568-a48e-1b680e4f113b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "091d9f66-60d1-43b3-bfe4-bfd40632e8e5",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86a0edc0-b216-46b1-a43f-9acf2f9c8415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d04b4e2c-d48e-4a82-8e23-0705fa56f6ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ae9afe-ef07-4968-9cfb-ac80efa65b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "583d0c22-0fb0-4f74-980a-0038686f1d92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794581b4-8c1c-4bbb-b9ba-9e360c3c1718",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89abae6a-22a0-4aef-a331-cfe7e9216e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3917636-7958-46bf-9b01-9b8f6bbbf7d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40050fe5-6cdc-455a-96d0-1a15b5bc7d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b9583c6-2704-4126-b599-fcdc44806068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2647d526-f037-49f3-858a-8e1e537ca045",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1397d4a-b04a-4148-8089-91cf8f807d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d432f871-6b0b-4ae0-80dd-97c134fcc631"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2552823-2111-4d08-99f7-443b041ec725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3afcb2a7-2246-48bf-b989-a39dbe50b5d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e2a9646-d8e0-460e-b8a3-f2f93a7b66c9",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f1c6eef-352a-47e1-83bc-f05416bab323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c761899-460c-494f-8029-a5b660ca8d48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ca16be-9cc3-407a-bc0d-56e59b745087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a236af90-4e4d-4528-8e7b-c54cf943afb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c62d7b6f-8203-47a8-8d4b-35717c7c92fe",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f870ff9-6de5-4576-a2ef-d08dc82b3041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed2238f5-19ee-4390-a177-50ad89467dfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f5fd343-a3bb-499b-87af-0e6485120f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "74648a77-42ae-4622-b742-08cb0f9bae9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6beeca74-7790-4848-be4f-41ef2f4dc141",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aafa5a9d-54be-44c1-b4d1-1ed0ab603704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fbde8fa-19f5-4f29-a792-2e8bcdcde969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee081fd4-a0f2-447c-8abd-375df84c53e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "97820e05-33d8-46dd-b54f-2d1d5cb7af87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a4f2877-ceb8-4f1c-b258-84bf67e31f74",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09fa9317-8e87-4e9c-a054-226b81453a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a16461b9-cf14-429e-8162-00a3fd075a64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3755a1e5-7821-4524-9b0e-f8fd51162d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "92723dc1-0642-4390-91fd-c146da9f6a23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6154488-1e82-4d40-9498-655e2227b0da",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f845cd32-1ca1-4b3c-8e88-e252ba361bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "958ad595-a89b-4dc7-80f0-524d61b94075"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf8bfa5-d663-4a82-8ff7-18923061de5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d45fc594-5d3b-4da0-9056-d1fd2dea71c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3482fab-5cbc-4f0d-b206-482dd7147dd6",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab2b290c-1122-4b33-89b6-ba30079146e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7ad6c91-8f31-4730-8de3-e4183d0b7e92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c19c9802-78a8-49fe-984b-316bc55fc6f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c62392fb-2039-4b2b-9487-805d71d38928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "289b4bd5-3c16-41f2-ab9b-c08dee4d702c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "707db244-e511-473d-960d-99a4549f9b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a83527e3-d646-4094-89ef-0dc3e6c2567d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca17ff39-8999-4c5c-b526-cf9730ac7219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "816ceffe-4fc0-449f-a327-a8f4b804d6ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86dedb0c-03fb-4a96-b433-d812d69a2f50",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c576da8-7ba7-4236-874c-2a88633968e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b65afabb-02a8-4e67-8087-b5ddcb8a24bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38117715-700b-417a-b2c5-7205a45b23fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "587c3501-3f1d-423e-95dc-6b48ed8832c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf6746f9-db7b-4e79-9a9c-079d80132ee1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1db9b8e-aecf-45e8-89ca-c51123ae463c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e667b36e-d813-48fa-8ec1-47a8be5323fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e4fae4-b1a0-418d-8373-8ba6dfea5c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "23c88c89-5d1c-411f-9c8c-63ab5f2d4a87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bab13b3b-918c-42dc-9ce5-e7c8d5c78b0d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb3fe652-b8c8-4e31-bc4a-1680d4a143e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff812612-92f6-4434-a435-c3daac4b8066"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a0c681f-6b66-4ea8-98df-713be5280a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "26c533b9-15aa-47e1-a05f-ab197327f4c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "382b7460-ea46-49ab-adb7-7e11ec979513",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b61b25-57cf-4f5f-bba9-9d1ecb1a87ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50658c6b-c95f-4cf0-9ceb-ff6185aa3a13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e036ff4b-1863-46be-a9e6-0a25819b8642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e531449-233a-46c2-98a5-a66449ad86e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b831cea8-ad49-4166-b0d0-b261a249f684",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7416426c-2607-4c61-8edf-9ec020f35dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77132b72-89f7-4392-b31a-67ccc037a929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6066c056-2916-40ff-94a9-fedab14e68fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9618098d-2426-416a-b63f-9b5b76d8862b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "732461dd-efee-4f18-bf11-ac112c8f2cca",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf66c72-50f1-457f-99c3-9f510b9846e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f76614f-4dbf-4af3-ad2a-8c3c464c3eb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53cc4cb1-6586-443f-878d-196ae98a3c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0323e88-4b02-4d56-a3bf-71e14c9806f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f848d9f-7605-4be4-93dc-72de91686426",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d1dff2-ada0-4797-9b5d-89673a8f27bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92abba21-f8a8-4441-9e02-7c2bde2b823c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ca30e5-6d73-4fb3-a8a0-01f88ee34f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f113f9c9-0515-43fa-bb6c-b06220cf1c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86847090-9b49-4ebb-93cc-5e842aeda6a3",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6ab3dd-4e99-4064-a482-38b3eaee26f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81055473-c550-4270-83d3-5e91a61a2125"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a528258a-3ae8-42ac-a8b6-0dded6f80f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c22038ae-624e-43d2-9365-ba3cd733aa93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63613464-e394-4442-9fc1-fa95bb40ab83",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5115bf1-330d-4042-985f-7ec4fa287740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ad4d637-017c-4cf2-8399-8c150e6bd9d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9984644-5a87-40ed-9978-cced57a36674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75ffadf3-e57b-494e-ab11-14b86f50c42b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a2c79e-c3df-4ccf-89f8-0d4b2fdeeb68",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e33f6ab-2935-46ed-bc49-200d47f1029d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "762c44a6-6732-45a2-a4c6-af0a5bfd4c42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f58b1c1-ccd2-42b0-8778-3d59189e4580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02656039-55e2-4add-9bbe-d36dc0549a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3382c3fb-c270-4ccb-bb1b-1c7588aec2fb",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7667e2de-366c-4b62-9e4f-81ae79041a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d76ee4fb-42d6-4adb-b2f4-cbb6cb06fc94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "492e298f-8b9e-4c85-9eee-2cc6128b512b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c0e6109-3045-460d-a678-1f2d4368b64a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48ea4276-0906-49bc-8628-2af2fe475f7a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8cb4ab6-6dd3-41cf-b838-e00a3111edcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34efbf85-b6e2-4cc7-96df-07445d682270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39649b3a-33b4-4f5d-bd4d-bfc0dd1241b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff7d5b45-6572-4fc2-bfe4-14198db7f485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d634051-5dd9-4fa4-a170-c7e913b7af74",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86959acb-4064-4d75-8da1-6c02e8c6754d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d781430-7b5e-40e2-8d6e-d16b521b0d4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5eec361-8e3b-4c30-9608-e7f88ea7ec20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cf9a395-3a2e-44ff-af4f-27b9695485fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492ac765-d842-4679-a39e-fdc1a5b6b9fb",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83258dea-baa8-4ee2-922a-572e364194be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e857bbe2-e645-46d5-bfd8-56f83d2d3200"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf36382e-d7e9-4b0d-9858-5114520a4d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fcb2dcf-05d0-49f8-a3ad-c15f52562e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf15556-4ef4-469f-8f94-299d6aa81c35",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d91b835c-65d7-4b4c-9a6d-93842f6963c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cc923de-5bf7-4922-9750-9f29715c18be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40101de0-ef1f-4101-94f8-f75cdd4ea89f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e00fa9ee-0393-4fc0-8220-cd05c035db05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f829320-368b-426a-a30b-ae68df380603",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dac3538-8f4b-4161-8d87-1c8c8bf36063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8343811-d89f-4eaf-a71a-c4b84625862c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9cffa9a-f844-456b-81b4-91a5d38f11b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff074fae-b3fc-4b82-809a-04961fce4fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "231cd596-25d9-4813-97e7-322d69226ce5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db732296-e829-438f-92f7-c8e4fbc0c621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "670f9862-c933-4e98-bb7d-a3755612e87e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17059146-e563-4d88-a38f-16c7e5fc3318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f437bc6-5625-48c9-b269-fad2b54f3683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d096304-567b-4b93-8445-ce09cbe711ba",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5adaa074-26b3-4f55-9a5b-4f8b91978a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6964f2d1-0444-48cd-a125-a3902a0f15d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed1dfc5-f805-49ad-af8a-485ccc4e5a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16aa5724-6b78-42b1-884d-3f21bfea4d5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afaf2a3c-275e-41d1-8c64-b91b473ad29d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a8f5a34-e8e7-4e9e-b8ba-4d5f958a115f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22fddf08-dccb-4f18-bba5-71695f56882b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ebf6cc9-df1f-49ba-85d9-806542bf9fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b885b59-14e2-4704-881d-e29c4feeb3e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13397951-ea2a-4efb-bcbf-a8ea08f5ce89",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f06074d8-f4d4-48e0-82b1-f9624c1114ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "315a0b0f-f7e0-46d5-ab12-2b0006299b8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb0b73c5-255e-41d1-82d0-6f506463e5b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1a33467-eb4d-4ffb-b22b-8429c9a976a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a197dd97-eb50-4219-b131-46025a5554b9",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b40ffd2f-dcb0-40ca-ae35-e51f680d1e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c36ccc8f-26bd-4f8f-9b70-abeb739bb183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18fb2e0a-66a1-4f0e-b6e9-58e9c38cafe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bc47bfc-4526-4f40-93ab-a4fc9493928e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e62a8e19-a3dc-4e0b-96cf-bda78ed46d1d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3ddea910-4d13-4968-93ee-cbb3e25813a4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d34d48-f4dd-4e9b-95bb-2ae9612397ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34e1b936-7425-4056-a7ac-27be127e0578"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fadac766-9ac6-412d-9e1b-cbc1559322ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f039aa37-a5ad-418e-9646-17e7ce354ddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08543a49-c139-4e1e-ba24-537f5aaff0fe",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d72f956b-09ac-4360-8f1f-199f592abc02",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "016cfca1-873d-43a1-ad49-bdc8b0e7c08b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "181d9649-f1a6-40a2-80b0-2f999731214f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fd4869c1-8dcb-4452-851a-f196879d36ba"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c8c308df-8cc5-443a-a87e-d60bf6d5e8f0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eeac9655-1820-4200-b2b0-5f0b1ae7987b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6bd1c64a-b161-4148-b59b-9264854fbc0c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ea10d0c-3701-4489-af1e-66225b738a97"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f07ceeee-ed1f-42aa-b512-954a365d7518",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a089cad8-8ba6-4a18-ac52-6cd214c91e07"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "20c0f6cc-0d1c-48d3-80a4-cf79d8d0585b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "73c6e0ad-834d-4eb2-ad77-4750f9fd6ecf"
            }
          }
        ]
      },
      {
        "id": "83572c18-57d6-4efb-a100-25002e04f466",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c2cf6c06-be84-40dd-b3ca-5f082cd07bd8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f645d012-e791-4f21-a40e-884fef4ab2b6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "18f80476-1d12-46ae-b678-7c5f12c494ad",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c63ee5a-2481-4a7b-8ec4-46ba551ff8b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "482c2982-988b-4dd0-b22b-842e19a3fba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c65b945-8620-4455-8033-ab1f81377267",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb64ee05-b1d1-4a10-955c-8b8e7c3067a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6d56291-a1f5-4230-a641-9646b393e0de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73750448-b76a-4881-91cb-3411f7cec038",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a2bf85e-f010-4a89-9de7-94ae8437c925",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "658f2c98-e516-48a5-bcf4-96ecd1f02899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5960776a-610b-4348-9c94-fd4cb0cd2a75",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b426d2ac-c8b1-4f41-b8d5-b802035cffca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3958625-f0b7-4215-8ee2-e89bab26f79d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f30837-6af8-4862-8c8c-875f182d021e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ec3b7b4-fd3f-4098-8994-208b0fcdee55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "626e9275-9ab0-47af-af8a-1407a6d80bf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55583bb-364f-4069-9630-d3fbc518f580",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e91ecf4-405d-49a2-a256-449ec5e277d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e52770bb-a651-4fa4-bd92-05435e84f9c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c1e6d0d-a1c7-4a2c-a1b2-2fe08e25b98a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "899bc64b-0364-4559-a199-e6c53b1091b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbb8b8f4-1e37-4354-94d5-f43605753c99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80891b9b-8543-480b-b752-d8c846a5876a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d24fb15d-ecb0-4868-8e4b-4b2331fb940d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf0405b-3a9b-45f2-bebd-a79549b60a9b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a949d0-ba96-487f-b805-0ea07697ce80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33209c36-03b7-4a84-86e2-18bf31406575"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b939983d-8554-44f5-ac36-9d71f507d639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc777216-f7b6-4c91-a1b6-ba46911924f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c08e00-12c7-4827-b823-c4778b467b57",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7842af77-4c33-45eb-8906-92e07a9dd080",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdc97900-fe80-404b-a5ad-0c3847c2fbf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6964c6a8-6c6b-4889-869d-1a36ba05ba56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05565287-46b1-4c9b-ab5d-371e42a62108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c42814b-8b97-4518-a6f2-b6e114e277e5",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd13c9e0-83b2-436c-a1c0-e9fe8e2c3f33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb216557-f092-48dc-9bf0-05bc2a5e3b6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43790c04-d52f-44e4-9cd4-40178cdb6ff8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2747fea0-c211-4df8-b0d8-c054807f7ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c04efbbf-a4ff-4a93-8126-5670e6e2044f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2454681c-f1f3-4f3c-a264-278f87381758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "459362af-4cc7-4259-a28b-85ee0194ace5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8134d110-f213-43b9-9460-ed35ed0ef94b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01475f00-95be-479e-a645-2ba07513658d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec76d4c-ae26-4b9b-8b5f-bbcbb2a8e7ae",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1935b4d4-df76-4cde-b464-f08e60852b25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "160ee7de-7160-480b-9704-bb117c2eb68b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26763ca4-48dd-4d49-83aa-913df061567d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cf1a8ff-94bf-44db-96ea-5cd491441601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d3be3cf-3341-4ddc-80d4-4dca9f3a24e9",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf13765-e71c-4851-b366-5fa9753a34a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fb3225f-18f8-4271-8def-f2b37e70b921"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25687504-2856-4e84-9167-9632ebcd6c74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1babf49-16ff-46c6-9c5e-b6b131b01bc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39912d93-63ef-4e36-ba20-6111194fbf11",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4fb45a4-347d-4fdb-a859-65e53c0ae998",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5aa2be37-b28e-4098-97b9-fc23bb8bdf5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76007ae4-11b0-4dd1-af68-2fcd29612cfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63022f9a-2424-4ae5-8ec9-101235542c30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6720dd4-dc4d-4197-a9da-ab4929691794",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cc1eb9c-7073-4c3d-9e5a-d86e31e5ed10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c3a65c4-4916-4d90-be7d-73c84a7553c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d5cf37-0e30-43a2-a76c-e0ea9750b128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5f74171-6f4b-49f1-9470-060d511b04a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d4006e-04da-4269-a262-cb28e23f580e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "169aa20b-2b6a-4689-9a8a-49f274c67931",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14cfa449-b2a3-4eb8-afb1-828ca1e6454a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57252d9e-7a92-482d-b4d4-782b1b085285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "607b9cc8-cde1-4129-933a-ad0bf1cb05cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d41d48c1-07a6-4a70-9333-9fd2af00454b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2810d551-fcdf-4a6f-bac9-12ef8f00f4f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ae7ff26-7a52-4f84-a125-8c4a39203be0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f1b217-58a3-449b-9dac-1b45a31ead3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5078f45a-5905-46b7-9f27-7be77973cdcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca813581-861e-44cf-aa45-798753490f58",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "447d1c00-0a6b-4916-9d8d-1792f8c5c9b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "529e2757-689c-40f1-9a4e-16d9adec81ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f0bf05-a8bc-41d3-ab33-d41ae184485c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "949e6d45-3949-4e05-96f2-a27ad9fd565f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2147c16-a7a3-4f84-84f1-0371b8be36f7",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6d2644f-a1f2-449a-9723-37279cc65d4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bbd4f92-68b6-4cfc-a4c3-1ef7ce40e5c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff8f3049-d94a-444b-b1c7-ddbebbbbe306",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e551372f-db35-4408-abb1-5d415821aa7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd76f33-f1d3-4ce1-acfb-17750d647dfc",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd8d7e4-a370-456b-b70c-8302da66d722",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1615b584-b903-46a6-89db-13a9306f880d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb4ed0c9-ac94-4f37-af2f-cace7307932b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6717592-f71f-401f-b71b-d00b16b48e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6272ed0b-bd59-4211-9d7e-c520c0b60fc5",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c8d88d-f521-42c7-8ef6-07103a5d4389",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e71f424-4cc1-42c0-94d4-5a7c14c1af41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ece50c-bd5c-465d-ba53-708f435455a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29cca3a6-3627-4316-8844-4a9dee9c580c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f878909-7c24-4dfc-bb60-bf2f4b30cf21",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29cc1e81-5e56-436b-8fc2-db80aaec76ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5abc07b9-550d-4218-a16b-c052d703fdf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0fd77e8-ca24-46d6-82fd-5bc8e9a77905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76dbe312-3288-4602-867c-0d36e03bbe72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cc80920-a72e-44de-a9c9-0678398ac811",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0298ee64-f28f-4959-96df-1a5228d6154d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68fd54fc-4bb0-4d7e-ba3a-a3724c1883ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "624e7fda-539d-4217-b85a-075dc5c11dc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d0fc15f-e1cf-4f8f-b60f-f86c551108e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f4985a1-de62-4a6c-a08e-d9a0ec782f5a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05194890-568c-4613-984e-4613ea91c90d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3a44718-d6da-4cda-82eb-44560c313c9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34fab638-ec18-415c-9970-0e78a144e106",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "140e7d22-94fa-4195-aa83-df433e216c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b61b27-3c92-4c81-aabc-3062b26c5ffe",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eab7b602-2191-46e5-8967-b6262ef03f26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ecff617-2b24-4065-b8ea-3fe4861fcd28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "179f8105-6e84-4af6-9d82-562da783ae70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "401560ef-7455-4a0c-8b0b-21744148d5fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efc15ae1-5bda-47c6-8905-58a453364825",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f97cd06d-0e03-4734-9d60-2ad25daa92ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4350e6c-6584-478b-98e4-5847b90ca85c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07f2bec7-e1da-4204-a3b2-4a9d356b45c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dadd945-38a8-4422-b76d-37135da8a5fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1756532-bb34-41d7-9d2a-083d405617b5",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cdfe1af-d899-4b03-8ebf-131abb626151",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d93997a0-fee5-4665-a985-00f7e14a82fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e38849f-2769-46e4-ac02-ce7ca084dbf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "569fac21-9082-4d32-8e42-2487ef1ff2cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0234fa4-b5d5-4fd9-95e3-35adf70aa8e3",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a12e270a-0857-43ff-af34-e63b3822a01d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9c13316-f007-4e0c-88fa-6cb639d5a7f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe251b5f-2bb4-4d4d-a695-b7755765d68b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c193945-31d5-4236-ae10-d8df35d8b147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a828a2ee-5e09-4ad8-86a3-3236b7b383a3",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6456b04e-66ec-4f74-9bde-51d75f80dd62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d9792d8-b695-4eb1-a892-cf6d87cf781a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "424afa48-0c93-4edb-88b4-a9c38e12f19d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0332d314-b5ca-4b29-8d21-56bedeea5bc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2cb8af3-8b41-4461-b2ce-8192050588fe",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95582b79-7246-4f66-bbd3-37f462460e3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e491a6b-d97f-4d57-8198-eba430c81ef2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc4972bd-95c5-463e-9787-239c387ba16e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a284884-34dc-4faf-8d33-fbe6df1584f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea16a4dd-8f9d-4ba5-bc70-8ef2ca8fdd93",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10fe3b07-fa25-4010-9de2-1b2f4f98e050",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c99fa85-2571-4511-bf9e-6abf1b00997b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4055c38-28b0-4617-96d5-ba230d7c9abc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa747852-3205-487e-9e13-a010d5676763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec83f3f-fbc7-4d4c-921e-990f90699687",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f898795-318e-41c9-820e-2e11659b1c43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "745b9038-5c57-4375-98e8-93eb9c93bf56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0677f0-c10d-4546-a2a0-6930d9acb852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62aab105-d243-415d-af39-038a9247f4ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98eded97-5f43-4703-905d-29bfbd45a983",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a3bbb1-e4af-408a-b7b0-e9486f95cc69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "beb94f56-918b-4666-8019-3dfc81dc8eb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc424a73-6a70-4601-a298-e66e9951af70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1f1faf6-3bf3-4f7d-81ef-17510bb64092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8537a16f-2e7d-4e73-91d0-d86e7ee22418",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e6b705-f5fa-4a7e-a408-fafbef6f5c2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba08a806-3333-47b5-97a3-b988573c41d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb4c69d-d238-47e5-b9e1-1d73cf897358",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a392c567-7a62-48bc-82f7-57d2aba8a3c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc3b4242-47cb-4001-9daf-53495a3c72f6",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "390b5f74-df9d-4d73-9abe-7df5f482cc25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08cd262c-4cbd-42be-b772-620082f6c738"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9040e044-c90c-47e5-b771-900936cb0690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b503489-f330-4a72-8f00-6e0f0fe3d81a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "079ab41c-750c-4797-9fee-9913d629fd8b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb55fcbc-d01a-43c5-8095-1605c5c93aa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fdfc2ec-841e-417a-bbf1-e39ecef82a5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03f3458-abe0-4e37-a4da-26f4f6f6f570",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ccb86c6-6862-497d-b25a-f8554eda90c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de68b835-1918-43a3-9eca-ecf86f970e00",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd13df6-c3b4-48fa-9f93-36817a5d237d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcb043f4-7ec2-4ec2-bf78-0c6913df731d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f59ce37a-d96d-433b-8da9-cc7c968f7c29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d20efb60-72f2-420c-81ff-a89d9c8c52ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "695ad463-c55d-40a9-97e3-5b3e4c431743",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bff7489-3a0b-465b-99cd-61b02a080c18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e10c893-5a33-4c39-b1eb-3514bd069ec0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e4cfa9d-a1a5-423d-a775-da54ef1cabec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6734f6fe-760a-4559-a5b6-36de84d90ab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e95175-95f5-44b2-8dd3-46faa603bc44",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae3fc4d9-0a75-40ae-9187-7f40fb9132d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cb20dd3-90a6-4bfd-ab20-a3b1de8f6006"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13bf3f42-ebe3-4618-9bb7-bbdbc610c07a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df58224e-d69f-4fd8-9009-d6f3de9e2d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "561b680a-dab1-42a7-8b1d-3487dcd2b8a2",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1f7c800-c306-4b08-94e3-572cce78d73c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96eda182-8429-42a6-bcc0-655f1bb3eb74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71fef431-b2ca-43dc-a4a7-efac2a9e3b32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72136fb0-5db1-4edb-bc72-7180eab9e04f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5310caf-a8c3-42e3-a10f-d5ac9bb4027c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7303f402-6dd7-417a-90d6-64f654336d48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59b37556-3363-4cc7-b9e4-c42ab68495e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd3af4c6-454c-4adb-990c-9287c6168511",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "299ca031-ea50-41d1-84d3-ef7596c70ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df6a4f7-9947-4628-bc0b-d6d059d64472",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e39253-05c6-4413-a743-9ae790943a33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbeaa581-764d-4c79-a91c-66fad001422c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c715671-d8fc-4707-b6b9-3dfbb467593b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34d40331-20e1-42d4-baf0-042a8f0b3afc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a4717c-81d8-46df-a38f-fd828a272634",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "938d2571-8712-4ead-af6b-ab7bfe677f93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b4ad24f-1d5f-4b27-bd84-d197da826b54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73d72aea-7936-4266-b9b8-c4ccb6faa22d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "496bb294-8acc-42eb-9ad4-86a3b1356eaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdb4ea59-89c5-45b6-9b90-467330c75970",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff63cc8d-5825-482e-bdab-186c676ffa38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07ecda3a-8fec-4f31-819c-b1e13c66512a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1786ea6-08b3-42fc-9359-9a829b2a384f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca8590ac-c95e-40e9-9a2f-f28fb68318ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "094b3dfc-8a2c-4a7f-92c6-e51bf4ad0330",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29a933d-c675-4a67-8afe-4f513c977a0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "949d8782-49f2-4bb8-b26c-4d65b60a1f15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0a0b57d-b61b-449c-b3fe-60c8bc380c93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4fc5595-bb13-4bb5-98f8-cb7cabf5b015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c924ec7b-6f77-4245-829c-6eac20f27900",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef2fac0-0e83-4623-b588-dddc59e8fec3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed08fe81-019e-455c-bf2e-83fb504092ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de64683d-6c0c-4658-96a9-7032441c035a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9835d64-4e9e-4387-ac1e-c41a58151ea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f22a6c0-4eb9-45c2-b230-ff4f41419809",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b75e2e-1053-4aa5-9f1a-45d4fffe27ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8877547-868e-4d77-9807-4c0ca7f538d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e8a1ce7-1847-4ce1-a225-3f14756ace19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b7ac09a-d97a-4bba-9489-d066cf714639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7828e2a6-c248-426f-b0f2-e9411f333c16",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b23883-5366-4866-940c-9746de7724cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e1e1086-8f73-48c1-af46-b832b480459f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "843b171b-d4ce-4cf5-8f18-285478a49643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56db8ce0-5fc5-437b-b92a-7c0a1d343c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab1d91f4-0048-49f8-a80e-92d4c1c6008d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2abadd0-8ebb-43c7-8a7f-333050b4bedf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95e3091e-4df6-41d3-968a-882303770d9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa974e2d-42bd-494b-8dab-6d1abb2574da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b5fec8e-8e4c-435f-9f50-47456d7c7a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa6dcb01-bf5a-4014-938f-367325be5d4b",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb89cfe9-64f2-4677-b1f8-4201391588f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4355653a-8bad-455a-a5e5-b95f9313db81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ab89eb-0d4b-492f-a932-41ede3ee0a4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a27b95f7-386e-479a-a28f-2f9ba6046779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "521bc965-5f98-46d8-a621-aee192b3cdcb",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cdc8456-68eb-4370-9b34-7fdb0b9def6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1e977bf-6530-4ee9-bb9d-ce9f64bec8e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4fb16d9-57bc-4e8b-98ce-a43db7195bc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9137fcd-5201-4e1c-a459-0bb823741755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "733c5942-517e-4cd4-abed-38465f1d0aba",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54291339-738f-4fd6-9b77-8622884501eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8fafa44-9a87-4cf9-8f85-090760bcff71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50dd9aa2-c0ce-4f6c-b5f8-70c555e98b9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e42a6d1-ea82-4b12-9907-124a7faadcca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e2ec17-155b-480f-9eef-2312ba1b72ee",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc16954-1c96-42c9-a306-ff66dd3cd826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "965c4faf-2f52-4d8b-8179-fb865a83b890"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c4fabbb-1742-410e-b2ab-230598b0a4f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "008e4d47-e975-4e30-8f64-9fc73f2fadc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfcb0eb8-e020-41fd-8e2b-d41289986140",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "917c982a-0b2d-4136-9e74-19c222c78d68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65bf1142-ca83-4403-bff4-e17ccef589fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42597b0a-4aa4-4108-9090-96c041ee4e5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30fb3730-ff0f-4e6e-9b0b-a3b358bd5ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85089179-696c-4bef-b61b-6e3a699f3fad",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "927cb38a-b410-4f0e-a298-05488cc59aa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64333980-b74b-4a02-a168-767b721e1dc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beeea38a-ecc6-4b49-ac4b-b64bfc7b8f6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63cec106-0d41-48de-bf99-3a0a14e121b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c0c1a12-4d47-448c-91cd-bf92c4ad9ed2",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94ca4318-2781-43f2-a375-123d7aab0794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7be0959a-a202-4932-9559-76ab88130e16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9422ea81-6bc2-4581-bb36-b145650e360e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "302b18ea-6058-49ed-b9fb-89404f86ea16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "722d615b-d56b-450a-9f07-6eaea3c3146a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d23fcb0-702a-42ac-aa16-98ccbc223e5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e6fdd70-9a23-45d4-8eca-87ec5b81e5d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f372ef26-d566-4116-97a7-4bc472d3a973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82994dd7-48da-4ffa-b911-83d1286d1574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c164d4-50d7-4356-8a25-8c8ee586dcb6",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c6a9c49-13a2-4d80-a136-23b90f41b698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06430697-82cf-4036-a988-5685e2d1b381"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6b1b283-55d5-4ec2-886e-0e7de5aeed1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6837e299-b407-47ba-913a-1973872fcf16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a71396a0-31ee-4f00-9020-74d924b92dfa",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "296d75f8-56d6-4a7e-b121-4ddab1338201",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "133d68f2-fd43-410d-9660-cc36aec8cd62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd6ae1a-e052-48e2-bc41-e97f4e2d271e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6089347-ad99-4d66-a6d5-f39b823c64f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9817b3c9-f982-4530-9bc2-6439adfe52e4",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7306b46d-e0a4-4edd-9804-a62d0c448053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29303d81-a907-4b3c-9996-ed547cd2d6da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56343c65-61be-4201-80bf-e706ef141d30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb78f306-99a3-4b6c-a82e-594aeb8819e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca8dccb-428d-4168-a461-4b9382a92c3e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d09c465-4ece-444b-93c7-2f535e1143c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17b7ca5f-4ba3-436e-877f-2541682032f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03fd04dd-932a-4280-bdf0-fd97a4a0589e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f29b5270-add2-49ee-ba56-191e85b8de5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8bfd37f-c14b-4a6b-ab42-a8c757843018",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a44aaad-3d26-449b-957b-05cb9309b2ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "831a4fd8-1088-42d8-8579-5fa81338fb61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a93c7a9e-ae57-43d2-aa90-3aeef9678b43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13f70f81-86a3-4fb3-934d-988038f0026a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76d2ab8b-3a18-41da-888d-fecb3d07a2a3",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "052bdb2f-a39a-425c-b25c-56b63ee10274",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8972390-c875-492f-aaa5-46faf7962861"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f1b2f4f-6dbb-452f-92f1-6bf03c11f5c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49ca92fd-f704-46e5-bb50-baaf842ad08d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d068beb-908c-4ca6-8655-24ea798d0d03",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb83b6e-4b4f-4b92-a20d-3b46beafe745",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0900de3c-362e-4b5b-bc9a-bcc0a459117d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b5ebeb4-4e5a-454d-9f28-c350e8f7abb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa1f61b6-0ff3-42ed-867b-90a04c0c9971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a415da16-12f2-42e0-a3ca-22018329a4d3",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c58bff-cd34-49ce-9d3b-eae12944a505",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12487ead-a6a1-4d0f-955a-0b0ff8c5482b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "722c92cf-f4e7-4af4-9e1f-8f46fd30d659",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32c334dc-7194-4101-bdcd-6caee0c77a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "830459ea-cd27-460b-b52e-99094a7c6b05",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd0e20b8-6cbc-4cac-ace4-621a58580e83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bae2d852-1e5d-4c46-8899-c9b0147b35f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9388bfb-2988-4f85-be24-12158f1496ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff8be59d-ba99-4080-a7d9-73930fd7da72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba8ab83e-91ed-4806-bb36-ad2ee67c975c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4a72a6a-ac1c-4f26-a937-6c00baf5ff69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c5c3c6a-97da-4efd-97d3-4ea005568f0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c54d452-20b5-4fd4-9eb8-a8173f2ffa9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4bbd562-5192-42ce-8615-4cd0fd7a3023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57d9c82a-5722-4982-b34a-1b5d4feaa516",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f2eec0-1bfc-4ad1-b65a-ecbbd5314201",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85e51bce-dc4c-4c01-a8ea-59bc3c853a3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47144698-80b9-4336-8aad-38753110a241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc7c8c07-a349-4d37-b940-4431af8688d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b8d46ae-a5b3-4d30-ae86-6c26aee62d0b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6968f9ed-1349-46f3-afe0-2a6b7aaeaaa2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddabb9e2-e2a2-4172-bce6-96aac73eeb8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eafc46d1-1f35-4515-90e2-975ce7020a86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fda984f-d8d6-406e-9f0d-84feb5e0d7e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07219488-36a4-4555-8346-0d1599de2b56",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9368b76b-201e-4052-a8d9-4b47e8b54e88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e142b208-b3f5-41e9-8e71-c801810ea3a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd632e77-5ee9-44ac-94db-ba3807bb2457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7714f0ca-7ea6-45cc-80f0-5bb862c2b9d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4f7624-67e6-43d8-8adb-985e6cce6c17",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f121c39-01c5-4beb-bd0c-1d132d7332d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75408e7f-1119-4e2b-ab65-0aa7291bb123"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "834ca624-f22f-44ad-93b0-36f0d57aa69d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4247dd45-3f0a-4977-bd56-992e51136ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b808b625-ef30-4c68-8192-25d65e31768e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2b283f-c54a-4b8b-b458-923e10bedc9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "771220a2-8e59-4f07-98d3-03b3e71fb955"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a4c2570-091b-4990-b811-8f186f5d58db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65235859-999e-486a-bd9a-d4e6532d249e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db576e8-6fff-4e5e-baa1-5847fcd33d65",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c0dc60-4c9c-42f4-8e2d-d1d7b62fb8f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4012f291-4259-4e46-a62b-cd49dfd274a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d769789-b4ef-4d93-8419-6d3243676736",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c1e63a0-d685-4d06-9106-e46edfab505b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "218c7471-8dfb-4ffc-914a-7699bfd19a3d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6abbb0aa-890d-41b0-8140-d2a8af284b56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26947c63-4b5b-48e6-925f-8b461069870f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3e2ef9-6aa5-4d47-993d-311f134bc9d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b932a03c-793a-400c-9b4a-2d48e76c92b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d124be7d-a685-4b82-8cba-501e934ae743",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825fe513-8e4e-4658-a019-1ab4ba965ea0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "525d75fe-e60d-40ee-a170-870a0c1ed288"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19588a29-39bb-4b6b-b779-ceb0055668db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfebaf1e-6149-4b01-ad5a-b003fff9142f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "054434c2-aa17-4690-b668-befc27588b57",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47806d0e-4301-42e2-8403-2e0de3628b47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e391bdef-9b96-406d-ac27-47f7e242d78a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b3088e8-bee4-44fa-a841-1e38abef9bb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba78759b-9c1c-40f6-888b-27d75beb3d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aafe3eca-3616-40cc-900c-881bd9656272",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c38fea0a-522c-4297-bec2-eb1bb26049dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f08b0b2e-c029-4db4-8131-5a42452de90f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6128adb-884f-425e-a2fc-e05c82db96c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "600e01e7-f247-4433-ac40-6e8d9b801bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0802adb-38e3-42bf-b7e2-28fee7e2fe8c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d149ad1-5faa-468f-92a3-9e78245c7b72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61d974d5-d9f5-4454-8ede-d5316f41a530"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71436fab-0a5e-4978-89a7-9400daf05ed7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81b956f7-12f5-4848-94c9-5962919f8033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c17ced-4a2e-4844-b511-501591cd313c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c1d915-9cdd-42b0-9ef3-8c8a0805098d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f762fb4-7d82-4302-bfc1-98a9f2cd8bb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad0375b-e771-400e-828f-ca81760dd146",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d6e7f45-6f38-40ae-9ace-869f311f96dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b7dc98-cb0d-4a2f-8c2f-b8438df6692c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b04c86-e578-40e9-80ba-d8df0637c8ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61268c7d-ad70-4c25-8297-f4d4bb818baa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c8bbc14-4a1f-4629-9d26-4d3409128e04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbfa0671-0a3b-41d8-bc3c-3ca83d422f03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc6eace2-6839-43b7-a77a-c9e55d7fc54c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f18dbb0-ab52-4ead-bd5d-b0fc79e4e6a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e004d43-e43e-4613-966b-3cec580c9145"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a954019b-c2e9-4579-9a43-6f865bde110f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "913b1ff3-6b36-4f9e-8b24-7fc074fa11aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ce49a4-9e86-47a0-8042-1d28d066b19a",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f238ce-9e42-4ebb-b2e6-d1905cd8c5b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c543295-a967-4350-bc03-c84b02c0d90d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c7a4e22-6f07-47e5-aff6-e5abd3a7716f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7505bf7-5092-49a9-98b9-edf42a80adef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c97b0bb7-86f4-42ea-b4cc-f61ed68b21eb",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "708a2c2f-eaf9-424c-ac91-03fe01be1ac0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ede04da-a1ec-4a76-88fb-d79ce41a0150"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72eb02f-9c4b-4093-87a3-36993cf6f6a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9679c6e8-2551-44b3-ab91-6d3e33e38fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37bb21e4-550c-402b-bc7d-0b6e0a0c1465",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd1a7c2b-f192-4523-a060-cbc026b54a05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3dd07aec-ade1-4268-bc97-11a059f19fc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91461ca4-5288-43fb-a3be-b4c5189f14bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b8d150c-57db-47ce-b21f-6321250caf73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b726a04d-ecc1-42b2-9fff-2c50f037f7bd",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1525c30f-6a2d-4ce6-b6cb-6b056306919c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2d88655-e5b5-4b6b-a37a-329db831b513"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a84a85e1-bdc5-42aa-ad79-58d9073c2490",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c82e66f3-b25f-4f87-8f7c-4df24078feb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c35e2f0-9f49-43af-aa3c-4d32bf5fc49a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4073d129-8c5b-4915-b6eb-05ddbee342e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffdd7d6c-7c35-4bc9-972e-76a2214df27a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b18a6af-b398-48c9-90d6-f3ad55734df5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da654e06-d0ad-48da-8063-1a12379bb8d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27a33f81-09e1-49d3-912f-f4214b3fcf5c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f6a455-74dd-4f54-af38-5b50e91c3a9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9760312f-dff2-4820-a143-7a8911e56d55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d86aa26-ee40-4b0c-9cfb-5f8f9ea0dbe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc9ed8cf-f3a4-4773-b4fc-580d50c16e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4405927b-d829-43a6-a8ef-a9f234fea4cb",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1cb31fb-6614-44f0-8381-affdabe3da64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce5978c4-8bca-40c2-981a-aeaf7af2d93a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a25904-6cab-4872-990b-71108e387bbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1c22199-8cf5-4866-b775-40df6d5cda74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3499f183-4bd6-4f47-a190-b416f7f27e26",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab3469f-425c-41b6-a127-76c38a2f6fbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5df74899-1ff1-4c9c-833f-a4514700fb03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf69f613-8db5-4380-8602-df2ee7fd5ad2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d352a45-afdd-4d9b-9a95-4f2ef927b95b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d541c102-b1aa-452c-b3c4-c56c2c20c512",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6270f2f-961d-489a-9c16-24fe3a754a50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a4e61c8-94a5-4cc4-b728-d9493fcd0261"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "227f2943-c2d4-47e2-bc22-f0487578ea39",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba48a348-127c-4232-9a19-9a66bf99aa3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a325a292-4a51-47fa-bf70-a76c4dc21212",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af15767-62ca-4b9d-96b5-4be0f79d0238",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a921da61-9b27-4d1e-a0a5-e60bc0a533c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06c6391-c4ce-4fa7-852f-eb22861b0a30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8453ef2-4c41-4fad-8b28-cdb443bdbe02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca3bd069-7655-4a77-8d1b-3fbe299211b4",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9aff9bb-f2c6-435e-a54a-b1fb1af172b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4664f37b-c494-43c9-b17c-fb94fd9cc113"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f58a7a8-b7a3-4a3e-8b6b-e2937f16964d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bce99cd-068b-4581-930a-6d843cf07f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af88dfcc-edcb-4a16-a471-fd1ae8eadfe9",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c1c8c80-30d5-4d2d-8d1e-b0d9bab3980b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71899589-dfee-472f-aa07-aa01561f16b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a8bb57-581e-4bab-b2ec-fb36c39b294b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2865c272-12bf-4e23-b18d-77e16f6257e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "445f5cff-275b-4efb-bf6d-d11cad30ce48",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1183486-162c-4beb-8950-365f704fb7bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46aba027-061b-47e6-b2cc-0ae0ad45f815"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d7ea98a-6ff3-4806-a212-287c3403cf73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adf40a68-931a-4b42-8500-b878dad62083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e079c0a-20b1-4001-9a08-44d5c89e55cd",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8da4c381-3dd2-4acd-8182-9f952e965981",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "876b2795-1195-4290-b42b-1f99e8b77abc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e2bff9-2e1c-48f8-9912-46fa6ddcdaa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad302324-f68b-4275-9afb-610ceeb4b7a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b447680-ba52-4155-83db-389b6dc3a4a4",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "486e6a81-0294-4dcd-9f3e-adedd7748e33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9483f34-fcc7-416f-85b0-918440de820e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f03c7d-c474-46d2-b666-6831cfb31c89",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8466b741-baeb-48a3-a022-2043a219f818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4895d204-f121-47e4-83c5-136238e24e77",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bae5ea2-4a94-4059-8b41-a602b0752f10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f61065ec-a3b7-4868-8fac-b518dbed49c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b508335-890a-445a-b4a4-fcd4396ddcb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f38e76a-539d-4e3e-80e2-449869ecd3de"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "97bed16a-bf98-4afd-b348-6e9c54fda8e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9537edc9-057d-434b-b98c-76543b94399d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fafdfaef-ab70-4352-a641-71a26fc58c29",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "96560fc0-5f1c-4027-a4a5-28b7fe6f7c92"
                    }
                  }
                ]
              },
              {
                "id": "dd39772a-2227-4c51-9e9a-dc748b5116ff",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6125896f-2cd6-47d6-ae68-4a1fb4fa7ceb",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd945a0a-6df3-427a-9f0d-6d8477d8d38c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b2cee477-fb63-4ae4-9c3a-3063b498a417"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "996d0c90-1363-4c96-8c65-5f4e3d1fd485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2dca4ba2-d055-45a5-bd1d-c713bf3023b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67305497-faf6-415a-a2c7-6b25e357afae",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "511fe15c-0dd4-4532-88b2-3520ca3e4523",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "259a1d8c-2f9e-4cd6-ad33-6520e2ce2cd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b0de25-f9a2-4883-8864-578fb1a87b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f872fe0d-a939-4666-90a3-e58f0e85ba10"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b0d8bb1-8253-4f0d-91ec-8cfe4c3f367d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "296719e2-381b-4896-9ed4-769d6748ed5f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e4552bf-5d68-49dd-b203-e30e65eec754",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1d9d098-7c18-42f2-b4d3-2c5f40daf9d5"
                    }
                  }
                ]
              },
              {
                "id": "77ebb7e9-0d2f-443e-8251-ced19dc10b8e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "97b1586c-ebcd-40b3-aef4-01639a359112",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53ff2164-abde-482b-a93a-ee942c823f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4a7bbf28-3ad1-4aea-bc65-a78e0d7ca3e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c656c999-2ae5-4f21-8426-9d5653e95351",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "657f964b-679f-4837-844c-10dfb53af413"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "af179835-2322-4a1c-babb-94d84e13ce8d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ab4baa07-e774-4d8b-b03e-c40a3d8367b6",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3fd3d95-c5e3-4705-8c8d-1e42a2781891",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b9a817a5-9561-454f-a37f-e7519ca3071a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17af37a5-bd26-482c-a65a-064f9e8cb3fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4bb243c7-dcac-4979-8083-718d4e034f41"
                    }
                  }
                ]
              },
              {
                "id": "0c19d039-eb31-4e3a-b17d-4743f7307b61",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ff60859-7491-450b-acc1-5ce58a0cafce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0c4481d9-8841-48fe-b6a1-b733a8324e98"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "19c9aa60-e39b-4f44-b664-68b9e6d63f01",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "914b74bf-350f-4702-9706-1c7a8f8699fd"
                    }
                  }
                ]
              },
              {
                "id": "cc13c489-97b9-4a4e-84e9-c3f14a2be8bb",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "98fc0fbb-2c34-4b26-b8e4-688c7186e8d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "902db45e-3942-4c52-a7c6-0b9bdfdd3df6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "418b0829-1f0a-4777-be60-0ce21c152900",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6277a29a-752b-44bf-9d72-97a8ac7a524d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9b270dc5-5e8b-4097-90bf-521e7c28c7bc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "ecac8cb0-19c8-44d5-9cd4-68a9bb206fdc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6b64cbed-fcd3-473f-b222-f9ede34b34b1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "18132c7d-ae44-454a-b7e8-8eac7c6f48ec"
            }
          }
        ]
      },
      {
        "id": "d5c90e3b-4137-4ada-bd59-22d09ee93943",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "31e7bb73-6445-4925-ba1e-c6c58ad485dc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5028aaa2-62d2-4430-8cfb-b14ecb9974e0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c0147d22-5da1-40bd-9e91-744d3fc95617",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c573021f-2e04-4284-8426-41a1f52ed969",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c0a5df84-581d-4201-9849-893784133b32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d6ae98-803f-4ae2-b453-6e0686c372e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "62d8c20f-dbd1-4377-aa47-9cf9cb633aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c131123-d831-4947-9e44-9dd8cf394e7e",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc798170-5f79-4cea-8602-8ad19e1cd486",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "264f0c68-c0e7-4949-95f8-2612e2f2dad2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24e1d0c4-83b7-461e-8e8e-d526ebd41ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "64ccf82a-6798-4315-9de9-daa517159d8f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "033f8ceb-dd20-4dea-989d-829e7ed43387",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4bef710f-d923-4ec3-af4b-512f2685fb2f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d13247b2-9a50-4539-8d89-29f2bb8fddba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ed59c7e1-b3ed-406a-a986-66c59f82727f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "83c891dd-4710-4892-850b-df995f1c869e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "8c08d207-f8f0-4aac-b8ec-e43e938ce9d1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "49d4ebae-68b4-4c4e-97b3-353be6865dce",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c5575539-234a-4362-b50a-b51eab345270"
            }
          }
        ]
      },
      {
        "id": "ccec3ae0-cee1-4809-8ba0-45bd6a376d9a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "cb1dbf28-9be5-455e-8450-b7d77b572727",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5ad6ec44-e377-4b72-86c9-409feadcb7c4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "65925b23-76ae-48dc-a7be-c590af59be5b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24a818fc-765e-4382-aa8f-1b512afc3502",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "94aea2c4-1689-46d3-9bcd-4740154b4f7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7770764b-a5b0-434a-8717-0d43b25b6f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3c8946ce-2503-454c-9e55-040e55742117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbc2e3f8-9301-46aa-bb96-0ea1eb4b057e",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "398a8d57-1bf0-4894-b64a-dcfc39babde4",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "728520dd-82d6-491b-9d72-4651d4990e6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9cd8268-e175-412d-bc39-507940cd1548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e7bd1dcb-3e66-4de3-94b0-e5942e3be37a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe7c2c27-4120-4748-9fe0-ca4d33795efe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "386d49fe-4514-44e8-b378-18c2dd008268"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "19ad43f3-37d9-4b78-a6c8-0d902a0aa999",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e965ec43-e057-47a1-a1d5-8b2e9d305bca"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a4c703fd-91f7-4edc-bfc6-0e6993912595",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "fe89c66f-5b12-422c-96d9-ef483c867601"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8fa3b34b-4baa-498a-b7f7-e5a997122499",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "356a1926-7a98-457a-b2ba-d017a8e7634e"
            }
          }
        ]
      },
      {
        "id": "5569cd57-cfc3-45d4-a049-f6f213fc6884",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "01127e89-18ac-48cb-bbfe-21baa514e305",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cd1f68a3-7516-4cc2-becf-9e5abb5fe877",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1dd69362-fade-4880-a876-bafe289f3e5f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f42d8bce-f197-46dd-815c-bb657c1e6d78",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e6d3d31e-7fb1-444d-a806-8d4c63d9bc8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff548149-38bc-4609-97f0-fbfc27461c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6f1428ad-b6eb-4c14-b1ec-2a1d430f216b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1791439-c74f-47f2-a292-f53fcc1bac98",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae079ff3-2d90-4bb2-8bb5-dbbced9e39e2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f76e09aa-8704-47e7-8a5c-0ecdda121601"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdec4ec9-8c7f-4ec9-853d-28c3de6725a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fdb9b0c9-f555-48c4-b425-bd9e3d1db7dc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de19c297-b96d-4edb-98ca-4a0065930181",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc2b4765-ac13-4641-a051-8cd50ea81369"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a85af06c-6369-4f23-a14f-7d0d53ac76b2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "83b00209-8498-476f-96f3-02a36a379063"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5595be6f-8517-42cf-8323-424b5f57fcb3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "91d44f22-6c58-4fb7-9054-6f6123f1363f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "26733c56-05af-4728-94cc-b4e3c79b5d45",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "de8fecd8-3d2e-41d6-b53a-5eddadef4c48"
            }
          }
        ]
      },
      {
        "id": "2f0d9e4c-9eff-4596-8ad4-24f7aafe0a20",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dbb958a6-8d37-4a46-87ba-5245875090c6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "13d9831e-dea9-4d26-8092-dd70f948eb66",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "80eeab02-9ee9-4975-a4f0-0cc3a0a2e232",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "832bea73-c09e-4bb9-a39e-31da7d5f0d10",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "070be93a-cfdb-42fd-9f1c-51e4ffc7a194",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1915,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 261,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 19
      },
      "testScripts": {
        "total": 962,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 953,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 498.38697318007615,
      "responseMin": 10,
      "responseMax": 3068,
      "responseSd": 380.4330961854056,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1669855535608,
      "completed": 1669855676314
    },
    "executions": [
      {
        "id": "6f3a5b8c-382a-4abd-800f-c25b5ec5b10c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 252,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "798f7ddb-54b0-4e02-bd2e-7dfc772887c6",
          "httpRequestId": "135ee002-a179-4d80-8778-a37ce4f41e32"
        },
        "item": {
          "id": "6f3a5b8c-382a-4abd-800f-c25b5ec5b10c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "1f24eb62-4673-41ae-9984-c521b99d82e5",
          "status": "OK",
          "code": 200,
          "responseTime": 69,
          "responseSize": 0
        }
      },
      {
        "id": "b9ef781b-0ecc-4964-9939-5cf955f3e9e5",
        "cursor": {
          "ref": "a115d281-d49f-42c7-8367-66a246b054c4",
          "length": 252,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "63270161-ee5f-4bfe-a31f-7a20f79ca610"
        },
        "item": {
          "id": "b9ef781b-0ecc-4964-9939-5cf955f3e9e5",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "3275ad69-1280-46a0-a192-529a329bac64",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "7fc77e37-22b6-4247-af5e-e7a1696c8446",
        "cursor": {
          "ref": "57b00be0-6061-4a54-ac93-51e5f5d0aaec",
          "length": 252,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "625ff494-9def-45f6-8a96-ce74fd7c7d88"
        },
        "item": {
          "id": "7fc77e37-22b6-4247-af5e-e7a1696c8446",
          "name": "did_json"
        },
        "response": {
          "id": "47586caf-ce8e-4ba9-bbb3-76e24d3ae25b",
          "status": "OK",
          "code": 200,
          "responseTime": 709,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90f3f85-a569-4768-b73e-b2a209b12383",
        "cursor": {
          "ref": "24341217-1917-4423-b618-3e9bc8333174",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1ddf0455-1927-40b9-83a1-35b6a0c9ec3b"
        },
        "item": {
          "id": "d90f3f85-a569-4768-b73e-b2a209b12383",
          "name": "did:invalid"
        },
        "response": {
          "id": "f063a6cb-026e-4734-b250-61c6661433b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90f3f85-a569-4768-b73e-b2a209b12383",
        "cursor": {
          "ref": "24341217-1917-4423-b618-3e9bc8333174",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1ddf0455-1927-40b9-83a1-35b6a0c9ec3b"
        },
        "item": {
          "id": "d90f3f85-a569-4768-b73e-b2a209b12383",
          "name": "did:invalid"
        },
        "response": {
          "id": "f063a6cb-026e-4734-b250-61c6661433b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aacfd8f-d5c3-4271-9dad-ea503f616f04",
        "cursor": {
          "ref": "40503c6f-8ce7-4339-b716-f73263f97512",
          "length": 252,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f6ae2604-a39e-436e-9d7a-67e183932cbc"
        },
        "item": {
          "id": "9aacfd8f-d5c3-4271-9dad-ea503f616f04",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d65f0010-7625-471b-b4d0-540a526ed50c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 637,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbdc5520-4a5e-4e2e-9a27-8895c88112d9",
        "cursor": {
          "ref": "571b504b-97f5-4780-8142-012a7a57650c",
          "length": 252,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "5dd875e0-5aae-4334-aef7-a4237a1b4a08"
        },
        "item": {
          "id": "bbdc5520-4a5e-4e2e-9a27-8895c88112d9",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "8b9e6d51-4905-445f-b4de-b4f8b05b9c6d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 549,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4364a312-71c7-4980-9b3e-68aa7a30ba36",
        "cursor": {
          "ref": "d6a07ecf-458d-442e-bc9d-632494b979da",
          "length": 252,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4d5b921b-31c0-4031-a684-cd6897e1aec4"
        },
        "item": {
          "id": "4364a312-71c7-4980-9b3e-68aa7a30ba36",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "44e91f31-16f7-4a0c-9167-06a601b91155",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f42510d2-4296-4c87-847a-1be8214c1382",
        "cursor": {
          "ref": "e9cb35a2-4446-44f5-a8e5-696f5762c55b",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a25b1feb-41d6-470f-979c-14d1e6e3a510"
        },
        "item": {
          "id": "f42510d2-4296-4c87-847a-1be8214c1382",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "d1f4bb5f-5bad-46f0-b600-8c7e2114aa54",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 534,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f42510d2-4296-4c87-847a-1be8214c1382",
        "cursor": {
          "ref": "e9cb35a2-4446-44f5-a8e5-696f5762c55b",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a25b1feb-41d6-470f-979c-14d1e6e3a510"
        },
        "item": {
          "id": "f42510d2-4296-4c87-847a-1be8214c1382",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "d1f4bb5f-5bad-46f0-b600-8c7e2114aa54",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 534,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d88bdd61-23eb-4f2e-af95-4482260645bc",
        "cursor": {
          "ref": "a1fc7354-c15c-4760-919f-ff689ce0ca91",
          "length": 252,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "257b3660-09c3-4937-8037-f15be165de90"
        },
        "item": {
          "id": "d88bdd61-23eb-4f2e-af95-4482260645bc",
          "name": "identifiers"
        },
        "response": {
          "id": "85df2ae3-d082-45ba-b6ae-1dd5450bcf63",
          "status": "OK",
          "code": 200,
          "responseTime": 861,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1394a63-b381-4928-b6c1-4db27785e182",
        "cursor": {
          "ref": "5c4c65c4-9c2b-4f10-bb36-ee92815ee50f",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6a95a37e-6ad8-4b43-884e-b6ad75180e1c"
        },
        "item": {
          "id": "c1394a63-b381-4928-b6c1-4db27785e182",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b3909c3e-13be-47e0-9faa-949db564599b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1394a63-b381-4928-b6c1-4db27785e182",
        "cursor": {
          "ref": "5c4c65c4-9c2b-4f10-bb36-ee92815ee50f",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6a95a37e-6ad8-4b43-884e-b6ad75180e1c"
        },
        "item": {
          "id": "c1394a63-b381-4928-b6c1-4db27785e182",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b3909c3e-13be-47e0-9faa-949db564599b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158c7232-ec95-40b8-afd1-38522a6aa1ce",
        "cursor": {
          "ref": "fa400a93-6cbe-46ad-99a4-b7518c47c3a7",
          "length": 252,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1e4da72f-d3af-4ece-b30b-5dded88361e8"
        },
        "item": {
          "id": "158c7232-ec95-40b8-afd1-38522a6aa1ce",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "73405c73-7022-4fa6-affa-c9fa56007b4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3493d27-ca71-45d3-8e0b-f03853f0cb99",
        "cursor": {
          "ref": "faff7569-3eec-4a3f-bb72-3bbb3c5a2761",
          "length": 252,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "b2261afd-09d8-42e9-8b4f-725bcd2ee897"
        },
        "item": {
          "id": "a3493d27-ca71-45d3-8e0b-f03853f0cb99",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "26351dd0-a2d2-4eac-b504-3f8c56c1176c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c0abd65-80ab-465f-ad76-e61ccb2ad1f7",
        "cursor": {
          "ref": "cde12817-d046-4046-8e0d-e27bae1a0970",
          "length": 252,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2af3ab99-7868-40d8-8afe-169866e54dc3"
        },
        "item": {
          "id": "8c0abd65-80ab-465f-ad76-e61ccb2ad1f7",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "a9830dc4-2bf0-427e-9500-b1c19638694f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "281e6ea5-b86c-4072-9148-b03016155e02",
        "cursor": {
          "ref": "cca72be4-e302-461f-806a-ab782c209ef3",
          "length": 252,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f8281cf8-fa8f-40a9-a1bf-ad5893428ec8"
        },
        "item": {
          "id": "281e6ea5-b86c-4072-9148-b03016155e02",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "eb0f5634-dfb7-459b-a031-e5f9c075e22c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 678
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b000f38-09bb-4e3c-8934-064b5b2650cd",
        "cursor": {
          "ref": "2d058ae3-5975-45dc-95de-6bc962b9707d",
          "length": 252,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "aba79423-e142-47b8-8b12-fbf19cd4525b"
        },
        "item": {
          "id": "6b000f38-09bb-4e3c-8934-064b5b2650cd",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "451f63f9-d2fc-4295-a4f0-b92eeb01f3fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76384df1-746a-401a-a8e7-211e5308d68b",
        "cursor": {
          "ref": "2a7ce57d-6d56-4dae-b7cc-543c874dde30",
          "length": 252,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "167e76d9-f368-47ab-bba7-55b9b4ea78ca"
        },
        "item": {
          "id": "76384df1-746a-401a-a8e7-211e5308d68b",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "f61bb636-1404-455b-a11f-ab55dd9b16ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb78538-344a-4d93-9868-c6168b9bc9b1",
        "cursor": {
          "ref": "0c3d5f7c-454a-4d33-aa3b-d90f3702bf75",
          "length": 252,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d2b417da-0f3e-465e-a461-7636cce70a9d"
        },
        "item": {
          "id": "fdb78538-344a-4d93-9868-c6168b9bc9b1",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "bc464908-99e6-4e20-b3ff-56ec908def86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a9efa86-8d2d-42e6-94ba-913a828780ac",
        "cursor": {
          "ref": "5b205cb7-15d2-4ab6-bf10-a435df2a30c8",
          "length": 252,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d9cac729-9896-4670-a4bc-fe8c4d335a25"
        },
        "item": {
          "id": "7a9efa86-8d2d-42e6-94ba-913a828780ac",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c6186689-3b67-40f8-9dc6-e3c61f09effe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 950
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecddb77f-8f5b-4c5b-9c9d-f1158982b57f",
        "cursor": {
          "ref": "d3be06c2-1c41-4872-9ab2-9f895870849e",
          "length": 252,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e270b440-15f1-4202-b558-58fc74277655"
        },
        "item": {
          "id": "ecddb77f-8f5b-4c5b-9c9d-f1158982b57f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "19228554-4f02-43a1-95a1-20869ab9adfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 947
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c1298e-b447-4ef5-91b5-a4444006fb6d",
        "cursor": {
          "ref": "6c7d30a2-4243-4845-86ff-2a92c1161070",
          "length": 252,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "2a4df4d6-45ea-47a4-b613-336b4cce60d4"
        },
        "item": {
          "id": "02c1298e-b447-4ef5-91b5-a4444006fb6d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "1b51381d-747f-4668-9a8e-571df6fd07aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8d12349-8e64-4643-aee9-e8a9d65eda90",
        "cursor": {
          "ref": "6ab7be30-9b76-48b0-bbef-e40fda7d494d",
          "length": 252,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "68ec8fa3-4e61-4b8a-8be6-0a137884218e"
        },
        "item": {
          "id": "a8d12349-8e64-4643-aee9-e8a9d65eda90",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "2ebb0928-88c9-4cf1-aaec-98ddbe2fd008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1dbcc40-4e46-4088-9c06-7ac7e0a1c59b",
        "cursor": {
          "ref": "821ed792-c23a-4e40-b6ab-2d6099d3a428",
          "length": 252,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4a7151db-be1f-4c88-a130-98d8439f6ae2"
        },
        "item": {
          "id": "d1dbcc40-4e46-4088-9c06-7ac7e0a1c59b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "0c643fb8-df71-421e-ac98-24204f3a3715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "788ee0ce-22af-492c-9f91-a57c948215aa",
        "cursor": {
          "ref": "096179ce-c358-4ea9-810f-52c1b87c77f9",
          "length": 252,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "8cbea7b7-40f8-42a7-9a94-b30555eabef0"
        },
        "item": {
          "id": "788ee0ce-22af-492c-9f91-a57c948215aa",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "77b41f5b-52f2-4564-936e-bc3c3170a357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb281323-2c9e-4eda-8bc3-5a0222bc9d31",
        "cursor": {
          "ref": "ef09bd74-6f2b-4002-9e50-6fe1ecd53e14",
          "length": 252,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "51309d42-2947-47af-9286-d2f9fd35fd2c"
        },
        "item": {
          "id": "bb281323-2c9e-4eda-8bc3-5a0222bc9d31",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "67069724-9a92-4e88-bbcf-2afaed661f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 735,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acfa7514-9753-4986-9016-daa5fcfb1a9d",
        "cursor": {
          "ref": "6ae7d77e-1f28-40ee-8b0a-58a4bcb65d9f",
          "length": 252,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "21aa5ce5-6028-425e-9b6d-f74e64e3ea79"
        },
        "item": {
          "id": "acfa7514-9753-4986-9016-daa5fcfb1a9d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ea244a0a-7de9-4cc3-98e0-e258f90dcbd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc2941d-8e97-405f-b1d0-aef30ddd2c65",
        "cursor": {
          "ref": "1c4dd726-456e-4c6a-beec-edadb730032f",
          "length": 252,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a4cd92ac-3979-4ee8-b86b-d31e0d98c454"
        },
        "item": {
          "id": "6dc2941d-8e97-405f-b1d0-aef30ddd2c65",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "08988f6e-6d3b-4db9-a718-fb080fc2f667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ca7529-e8af-44fd-8e2b-f23ea611fdd7",
        "cursor": {
          "ref": "171fbed6-83dd-4eca-b0c6-42cbf2c90848",
          "length": 252,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "13e0c8cb-fd07-4422-859e-9131a2983972"
        },
        "item": {
          "id": "24ca7529-e8af-44fd-8e2b-f23ea611fdd7",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "7d631ec0-db8e-4507-a3d7-a1da7e55cdbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da932350-adb3-41be-bbd2-92bdff291d50",
        "cursor": {
          "ref": "bc197e1e-a13f-4861-8fb5-68dd9255dedb",
          "length": 252,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2a90e8bf-682d-4ce4-b591-8837c4488303"
        },
        "item": {
          "id": "da932350-adb3-41be-bbd2-92bdff291d50",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "05b4d527-6e26-4d0c-9aab-b9520ef8d23f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8046d70-820b-4296-8e1b-6371f395b41a",
        "cursor": {
          "ref": "5003a279-29e4-4e35-897d-419906f6c017",
          "length": 252,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "2d65cb06-fdeb-4631-80ff-4301459f3b13"
        },
        "item": {
          "id": "c8046d70-820b-4296-8e1b-6371f395b41a",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "99a8f242-463f-4b2c-aeed-40de60449295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ac6f6c-272d-437d-9885-3d9d7de57c56",
        "cursor": {
          "ref": "d5c8a674-6205-4be0-95e2-0d932515a7ae",
          "length": 252,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "23798ec8-b63e-4d84-b771-3b1ebc65eead"
        },
        "item": {
          "id": "45ac6f6c-272d-437d-9885-3d9d7de57c56",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "2d431c0c-6292-4f8c-8f88-195812d21b43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce1f1904-e955-42ca-9fbd-2df89597b188",
        "cursor": {
          "ref": "c18e8f25-0974-4885-aa06-65b8e85b91b0",
          "length": 252,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "0b7825f8-3e96-48cb-9949-3d9e2fef133f"
        },
        "item": {
          "id": "ce1f1904-e955-42ca-9fbd-2df89597b188",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "3a60ba48-54c7-42a4-b88b-9ba89359a8b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f2502d4-0fe8-462e-a1c9-1bdb9b2eabc5",
        "cursor": {
          "ref": "35229fd4-b696-47a9-b2ee-9e986c405f31",
          "length": 252,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f1c8549f-d397-47b3-a235-5d63319d8d10"
        },
        "item": {
          "id": "0f2502d4-0fe8-462e-a1c9-1bdb9b2eabc5",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "dc6f6213-325e-4bf8-bd0f-74ea7c734a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a9cdcc-7fac-419d-91cf-f2a3bfce1d9d",
        "cursor": {
          "ref": "382b62fe-8095-4df0-93be-78279abfbe6a",
          "length": 252,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "5e928375-1e5b-4430-9693-2cc1cf6946e2"
        },
        "item": {
          "id": "31a9cdcc-7fac-419d-91cf-f2a3bfce1d9d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "1f7e419e-8eec-4975-be75-a47febe9b5ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f24cc2-f21e-447b-88be-35525f84e76a",
        "cursor": {
          "ref": "69d0bcf2-a6e7-4ef6-a7b8-102b160afe94",
          "length": 252,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "9853ca58-cd74-41dd-b3e1-14149788f44b"
        },
        "item": {
          "id": "61f24cc2-f21e-447b-88be-35525f84e76a",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "74a324fe-d7c7-40ad-8c8d-a29500d10334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a4316f-1c4c-4e76-8ac4-73cc06002b43",
        "cursor": {
          "ref": "73a29364-7d1c-4711-b7c9-6486bca4412a",
          "length": 252,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "143e3982-9fbf-4814-9021-f385aefdb2e5"
        },
        "item": {
          "id": "d7a4316f-1c4c-4e76-8ac4-73cc06002b43",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "653e0aa7-da9c-40e8-9153-cf6ab5a2a201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2082709-dc08-4683-af94-b3faa8680a3d",
        "cursor": {
          "ref": "8829da73-fce8-496d-b7a8-433f02efe35c",
          "length": 252,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "bae429be-7599-4114-9fa1-78c1e3b0d7d9"
        },
        "item": {
          "id": "f2082709-dc08-4683-af94-b3faa8680a3d",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "575b42de-9582-4a7e-bb65-481104627acc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ec8d08-c460-4f96-9963-cabbdff90570",
        "cursor": {
          "ref": "061bbd16-0832-4d93-b823-4c53aef3c3a5",
          "length": 252,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "81aa8da2-e7a5-427c-80f6-980fc5dd4e5d"
        },
        "item": {
          "id": "72ec8d08-c460-4f96-9963-cabbdff90570",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "00378a7f-cd7d-4a47-a165-a0aee4c30dd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5727db62-6360-4257-aaa2-9231037377aa",
        "cursor": {
          "ref": "8cc1b349-d454-47af-baa7-e6bf21af059b",
          "length": 252,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d307259a-672d-4a51-8ce3-50fca2b54202"
        },
        "item": {
          "id": "5727db62-6360-4257-aaa2-9231037377aa",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "1814623d-dbb9-4c48-a219-2f6bb2ef2885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e771e68-58ab-47b2-bd6e-e5c1bee965c5",
        "cursor": {
          "ref": "8e24d24b-2617-4f01-830b-b96bd59849f2",
          "length": 252,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "727c364e-3052-42f7-840e-cb2ea1d0dd77"
        },
        "item": {
          "id": "4e771e68-58ab-47b2-bd6e-e5c1bee965c5",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f7d75d33-4eee-4c00-b721-6cc498b932f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb83fc2-42b6-41e5-9b83-0185ac3dd16f",
        "cursor": {
          "ref": "7c3927d0-75e9-4492-bd4a-82be01f316e8",
          "length": 252,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c8c4cbb8-a005-450e-a34e-36e6220f2766"
        },
        "item": {
          "id": "cbb83fc2-42b6-41e5-9b83-0185ac3dd16f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "02513dc4-5bf9-41be-a822-b050f4a47aee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fece7b5-5688-4fd4-9468-80f3f64326c0",
        "cursor": {
          "ref": "18ae46cc-f3cd-460e-bd21-c2c48ccacbcd",
          "length": 252,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "9e7e76af-adc2-4be8-bec4-0632cf5d288d"
        },
        "item": {
          "id": "7fece7b5-5688-4fd4-9468-80f3f64326c0",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d104c85d-a301-477f-a630-9ccc3115330c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d25caf6-21ef-4ed6-8c1b-2e2e8474cc3c",
        "cursor": {
          "ref": "27158bbd-1f9f-4841-ab2b-64966b2e4d09",
          "length": 252,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "8be18e86-89ed-4a55-94cb-21572464035d"
        },
        "item": {
          "id": "9d25caf6-21ef-4ed6-8c1b-2e2e8474cc3c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "c750e2f0-996a-45e9-847a-9cd80285f9b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 892
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10264810-fc7d-4181-8926-81e8bc2e36f5",
        "cursor": {
          "ref": "26ae6ac2-488a-45e2-9b9f-0325fcfb9983",
          "length": 252,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e9fed02d-cc58-4b9e-ac77-c19c68a234fe"
        },
        "item": {
          "id": "10264810-fc7d-4181-8926-81e8bc2e36f5",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "d81c2fb6-f0a4-4fae-8fa7-9226ed835543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d58023b6-f292-4d1c-b1e6-3fb3765db524",
        "cursor": {
          "ref": "817b78bf-7a11-4525-843b-9f6db89b99f5",
          "length": 252,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "62bb9245-79f4-4c86-bbbd-ec523c0209f7"
        },
        "item": {
          "id": "d58023b6-f292-4d1c-b1e6-3fb3765db524",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "aab184c7-bec8-4038-9e27-8f69ec166011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f9fa4c0-61bd-41c3-a853-7bc8686a7325",
        "cursor": {
          "ref": "b13d78a7-0d53-4090-ba29-7255b1d80b28",
          "length": 252,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "fc3cf4c3-1ea8-4e26-a160-97c9fffe9760"
        },
        "item": {
          "id": "4f9fa4c0-61bd-41c3-a853-7bc8686a7325",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ff20728a-d56f-4c17-9998-e4a9cd6e9e42",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 619,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ab8116-0e99-4ed9-beb0-f7777cba0629",
        "cursor": {
          "ref": "32dde19b-1139-491c-9c89-f226502b34b8",
          "length": 252,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ca1a055a-b005-49ed-acf9-2c3c88758ad5"
        },
        "item": {
          "id": "a3ab8116-0e99-4ed9-beb0-f7777cba0629",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ef529033-a733-4fd3-af3e-e0e0f20e49cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2644e67-cc99-4e34-97e8-cbd6d5f376ab",
        "cursor": {
          "ref": "aa610902-b828-4c81-8294-d00fcd456bf5",
          "length": 252,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "c707be41-a9ec-46c4-933d-edbca9cbf6c2"
        },
        "item": {
          "id": "f2644e67-cc99-4e34-97e8-cbd6d5f376ab",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "2a2db255-e98e-43e7-95d6-7d62ef5d4c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 1305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f0fddb6-a494-4ccd-8b6e-79ac4af8fb6c",
        "cursor": {
          "ref": "30aa1b28-2397-47c2-8347-061205e9d1d6",
          "length": 252,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "0880bb48-2f05-4ecd-9068-8ebcb68fa8ef"
        },
        "item": {
          "id": "8f0fddb6-a494-4ccd-8b6e-79ac4af8fb6c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c929a4d8-ba20-41fc-b6d9-6523e241a59a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f3b968-8cd8-4620-80d6-dea7fb006494",
        "cursor": {
          "ref": "9ee2e244-0a68-41e1-9c81-359503eceb97",
          "length": 252,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "4c7fdd6b-69a5-4239-a8e3-c6678773e060"
        },
        "item": {
          "id": "52f3b968-8cd8-4620-80d6-dea7fb006494",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "62cb4f55-8ca7-490b-a71e-de0e22139b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340f41cc-06fa-4f52-bd1b-578c0276c451",
        "cursor": {
          "ref": "cb01a267-e38c-4660-8a78-e3f8e7c93fbf",
          "length": 252,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "58f05e9e-0338-47f9-8dfd-d49dcf67c221"
        },
        "item": {
          "id": "340f41cc-06fa-4f52-bd1b-578c0276c451",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5da1ae28-af6a-4768-8e16-bc729ee87208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e467bf-09c6-4757-9e53-d300a870af42",
        "cursor": {
          "ref": "10f9597b-0f5e-444e-aeb8-293bba2a05b4",
          "length": 252,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "4ebbdb23-eefc-4fb8-9d84-fbcb58c9bd72"
        },
        "item": {
          "id": "57e467bf-09c6-4757-9e53-d300a870af42",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "78257f47-e44e-48f2-9bf3-480a43752980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 1636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "580c7276-ad97-4761-b9ed-3c46daa5a868",
        "cursor": {
          "ref": "1feaa19c-4dc0-4901-9473-00cf6792a1c0",
          "length": 252,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "052dec99-1c98-4dee-8181-bc9bfb0541f6"
        },
        "item": {
          "id": "580c7276-ad97-4761-b9ed-3c46daa5a868",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "321e3782-576a-42b4-99e2-109005e65edd",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 884,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b3f7143-c68b-4cff-925a-59b88429de41",
        "cursor": {
          "ref": "4011f1f2-d265-4105-b32b-b49bcb11ea7b",
          "length": 252,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "6b74bdf7-281f-4c94-8d6b-f742e8a583d3"
        },
        "item": {
          "id": "9b3f7143-c68b-4cff-925a-59b88429de41",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "af73cbe5-ea28-461f-b1ba-8bdabc946ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 773,
          "responseSize": 524
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a699d7a-df83-49d9-b533-6e9ec46ea11c",
        "cursor": {
          "ref": "8bd4bf77-a75d-429d-8662-0a6915532544",
          "length": 252,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f7de9cbf-8111-476d-b1ec-37b18c756740"
        },
        "item": {
          "id": "9a699d7a-df83-49d9-b533-6e9ec46ea11c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "df5487a3-ea45-46e0-b744-d61f5452596a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 883,
          "responseSize": 548
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d609e48c-bea7-4d8c-84c2-e13ddf8006c4",
        "cursor": {
          "ref": "3ec11b80-1500-4758-8412-779bda37d87a",
          "length": 252,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "1e85ab8c-7d5e-44bd-9cf7-9e6c4403b65c"
        },
        "item": {
          "id": "d609e48c-bea7-4d8c-84c2-e13ddf8006c4",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "2575a492-a604-4f62-a08e-8d516dd3730e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1064,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05cdb6f3-e664-4dd6-88de-3557b12f5b65",
        "cursor": {
          "ref": "a8ee1447-cf3c-4f90-ae4e-463064916a7d",
          "length": 252,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "65041fed-a4db-4838-8ae2-145271c1f0cb"
        },
        "item": {
          "id": "05cdb6f3-e664-4dd6-88de-3557b12f5b65",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d83e78b9-70f7-43ca-b91c-20fbea28d6a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd84b03-5005-4c43-9948-4833bb5d5b14",
        "cursor": {
          "ref": "202e9cc9-9f9f-43cd-a060-13062654663c",
          "length": 252,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "f43954e6-52c9-4483-a028-375273692723"
        },
        "item": {
          "id": "9fd84b03-5005-4c43-9948-4833bb5d5b14",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a3b39f3d-0331-409a-8735-7f67989b0092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac763fd-e71b-4b97-bf61-844e53da1db8",
        "cursor": {
          "ref": "9f4f5250-2b11-4c1c-9d44-58870fc763de",
          "length": 252,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "13519b16-08cd-46ee-a39e-d0ecd1c3ccfc"
        },
        "item": {
          "id": "6ac763fd-e71b-4b97-bf61-844e53da1db8",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "bbbb0ca4-255f-4749-a8de-25b037cc2b1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b9a5671-dd10-4568-894a-b8ac63530d3f",
        "cursor": {
          "ref": "674a80a6-e724-4937-b19b-5b7d6a640832",
          "length": 252,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "64207300-e808-4883-b708-b272962d4381"
        },
        "item": {
          "id": "1b9a5671-dd10-4568-894a-b8ac63530d3f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "912bd41b-7279-49a3-b483-8420e7523954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08837719-c1fc-4516-b0ef-cbd1a39e0311",
        "cursor": {
          "ref": "c8c5ded7-d447-42c2-aa8d-25825e57aec4",
          "length": 252,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a06fbae3-b125-415a-883c-01611a5a2336"
        },
        "item": {
          "id": "08837719-c1fc-4516-b0ef-cbd1a39e0311",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "dc36b5ee-49fd-46ef-b870-e2086eb343e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e3b5a9-070a-4f20-8521-df8f9b0fdc14",
        "cursor": {
          "ref": "21c5ec0c-9b30-4ecc-bb40-c319c3b27ea1",
          "length": 252,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3e54ce62-6da5-447b-bf1e-f6ec004cc52f"
        },
        "item": {
          "id": "46e3b5a9-070a-4f20-8521-df8f9b0fdc14",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "89a1293d-04b1-480a-8146-436d641d03bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bab6ebf-8d21-4d72-92c4-0d6bf2606c13",
        "cursor": {
          "ref": "19c75336-bb41-44f3-bbea-3f3389951425",
          "length": 252,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "1d91329e-93dc-4d20-a4cb-bba99c48513f"
        },
        "item": {
          "id": "2bab6ebf-8d21-4d72-92c4-0d6bf2606c13",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "de15a59b-3194-4ed9-a273-4729ba04acf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda9a5d9-79d8-478d-ad09-6269a9002efe",
        "cursor": {
          "ref": "b10091af-cacc-4002-a09a-d48c81ef6eb6",
          "length": 252,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e6cbbfd2-9923-4ade-bb4d-4a72aed49d14"
        },
        "item": {
          "id": "bda9a5d9-79d8-478d-ad09-6269a9002efe",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "3ab12599-b009-4b2d-8651-ffb1f1fd39b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 826
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "994eb3c5-b601-428e-9567-32d0bad1b96b",
        "cursor": {
          "ref": "c16602f1-1907-4ccc-91c7-fcf685f6e491",
          "length": 252,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b0529fca-7d31-4bcd-ae63-44fd173dfb1d"
        },
        "item": {
          "id": "994eb3c5-b601-428e-9567-32d0bad1b96b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "28ae8497-58c2-4292-8ec5-066861779c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 828
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "044ab45e-3701-416c-ab94-ca66ebf96134",
        "cursor": {
          "ref": "7a38c318-4361-40b1-a035-3df8c2432ed6",
          "length": 252,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "daada7b4-0a64-4d29-82bd-95dd8bc43a50"
        },
        "item": {
          "id": "044ab45e-3701-416c-ab94-ca66ebf96134",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "1ceff08f-bc85-443b-8083-dff07bf415e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 841
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11684afb-4ef9-42d9-86b7-ad1c74e3224b",
        "cursor": {
          "ref": "28b4fbd9-e2ce-4fcd-afff-c10a3dbbaa9c",
          "length": 252,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "6dd36f7d-a1e7-475c-ba1c-f205e6b3fa61"
        },
        "item": {
          "id": "11684afb-4ef9-42d9-86b7-ad1c74e3224b",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "ab2d7d67-87fa-4ad5-87b9-840718c72a34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f8b498-5176-4760-b3fe-d0580e84a2b6",
        "cursor": {
          "ref": "4ef1bdf3-0f27-412a-b0ef-de2f6239429c",
          "length": 252,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "952ddebe-a74f-4408-a50f-3fa668ffe881"
        },
        "item": {
          "id": "b2f8b498-5176-4760-b3fe-d0580e84a2b6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "8fba0f9c-a12b-46e7-a848-ee599ed2ae53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8cb5c6-60e2-46b4-8c3b-bdc111e251a5",
        "cursor": {
          "ref": "48f77598-cab3-499d-9715-0e3aecd16ab2",
          "length": 252,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "1d1f78b2-dba4-408b-af9f-967126a2b554"
        },
        "item": {
          "id": "8c8cb5c6-60e2-46b4-8c3b-bdc111e251a5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "82c7c6ae-99c3-47eb-9fbf-963b251ae8c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7504579-1005-41d5-8c60-cc6b84d185d1",
        "cursor": {
          "ref": "672cd42b-9751-403e-b8c9-49c4bc067a1e",
          "length": 252,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "703a6498-b9f5-4693-b8a4-4f1380c13333"
        },
        "item": {
          "id": "d7504579-1005-41d5-8c60-cc6b84d185d1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "75b82358-ce85-44a0-8d75-6ed0a2ab82c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 1320
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31c7a9f6-4feb-42a3-b9cd-5ca255071809",
        "cursor": {
          "ref": "bf0cd1a9-698b-4be2-a740-0600ec2ffee5",
          "length": 252,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "cfe838fc-ccbe-4a1c-af6b-06d2a8a5501b"
        },
        "item": {
          "id": "31c7a9f6-4feb-42a3-b9cd-5ca255071809",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "821278b8-a1dc-49f7-923b-668c3279312b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e0e2a35-2417-487e-9793-e493dd8a53e2",
        "cursor": {
          "ref": "29109438-a6e0-43c6-bfb6-38ee5a7d0258",
          "length": 252,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "32182534-f1b9-464e-95a8-adafeae0ef79"
        },
        "item": {
          "id": "7e0e2a35-2417-487e-9793-e493dd8a53e2",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "4e045937-da7c-495d-869f-996b858998c9",
          "status": "Created",
          "code": 201,
          "responseTime": 2374,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:71)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:71)"
            }
          }
        ]
      },
      {
        "id": "f750c457-04d6-4654-bebd-75e26b9933cf",
        "cursor": {
          "ref": "024ec1e2-4256-4253-8f03-d406e1345c73",
          "length": 252,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e35c32ef-dd30-4453-a5b1-ea3ea34140dd"
        },
        "item": {
          "id": "f750c457-04d6-4654-bebd-75e26b9933cf",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "aa2815b0-1202-4ce6-be54-1279bc5cdc16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c634c3-d3aa-4c2f-bdfe-367258e4998c",
        "cursor": {
          "ref": "f4a54402-4b22-46a5-a033-de88230aeb49",
          "length": 252,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "c65f1874-93f6-4b95-a481-054bd3c87e13"
        },
        "item": {
          "id": "e6c634c3-d3aa-4c2f-bdfe-367258e4998c",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e114c51c-a607-46e7-97f2-72e9bb21f00b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f5ada9-6f57-44f7-9a8f-c98288db030c",
        "cursor": {
          "ref": "0af2b5bd-2c5f-46c4-ac13-415b9f72efce",
          "length": 252,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "4cec18f1-44e4-451b-a52a-1e4a3427d7ef"
        },
        "item": {
          "id": "e9f5ada9-6f57-44f7-9a8f-c98288db030c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "cbb39eeb-162e-4d17-90f0-aac8d21703ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d5fa34-a237-4482-8424-e801199b9a58",
        "cursor": {
          "ref": "ffa32fc5-1c58-4091-a996-d6eb5c542391",
          "length": 252,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8950c5fb-8745-4079-97ad-b623deee2e34"
        },
        "item": {
          "id": "45d5fa34-a237-4482-8424-e801199b9a58",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "5e5bd93f-e5b2-4024-9819-47f4bc134d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b70eb82-faf3-4d4f-a08d-2b1316351f1f",
        "cursor": {
          "ref": "c2299b42-96fe-4c67-bd34-18b395dc9e1d",
          "length": 252,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "0ab4ea04-5ee8-4f47-9c53-b740b2671db7"
        },
        "item": {
          "id": "0b70eb82-faf3-4d4f-a08d-2b1316351f1f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "9e213d07-7998-4f07-9b9e-94cf0a05941d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bafd71d-6b62-426e-a699-530b6aa1688b",
        "cursor": {
          "ref": "7e738395-302a-415f-b516-f3d06ebb436d",
          "length": 252,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "671e4370-152b-4197-8c0d-315200108562"
        },
        "item": {
          "id": "7bafd71d-6b62-426e-a699-530b6aa1688b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "90a4ac55-2b4e-49a5-8078-b10637246a1b",
          "status": "Created",
          "code": 201,
          "responseTime": 2322,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:77)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:77)"
            }
          }
        ]
      },
      {
        "id": "bb50cb44-3c31-4d13-a75a-582cb480de0f",
        "cursor": {
          "ref": "3682fcca-2d43-4ee0-9de3-dfef7262e77e",
          "length": 252,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "775f4946-cab5-4771-8622-ba3e9464453a"
        },
        "item": {
          "id": "bb50cb44-3c31-4d13-a75a-582cb480de0f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "96219b50-95a7-4761-a917-20ef8dc0998e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e83fb75-4aed-4098-bd2a-7c5010a87899",
        "cursor": {
          "ref": "b155110f-f7a8-49ae-8ed2-1a25b229fa5d",
          "length": 252,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f2104b5c-bae1-410c-a7ee-107832e9512e"
        },
        "item": {
          "id": "4e83fb75-4aed-4098-bd2a-7c5010a87899",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "41fcd8dd-1bbe-46ec-b3c9-2fc2991ff604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 510
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab9175f-d741-4837-80a0-f50fc3feb642",
        "cursor": {
          "ref": "192b120a-0695-4a65-ab1e-1567e788d240",
          "length": 252,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "267adfdc-f27f-4fd0-aaa0-5b5e295d9971"
        },
        "item": {
          "id": "aab9175f-d741-4837-80a0-f50fc3feb642",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "8cbc1a8e-8337-4814-9771-a5f7f5875092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8423a3f5-b837-4c82-9ba4-0594a312b5d0",
        "cursor": {
          "ref": "2900344e-123e-45b6-8012-5e595cb4dbf8",
          "length": 252,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f1b0c1db-714c-46ee-aa2a-88a7c01fb0cd"
        },
        "item": {
          "id": "8423a3f5-b837-4c82-9ba4-0594a312b5d0",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "033c2706-dfe3-4246-8d9b-2cbf30d04c06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a49a33-805a-4150-93e6-2910e520f9e5",
        "cursor": {
          "ref": "902f4ec9-9d78-4ff8-9e05-0c26d5625f43",
          "length": 252,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ef24c952-120d-43dc-b1d2-0f43710d4dfa"
        },
        "item": {
          "id": "50a49a33-805a-4150-93e6-2910e520f9e5",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f93f0d66-659a-42a3-a3fe-052bb60f827d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da553e2a-cce1-4312-858e-ea6f60bcf0ad",
        "cursor": {
          "ref": "d303b2a5-d2ef-4b4f-a48d-dbb76a7752fc",
          "length": 252,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0a282219-0d10-4894-ab7d-bb1e955c2c9d"
        },
        "item": {
          "id": "da553e2a-cce1-4312-858e-ea6f60bcf0ad",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "0b7400bd-bdf1-4f3f-b788-d3f6453ece03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab376944-a258-4399-b910-83dd89993e29",
        "cursor": {
          "ref": "ffa1b5ca-e7df-4ffa-882a-88064cb9fde6",
          "length": 252,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "f98cf465-2768-43a5-8c44-e911ba43fa51"
        },
        "item": {
          "id": "ab376944-a258-4399-b910-83dd89993e29",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "dade57ab-2783-44ca-ab15-4774f003f750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "571b6105-ee99-4645-b923-f2ad5f73d89e",
        "cursor": {
          "ref": "34d015ae-798d-4839-9164-dcf83bb46d51",
          "length": 252,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "30f8d94b-9424-4901-a1ce-3e4ea5d8a296"
        },
        "item": {
          "id": "571b6105-ee99-4645-b923-f2ad5f73d89e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "6007f105-8771-4a9f-8b75-d32c20283c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a83e874-1deb-4c23-b33e-a9a5d4a85917",
        "cursor": {
          "ref": "6c85df50-2804-4c4c-a767-0cbde6165d5b",
          "length": 252,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "848719a5-ad7a-41a3-9031-5b40d495ff87"
        },
        "item": {
          "id": "6a83e874-1deb-4c23-b33e-a9a5d4a85917",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "25f32d13-9457-45aa-bfed-d827014ee8c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373a0d53-c6e0-4ea8-8b18-11a018a4bcd8",
        "cursor": {
          "ref": "157d420e-fa2d-476a-a578-060df4dd99fa",
          "length": 252,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "55952917-7fbf-4502-acd2-fe64d6e1ec7b"
        },
        "item": {
          "id": "373a0d53-c6e0-4ea8-8b18-11a018a4bcd8",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2d85f02c-d42e-474f-a72f-e36fdd581111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2629534a-41a4-419c-b982-dab6090e8ec2",
        "cursor": {
          "ref": "2aaa1244-c2b6-47ed-8464-dcf963e815b6",
          "length": 252,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "3d7c8fb6-ff65-4ede-9c9e-4edaacab346f"
        },
        "item": {
          "id": "2629534a-41a4-419c-b982-dab6090e8ec2",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "69836ba7-d5d7-4a29-a78f-72f4be538495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a27de73-90ed-4ed8-839c-3b616cebc494",
        "cursor": {
          "ref": "25b2302d-7598-461b-b434-aa6a7074e1aa",
          "length": 252,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "9e972290-15b5-49d0-b91a-d3b0b0067aa8"
        },
        "item": {
          "id": "3a27de73-90ed-4ed8-839c-3b616cebc494",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "880b7e07-79a8-4569-84ad-1f7a2ca75d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f942b27c-ebc6-4c00-820f-40c0082fd86c",
        "cursor": {
          "ref": "93226cb5-ff90-4dfa-a4e1-87dce4d6d08b",
          "length": 252,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d77b4c61-138a-41c8-a8e3-61d03e3d9ab3"
        },
        "item": {
          "id": "f942b27c-ebc6-4c00-820f-40c0082fd86c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "ecbec35a-7210-476f-a533-10203104e4ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b9c3b3-9d5f-4d56-a286-3f674e9c16ff",
        "cursor": {
          "ref": "580b6f2a-691c-4e19-8168-ace76de07957",
          "length": 252,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "de4f0010-ef7c-4811-ba28-54c3b3470541"
        },
        "item": {
          "id": "47b9c3b3-9d5f-4d56-a286-3f674e9c16ff",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0ab4442a-1436-424e-b154-1c491b5b17a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6798fb7-5bb3-433d-a127-ecd4d9a84db6",
        "cursor": {
          "ref": "003f5d5a-3006-4329-ac39-5afdaf4740da",
          "length": 252,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "0dea7534-624b-4aae-956e-cdb3ff82ff5d"
        },
        "item": {
          "id": "a6798fb7-5bb3-433d-a127-ecd4d9a84db6",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "43a78a6a-ebc8-49c2-8ec8-3cd896b9600c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec059cb9-43dd-49b2-9d44-86fc968a50b2",
        "cursor": {
          "ref": "3bd805a4-6396-42d0-8f65-cccc60d5af9d",
          "length": 252,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "7f9dac48-d160-47d6-aa25-875d161e96b6"
        },
        "item": {
          "id": "ec059cb9-43dd-49b2-9d44-86fc968a50b2",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "86639e0a-4cfd-44d2-9461-8c4dcd1971e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8676b336-b4f4-4c1c-90cf-9f5e3f90599e",
        "cursor": {
          "ref": "3fb7727e-1713-4246-a370-9516f182ca3c",
          "length": 252,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "b3964b17-a585-4a67-bc02-47ba48ee5dc1"
        },
        "item": {
          "id": "8676b336-b4f4-4c1c-90cf-9f5e3f90599e",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f10376b0-d0b4-4c10-bfc7-88e518c1b581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e48328b-2c85-4ec1-b05b-2cda8aa3e1ba",
        "cursor": {
          "ref": "00e17884-0637-4bdb-aac9-59838fbae62b",
          "length": 252,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "9b41e373-b695-49d8-b565-def29c08ebe8"
        },
        "item": {
          "id": "9e48328b-2c85-4ec1-b05b-2cda8aa3e1ba",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a49dfdc3-72b4-41a2-b600-f4805ba4cc20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a50a21-acbb-43cf-8c51-ed5f6fafe022",
        "cursor": {
          "ref": "985d11e0-fa93-4190-8754-3fa9f48b3e68",
          "length": 252,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "9611321e-97f8-40ef-9339-2aecfb6ad035"
        },
        "item": {
          "id": "45a50a21-acbb-43cf-8c51-ed5f6fafe022",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "196360bd-8725-475e-bd6f-49a552a85aab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c515080-624f-4290-9716-f39950380115",
        "cursor": {
          "ref": "45a360e8-d6e7-4e2b-be84-07513e28565f",
          "length": 252,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "dc76794f-00d5-44c3-b2b8-7985b47d2630"
        },
        "item": {
          "id": "1c515080-624f-4290-9716-f39950380115",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "4c263336-ee90-4e64-9bfe-b5b70aa49dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82648c35-1e38-47d3-9714-b8b883cb3dc5",
        "cursor": {
          "ref": "b48c3195-1f53-4679-beba-9cd3c2824292",
          "length": 252,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "110f7342-09f6-46f9-951d-4fdef21a8914"
        },
        "item": {
          "id": "82648c35-1e38-47d3-9714-b8b883cb3dc5",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "37b2c5d1-c0a4-4975-b336-4a4ba0bbab43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "583679b4-6a6e-4a92-9081-8b440ff7bd0b",
        "cursor": {
          "ref": "b6beed2f-c726-4c2d-a313-6ba64db17008",
          "length": 252,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "57b6e890-2927-448a-ad0d-05294834bf07"
        },
        "item": {
          "id": "583679b4-6a6e-4a92-9081-8b440ff7bd0b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "4813e862-1693-4ad6-a84d-9cf5046a18b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1bb375-9b6b-4cd5-b9f9-174bf9043041",
        "cursor": {
          "ref": "7a845e25-13a8-4960-8457-5bd84c51ecab",
          "length": 252,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b4256cbe-a342-4d12-9eb9-d4765625bdb8"
        },
        "item": {
          "id": "4f1bb375-9b6b-4cd5-b9f9-174bf9043041",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "6208186f-dbc4-4b7f-83d0-a474628aefd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a05d2048-02b5-4ed0-a062-b5b2169dd794",
        "cursor": {
          "ref": "41665817-73e6-4bf8-8001-76e3e6a2c33f",
          "length": 252,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "33129d03-2b52-4cec-b43d-3112294f13be"
        },
        "item": {
          "id": "a05d2048-02b5-4ed0-a062-b5b2169dd794",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b2286265-960d-40a2-8156-fac84712c58e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176932a0-6d16-4199-873a-f2f6b1606203",
        "cursor": {
          "ref": "3b18b1c5-d905-4008-b9b6-28f208e2ea43",
          "length": 252,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "1a0d0712-368a-4b49-9779-b97faa0f2087"
        },
        "item": {
          "id": "176932a0-6d16-4199-873a-f2f6b1606203",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "33b50adf-3a55-4876-92e7-a1f2152c9ac2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23427d0e-4dad-4858-87b9-a88a64629868",
        "cursor": {
          "ref": "676b769d-f5b8-4d41-86e4-5084012fbef6",
          "length": 252,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "ba29f348-ef89-4614-905a-afd8c68896bd"
        },
        "item": {
          "id": "23427d0e-4dad-4858-87b9-a88a64629868",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "93b309a3-4dca-4d9e-8d9b-6dd5d0404dd8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 525,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e83e47-524d-4bb6-bda3-6c96b240f495",
        "cursor": {
          "ref": "702131a2-2aa0-41a5-b88c-ca339443cd16",
          "length": 252,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b40b5372-12fc-4203-b328-a653c06ee2c0"
        },
        "item": {
          "id": "06e83e47-524d-4bb6-bda3-6c96b240f495",
          "name": "credentials_issue"
        },
        "response": {
          "id": "26f2a2ef-a5a7-41ba-9d9f-dc18ad4efc3a",
          "status": "Created",
          "code": 201,
          "responseTime": 2399,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:104)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:104)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:104)"
            }
          }
        ]
      },
      {
        "id": "6c113514-47cf-46ad-9e2a-d968405cd75e",
        "cursor": {
          "ref": "23cd427c-83f4-43b0-8bd1-1546f85fecbb",
          "length": 252,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "289dc9b8-9382-4a1c-99d6-2f3ada9c3615"
        },
        "item": {
          "id": "6c113514-47cf-46ad-9e2a-d968405cd75e",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "5575ed02-202f-4894-88d8-2404d64d3b0f",
          "status": "Created",
          "code": 201,
          "responseTime": 2454,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          }
        ]
      },
      {
        "id": "89a3a70b-15c6-448c-a122-453e31efcfe4",
        "cursor": {
          "ref": "caa53b14-1049-42b0-87df-10027c5e63b5",
          "length": 252,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e63a6481-c349-447b-8e3b-dae0b96696fc"
        },
        "item": {
          "id": "89a3a70b-15c6-448c-a122-453e31efcfe4",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "fa9337d8-3df8-45b5-86a1-e90736adfd2b",
          "status": "Created",
          "code": 201,
          "responseTime": 2260,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "0641654f-eab0-4a2f-8341-5795e0bf8b4f",
        "cursor": {
          "ref": "c049af99-9d18-4ae0-9ad2-9685ab8a16e0",
          "length": 252,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "02f8188c-984b-4c8a-9c85-ebde1683f823"
        },
        "item": {
          "id": "0641654f-eab0-4a2f-8341-5795e0bf8b4f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "56ad2aa0-9870-4a00-ae30-0a46e0526ce2",
          "status": "Created",
          "code": 201,
          "responseTime": 2328,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "a3773fbf-f278-4e85-afb8-49f2f6cfe506",
        "cursor": {
          "ref": "4518f995-c312-4f9d-9893-df278d9381be",
          "length": 252,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "2d263029-c65b-449c-92a0-d1b4792f748e"
        },
        "item": {
          "id": "a3773fbf-f278-4e85-afb8-49f2f6cfe506",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "0ffa553e-ef8d-46e2-9b60-c39a9ebcb22d",
          "status": "Created",
          "code": 201,
          "responseTime": 2200,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:108)"
            }
          }
        ]
      },
      {
        "id": "49bef7b6-4c1a-4d12-9a7e-0f47ab8723eb",
        "cursor": {
          "ref": "1f1d80cf-1d13-41b0-969c-6d327138a57f",
          "length": 252,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "6c6aa232-df10-4d4d-9a9c-4d1a33fbd5e7"
        },
        "item": {
          "id": "49bef7b6-4c1a-4d12-9a7e-0f47ab8723eb",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ebd18973-9978-4970-9307-45d2bdf3734f",
          "status": "Created",
          "code": 201,
          "responseTime": 3068,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          }
        ]
      },
      {
        "id": "04cf5b41-7de8-4659-bba2-f66641f08f95",
        "cursor": {
          "ref": "5b9af38c-6982-497c-85ad-6bb98553cbb7",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6c6156d8-c540-4694-a0bf-482d9e88913c"
        },
        "item": {
          "id": "04cf5b41-7de8-4659-bba2-f66641f08f95",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3d1bb534-b415-4bcd-bd60-414f3d8824ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04cf5b41-7de8-4659-bba2-f66641f08f95",
        "cursor": {
          "ref": "5b9af38c-6982-497c-85ad-6bb98553cbb7",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6c6156d8-c540-4694-a0bf-482d9e88913c"
        },
        "item": {
          "id": "04cf5b41-7de8-4659-bba2-f66641f08f95",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3d1bb534-b415-4bcd-bd60-414f3d8824ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "091d9f66-60d1-43b3-bfe4-bfd40632e8e5",
        "cursor": {
          "ref": "21235a17-cf2a-4db4-adad-0fb25d457887",
          "length": 252,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "0d50d2de-d3f8-49ac-9ed0-790cf452df9c"
        },
        "item": {
          "id": "091d9f66-60d1-43b3-bfe4-bfd40632e8e5",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "99c852c3-0984-489c-8d0b-f7c465ad0aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794581b4-8c1c-4bbb-b9ba-9e360c3c1718",
        "cursor": {
          "ref": "e214f036-1688-4438-a9c2-2ee9904eff90",
          "length": 252,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "c0e1e45c-cbf3-43bd-abae-1a85b7bbadf6"
        },
        "item": {
          "id": "794581b4-8c1c-4bbb-b9ba-9e360c3c1718",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "da139918-3d3a-4def-971c-f7c9818c9033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 342
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2647d526-f037-49f3-858a-8e1e537ca045",
        "cursor": {
          "ref": "7dd38e74-768c-4b05-bcca-d24b8bbbd8e9",
          "length": 252,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "717cf221-0f79-48ef-b173-45f89e6561c2"
        },
        "item": {
          "id": "2647d526-f037-49f3-858a-8e1e537ca045",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "71341dd2-215d-4971-ace6-8ab166d4f875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e2a9646-d8e0-460e-b8a3-f2f93a7b66c9",
        "cursor": {
          "ref": "a09d6e21-c5a9-4fd5-baab-da9655c1da7d",
          "length": 252,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f5ce5525-2f93-41d5-a2a2-df24bde55cb8"
        },
        "item": {
          "id": "8e2a9646-d8e0-460e-b8a3-f2f93a7b66c9",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "de712266-013b-4617-bae4-45160d03912a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 341
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c62d7b6f-8203-47a8-8d4b-35717c7c92fe",
        "cursor": {
          "ref": "6eaf6468-af67-4730-952b-cae9ae81a9a8",
          "length": 252,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "89498d2f-d4a4-4a76-8c05-e686bfb842e1"
        },
        "item": {
          "id": "c62d7b6f-8203-47a8-8d4b-35717c7c92fe",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "de4abce1-cafc-44a9-93a2-8f849807a5fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6beeca74-7790-4848-be4f-41ef2f4dc141",
        "cursor": {
          "ref": "2ea15068-2721-4cee-9b86-e3f72fa33eaf",
          "length": 252,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a8fce80e-b456-41a8-9d97-6b579d1f7e33"
        },
        "item": {
          "id": "6beeca74-7790-4848-be4f-41ef2f4dc141",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3dde3434-2536-4564-9549-d7a0e1f6f0e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a4f2877-ceb8-4f1c-b258-84bf67e31f74",
        "cursor": {
          "ref": "bbe49482-8863-4cd9-9c4c-e6adbfb4a2d3",
          "length": 252,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "52e3a42f-f59f-4347-a449-1135871f2df2"
        },
        "item": {
          "id": "3a4f2877-ceb8-4f1c-b258-84bf67e31f74",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "96ac6a07-9174-42ad-9584-d4c7a651c387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6154488-1e82-4d40-9498-655e2227b0da",
        "cursor": {
          "ref": "41beea5b-a70a-495c-8153-f3765a249c5f",
          "length": 252,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "5abbb187-5e4c-4cbc-9943-f52c9574e718"
        },
        "item": {
          "id": "b6154488-1e82-4d40-9498-655e2227b0da",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f5d33bb4-49e4-4d51-92cc-c1ed318568d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3482fab-5cbc-4f0d-b206-482dd7147dd6",
        "cursor": {
          "ref": "b9ee9eb0-d686-4004-8e3a-70694a203c78",
          "length": 252,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "792efe03-e052-4fe0-b792-54deb99dd444"
        },
        "item": {
          "id": "c3482fab-5cbc-4f0d-b206-482dd7147dd6",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d72c6603-e20f-4287-a668-d51ee2ac1db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "289b4bd5-3c16-41f2-ab9b-c08dee4d702c",
        "cursor": {
          "ref": "3535b9a9-c01d-43d0-a421-27a097ac02e0",
          "length": 252,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "fe9a0f09-fb47-4bc2-a554-bbef7eb81701"
        },
        "item": {
          "id": "289b4bd5-3c16-41f2-ab9b-c08dee4d702c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b4daf0f8-138b-4725-a02e-c2df77e7978f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86dedb0c-03fb-4a96-b433-d812d69a2f50",
        "cursor": {
          "ref": "d29dc6dd-db55-4ef9-a7d0-13d0989152e3",
          "length": 252,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c1d6c77e-d3dd-4375-a14f-572079a1f83d"
        },
        "item": {
          "id": "86dedb0c-03fb-4a96-b433-d812d69a2f50",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3309d71b-4cb2-43c3-97a5-df04d1a88aa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf6746f9-db7b-4e79-9a9c-079d80132ee1",
        "cursor": {
          "ref": "285878e4-15c5-41e0-9657-bdbe6e8ac5c0",
          "length": 252,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "43d90cba-3063-4c12-9d6d-05aeec193634"
        },
        "item": {
          "id": "bf6746f9-db7b-4e79-9a9c-079d80132ee1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ba3ff81b-e2e8-42d0-aee6-c9eec5cb367c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bab13b3b-918c-42dc-9ce5-e7c8d5c78b0d",
        "cursor": {
          "ref": "bd714d30-ce67-4f1f-bae4-e8584940ef1c",
          "length": 252,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a629fe71-eba2-4f23-a626-69ec5d3190e8"
        },
        "item": {
          "id": "bab13b3b-918c-42dc-9ce5-e7c8d5c78b0d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e977b03b-c3a6-431b-9224-306faa837ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "382b7460-ea46-49ab-adb7-7e11ec979513",
        "cursor": {
          "ref": "eb333bc6-ad6a-4505-9a35-ed411713ba48",
          "length": 252,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "9cc4535b-3a32-44be-9033-5e4ac5981101"
        },
        "item": {
          "id": "382b7460-ea46-49ab-adb7-7e11ec979513",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d1043fc5-1adc-4804-a3d5-55fb63e9b0ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b831cea8-ad49-4166-b0d0-b261a249f684",
        "cursor": {
          "ref": "1ec9f664-2834-4c71-9131-e2f846b1165e",
          "length": 252,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "7a104ad4-010e-4417-9d2f-7bb24fe4854a"
        },
        "item": {
          "id": "b831cea8-ad49-4166-b0d0-b261a249f684",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e45b13b1-e533-45d6-b32a-76e4fecd3b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "732461dd-efee-4f18-bf11-ac112c8f2cca",
        "cursor": {
          "ref": "fe220691-7634-481f-b077-6c8935bbc0c8",
          "length": 252,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "361e8ebb-916f-412b-a131-a92fe18d0a95"
        },
        "item": {
          "id": "732461dd-efee-4f18-bf11-ac112c8f2cca",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9064bca4-5e07-4340-86ad-0f26b67b407c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 769,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f848d9f-7605-4be4-93dc-72de91686426",
        "cursor": {
          "ref": "7d1386d5-2f3d-4e8b-b305-d746c31e3815",
          "length": 252,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "5398ee8a-db9f-45c6-bf67-bb8c66d116fb"
        },
        "item": {
          "id": "5f848d9f-7605-4be4-93dc-72de91686426",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2494d477-ac7a-4f92-871d-ede10c51ca91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 955,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86847090-9b49-4ebb-93cc-5e842aeda6a3",
        "cursor": {
          "ref": "47cc36d8-9fda-46b7-868d-6f97645c325a",
          "length": 252,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "86073652-bc9b-40b0-86f8-02873a2fc24e"
        },
        "item": {
          "id": "86847090-9b49-4ebb-93cc-5e842aeda6a3",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1559af33-f6b2-441a-960c-3e57fb3fa4a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 790,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63613464-e394-4442-9fc1-fa95bb40ab83",
        "cursor": {
          "ref": "8b552def-566a-4027-9448-771d1f99bd32",
          "length": 252,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b468cb68-953c-4532-9274-dae1685627ac"
        },
        "item": {
          "id": "63613464-e394-4442-9fc1-fa95bb40ab83",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2d283f67-e278-4dfb-8e1d-ccd1ee60865e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a2c79e-c3df-4ccf-89f8-0d4b2fdeeb68",
        "cursor": {
          "ref": "ebb6977a-9dcf-410c-b180-7b37cb093071",
          "length": 252,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d42069c6-ab6b-48f3-adde-bae3e58cf358"
        },
        "item": {
          "id": "92a2c79e-c3df-4ccf-89f8-0d4b2fdeeb68",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7f428612-1478-4892-8675-eee24ed6fb5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3382c3fb-c270-4ccb-bb1b-1c7588aec2fb",
        "cursor": {
          "ref": "95e648b7-e8d9-443c-8e1d-68ae1890471b",
          "length": 252,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "97cb3730-37cd-4367-9379-141a21176f83"
        },
        "item": {
          "id": "3382c3fb-c270-4ccb-bb1b-1c7588aec2fb",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "93848104-6ca9-428e-bcd7-d2cb6f3bb070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48ea4276-0906-49bc-8628-2af2fe475f7a",
        "cursor": {
          "ref": "8f37cacd-9306-48f3-8607-5927a1eafb85",
          "length": 252,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c95a48a4-e5f9-48be-94fc-7d9822f371f0"
        },
        "item": {
          "id": "48ea4276-0906-49bc-8628-2af2fe475f7a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8fd06dde-0fa8-4117-987d-200332072619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d634051-5dd9-4fa4-a170-c7e913b7af74",
        "cursor": {
          "ref": "0695b7f2-f5af-4b54-81fc-8ffceed1df97",
          "length": 252,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "644ea211-c854-4e7c-be08-264102cbb932"
        },
        "item": {
          "id": "9d634051-5dd9-4fa4-a170-c7e913b7af74",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "25de6760-bfcc-43d2-af58-287a4357a8a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492ac765-d842-4679-a39e-fdc1a5b6b9fb",
        "cursor": {
          "ref": "874d5970-84ef-4fdd-9484-eb8d3279bedc",
          "length": 252,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "3575e7c4-0e68-4c6f-a44b-ddf16c12bc8e"
        },
        "item": {
          "id": "492ac765-d842-4679-a39e-fdc1a5b6b9fb",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "845bca9d-8174-4323-87f3-eccdb92699be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf15556-4ef4-469f-8f94-299d6aa81c35",
        "cursor": {
          "ref": "abb07def-7b7b-45aa-a6d9-23fdd963b8a3",
          "length": 252,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "403aa3a2-56e8-46bb-a105-54925a9c92fa"
        },
        "item": {
          "id": "3bf15556-4ef4-469f-8f94-299d6aa81c35",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1c248eb5-dfac-40ae-b547-78a156a05dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f829320-368b-426a-a30b-ae68df380603",
        "cursor": {
          "ref": "ae7ef9e5-c520-4ede-81fa-e44dff92abd3",
          "length": 252,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "65688187-c01b-48cd-b410-af9a509c5cad"
        },
        "item": {
          "id": "9f829320-368b-426a-a30b-ae68df380603",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "22ceb16c-d4b8-4a11-a306-6e4ce08cb591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "231cd596-25d9-4813-97e7-322d69226ce5",
        "cursor": {
          "ref": "065ae01d-3dda-452b-b122-ce7b6f56ec4b",
          "length": 252,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "1e0c8dfb-6e08-47df-a80f-502bdc3bc71e"
        },
        "item": {
          "id": "231cd596-25d9-4813-97e7-322d69226ce5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "25ca4d24-2196-45eb-8397-b35a6dfc3a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d096304-567b-4b93-8445-ce09cbe711ba",
        "cursor": {
          "ref": "cbbdfaac-236b-4b38-969b-9eb91c815f35",
          "length": 252,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c7abd9ee-8a6c-4c4f-8d2d-ffb79ae8697b"
        },
        "item": {
          "id": "7d096304-567b-4b93-8445-ce09cbe711ba",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e4d06817-c7b4-4399-a5e6-970d327712e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afaf2a3c-275e-41d1-8c64-b91b473ad29d",
        "cursor": {
          "ref": "71421ba7-049f-4cca-8198-eb699ed8114c",
          "length": 252,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "76844925-4cf8-4015-ad2b-28ee93aa7ed7"
        },
        "item": {
          "id": "afaf2a3c-275e-41d1-8c64-b91b473ad29d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ab9ea0dd-8dc7-4564-94ff-f3cf715e90ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13397951-ea2a-4efb-bcbf-a8ea08f5ce89",
        "cursor": {
          "ref": "4ee7bf6e-8499-48ba-9acc-5892ab8b9b98",
          "length": 252,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "e8ff7448-b470-4e41-9a1d-41bf64eb2658"
        },
        "item": {
          "id": "13397951-ea2a-4efb-bcbf-a8ea08f5ce89",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8fa6d6b7-0d64-4391-a555-14e948b027ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a197dd97-eb50-4219-b131-46025a5554b9",
        "cursor": {
          "ref": "070d8a82-d664-4279-9022-18d221ec111d",
          "length": 252,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "3ab83ed7-bfe4-40b8-8cf6-a28efe2547bb"
        },
        "item": {
          "id": "a197dd97-eb50-4219-b131-46025a5554b9",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "7369700a-305d-46d6-9277-5f4fa61d8712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ddea910-4d13-4968-93ee-cbb3e25813a4",
        "cursor": {
          "ref": "7e767ee7-8c55-4493-a7b6-a794c18f38e1",
          "length": 252,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5ebb7d97-11e4-46b9-a363-d9ea8f22ad1a"
        },
        "item": {
          "id": "3ddea910-4d13-4968-93ee-cbb3e25813a4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "32fee918-7fe4-42cc-b2d5-f8f17d7615cf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08543a49-c139-4e1e-ba24-537f5aaff0fe",
        "cursor": {
          "ref": "4f86091c-1fbe-4fc7-bdbf-b3fc1163a2d7",
          "length": 252,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "469c3d10-573b-43fb-9a06-3192a739848b"
        },
        "item": {
          "id": "08543a49-c139-4e1e-ba24-537f5aaff0fe",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "dd10506e-8733-446c-b725-e6bf5a1cc2e0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 532,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18f80476-1d12-46ae-b678-7c5f12c494ad",
        "cursor": {
          "ref": "dd40499f-47c2-42c5-a58d-4d01f582a179",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "73644beb-c8e5-47fc-81f5-d7f7a7d59cd0"
        },
        "item": {
          "id": "18f80476-1d12-46ae-b678-7c5f12c494ad",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8838cdde-871e-40ba-9629-361665344341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18f80476-1d12-46ae-b678-7c5f12c494ad",
        "cursor": {
          "ref": "dd40499f-47c2-42c5-a58d-4d01f582a179",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "73644beb-c8e5-47fc-81f5-d7f7a7d59cd0"
        },
        "item": {
          "id": "18f80476-1d12-46ae-b678-7c5f12c494ad",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8838cdde-871e-40ba-9629-361665344341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c65b945-8620-4455-8033-ab1f81377267",
        "cursor": {
          "ref": "7de8d3c0-69e0-4c88-ab95-6a37c6b571c8",
          "length": 252,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "40c38a1a-2206-4259-a141-270cdc06e221"
        },
        "item": {
          "id": "3c65b945-8620-4455-8033-ab1f81377267",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "706ce280-5759-41c8-bb01-c3ab01410f41",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 325,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "73750448-b76a-4881-91cb-3411f7cec038",
        "cursor": {
          "ref": "210aad20-85e2-404e-8cb4-017bf6bb6bda",
          "length": 252,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b1cea3ef-8f0f-4687-890b-f38423651e51"
        },
        "item": {
          "id": "73750448-b76a-4881-91cb-3411f7cec038",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "250fd21e-9fe6-4a09-999a-e7f3376e3b07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5960776a-610b-4348-9c94-fd4cb0cd2a75",
        "cursor": {
          "ref": "643990cd-cf5b-4f91-8303-83bec3d30b31",
          "length": 252,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "03293c11-eac6-4719-818c-092c1394d6f1"
        },
        "item": {
          "id": "5960776a-610b-4348-9c94-fd4cb0cd2a75",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "445952d1-c73d-4cc8-a49f-c48529fd2413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f30837-6af8-4862-8c8c-875f182d021e",
        "cursor": {
          "ref": "7257be8a-f47b-4fef-a098-1bb77fa0cded",
          "length": 252,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "7a258562-5d35-4f6d-8a2c-0d189422e13f"
        },
        "item": {
          "id": "69f30837-6af8-4862-8c8c-875f182d021e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "1cea91d6-689e-440e-b786-fe99f91027c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55583bb-364f-4069-9630-d3fbc518f580",
        "cursor": {
          "ref": "9774f28f-630d-490d-89b5-2965352abe0d",
          "length": 252,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "af1799c0-4d1f-4c23-9022-c21cce659c28"
        },
        "item": {
          "id": "c55583bb-364f-4069-9630-d3fbc518f580",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "82f1837b-2f74-4f30-9c48-15e105d9b084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c1e6d0d-a1c7-4a2c-a1b2-2fe08e25b98a",
        "cursor": {
          "ref": "14c0132c-02a1-4b91-8346-9f14af0af403",
          "length": 252,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6a34275c-3ad1-42ec-9904-005bef8ed9bc"
        },
        "item": {
          "id": "9c1e6d0d-a1c7-4a2c-a1b2-2fe08e25b98a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "81bc582a-bc6e-4dc6-941b-7adb81dddb23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf0405b-3a9b-45f2-bebd-a79549b60a9b",
        "cursor": {
          "ref": "0ab1c52e-076d-43e7-adaf-be2b0ee7e9fb",
          "length": 252,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ab85905f-4708-4d9c-8ca3-44f0e1ec60da"
        },
        "item": {
          "id": "2bf0405b-3a9b-45f2-bebd-a79549b60a9b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b1b5ce08-5b72-48ce-8d77-a5fb16a0675c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c08e00-12c7-4827-b823-c4778b467b57",
        "cursor": {
          "ref": "2a6ec570-ad57-4515-aaad-6080d426b497",
          "length": 252,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "47e558fa-c340-49c3-9634-c24075cd6745"
        },
        "item": {
          "id": "48c08e00-12c7-4827-b823-c4778b467b57",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c5667787-8427-4300-a8a8-684b2ed5ece5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c42814b-8b97-4518-a6f2-b6e114e277e5",
        "cursor": {
          "ref": "146ebbfa-3a8d-43d6-97f4-77a6c750a3e9",
          "length": 252,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "037d9175-83a5-45d3-90ad-cb2c7977a413"
        },
        "item": {
          "id": "6c42814b-8b97-4518-a6f2-b6e114e277e5",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "3fab5ca0-fa33-4cef-b074-87e63054cc43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c04efbbf-a4ff-4a93-8126-5670e6e2044f",
        "cursor": {
          "ref": "154acb7c-8d82-4e11-a9b8-0811461d2369",
          "length": 252,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "088a88b2-56fc-470d-8840-dcc15fe27f68"
        },
        "item": {
          "id": "c04efbbf-a4ff-4a93-8126-5670e6e2044f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b127ca67-34d2-4055-b744-78558a58a98c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1450
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec76d4c-ae26-4b9b-8b5f-bbcbb2a8e7ae",
        "cursor": {
          "ref": "03743616-af31-4f8f-92aa-094f0fa83bb5",
          "length": 252,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "7ba48d34-50d0-42df-bdac-64ceba809deb"
        },
        "item": {
          "id": "eec76d4c-ae26-4b9b-8b5f-bbcbb2a8e7ae",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "56daecd9-6145-4c88-828c-0be1cb5261a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d3be3cf-3341-4ddc-80d4-4dca9f3a24e9",
        "cursor": {
          "ref": "8e53288b-dc51-42e2-a9ed-780403d1518d",
          "length": 252,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "fe9c5dd9-5bf5-4f71-96d8-34f8f7a84975"
        },
        "item": {
          "id": "3d3be3cf-3341-4ddc-80d4-4dca9f3a24e9",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "2bd835ac-da12-4b4e-a99d-fd52edf33508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39912d93-63ef-4e36-ba20-6111194fbf11",
        "cursor": {
          "ref": "607a4975-c0a6-4c49-8d6d-b84a1f92c6d4",
          "length": 252,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "71966a23-c1e8-4a30-8a84-56c772626600"
        },
        "item": {
          "id": "39912d93-63ef-4e36-ba20-6111194fbf11",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "53147c42-6e73-49ab-b5e1-2c3fc427ff4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6720dd4-dc4d-4197-a9da-ab4929691794",
        "cursor": {
          "ref": "0a02716a-89b5-471d-9dc0-6026be9c8329",
          "length": 252,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "7b15032d-f5c5-40ef-b3a1-b25011832b9e"
        },
        "item": {
          "id": "d6720dd4-dc4d-4197-a9da-ab4929691794",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "8980f767-b752-4fa7-897e-724ad3bf1298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d4006e-04da-4269-a262-cb28e23f580e",
        "cursor": {
          "ref": "2ad3d855-e1f5-4bae-ac06-dc1b58541d3c",
          "length": 252,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2369b0d6-9275-4d2d-a330-7aecd6bd03d3"
        },
        "item": {
          "id": "10d4006e-04da-4269-a262-cb28e23f580e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "15f0eadd-2df9-49ee-9edc-0bf7b92356b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d41d48c1-07a6-4a70-9333-9fd2af00454b",
        "cursor": {
          "ref": "852d22e7-fd39-4b5b-9482-0395944c9bdc",
          "length": 252,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "9153d9dd-4623-489a-8f7a-94239145fd42"
        },
        "item": {
          "id": "d41d48c1-07a6-4a70-9333-9fd2af00454b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d7428c32-1669-4f09-a8b0-a78e057c5102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca813581-861e-44cf-aa45-798753490f58",
        "cursor": {
          "ref": "babe29d2-e76c-428f-be96-1871b6bcb912",
          "length": 252,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6743dd86-30de-4958-aa0b-b52bfd317d2f"
        },
        "item": {
          "id": "ca813581-861e-44cf-aa45-798753490f58",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "43b63695-5edd-4d42-9e58-72d977123db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2147c16-a7a3-4f84-84f1-0371b8be36f7",
        "cursor": {
          "ref": "d97e8ef3-e1a8-4ac7-bbf7-ef65268c284e",
          "length": 252,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "6ef98559-62be-474c-b00e-fa45ef4c427a"
        },
        "item": {
          "id": "e2147c16-a7a3-4f84-84f1-0371b8be36f7",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c691c30e-0d04-4873-a51f-2c83d9e35b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1250
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd76f33-f1d3-4ce1-acfb-17750d647dfc",
        "cursor": {
          "ref": "1b7185a0-87c1-4a18-acbf-55c44753be7e",
          "length": 252,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c11977f9-f768-42e8-8ed2-83d00dbfa778"
        },
        "item": {
          "id": "3dd76f33-f1d3-4ce1-acfb-17750d647dfc",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "11efa42c-9417-4086-a3e1-fe9d1731eda2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6272ed0b-bd59-4211-9d7e-c520c0b60fc5",
        "cursor": {
          "ref": "ee8b4e4a-2980-4adc-9357-a7063839f6b2",
          "length": 252,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "612857a2-fdb0-4021-820b-2aecdcd5291c"
        },
        "item": {
          "id": "6272ed0b-bd59-4211-9d7e-c520c0b60fc5",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d78405f7-3f00-4aca-a778-cb58f585f394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1249
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f878909-7c24-4dfc-bb60-bf2f4b30cf21",
        "cursor": {
          "ref": "acc6b95c-df33-49ec-a84e-fe735697d659",
          "length": 252,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "0926dd81-b214-4f2d-b820-9cd78d038f54"
        },
        "item": {
          "id": "8f878909-7c24-4dfc-bb60-bf2f4b30cf21",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ea798593-9976-4e9d-8b75-f629dcc910c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cc80920-a72e-44de-a9c9-0678398ac811",
        "cursor": {
          "ref": "ea33f823-de32-4c34-89f8-4e019d22003b",
          "length": 252,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a14adb92-129b-42d2-87aa-03cfcc4c55c1"
        },
        "item": {
          "id": "3cc80920-a72e-44de-a9c9-0678398ac811",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "963eb433-f672-43f7-9451-17da380c3139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f4985a1-de62-4a6c-a08e-d9a0ec782f5a",
        "cursor": {
          "ref": "40eb0cfd-b2a8-42f8-926b-286c8e0b45e3",
          "length": 252,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "5fd358d0-9607-4683-8993-6cca75248c9a"
        },
        "item": {
          "id": "6f4985a1-de62-4a6c-a08e-d9a0ec782f5a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "bdfd49e6-0183-458a-8c54-45cad2974207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b61b27-3c92-4c81-aabc-3062b26c5ffe",
        "cursor": {
          "ref": "fbe01818-7404-455b-a082-e4124b6af8f2",
          "length": 252,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "092f3b31-af2a-463c-9d79-831d837bb00f"
        },
        "item": {
          "id": "f8b61b27-3c92-4c81-aabc-3062b26c5ffe",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "31fb181d-b63f-4ca2-834f-37084336ede0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc15ae1-5bda-47c6-8905-58a453364825",
        "cursor": {
          "ref": "340a77f7-cc70-4648-bdfd-4fa92f5ed918",
          "length": 252,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "23d016c1-f695-492e-b653-a71497a59936"
        },
        "item": {
          "id": "efc15ae1-5bda-47c6-8905-58a453364825",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4176d987-4d4d-4aa2-b6d0-dca5e70e2fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1756532-bb34-41d7-9d2a-083d405617b5",
        "cursor": {
          "ref": "f3db9a0b-7333-4c81-a3af-89c7efc2fc4b",
          "length": 252,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "76c84b67-99e6-452d-bfa9-7349438c9bec"
        },
        "item": {
          "id": "a1756532-bb34-41d7-9d2a-083d405617b5",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "41eaeaaa-fb44-4dd7-9694-49e9e74f4624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0234fa4-b5d5-4fd9-95e3-35adf70aa8e3",
        "cursor": {
          "ref": "40d27b1c-644d-4911-b647-cda7ec4db767",
          "length": 252,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "21b6c7ab-7757-4f94-82cb-91edbf51776a"
        },
        "item": {
          "id": "a0234fa4-b5d5-4fd9-95e3-35adf70aa8e3",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "39d65096-8770-4244-9fcb-806fc6eabe90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1239
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a828a2ee-5e09-4ad8-86a3-3236b7b383a3",
        "cursor": {
          "ref": "a7c2bba9-1e92-4b61-92ed-28ce5b05dd21",
          "length": 252,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "298e58dd-872e-476a-a550-a9f462d1a6a9"
        },
        "item": {
          "id": "a828a2ee-5e09-4ad8-86a3-3236b7b383a3",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d0035fe3-b0cc-4929-b69c-22e9d25647a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2cb8af3-8b41-4461-b2ce-8192050588fe",
        "cursor": {
          "ref": "54aa171c-553a-400a-83eb-ecb02109fd15",
          "length": 252,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "2b0ba66a-dea0-4a58-8a8b-276eb8e1fa6f"
        },
        "item": {
          "id": "e2cb8af3-8b41-4461-b2ce-8192050588fe",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "b273a6d1-97c4-44d5-9578-d7eaaf30c00d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea16a4dd-8f9d-4ba5-bc70-8ef2ca8fdd93",
        "cursor": {
          "ref": "59c5b4dd-8f3f-43f4-8d89-60b482d6fc47",
          "length": 252,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "03da9630-9d01-4b6f-b370-902ecc1a5d09"
        },
        "item": {
          "id": "ea16a4dd-8f9d-4ba5-bc70-8ef2ca8fdd93",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "8b1ade05-0dfd-4398-b873-f3549907c091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec83f3f-fbc7-4d4c-921e-990f90699687",
        "cursor": {
          "ref": "196a306f-87c4-4c57-8c84-60393ce1249d",
          "length": 252,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "0fe3f79a-942d-4713-9ad0-fc83989a9673"
        },
        "item": {
          "id": "fec83f3f-fbc7-4d4c-921e-990f90699687",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f8334d9a-4374-4da4-936f-bc8ae450e328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1255
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98eded97-5f43-4703-905d-29bfbd45a983",
        "cursor": {
          "ref": "f415c028-453f-4d57-a988-74b89867489a",
          "length": 252,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "738b3f98-1196-4f04-ae88-3bcfff60ecb7"
        },
        "item": {
          "id": "98eded97-5f43-4703-905d-29bfbd45a983",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "625ccc4a-eb4a-4473-bcd8-04836e4f378c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8537a16f-2e7d-4e73-91d0-d86e7ee22418",
        "cursor": {
          "ref": "2fd40c7a-0c16-4ee8-abbf-6c320f2cf0b3",
          "length": 252,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "119f21f0-4103-4fdf-bfde-99f1dbfa7c5e"
        },
        "item": {
          "id": "8537a16f-2e7d-4e73-91d0-d86e7ee22418",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "31f0a15e-4e67-40dd-9f3a-4584edd13fe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1282
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc3b4242-47cb-4001-9daf-53495a3c72f6",
        "cursor": {
          "ref": "564f846e-d509-4285-8d13-4722c87a6648",
          "length": 252,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "19e4796f-3e97-4d92-9411-21a3d63903b9"
        },
        "item": {
          "id": "cc3b4242-47cb-4001-9daf-53495a3c72f6",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f7c6f4e3-1d46-4369-a70a-af6e5dea8c98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "079ab41c-750c-4797-9fee-9913d629fd8b",
        "cursor": {
          "ref": "7c621ed8-3c1b-458d-a325-25f107146454",
          "length": 252,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "849e1f27-9d03-4ad2-a31c-2f191fbf8ad5"
        },
        "item": {
          "id": "079ab41c-750c-4797-9fee-9913d629fd8b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "7e124f96-dc56-47de-9a85-831e13c1c71b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1668
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de68b835-1918-43a3-9eca-ecf86f970e00",
        "cursor": {
          "ref": "bee5c32b-9998-479c-911d-5a6b06f8dfd4",
          "length": 252,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "abe2990e-fbd9-4c8f-8024-64e5c58ea0ee"
        },
        "item": {
          "id": "de68b835-1918-43a3-9eca-ecf86f970e00",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ae9aa8b8-dd28-48fc-8106-7d0859b65fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1654
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "695ad463-c55d-40a9-97e3-5b3e4c431743",
        "cursor": {
          "ref": "cee396aa-8dce-4ab8-9b7a-91a29bc74d60",
          "length": 252,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "9770976d-0deb-4506-b83e-047532397bcd"
        },
        "item": {
          "id": "695ad463-c55d-40a9-97e3-5b3e4c431743",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "735dbfe3-f871-4205-bfd4-248d7b7f78a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e95175-95f5-44b2-8dd3-46faa603bc44",
        "cursor": {
          "ref": "0f445c0b-224f-4cdc-bf02-207ae4747b07",
          "length": 252,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d0db53c3-fab0-47d6-8fa2-ee873c899d8b"
        },
        "item": {
          "id": "47e95175-95f5-44b2-8dd3-46faa603bc44",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "27dd5489-928c-4b71-a61b-c006325bf332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "561b680a-dab1-42a7-8b1d-3487dcd2b8a2",
        "cursor": {
          "ref": "1269aca3-e974-41bb-8b89-befedc2398ce",
          "length": 252,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d400cf58-21df-447d-9906-a37142cd327c"
        },
        "item": {
          "id": "561b680a-dab1-42a7-8b1d-3487dcd2b8a2",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1e447b25-9d3d-419e-8490-1b1f4a8c77f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5310caf-a8c3-42e3-a10f-d5ac9bb4027c",
        "cursor": {
          "ref": "87e41b93-d8b8-4cce-96e2-9c88f0b0414b",
          "length": 252,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "35a3a8bb-2b6b-4301-9bdf-42d223659911"
        },
        "item": {
          "id": "e5310caf-a8c3-42e3-a10f-d5ac9bb4027c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "19ced44d-c539-47ca-8571-89f85f3eff0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 2027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df6a4f7-9947-4628-bc0b-d6d059d64472",
        "cursor": {
          "ref": "53f4f0b0-0fc5-4e5a-b64d-4fe8662a9659",
          "length": 252,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "73d9ecd6-3adc-4fac-8011-201eac2fe747"
        },
        "item": {
          "id": "5df6a4f7-9947-4628-bc0b-d6d059d64472",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "129c4905-849f-4e9e-af7b-6a1a6aa9a077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 2013
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a4717c-81d8-46df-a38f-fd828a272634",
        "cursor": {
          "ref": "221fa22e-09bb-4f71-aa4d-d4f23e756fa1",
          "length": 252,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "0cfaec52-f277-438b-8ab1-2b748ad7020e"
        },
        "item": {
          "id": "c5a4717c-81d8-46df-a38f-fd828a272634",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "9362e3d0-d962-4318-a02f-f1eb7c5b231d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 2011
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb4ea59-89c5-45b6-9b90-467330c75970",
        "cursor": {
          "ref": "60275543-e673-4dd4-b95b-0b8789a6fbd5",
          "length": 252,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "6bbb6551-0363-4830-8b4b-0f24a6730c51"
        },
        "item": {
          "id": "fdb4ea59-89c5-45b6-9b90-467330c75970",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "26256ac6-c95b-4ce3-82ee-f507ae3f474e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 2012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "094b3dfc-8a2c-4a7f-92c6-e51bf4ad0330",
        "cursor": {
          "ref": "ce7458e7-7a61-49a8-bcc7-0672294da04b",
          "length": 252,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "15e2931a-708d-446f-a462-11221e083f35"
        },
        "item": {
          "id": "094b3dfc-8a2c-4a7f-92c6-e51bf4ad0330",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "bbaa77a4-4b56-4b71-8248-4a96558b827f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 2033
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c924ec7b-6f77-4245-829c-6eac20f27900",
        "cursor": {
          "ref": "e29096f0-7522-4014-bc27-bbe13542a74e",
          "length": 252,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7f4c66ea-4874-4beb-869c-5751fd82a5c9"
        },
        "item": {
          "id": "c924ec7b-6f77-4245-829c-6eac20f27900",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a6001079-190f-4892-862b-5885a09190bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 1237
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f22a6c0-4eb9-45c2-b230-ff4f41419809",
        "cursor": {
          "ref": "1f1863c7-6669-4539-b5c6-7e97683f340d",
          "length": 252,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "7841d45f-bd08-4364-ae12-ce25ba9c34e7"
        },
        "item": {
          "id": "4f22a6c0-4eb9-45c2-b230-ff4f41419809",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "228f0376-16f2-495f-a468-312deea9487f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 1261
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7828e2a6-c248-426f-b0f2-e9411f333c16",
        "cursor": {
          "ref": "7737ab34-50c5-4f8d-bb95-51724ce4daf5",
          "length": 252,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "8653a593-6fa8-4eba-9632-d2f1f04bd8ca"
        },
        "item": {
          "id": "7828e2a6-c248-426f-b0f2-e9411f333c16",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "bc70719b-b91d-4063-9304-8a620a91f382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1242
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab1d91f4-0048-49f8-a80e-92d4c1c6008d",
        "cursor": {
          "ref": "2689ad99-d7a2-43ea-b5e6-e16fdc3924a1",
          "length": 252,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "054fb50d-5579-45a2-bd26-eff8ca606034"
        },
        "item": {
          "id": "ab1d91f4-0048-49f8-a80e-92d4c1c6008d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "d6d16a15-09a5-422e-adb9-a16e63dc6488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6dcb01-bf5a-4014-938f-367325be5d4b",
        "cursor": {
          "ref": "fc4dad62-82ce-434e-ad2a-f725bb28d7c7",
          "length": 252,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f58e887b-5965-4b99-ba4b-607abcce9d99"
        },
        "item": {
          "id": "fa6dcb01-bf5a-4014-938f-367325be5d4b",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d77787dd-8f96-43b8-a363-9807417d8417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521bc965-5f98-46d8-a621-aee192b3cdcb",
        "cursor": {
          "ref": "87f52894-a7a1-499b-8bac-3d60ec30925b",
          "length": 252,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "fb2a8e7e-a78d-4272-b8ac-2f31b63d030a"
        },
        "item": {
          "id": "521bc965-5f98-46d8-a621-aee192b3cdcb",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "00a1b62c-88f2-43f0-99d4-4fcc6228d16f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "733c5942-517e-4cd4-abed-38465f1d0aba",
        "cursor": {
          "ref": "31aae96a-4725-4188-b08a-fad4d3ac53bd",
          "length": 252,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8036a425-2a6e-408c-abdb-8bb05f7eed9e"
        },
        "item": {
          "id": "733c5942-517e-4cd4-abed-38465f1d0aba",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "9c072129-fe87-478d-9c39-2fbb6e954fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e2ec17-155b-480f-9eef-2312ba1b72ee",
        "cursor": {
          "ref": "d7e9a861-fe7e-49ed-8104-a025b1b25be6",
          "length": 252,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "0869a225-af02-417c-868e-9ad9af100a75"
        },
        "item": {
          "id": "e9e2ec17-155b-480f-9eef-2312ba1b72ee",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b7a4367c-4d29-4f29-8568-402b9905b15c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfcb0eb8-e020-41fd-8e2b-d41289986140",
        "cursor": {
          "ref": "a85967c3-26c3-4b1f-af4e-8a8da7ca058f",
          "length": 252,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "3736b677-2e2e-45d7-85bd-15d59e0a4467"
        },
        "item": {
          "id": "cfcb0eb8-e020-41fd-8e2b-d41289986140",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "185f0812-50ab-4676-ae5a-da8beff9564b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85089179-696c-4bef-b61b-6e3a699f3fad",
        "cursor": {
          "ref": "2cdd107c-f826-415f-bb18-294318f8f721",
          "length": 252,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "8355da55-7188-4666-bc21-c41c0932eb01"
        },
        "item": {
          "id": "85089179-696c-4bef-b61b-6e3a699f3fad",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e310430e-d384-4af4-a180-264647d648fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c0c1a12-4d47-448c-91cd-bf92c4ad9ed2",
        "cursor": {
          "ref": "c1e990a3-7489-4aef-bce2-cd5d247ed29a",
          "length": 252,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "3b052114-7ba2-482e-b570-45238ea3363d"
        },
        "item": {
          "id": "6c0c1a12-4d47-448c-91cd-bf92c4ad9ed2",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "49445a7a-4311-4887-852d-0a09b63dde69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "722d615b-d56b-450a-9f07-6eaea3c3146a",
        "cursor": {
          "ref": "dd4faadf-fe54-49b7-a874-beacd36a60bc",
          "length": 252,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "4f1f673c-1622-494a-9061-f06048293b4d"
        },
        "item": {
          "id": "722d615b-d56b-450a-9f07-6eaea3c3146a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5944ee0f-eef8-4459-8e56-5f7954b832d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c164d4-50d7-4356-8a25-8c8ee586dcb6",
        "cursor": {
          "ref": "11bb604d-8b9d-4a9f-9c9d-443738d268bf",
          "length": 252,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "92bccca5-6e69-48e1-a0b7-c13079b4162a"
        },
        "item": {
          "id": "b9c164d4-50d7-4356-8a25-8c8ee586dcb6",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d029c80b-494f-47ee-88d7-b7689a4366ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a71396a0-31ee-4f00-9020-74d924b92dfa",
        "cursor": {
          "ref": "33b5525b-0111-4e4f-b99b-2b6f09620d5f",
          "length": 252,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "6df97f46-e690-45f0-9af0-03546797ffd9"
        },
        "item": {
          "id": "a71396a0-31ee-4f00-9020-74d924b92dfa",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "7ed5f2bd-90ad-4f71-89b2-f24cb1f7ec4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 2076
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9817b3c9-f982-4530-9bc2-6439adfe52e4",
        "cursor": {
          "ref": "9b47a1e4-d910-4f6c-b6f6-69b1f7a5b9ae",
          "length": 252,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d65e7c9f-358f-4169-b1f7-4bf3097f2e44"
        },
        "item": {
          "id": "9817b3c9-f982-4530-9bc2-6439adfe52e4",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b9c16343-e93c-497f-9788-ce8bb9e2b074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 2062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca8dccb-428d-4168-a461-4b9382a92c3e",
        "cursor": {
          "ref": "16a21e88-24ef-4c97-a785-ec27ab62122f",
          "length": 252,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a4deb856-a924-4b8d-bc50-39d08afcc843"
        },
        "item": {
          "id": "5ca8dccb-428d-4168-a461-4b9382a92c3e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "c030ff28-969f-4074-a7c0-d0191b98f547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 2060
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8bfd37f-c14b-4a6b-ab42-a8c757843018",
        "cursor": {
          "ref": "351ea845-489d-4481-a716-70f9f566726c",
          "length": 252,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b7d4402e-81ae-475b-a2c9-5f29b85b9f3f"
        },
        "item": {
          "id": "e8bfd37f-c14b-4a6b-ab42-a8c757843018",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "db18d80a-cd83-4993-8efc-b205b9c73916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 2061
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76d2ab8b-3a18-41da-888d-fecb3d07a2a3",
        "cursor": {
          "ref": "1f983ee8-9a1b-4f28-aa5f-128ff3d20cd5",
          "length": 252,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "9afb6bdd-c6e1-41d1-bdd8-2027c9266355"
        },
        "item": {
          "id": "76d2ab8b-3a18-41da-888d-fecb3d07a2a3",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "81e3ea07-635e-4a28-976b-fde1999e6018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 2082
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d068beb-908c-4ca6-8655-24ea798d0d03",
        "cursor": {
          "ref": "90489c21-aef1-4fe8-b0ad-88bd21c12109",
          "length": 252,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "116c1fb6-25fa-4ac3-8ce6-5c56cf08bba7"
        },
        "item": {
          "id": "1d068beb-908c-4ca6-8655-24ea798d0d03",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "0368cd3c-fc85-4ac6-8c66-e66f5897e4fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 851
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a415da16-12f2-42e0-a3ca-22018329a4d3",
        "cursor": {
          "ref": "96397fe0-8bf4-4849-aef3-2252b2888e5d",
          "length": 252,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "35ef4dbb-9b82-4b2f-99ea-c4c256c0453a"
        },
        "item": {
          "id": "a415da16-12f2-42e0-a3ca-22018329a4d3",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "44aee691-bde1-4aa0-858c-b55c156b2352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "830459ea-cd27-460b-b52e-99094a7c6b05",
        "cursor": {
          "ref": "48f32a6d-4652-43eb-a0c8-b0767d3690bb",
          "length": 252,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ce23edca-5115-4e70-ac13-291f933fc083"
        },
        "item": {
          "id": "830459ea-cd27-460b-b52e-99094a7c6b05",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "0976f43a-e3ad-44a8-9e7d-b1d65675781e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8ab83e-91ed-4806-bb36-ad2ee67c975c",
        "cursor": {
          "ref": "af644d10-5158-4334-8f55-9fd3ab2b2511",
          "length": 252,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "52d36916-ed55-455f-ade7-97ac42f4e402"
        },
        "item": {
          "id": "ba8ab83e-91ed-4806-bb36-ad2ee67c975c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "55846523-df53-4ff0-968a-40cb46fd72a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57d9c82a-5722-4982-b34a-1b5d4feaa516",
        "cursor": {
          "ref": "aa8d0738-bf83-440e-abc2-c0a811afdcdd",
          "length": 252,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ec091b05-5069-43c2-8f39-5923abbafc5d"
        },
        "item": {
          "id": "57d9c82a-5722-4982-b34a-1b5d4feaa516",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "33502754-c47e-42de-923d-ea109939aff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8d46ae-a5b3-4d30-ae86-6c26aee62d0b",
        "cursor": {
          "ref": "ef79f0cf-19ee-49fe-a192-9b0c8f827594",
          "length": 252,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "eaf6f9fb-5a91-40a4-b396-6e2f6c0d98a0"
        },
        "item": {
          "id": "5b8d46ae-a5b3-4d30-ae86-6c26aee62d0b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2d11feeb-1985-4049-8c04-05f62882ad16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 868
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07219488-36a4-4555-8346-0d1599de2b56",
        "cursor": {
          "ref": "5ad7bd80-6057-4e9d-bb49-e7c56cfe0d8f",
          "length": 252,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e33ca251-72de-4e50-a1d1-19b5e5830f61"
        },
        "item": {
          "id": "07219488-36a4-4555-8346-0d1599de2b56",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "61da0f36-bafb-468e-a649-bca5d765688b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4f7624-67e6-43d8-8adb-985e6cce6c17",
        "cursor": {
          "ref": "f83213de-2430-41ef-bf6f-942543efe951",
          "length": 252,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "0b6400e8-9b1d-4642-848d-f6db919f84a8"
        },
        "item": {
          "id": "cd4f7624-67e6-43d8-8adb-985e6cce6c17",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "0b960615-44e6-4fed-be75-7ffd621566c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b808b625-ef30-4c68-8192-25d65e31768e",
        "cursor": {
          "ref": "338e6273-0b9e-4ba8-89da-b61a9bdeba88",
          "length": 252,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "823dbe44-9107-4d41-a763-ddcb6743ed5f"
        },
        "item": {
          "id": "b808b625-ef30-4c68-8192-25d65e31768e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "f39a8dcf-7a12-412e-b751-7f270c41359e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db576e8-6fff-4e5e-baa1-5847fcd33d65",
        "cursor": {
          "ref": "ff8a142d-7ed3-441e-8a1b-0591a5e5beff",
          "length": 252,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "306c474f-4209-4b91-99ec-9c2b214c292a"
        },
        "item": {
          "id": "0db576e8-6fff-4e5e-baa1-5847fcd33d65",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "882ba20e-add6-4e26-a211-b89a0fc21c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "218c7471-8dfb-4ffc-914a-7699bfd19a3d",
        "cursor": {
          "ref": "6b6903e3-b83c-4221-acc4-1ec1bf3adb49",
          "length": 252,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ed64ceae-bb83-4be9-957a-bcaccd192c4c"
        },
        "item": {
          "id": "218c7471-8dfb-4ffc-914a-7699bfd19a3d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "6fc0780e-52a1-45cb-85c7-42320877147a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d124be7d-a685-4b82-8cba-501e934ae743",
        "cursor": {
          "ref": "b9a0c3bf-ef49-437a-ab91-2f237c922f04",
          "length": 252,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "0c7353c3-f376-4c15-99d4-a121fdc91b49"
        },
        "item": {
          "id": "d124be7d-a685-4b82-8cba-501e934ae743",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "cfffde66-87d7-4552-a565-e1773688742d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "054434c2-aa17-4690-b668-befc27588b57",
        "cursor": {
          "ref": "11f12439-b80f-4b43-a6f9-9222d214e583",
          "length": 252,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "0c992cb7-8151-4b57-acc5-e339ea9a1853"
        },
        "item": {
          "id": "054434c2-aa17-4690-b668-befc27588b57",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "64defaae-7036-4280-8838-d36ab91e4c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1246
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aafe3eca-3616-40cc-900c-881bd9656272",
        "cursor": {
          "ref": "0f62e0ee-ad9e-4ea9-9e83-a452a53320bc",
          "length": 252,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "93117367-3af5-4f7d-b54c-354f21c23b10"
        },
        "item": {
          "id": "aafe3eca-3616-40cc-900c-881bd9656272",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "2d4a696d-0410-4013-abc6-0c9535b7db6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0802adb-38e3-42bf-b7e2-28fee7e2fe8c",
        "cursor": {
          "ref": "30c52244-cc4d-4af9-9cf1-e57d2c5f80ac",
          "length": 252,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d2373aad-2e04-407b-81e1-dfde04ce786d"
        },
        "item": {
          "id": "f0802adb-38e3-42bf-b7e2-28fee7e2fe8c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "ef5214f5-c061-4215-93d1-b9f30a2f4fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c17ced-4a2e-4844-b511-501591cd313c",
        "cursor": {
          "ref": "194c0ae5-2476-46f5-9b70-bceed2797f2e",
          "length": 252,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "9792b69a-7fd8-4b8d-806a-cfc50cf45a6e"
        },
        "item": {
          "id": "83c17ced-4a2e-4844-b511-501591cd313c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "3706465b-34d9-4d18-ba7e-c5fdf8bd915b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b7dc98-cb0d-4a2f-8c2f-b8438df6692c",
        "cursor": {
          "ref": "6d09b39e-279c-4cd4-bacd-2db3ac96ddcb",
          "length": 252,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "5de71183-1e83-4565-a3cb-abf77d6d9abf"
        },
        "item": {
          "id": "10b7dc98-cb0d-4a2f-8c2f-b8438df6692c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "f4029430-264a-4d17-aa22-20b8658fdffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc6eace2-6839-43b7-a77a-c9e55d7fc54c",
        "cursor": {
          "ref": "c6ddbaf5-0673-4dad-aa50-ec0696fe01d7",
          "length": 252,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "f3f79d4e-247b-4c99-9d8f-6e7bc71f6d02"
        },
        "item": {
          "id": "fc6eace2-6839-43b7-a77a-c9e55d7fc54c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "3fc7d794-acbd-4f35-9113-138e728e05ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ce49a4-9e86-47a0-8042-1d28d066b19a",
        "cursor": {
          "ref": "d0263952-88c8-40af-aee1-b3ceaebd7728",
          "length": 252,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "8e3a4456-99e3-441d-9315-13d1a15d04e0"
        },
        "item": {
          "id": "69ce49a4-9e86-47a0-8042-1d28d066b19a",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0419675b-d693-4857-a901-c0d4acfc3386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c97b0bb7-86f4-42ea-b4cc-f61ed68b21eb",
        "cursor": {
          "ref": "0b34bcd6-332a-4ee8-904c-ea7a672faf3d",
          "length": 252,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f2a694ff-6581-4757-93c8-80f5f40da64f"
        },
        "item": {
          "id": "c97b0bb7-86f4-42ea-b4cc-f61ed68b21eb",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "605b1589-481c-4cf1-ad2b-7d1cc14a2ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37bb21e4-550c-402b-bc7d-0b6e0a0c1465",
        "cursor": {
          "ref": "33bf241b-41d3-4d7e-a75b-9476893fe166",
          "length": 252,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "afb478d6-941a-48ce-9820-c323d336b841"
        },
        "item": {
          "id": "37bb21e4-550c-402b-bc7d-0b6e0a0c1465",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "275a9d8b-60fd-4168-93a3-f3469a2086a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b726a04d-ecc1-42b2-9fff-2c50f037f7bd",
        "cursor": {
          "ref": "93c71744-36f4-48ec-b738-32aed7105ad5",
          "length": 252,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "3772e2cf-d4d8-463f-8a53-030046d77b3a"
        },
        "item": {
          "id": "b726a04d-ecc1-42b2-9fff-2c50f037f7bd",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "aa8ad53d-6e23-47f2-8ab8-7207b80af659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c35e2f0-9f49-43af-aa3c-4d32bf5fc49a",
        "cursor": {
          "ref": "ec439d82-224f-4280-8c37-e9c348c89eb7",
          "length": 252,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "093aa757-56a0-4f1a-9fd1-e43fda625073"
        },
        "item": {
          "id": "5c35e2f0-9f49-43af-aa3c-4d32bf5fc49a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "851290ce-e89f-4b3d-9cfb-51e69367e6a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1206
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a33f81-09e1-49d3-912f-f4214b3fcf5c",
        "cursor": {
          "ref": "e909a31b-30f2-4355-b3b1-785f69ae57b5",
          "length": 252,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "982f2082-b2d5-4161-ad52-4809f2f9037e"
        },
        "item": {
          "id": "27a33f81-09e1-49d3-912f-f4214b3fcf5c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "3fda75d5-73b7-4280-b6f9-14b0620f5d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4405927b-d829-43a6-a8ef-a9f234fea4cb",
        "cursor": {
          "ref": "be28d8ae-03c7-4173-a10a-6703edd12350",
          "length": 252,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f6086acc-3aec-4d76-bb25-8975b82edc65"
        },
        "item": {
          "id": "4405927b-d829-43a6-a8ef-a9f234fea4cb",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d5e92a38-a226-4f28-8554-07b20aa036ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3499f183-4bd6-4f47-a190-b416f7f27e26",
        "cursor": {
          "ref": "69f62a42-4687-4fbd-af9a-053a3502785a",
          "length": 252,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e9f38dd1-509e-444d-bba6-b491f5c88c4b"
        },
        "item": {
          "id": "3499f183-4bd6-4f47-a190-b416f7f27e26",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d8dd9794-53b4-4da2-b0b4-c099c2feca6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1096
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d541c102-b1aa-452c-b3c4-c56c2c20c512",
        "cursor": {
          "ref": "998cebb5-1d06-4eed-a318-c0b166290ebe",
          "length": 252,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "27819993-b279-4391-acc4-e25bc789dbfb"
        },
        "item": {
          "id": "d541c102-b1aa-452c-b3c4-c56c2c20c512",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "8fda0963-2891-42e5-9b96-6bb9f9020578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a325a292-4a51-47fa-bf70-a76c4dc21212",
        "cursor": {
          "ref": "8f34a912-3088-4b9d-8739-24158d3fec95",
          "length": 252,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b1aede06-d29a-4487-af82-e0634947f039"
        },
        "item": {
          "id": "a325a292-4a51-47fa-bf70-a76c4dc21212",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "3782f3a8-f2d2-4db2-a1d3-6d157c84bc4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca3bd069-7655-4a77-8d1b-3fbe299211b4",
        "cursor": {
          "ref": "6bdcc3a0-5e0b-47d6-9d4d-b892caf5727b",
          "length": 252,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "7984600e-b432-4da3-b76d-1c3731015d3d"
        },
        "item": {
          "id": "ca3bd069-7655-4a77-8d1b-3fbe299211b4",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "778ebcce-0dfc-4e78-ab35-053e80adeee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af88dfcc-edcb-4a16-a471-fd1ae8eadfe9",
        "cursor": {
          "ref": "bae16a77-efa2-481f-853e-48a1cb781bc6",
          "length": 252,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "4454872a-92d2-4ee6-bdde-e0a9d0d5257f"
        },
        "item": {
          "id": "af88dfcc-edcb-4a16-a471-fd1ae8eadfe9",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "37dd02a6-ae15-46c9-ae50-422f3da175fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "445f5cff-275b-4efb-bf6d-d11cad30ce48",
        "cursor": {
          "ref": "f7148027-f2ce-4345-a258-4b853f6146e4",
          "length": 252,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "071d1ea0-ed90-4e28-87da-d8b0ce44e9f2"
        },
        "item": {
          "id": "445f5cff-275b-4efb-bf6d-d11cad30ce48",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "170f0865-c787-418c-bea7-770636e3581f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1225
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e079c0a-20b1-4001-9a08-44d5c89e55cd",
        "cursor": {
          "ref": "1fd5d09f-c25b-4f48-96c6-1b5cc122247f",
          "length": 252,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "78f4173c-6f22-4036-bc14-cb85e6bb2e88"
        },
        "item": {
          "id": "5e079c0a-20b1-4001-9a08-44d5c89e55cd",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "213632f6-babf-4709-8b7c-24ee2593a750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b447680-ba52-4155-83db-389b6dc3a4a4",
        "cursor": {
          "ref": "7b34e269-3908-46ff-b98b-d1bea52c809e",
          "length": 252,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f241bac1-0fe1-45ac-8592-85958246d00f"
        },
        "item": {
          "id": "2b447680-ba52-4155-83db-389b6dc3a4a4",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "7975603d-0c17-4c89-97fb-ae5019ea67f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4895d204-f121-47e4-83c5-136238e24e77",
        "cursor": {
          "ref": "75cc6f04-bc48-4d02-b21e-7714c7ba7e4a",
          "length": 252,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "75d41cb8-a81d-486e-9e8b-c1d5b82b4810"
        },
        "item": {
          "id": "4895d204-f121-47e4-83c5-136238e24e77",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "37dbe245-7e14-4c44-9e20-92a811ceaa67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6125896f-2cd6-47d6-ae68-4a1fb4fa7ceb",
        "cursor": {
          "ref": "bcb2c896-72f5-4860-8dad-194a64c4f658",
          "length": 252,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5fa2e53b-7389-4004-9a25-207400e595d8"
        },
        "item": {
          "id": "6125896f-2cd6-47d6-ae68-4a1fb4fa7ceb",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d533a3d6-46bc-479b-823c-f5cbcaa3ef38",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67305497-faf6-415a-a2c7-6b25e357afae",
        "cursor": {
          "ref": "c33214b3-536c-4406-80c6-c7fe801f004d",
          "length": 252,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "6f67afd4-b764-471d-8cf8-dcd2e3ffb8b0"
        },
        "item": {
          "id": "67305497-faf6-415a-a2c7-6b25e357afae",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "a0aae08f-7d10-44ff-915b-a2e58dafa087",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 312,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b1586c-ebcd-40b3-aef4-01639a359112",
        "cursor": {
          "ref": "f09bbf55-6614-4567-b39f-5df8affae365",
          "length": 252,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "2d51476a-adb0-4294-a754-5c69c2383767"
        },
        "item": {
          "id": "97b1586c-ebcd-40b3-aef4-01639a359112",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "7f2a5b8b-5003-4e76-a010-89936b1dcb4e",
          "status": "OK",
          "code": 200,
          "responseTime": 390,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab4baa07-e774-4d8b-b03e-c40a3d8367b6",
        "cursor": {
          "ref": "57380d06-ce19-4a96-b740-9dacb6070b88",
          "length": 252,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "66b48bcc-e5b9-4cb6-a75b-85c2b94ea905"
        },
        "item": {
          "id": "ab4baa07-e774-4d8b-b03e-c40a3d8367b6",
          "name": "credentials_verify"
        },
        "response": {
          "id": "4103e339-4ba6-47b2-92c5-3f313d92df48",
          "status": "OK",
          "code": 200,
          "responseTime": 373,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c19d039-eb31-4e3a-b17d-4743f7307b61",
        "cursor": {
          "ref": "f6d935ac-00ed-42b1-9259-8105bdf5fe55",
          "length": 252,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "91d54317-e36e-4f7d-9599-35c58a8e3701"
        },
        "item": {
          "id": "0c19d039-eb31-4e3a-b17d-4743f7307b61",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "1dcc9900-820b-42c3-98c1-a05416f88413",
          "status": "OK",
          "code": 200,
          "responseTime": 356,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc13c489-97b9-4a4e-84e9-c3f14a2be8bb",
        "cursor": {
          "ref": "f5fd85de-f2d6-416e-8da3-ddcb69c2b48d",
          "length": 252,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9e6fd3f8-de78-4823-8d64-ed814f084a10"
        },
        "item": {
          "id": "cc13c489-97b9-4a4e-84e9-c3f14a2be8bb",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "fd23aff6-16db-403f-8481-00925d5044b4",
          "status": "OK",
          "code": 200,
          "responseTime": 390,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0147d22-5da1-40bd-9e91-744d3fc95617",
        "cursor": {
          "ref": "57ed8117-1c5f-48aa-a791-5165f84d96b2",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "aa6a44c3-8ce7-491b-8cc1-949ff2c0c119"
        },
        "item": {
          "id": "c0147d22-5da1-40bd-9e91-744d3fc95617",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "efa79ff0-8876-43e1-b62b-94fccd9c9eec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0147d22-5da1-40bd-9e91-744d3fc95617",
        "cursor": {
          "ref": "57ed8117-1c5f-48aa-a791-5165f84d96b2",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "aa6a44c3-8ce7-491b-8cc1-949ff2c0c119"
        },
        "item": {
          "id": "c0147d22-5da1-40bd-9e91-744d3fc95617",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "efa79ff0-8876-43e1-b62b-94fccd9c9eec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0147d22-5da1-40bd-9e91-744d3fc95617",
        "cursor": {
          "ref": "57ed8117-1c5f-48aa-a791-5165f84d96b2",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "aa6a44c3-8ce7-491b-8cc1-949ff2c0c119"
        },
        "item": {
          "id": "c0147d22-5da1-40bd-9e91-744d3fc95617",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "efa79ff0-8876-43e1-b62b-94fccd9c9eec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c131123-d831-4947-9e44-9dd8cf394e7e",
        "cursor": {
          "ref": "de3415a7-ca90-492f-a68f-94046e99c4f2",
          "length": 252,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "509c3f7a-f34c-4091-9bca-0601867c142a"
        },
        "item": {
          "id": "4c131123-d831-4947-9e44-9dd8cf394e7e",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "bd78669c-5ad4-4ea6-bf9b-58cedbea835b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 333,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65925b23-76ae-48dc-a7be-c590af59be5b",
        "cursor": {
          "ref": "51e69924-21b8-4d3f-8ed6-98ab7fa5346d",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f1c9179f-46fb-4387-b947-1098f94bfe08"
        },
        "item": {
          "id": "65925b23-76ae-48dc-a7be-c590af59be5b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "96fb55b5-b2fa-4cc2-84c4-c5298a0fcd8a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65925b23-76ae-48dc-a7be-c590af59be5b",
        "cursor": {
          "ref": "51e69924-21b8-4d3f-8ed6-98ab7fa5346d",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f1c9179f-46fb-4387-b947-1098f94bfe08"
        },
        "item": {
          "id": "65925b23-76ae-48dc-a7be-c590af59be5b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "96fb55b5-b2fa-4cc2-84c4-c5298a0fcd8a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc2e3f8-9301-46aa-bb96-0ea1eb4b057e",
        "cursor": {
          "ref": "0b831b42-e51f-4faf-82b2-2f334d8b2992",
          "length": 252,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5ab57d71-0166-4a7a-98bb-7a3ea4eb7f9d"
        },
        "item": {
          "id": "cbc2e3f8-9301-46aa-bb96-0ea1eb4b057e",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "8fa3efd5-a411-4f7b-bb99-d742adbd7478",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 533,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd69362-fade-4880-a876-bafe289f3e5f",
        "cursor": {
          "ref": "a06a8e77-b183-456b-a31a-c26d6b62eab2",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "8b7066bf-5e96-43b7-99dd-fa8da43c01c3"
        },
        "item": {
          "id": "1dd69362-fade-4880-a876-bafe289f3e5f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "280b212c-fd08-409a-b59d-50a8b8ac6530",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd69362-fade-4880-a876-bafe289f3e5f",
        "cursor": {
          "ref": "a06a8e77-b183-456b-a31a-c26d6b62eab2",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "8b7066bf-5e96-43b7-99dd-fa8da43c01c3"
        },
        "item": {
          "id": "1dd69362-fade-4880-a876-bafe289f3e5f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "280b212c-fd08-409a-b59d-50a8b8ac6530",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1791439-c74f-47f2-a292-f53fcc1bac98",
        "cursor": {
          "ref": "237d3379-1b81-403c-b714-21e54cab1ab7",
          "length": 252,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "378e139e-07e8-410e-a619-434ecd565e19"
        },
        "item": {
          "id": "a1791439-c74f-47f2-a292-f53fcc1bac98",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "27c0b45d-d594-435c-9d29-f65a7b8da913",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 579,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}