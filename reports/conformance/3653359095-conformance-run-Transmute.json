{
  "collection": {
    "info": {
      "_postman_id": "f5f17919-82a1-4db5-be95-0f985635313d",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "0e5e8df9-3f4e-41e9-8f9f-d5bf81b8c016",
        "name": "Clear Cache",
        "item": [
          {
            "id": "7a04ec9d-bf4f-4c8d-9fc5-95df0f3f6687",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4754aaf2-0521-4c45-a5a4-70ed70bb81a1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "28ed036d-0260-4953-af14-3c78bc1b4b8f"
                }
              }
            ]
          },
          {
            "id": "394845b1-f058-4a2d-b1fa-e06ab974c027",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c999b911-e54b-4864-a934-d64e76250213",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "edbf2638-c8b7-47f4-a17c-5b02bb8c6bc1"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f3441a75-0b7d-4099-90f1-24b3321867ee",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "b71de6f8-42b3-4fff-8cc7-d6dae9093894",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2e59d27d-c313-475f-8812-e4aa97afbc7e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "30a33612-f11d-41bf-a47d-6d25d4d0015f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "38b7defc-8e21-43fd-a8fb-b1ac81a28f8b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "72c9cf30-2e9a-4ac7-8d4c-9de881af2570",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "42661930-6ab8-4376-8875-75e0f2a86cbe"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3a303ceb-13af-4f36-8e35-9ab039504694",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5f8f894c-168a-4be3-954b-b1fa3a89f2e8"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d8da1a9a-be6a-478e-91d2-059701cb710e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "b2dbf72e-027d-4583-b917-96d0513e7b94"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a9d51d01-97fe-4cbe-b637-d75219a885d2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "faa3da0f-2e18-46d2-b74e-0f3bb764eed2"
            }
          }
        ]
      },
      {
        "id": "422a7688-ac1a-4b58-8e51-d06b3cf51fa3",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "1695f2ba-9b0a-43c6-aba1-c5e282fc5096",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b06a0f47-3083-45a7-a058-7931dad6f9ba",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c649e41c-0d43-47b6-9023-7f2844818be5",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "758ceaaf-59e6-440e-a96e-1ad69a8f5d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "832e6354-4b13-4e12-9ff6-d832ccf618f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7cc3934-2a25-4631-973e-5f238beae697",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf4e9f13-a87c-4df4-8143-85eed5953a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a67fb3da-6b81-4e2d-9a07-65b36bf99916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79a650ea-8681-46a5-8b7f-79fd936d693d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e049bc71-5e56-4438-8e3c-5f2e4f5f0450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "382f265a-6e20-4feb-965a-729ba3f80a6b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "151e0887-c049-436d-b2d1-263046b2d6e0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f994d332-b528-44f5-a68a-b7d39d01a645",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d047869-eac6-453d-9f76-965ea94ac41f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "751c0143-fea4-497e-a9d4-444313372e1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa8ecf55-71d1-49ea-a763-bfec51657d96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e4f6d6e-84e8-4d9d-885c-dadaf4b94391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c16052-be21-43db-872e-e7b4abac7d35",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a99127e2-67a8-472c-a87c-6e3fee839fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3fb96dbb-4a20-4a07-962a-2cfc67c974c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91e56276-a2e7-4cd0-a110-bcf240ca4ae5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "c0edd3ca-812b-43c3-ba92-907e98f5583b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "35d3f44c-8faa-47e9-93e4-974e34a790a1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "600fa6ee-77c4-4fcb-8f9c-82e8aa39e4cf",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "606abd14-ff7b-4f64-bd13-e44767ab8151",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "87cde26f-927f-472c-b1f4-25d6109015cf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "730d2883-4760-4a1b-8822-9a35b453389c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "fe8370fa-41d1-4e00-aa1c-9dc48b2fd370"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6d72e3e5-bd21-4443-8380-c5a75b0d9204",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d1ead55e-c1d1-45fd-a4ef-f84f8405916a"
            }
          }
        ]
      },
      {
        "id": "c34558cc-d425-4581-acbc-24d25a16215b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "2d25a75f-7044-4f8f-9d6e-4fdb2ca9d1e8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "94d3df00-6689-4405-bb04-b09250724198",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "64bad57e-0edc-475e-bc52-3d490b1b1fea",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebeb910a-47b9-44b3-ad4f-8a9be3e870c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c48bae3-0bb6-4dd6-8af1-e496029e3ea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41218a4b-e508-4252-9700-256e359a2d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d56b27b3-61e6-41da-ab36-957c6afbd90c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e7798f-b2e2-40e0-812a-170a55a1e675",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c26ccca-3314-41e6-bceb-d00c49d4809d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "712aa82a-9203-40ca-9739-e988d467b5b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3d0623d-e1f1-4623-9111-49d511532ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2dd0d7ad-ea94-4ddd-801b-bdcbbf3347bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "372197f4-53fe-4efe-a637-c7370431e6fa",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "281d734a-79a5-4262-a51a-73d77bd59ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53c306ea-1deb-4ca7-9f51-bdbf3ae3499c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd24391-6f53-4040-881a-18e848140f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bab6a0f1-0542-45c0-b6fe-8422c85dc806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce4b1f5-e476-4219-b616-0c5f0bed43fb",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce380a2c-627a-4fdd-90ed-368fafde174e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cfc8a53-5e61-4be6-9c1f-2575f27c5991"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b5aea3c-df2d-4a31-877f-cc95043c0404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d430460-1bd9-4e8d-aac5-79cc4ce5d3dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29603999-829e-4b34-a3cc-05f3d4b12b77",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19551256-fe3e-449a-a0bd-6e3d8531b305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47588967-8959-4ddc-8527-ba76fa21b12d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83bcb759-d137-4f04-9db9-5b71027ee2bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "192ad418-d0af-4265-8dc0-fd4e986b0daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca91732-23c5-477e-9e55-f45a1121ffcf",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4515d78f-45cc-4db1-a6b3-73d349544e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eb3a8d6-1c9f-4d66-b441-49f126277f5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89457741-5efa-4dd6-9b71-294602f7a231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9499d464-5f88-412e-8020-6c72e33340f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be0827b1-c466-478c-bd86-ac73b85e7406",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02995a28-3357-4c9d-9b58-6334d5da18d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89faf263-8b30-40c1-9bb0-9c9a57daf969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a4170f8-9864-40ab-8963-51df814daf6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f0321771-140a-4bd4-8dc2-6dc8325b7e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5c6cbbc-5e3a-46ac-af43-3535e150267c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad00deb2-01a2-4a75-8803-0983bc4926ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2caa9ac-b8be-4941-9529-cfc5b4f37609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a9d4d6-fc02-4147-ab72-46ec402c3573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "202160b0-9c56-432e-8cfe-a9d769845ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c430bc14-0c3c-4fd8-bcc3-34f54fe61a0f",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b6c218-bd44-4cda-85db-f6df6862bfd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1664f074-21a1-482d-b291-600ea9b0c724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c22d47b-7f00-4aad-b27d-7e72aa6a74ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df401872-452b-4f12-9c62-6da313228c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d684d0-fc8f-432f-ab0d-4a509db4b01e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7295ce9c-138d-4589-be61-75035dcc2ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "258312c6-d64a-4d40-ad73-87f5997fb621"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb85dfa-b197-4819-bb59-70a07d0df800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21e780c5-6519-46b4-ad71-b810c5d0f36f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "895b2a55-f5d7-4056-838d-2a157d40a254",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c670df-1971-4cf3-bbe8-350ed89556e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "474dbe29-6a9a-47f3-a27d-c627b8571c21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb728a3-91b4-4f76-b7d2-5480b168465a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0872dafa-971d-434d-8e54-e788c8c783f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "078f083c-3151-4341-b830-afd32607422e",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f16c8333-fdce-403a-ac62-ea3c90085967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86d02ac4-b35d-4b53-a861-cfe09d5d94a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc520bdd-89c1-42ac-9f9d-27facad96dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4d96250-7470-4fdb-ab45-c753173c43cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba5634cf-4191-49b9-b648-d5441f88788d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc482d9-7f15-43a6-9c80-83cf6344adfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b7acdd2-4772-4a3a-b68f-f2763778e697"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7bc8574-027c-4802-a076-88fc368a6feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f50c273c-17d3-4ebc-9186-165f6821424a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f05eaa52-6db7-41b8-93b5-2b3d1a09a13e",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b23a6d-e931-4afa-8751-7a5d7e8f9211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84403602-812d-40a9-95e9-6b57481714af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90bdae9c-12c3-4862-8654-8b35a1492648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "95997eef-69d5-47a0-9411-a8c8c61b9ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12588dd7-d8e3-4934-8089-c1cbd2c5c015",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7835ed35-e63c-41c9-bce1-05ed15b73f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef8a4ee8-a3ec-49bb-9ae0-efd6d3fd5835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ee01b29-79cb-4082-b39c-7bafe319e71b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e393eba-4c55-43d7-9eab-1bc2ca608735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc02aa09-47cc-43fc-acf2-f809c7bbcd54",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff14bda-ad87-4100-9e4c-c6f4b1539837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cdfba7b-b73e-4519-8405-02a3781dd146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "902572ac-8ba9-4891-8758-eaf849e6b9ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6695a85d-10ef-4cca-84e4-410d847746f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a4c9ac3-9d57-4361-acc8-65222b97daf9",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bcaf81a-b65f-4844-bcf2-734aed7f0e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "448d9857-eac6-48db-84fb-85173ff2bead"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f82c9b5b-daa0-4d3b-8160-eba584ccd37e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16a37c43-4cdb-4ebe-a7a6-9f244a747a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee33ac3b-d2a7-4ef2-8cb1-b8d6b59c1dce",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1599ac7e-459b-490d-b940-33075f461f95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0605461-22ee-4bf2-a3f3-5243944ff589"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6387c839-6815-462e-819e-ce87745303db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "40ce611c-3ffc-4ee4-9bad-4ab34c634e99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ded337f5-2c1f-405e-bc94-aeb3b188b704",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cc779e1-2f2a-44cb-a75b-fb0d5b77f87c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cffadae8-801d-4847-9263-46d072949305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a6fcb05-e676-4213-8adc-10a6b8fc59fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "071d91f5-1025-4d42-994d-cd41f04c4219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f49f7e54-9e71-4561-8383-f75ef1631f82",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "582c4710-3872-4b93-a060-3c76181a9f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c56b27c6-beff-4d75-b0c2-dd46e64fbec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34813236-0ca5-423d-ac5b-918f6a8d8b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d2305b2-8a6d-4572-aab0-ea68ac54b08a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a523b9e-e954-4ceb-805a-1b8ddc6e5ac7",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c7ca01-6ffe-4ac3-85c8-cac433561e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17cec5d4-241c-4f40-b2e6-b0805dee520c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92524a4a-b179-499b-8b87-5c33b8c5fc96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f19ff2a1-5e32-4c19-87de-8738fda148cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "519ae236-bf9f-4627-a0fe-4707bc4965af",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59e9f5d7-c8af-425a-9b82-4eb2ea540933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a874e52-ef5b-4420-b544-0ae938c9e48f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "260538dc-167d-4996-9362-8d1f8f05691c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4dce1af2-f05a-44e1-9ff5-379cb61ab22e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e942ac3-d166-49e5-af4f-502ca695f3a8",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9307994-25fd-4d21-b529-3af4dbf38ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3afcd926-8ab8-45b8-aa72-454f23a43bfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d54a19-cfb6-43bc-9285-c277bf89deeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3292e3f7-3ad1-46e7-ac20-8df7629c5ddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4783d004-874d-4734-85be-5a3f94791875",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f41e01-a8f7-4b0e-9dd3-78754475d255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a3c6efc-5cb3-443e-89a2-93e104729c59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "386272bc-5cfa-4421-b9cb-326ecb79055f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "62625895-db68-41ac-9e69-e2b9f2046bd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e9d2498-8acf-4e79-bcf3-a039baf6f19e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d10d3e64-05cb-458e-bc85-e9cd566ce9ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "274434aa-a6d9-48e9-87a3-c35927442a7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b7681e-fdec-4939-a1fc-0bffd8c4c51f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b97c4bb4-3bd9-44b9-86e0-9563f7f72845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58fc6f60-2819-4788-bbf0-9d9e46f82034",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca5b2369-2c5a-4ad0-9810-2b239889eb86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08c48018-a83c-46f7-86c4-d2a9e83f5811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76faa5a3-bbc5-42ed-abdf-e6e4cc44004c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c19a5fd8-f059-4cac-b14d-c9241c239ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a768b503-d8ef-4ce4-a266-4bd708a15f39",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c53e7a05-dccd-486b-8212-753d3e8c9bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cd90a41-39b9-440b-b4b5-a95bdbee9346"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ebca43-a712-4e18-8bd3-7623b856d094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ad33941-415c-41b1-ab62-436bc7a40207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7aa5025-b421-4d95-afdb-65ee8728b375",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bd3c2c1-8f8a-4db8-ab15-180067c6c4a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b942e63-9748-492a-b75e-070c4c36715a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7396635f-cb8c-44c4-b94e-f53eb00f7a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a64ca8e4-5045-4704-bfed-a0d69e429981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76bad43d-fc2e-407c-825f-d9b38e882f1f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e4c05da-d201-42e9-8167-54799ffdde27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afbe0bae-9abd-44ae-b874-f8f2a36b4805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f5ef20-c3f7-4427-b005-7701a8b042fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "70f169ca-ff4f-49a3-bd28-7a5652fe693e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "089606fa-7e66-4f0e-b1bd-7d18c573a5bc",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b52be3b-58e4-4f95-8792-5fdfff17eb27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6d4e153-e5f7-4374-a0f5-68886236bc62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e52794f5-c186-4449-a412-944ff1ddaddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "53e855b0-9d8c-4a3f-839f-a9bc2e273510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "285b1315-6db6-46ed-a320-7468b05f1055",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ed62b0-6568-4ee8-8ef7-3be384135dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc3f89a1-cae0-4bbb-b8e5-9d173a9c6b5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c581200-c595-4150-8a9e-2e021aa6bb39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "76420a30-6944-4f60-9204-48d407e0d7b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b703da9-085b-4196-ab02-3dc85696c649",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f85a814d-775a-4835-842c-7752e8aa5338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9c062a2-e0d0-4660-a284-97d6304d7fff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f28a51e4-1ec0-4943-8fb5-445ee6e00773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c74c89d0-ce47-460c-908d-1a1f8c68f3bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "258c36a5-f1c6-440e-be81-62ec47c0d020",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f8707d3-0acf-4ca1-9163-f4a9840bf084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d84aa00d-7392-4386-a21e-d5d75dff6479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94e37a46-42cb-415e-ae04-a472b99975a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1a6a9af-4ed0-49d4-ad44-94fe1a297ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "179c4a58-e00f-4c21-b303-9f497ed433d0",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee23cc39-c186-429f-b48e-26998204f33a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f8901d6-e728-4256-b15a-80d4ce453270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5a2320d-9b65-4d22-8d67-2b3610740523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "61a9bc9e-bdfa-4ba4-8325-cac16843a746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d47ccf2-1eac-470a-8f50-ab70e51f3744",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aae4108-65bf-4c0b-9bb7-596bc3f343a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bc7f524-505c-4419-ad55-2fb60776217b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "767b697b-1dde-4da1-ae3b-05995ec9f64f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "758831ad-af68-4b90-ad3d-f5eebb3030c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "194ceddf-5291-4cf7-b1f1-57ff894fd449",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca35f0d-83ab-4bef-ab46-a85a36f52885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9143cd28-eed7-4ace-8e7b-7865d06a3093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d851924a-7c4e-4ca1-80d1-65cae8062aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "25536530-eba8-4661-8cf2-a65090cd50ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b166b1fc-43f3-491d-8a1f-0ec75e256ffa",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60759f5e-fcc3-450d-872d-c3a0f352768f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a50691e-4c3b-4024-9ea5-b7802d03a4a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3000e30d-1536-4f5a-bd7a-b2db0eab09b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a40354a5-b577-4b8d-a629-7d729bec98f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dab75c9-9318-4355-81f9-a44c7049212b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf70db9-7aac-4c6b-a5cf-ef41866854a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d66b1291-7095-49ec-95f4-a2c8b0970031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "332fca27-386a-4d17-a8db-af20c46d1cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "83de2a32-9042-4722-b0cd-71ae5d3622ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac959d3-7244-4713-9a8b-69a80d21e887",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1fabc5f-95a7-4898-935d-751f4c333066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0598e0b-2eab-472a-ad46-0a8b9f20508c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58ea6400-4060-4218-b625-86e5f408bef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6465a970-7530-4bd0-874c-7f4e6fb440e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "436b1f4d-5d92-44a0-96c0-7cb3b3c55ebb",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "373883a9-9377-4cbc-b016-e95d2e55f27a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3615907c-4ac0-4967-9ae9-d3f4486f53be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a794861-ba7d-4d13-b32f-86e5ee703a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a16871b6-feab-4ea9-89ad-d42a1b76fe93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be45c93-1dbf-4c3a-98c9-077e745972a0",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a18509fb-566f-4c8d-97c1-f2a74a03bfd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17074b4b-44b0-48cf-bacb-4ce8adf10bb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc82150f-8c70-42a5-8e5c-f31b2041a78b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fbc6dcad-c052-4125-8327-0019fd1f29fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "578a44d4-430f-4766-b6dd-3f979b815dcd",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97858489-ff62-4172-b73b-877fb7fdfdd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca65c3c2-af4b-4826-9461-b4b37ae948f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310940d2-6e33-488e-b3bb-8ac614dd873d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c12fd363-7819-46c3-8cc0-060046802cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ba6461-9413-4680-bae2-ff33a2a57534",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d6984f-0bbd-4c6a-bb94-59283ed05334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da26f401-338a-447f-9f1b-a811e49ff026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd5e6d57-36d0-443a-aa7c-55e3a2718984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f29ea688-d18e-40dc-b389-ba72dbc40d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5320a8f-8573-4cf9-8484-6c81fb046642",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06150a6e-c6f4-4227-8b95-d95f4a8de5e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1642096c-f4f0-4e7b-a8cf-68677e8fd822"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e96712d7-9541-4150-857b-df980a4b33ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0b9998a-5a23-456e-8f1e-90feaba49ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c28be5-59e9-40dc-ba45-f61c1bf3ac12",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62dc43ee-208a-4e01-9224-cda1218b9fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f11c7586-c780-443a-9728-c79c9ebb5b84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c311d7-8f5a-49db-9942-75b987a2ab68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "82d48f39-91ba-4a42-831c-a41b6adc7c46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de6a962f-9abc-428c-985b-0479e7e7eb8a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c625b2-9701-45d0-8793-9d120bbbce28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fec80c0-310c-4897-8421-f84fb0503eb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd441ec7-156d-42b7-ba98-6b6640e27ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fccd32b-e15e-4a23-9e75-13721985bf71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff8dc55-db10-4eae-8c44-868e8ddee158",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baf71fba-38b5-4457-ad78-709eb7bf1564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "765e19ab-2ddf-4d68-8fab-c43069dc4177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd1b6c1-a767-4311-b9c3-e096468cb132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f385431-9176-4421-8c26-adce75ff5641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e903bb17-4961-4c93-9a91-236def58815b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73504207-0b17-4fd2-89af-0acca54dadce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a94ca5ec-7df4-4e2f-8030-9b39154338fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad8f4b07-6c77-45db-ba14-b92c63a14e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9815f7dc-6dea-41de-ab6c-5c6d59f5c26c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3364d538-3c17-4eb2-abc2-eaff5c0f3dfd",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04b8959e-8664-4d36-82e3-9ee341cf11b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cb7d223-31bd-453c-8f1a-f390c7df82d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dfdcec8-16d8-4c1c-98d3-280f19d1d8cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b35cb5f-6a3e-4a26-8ed0-87dee524643c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb37a311-f459-428d-b6de-74b89a4a0280",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dabb826a-da19-4dca-a865-845751385f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0f6925b-7da0-4b01-9e7e-8740cf371799"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ed59eb-7bb6-4a19-a6d0-c4c3900aae6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b3101c2e-974e-4d04-a756-4dc957253814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f16259-8ea8-46ae-b607-6fa962d300d5",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a1892bb-4814-4cc8-a864-972cd7ba2d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "996e83c7-d3b5-4479-8e26-e24a9917919d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ecf7142-059f-45ae-a2f5-29643b116a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "78716cae-fbcf-42f1-b215-8a6ae198db17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e54bb3-c9a9-463f-b551-61b7ec261a79",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe6f3f5-0c83-4fa6-9246-4d33d5f410d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ca9ec5a-66f4-451a-93fc-26fff56ecb2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aab3c43-e32b-4620-9a36-a483b89e052f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f1ae132-42b5-46c1-8859-feb18212f37b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91bb336-33b6-4aa9-b6e5-f0139fe45167",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81fb4e37-e7e8-4dc6-bbf4-8876794efa31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "370e80e0-2a91-40a7-a9fc-f9aced7d746a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "574922b8-c271-443c-b16d-86b0cae7f9b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e88d740c-e88b-4df6-ba1a-b83a8ecd2d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94cc09d3-4754-453b-9bac-f3e2c5f4b87a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "297575ea-f127-4b20-a387-34f0c1b980dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76433036-44ac-470c-9e28-c2ef350e7cf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d64fb175-5ec7-4589-93b6-65685b89f645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "126f5935-9343-4e45-b78f-062ffdfb9d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de859f0-2e12-42c9-b644-e18d843871d1",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfff45d5-9757-4e35-a977-b93a9362181a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b816819-a21f-4ce7-aa66-3ad5c4b41446"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7034862-8d1e-4250-9182-f9257bbdd006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0c1d7fb-03a9-49ee-bf5e-3aa89cc0a442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc4844fd-ed80-42c8-bfff-5c2ba2334a60",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51271837-cf21-4c98-ab91-444abec6e3ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9586eede-9565-40d6-b09b-eda697671e78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7391718-ee38-4145-8451-6c87294e91d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "56f59ea8-bee5-4523-9ff3-b9369e8c56ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "779ff1a9-498d-4c4a-978c-f31d917b94c5",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d846c203-4b28-4c1d-a1ee-d9e8f99c78f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcaf1640-b62a-48ee-8980-2e934f546aea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "804e220c-f644-411d-b2c1-608f8559d761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "390a60ef-6920-43db-a947-f28f41f8bb31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48a83700-bbfa-40ff-8e4f-1586240bb315",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a93774-a36d-4d36-8135-d688da95bf98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e9f1f9b-c97c-4514-b63b-eed570c6eed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ab1f51-0847-4f32-bb0c-e2fc7b299d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3ee72d8-3e91-4da3-b5f0-1976d9c9e2d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3325699d-1f15-4c5c-8f1e-e51d71343692",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5431a147-36f9-418b-b346-28f410848075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c86cc2d9-ae44-4a0f-a835-85273a9b6318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b23277-eb0d-4cbf-bd03-e6fccc958319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3702f2ef-79ae-4eab-8fd9-3e14030014a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27bddd6f-f70f-4e3b-a11e-095d3a624b35",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97a99b5-edac-437a-a91c-410e4067cf36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67585e39-ff32-4720-9315-fe794ca1da27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a05003a-c4fe-4aad-b6d3-6056a8f9202a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "de50961c-7a71-47f5-a920-b7ee39f328eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf90545-4f1a-4418-898e-4bcc6582dd4c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fccdf1f-d599-436f-afb8-22a12f4c511b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5b85037-93bc-4132-bf79-e0ebd6e68211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae8a92a-e904-41ad-855d-2f5a2e436d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a145fa64-46d4-4d71-a08b-780738cdea7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab8d108-ad27-43f0-b94e-200296b86299",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69075ddc-f983-400d-80cf-1d3ce161b5e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8190957-b97f-42ee-b35d-e0652c7b79c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "126c34cf-b686-4eb0-84d7-d4e262c854f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "707a562a-2b2e-4907-acfd-9449ff56a065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6215712-b261-49b1-bea2-382ee968cef2",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a158c466-be44-4120-8e46-befc9af78299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "956512a0-b7e5-446a-b722-4f244474debd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f515fc5-d8cf-4143-828f-a0c3bac0f076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "17ba60d6-a43f-4098-817c-7c86f5c147e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da6eecd-20fe-46ff-a8e0-a14bfffd2fd9",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c48547-feec-4035-b59b-9dbf69b3c2b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b478a8bb-a729-4f97-8908-1f60ec522b3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0178432e-1623-463d-866d-2dcf1fb1efa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d17960a2-d575-4593-ab5b-f7904118955d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "306051e1-0590-4b54-bce0-3e0acc392359",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76da4b2b-133c-4cb2-b71f-fe271494935c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "244f91f0-c52e-4eee-b84c-050d648593a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41215588-5b82-469b-91c6-700ae3752d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "44e7e103-7355-452a-82a8-3152f0285673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71164dc3-b437-41f7-b301-486cf8b10a54",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f242c8-9d32-4e91-921f-82a0aa77e053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6661ccb-bac2-41fe-8ec7-7a11b3d71842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc4956ad-8826-4757-ac06-655cb42ffcbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6e07d1b-c515-4994-ae65-583dd5649311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de943883-18a0-4925-86dc-2df59454ce70",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0775dd8-e46d-4e63-8ff2-8febd2adca34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5b73917-d13e-4146-baa1-47aad52a22b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "864268bc-d6ff-42fb-b151-90110e64ee6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c11aa377-bcc6-4974-83a4-059599598590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d095ca-651d-4cdb-b528-20b9c472876f",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d3e362-adee-475b-aedf-29dee98f7bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "204b679c-83a2-489a-b1e8-643d0ad45225"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7a5af05-e679-4aec-b789-4e073319c768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b785db3-0d75-482a-a328-6340d5f293fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e8c4f0-1e3e-407b-a3f5-3ea3bd817573",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c35e5f44-a206-468d-a2b2-90fb6a9dce95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2b3f4ae-7dc8-4aae-a946-0b0d3f7813a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a2c8ef7-426c-4fdd-81bd-a063afe891da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f9cff07-6fe7-4dc3-9cd2-3bfbdf708a01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fee2315-f6a1-48d3-b673-2af09eb48ef9",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eee77e05-4c63-42de-8d91-ada0b90cee13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fce8ea68-50a3-49da-950d-ca48e32132b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2225cc7-b4a5-4ef3-afd6-d1aab3c483c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "935ee626-a06a-4583-b150-29623add89e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81c9a2f1-fe50-4447-b119-d4047d0c74a9",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "612e191e-9dd6-4177-93cc-1921d1af8036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82feb086-36b5-429c-b0fe-9b8cd9f247a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa2b0c3f-58f1-4cc2-b752-844dcd06116e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d62d305-8ffd-4b0b-b826-7d9a40d3cf31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a9ffbd-be34-41c7-85d1-a333491b267b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac61278-ded2-4426-9c7f-4df19736e689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "935d6e64-1ae2-45ac-8740-26c993ed43e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cee2869-5cd8-4ce9-a0c5-6cf3230a3109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "790864e7-f4b9-4e68-9455-98d519dc7422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb0d3721-8c57-49c2-b06c-6befa56d0ebc",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e173eb-ee95-43ed-8113-ef64941eefcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fcd6533-b010-4277-842c-d0cdd97dfb6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ecb9f6e-52fa-4f6f-aa23-781050450957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d7ffa8e-c544-4f9d-abf7-e686532d9e87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a678fc-c839-4b51-8407-2aa9156d494f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a597c8f0-079c-43d3-ba08-2588136a6c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba5ca200-2731-4d7d-ab0b-851ace00f840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea61b0ad-d7fc-419e-8e23-5ce1a10a6326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "178ff9fb-d67b-439a-9f45-64ea4a80a6a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5c57f3c-64b3-43fc-a3d6-fdd28ebf2a83",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b814e40e-bc5b-4fa9-b4fa-fc99eec50300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f89a128-1bd9-4ae9-8528-b477abc73958"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a9152e5-e355-4e4a-a5a0-f7d4122e26c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d67fa9c-f843-422d-8559-6d0ab1ccf126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d46bda-36d1-4eee-bbe7-dcc84bf8f33c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde52a66-eb21-4dc1-a5c0-d04f3e44327f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eff35e3-1d95-4e8b-98f6-f32bfb2b0f66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b9c8a5-06f6-4935-a0d1-e9dfebcaac09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ad6b7ab-dafe-44a3-b871-039a7d53a737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db133b39-2278-455d-9def-142bf51fbe68",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "448dedca-0376-4453-93d6-c30b5e79f5a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ba1a7a0-18ca-4873-b003-5dafda6368a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7f9f18a-46de-49f6-b293-a7490507ed7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb7c9083-24be-4a51-8ede-0c6b1185e2e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac47166a-a106-4b21-8e0e-74d121650133",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6b6a2a7-538f-4b0f-8908-8dcece984abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d53f1a35-1a2a-493e-a2dc-4cb8b74337b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c1e7562-84d1-452d-88ae-5a823c31a21a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b4c6c4e-9079-448e-8ca3-2f478e9950ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db291d7f-1ee2-402b-9014-4fd5e05b6dc2",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97be2129-96a4-406e-9b83-350dbd3a0c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65f0485b-7517-403e-ba33-5f0b5c558d83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db967b25-65bd-48fc-b573-acf8086d4472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7fd471f2-5f85-4878-bbf3-988a5ead0cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dbc65d2-e4b8-4116-a70e-49c27703db44",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb781e2f-4fc7-4638-b90d-f12ed20ddb7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c816271d-60da-4bba-8d77-29ca8af6e7c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e36e68b5-b4a0-4cbf-93fa-7a5e67424a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2a744f28-3383-46f2-ae5a-775fb149734c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc1327e1-e6a8-4b85-9f9b-594c858d59b6",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "716f8bd7-95a1-4518-acc8-8feb37ceb7aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "629f1baf-29c4-48e4-abe1-2ff8b64eaf49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ba53494-4428-489c-ae15-b95f7af84900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "27543477-7cb9-4866-82d6-c07f37625d96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c541a6-121b-4a9f-b30c-5dc1a0c97911",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a21eff-0533-4484-bb4f-695e87bc9d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fb16303-526b-4654-a241-5861aa8ebbad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "532e538b-b3d6-49fc-b728-9e0bfe2f5cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dad9c59f-7e1c-408b-97a8-73d59b3d45d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb2772f5-de35-4edd-bacf-2e55cb93419e",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6f1fcad-4948-4a45-952f-f92b76076116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d6fb003-4d20-4da0-a18d-c7669b85dadc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65677e86-960b-47ef-a322-d6e648f4f5c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ca78a45-b646-44a6-93d8-a14805ae24c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "280b1a3e-17ca-4614-a5b8-56edec67fab7",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35867906-9500-45ca-84a7-cbf7613990c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "509ce33f-709e-4439-b205-2b03cb031737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29e77835-8975-43ed-8fd9-7e8bb0674d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a4a3315-91bd-424b-b557-133d1863ece4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d87f1c-7195-4cfc-9436-90e9db6a4b4d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d811c676-7b6d-4f9a-a0d5-0d2a2f8f6b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e8dbf77-c915-4834-b71c-38e58e7107c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d38c8a13-ad79-4f2a-8fcd-0461240db559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4d79b31b-ef90-423f-93cf-dfaf9e765ef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd2d697e-c229-4ca3-b6c8-96ac39f92d4c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44933d44-c75c-4ba0-905a-aa2a566eed9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "591b4924-25b8-4fab-9891-a50ae3910335"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "230e6f79-b54e-44ce-a31f-95d35812cc8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c14ee119-f04e-468e-8889-249a6f9b0432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e440094e-f49c-4555-a0bf-58cdfe4b6b5b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1367c45-f3c0-45d8-ace6-d5e2fb3c130c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a5e863a-5cba-4861-89f7-f442057d23a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbeff2d1-0b3f-443b-90f1-e8bcafa045ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6451ab4-28c9-4d63-a687-a0b546daf884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa6c8ad-94d9-488d-add2-c92c40e0e233",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c582b296-cbfd-41d9-948f-195719647a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7adbd67-a0f5-4bbe-a84d-be54218bc237"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d607bed-d76f-411a-9ae7-4c11eea71d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8aed7ecb-ecfc-45ff-99fb-eb6d7c032ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9123c8f-29b8-4d76-9e09-9f4eeb74c14e",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2559b14a-0cb1-4dab-a49f-b80a4e1d1239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "458a0c3e-f76c-49e7-b970-35e9ab417050"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ba7f19f-ae53-4f14-9130-35e72be022cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2af3d0db-84f3-4bc4-a4e5-32f45e863850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c680cacf-90ce-47b6-9dd2-d06b9015ad82",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a710f125-1875-4156-b3ea-47b5e447c8b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f787dce4-1c39-4114-92a5-c39419f8107a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d399f2f-ae72-41ce-aed5-4f9be8911220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4fd614b5-d8c3-44b3-b7c1-2927564b6927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea22e6b-ec84-4ea4-87ab-d7c9452093e9",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2677bca-f7fe-4871-af15-f64b223ff7b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8174b5d3-c256-48cc-8675-3d2f01e2fddc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7147cd1-1540-41e6-8647-89ed1e8944ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b8c559e-40ee-4a38-a7ff-e46fba77a872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a037a7ef-dd45-48a8-aed0-7ef9d79af372",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d4f362-aa1b-421f-a835-5c9497150f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ee64a18c-d17e-4f22-919f-732bf487e477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "108eea18-7e6b-483c-ad7f-b25d2f848b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "691ea023-149f-4019-a1c3-ba632b08ba13"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "883a1c89-cfa7-4709-8e8c-ffc5bf27d0bf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "82c8d0c0-d091-4c7c-a54c-82c7783e9866",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8339dd73-01dc-4ed6-87d7-0781416fdf76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "518cb68f-db2e-4045-a6a4-673ee58f3568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "addaecf5-cbf6-4cbf-bc3f-b518f42da47b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "6a44e860-a0ca-4548-b33e-c6300be2d444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b6beb6b-2fd8-4e9e-92f2-d7b6d16ace8d",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3abd15a4-ad30-438c-8abf-caef74544e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "05b7520f-66fc-4d49-8663-6b0cf36ffe2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00a5ffbc-4352-4b8c-a5aa-58a574f3baaf",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "0b074b63-4fb1-40ee-acc0-fc045ead2d62"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "587a7a96-b9ef-403d-97e2-53aca80d6b72",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "df664b5c-95c8-4fb9-bdec-e25aa8bdadd9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "120c1114-3f5c-445d-b11c-2e346dc062ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96199a97-cccf-4344-bdb2-bc60631aba3a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f639f201-68e8-4f3e-a541-da4e7e5b50ba",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "db9e7cde-ee85-41ba-b99c-2d4bed09855a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4996b120-306d-49c2-9642-f9eda0e442b0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "55faaa34-9623-4bc8-bd47-9cf5df50c594"
                }
              }
            ]
          },
          {
            "id": "f699e900-0a47-4688-9cf9-e0d39cb38a03",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0ab7f065-5424-40f0-a482-fe7b98ea190d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1b83c89-b9f3-4f20-b27b-750838ae939f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3ff20133-6640-4e25-97b9-c5a602f9f662"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40967fe7-d4cf-459a-858c-a40c9a6c7f88",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "34502128-9e1f-49d8-bec9-f27244986d0e"
                    }
                  }
                ]
              },
              {
                "id": "d5bb4d15-9959-4138-a34d-48be7282d652",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "26692763-21cb-41f6-b9a8-e82a71667045",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0e771786-18eb-4d34-a531-5272186a63f6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "43dc2a50-349e-4dd2-9c4d-23bfe205543d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d4140d14-6e5c-497a-ad87-e21e6772da97"
                    }
                  }
                ]
              },
              {
                "id": "0ba978df-43e1-44fe-b638-c9a2ac3e2df0",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "433749d9-fa59-44cf-afbf-5ca21fada73a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cfca9bf7-9fa4-4671-9bfc-f55d9351ecf5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc00476f-1eef-4cc8-a7f1-c3f0f26012d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e5f72ca1-875e-4b29-94ed-663a1d09b1e6"
                    }
                  }
                ]
              },
              {
                "id": "4342222f-d0dc-4b0c-b228-c9ca6c9ad789",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "120b1c9b-3bd1-4817-8bf1-fcb229348c80",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "65234862-e486-4b07-ac65-75d84df76772"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "246ed45e-fecb-4e3f-8a46-25085939644d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "69bac36f-94ab-47f3-a456-e51268a550a5"
                    }
                  }
                ]
              },
              {
                "id": "0169d218-0a32-4b3a-9303-2160bc5566c0",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e16bffe-a9a5-4be5-b9f9-1546d57e2fb5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9c525724-b4ca-46bc-9e16-5d388a2e2a89"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0ed19c82-f169-4ee5-a28c-d8cfb3c8e893",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "3190f2b4-9a38-4cfd-b618-328815a20bd1"
                    }
                  }
                ]
              },
              {
                "id": "9a10a38d-b481-432b-b711-dbe83567e02c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b0951a5-cca2-4efa-9ed4-d1e8f4aeffe0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9d0c51ce-75a5-4eac-b3ce-64c6c93a3716"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a89c686-700d-41b2-b678-1878513f81c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "98fa85f1-d4bb-4356-987d-deb07c450287"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b15f971c-17eb-4b63-bb9b-2c77daa0959a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fdf1687d-f9b5-4551-8042-fc7581b1f3c8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ccf52fdb-d4d0-4569-a44d-cac4993ed0a0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8f13132c-ac4a-4383-8e93-5a5ff9b0b0f7"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "26cb1a9a-82c9-4d42-868c-3a27d925deb1",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7f7c0c85-716c-4f61-a7f0-e60c0c6fd84d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cb796dce-8e30-4e43-8563-31cdf3a0aa9f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6d88fc90-ebb5-499c-a72d-13ebe74c4548"
            }
          }
        ]
      },
      {
        "id": "70c051f6-6cfb-4818-922e-0a26e1e305e3",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7f687e88-f921-45c3-8805-aff419d2fcd8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9f0692fb-4705-4b25-8399-24a1f401c1af",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "13c70056-db37-47ed-8694-937ddfc3b417",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb2eadb-1337-4792-b1cd-a5d4ce71ae29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a521e70-1d64-4ae3-841a-1511f0ce3d2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af89fc0a-f770-418c-9d01-9cf5adbb9e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "32f77715-2cbe-4aa8-b6cf-d5ec748c2c35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65582328-e4ee-44f6-8025-34617f3276ce",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bbbd1ea-a2be-4337-9826-752ff4813398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef5d9906-73bc-4751-b8ce-29eef49df902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a92228-9ef2-4e9e-8ce5-9e2fccbc1fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3549cd10-5002-46b0-aa67-596ae5d8ccc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf28adb-3e18-4fb1-83ab-a3116066ff13",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a4338d3-462e-42bb-a40a-8e90730f1bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7c287b9-51d8-4f05-a0e5-8050aad2ab73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4194f2d2-8f52-4e99-816b-9e444bb807c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6b5eab7-5d66-4377-ac1f-b9f2c7f30fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6e333b4-ff6f-4246-8e65-10b092234ea7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8280e872-1394-4ccb-a6e3-dd4a6e9bdc3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f946108-6152-4d01-ac1e-07f1cc5545a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49cb55b8-c7f7-410b-9e60-0e52627c9644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a3090a6-bf71-4d0c-80c9-98fbcb77d05e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51518e24-dd7e-49d9-bc25-f991a018b919",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc2889ca-0661-47f8-86ad-b5e0f0f53036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d15a08b-3405-41dd-9ffb-0b8d287a520d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d19be29d-8caa-4f42-ad9c-da1891c2d3c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1aa7c559-eaf7-4f8b-978c-396a1032c005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cbce298-9192-43a9-9f9c-f815d2e3aa1e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e616943c-4641-46b4-9e43-2e8b2ced5615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a28b187a-faad-4c45-8e42-651d4cf0fe0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeee2ef2-6be1-4525-b022-6b2146ba81f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c59becc-948b-458b-8a8d-06e411a1f373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beca95a4-983b-48bd-9123-81e75fab3327",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b16fd1eb-f30b-44da-b12d-0267c12b9d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0cdb6fa-0bae-4866-b0ef-8dce97c3bc06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d74c23e-cf4a-4706-b1c3-a09e7640bab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2efa0d54-abc1-4670-ba02-e25f43b56b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f68797b4-fef7-4f61-84e1-ccfc1df3c57f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4d99e18-09cf-4def-8943-a3f55788f416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b233f0de-fc6f-48c9-99fc-e8431f146ae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ee390b-7719-437e-b21e-c25b3c559627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e44c6ce-e205-483c-84ca-165009954d0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9dcc13b-110c-4fc5-b977-b42cceb71f59",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3f075f1-5273-4794-8648-18b71e5cf0c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d545a297-70f3-451e-a46b-b29945d5fc2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24add3a7-9578-44cf-a207-31bbcd57b6ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0a345c2-a839-4cab-8802-910512533aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12619163-a424-40e9-a8dd-ac63b52c64a8",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c06aee-8472-4da7-8a86-5fe4ca8e33e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2a68bf1-93ce-483d-9428-a4c220a3cc29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231e7057-5323-41df-824d-841fec1025c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "22046cc7-43f7-44cf-8805-17a955bcd9a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91c6607c-e688-47c3-8e65-eb11ad9a03a9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f87add-4ed2-4081-99c1-96c1c50b3721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27357ab4-71a9-4af8-9a0c-f7844a15be36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81dc06ea-9766-4c98-ab93-040adc1849d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "39eb82c9-4aad-4158-80aa-964e59e6ca4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c58db6f-3a74-4a3f-8219-338b7547415c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae5c39b9-071a-4613-b8db-87ebf0cc84b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "425123bb-6157-49f5-9cd1-b988b89061b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55565757-6432-4e78-a07c-726801dafb4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9e335078-17ca-4d48-93d6-dc33f944dce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4fc382b-114a-4a71-a981-5d6cf9e4e061",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b213394-b219-490d-9fdc-69bc18bfaf28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eca64dd-787f-40cf-8e2e-9c3959763743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4209c22e-e865-46b3-8620-0fd5f1149c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fe1a106-7378-47c5-8ccc-63ce5fe18595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d749c9a1-bc22-4f1d-b5ec-1b69a6637f4d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d41649de-bd28-476e-bd79-097b81c2bed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd3248a6-4f99-423f-b6a2-5da486a0b4fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b964d4-f1ea-47cf-9fb6-26675183471e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0546b98-1ac8-4f1c-86ee-82b6c5f363a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ed79aa-05d9-4e44-9d7e-f1d331198a53",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "018064a8-e69f-4f26-b197-d7f7ea3bfdf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35717893-1fea-49d2-b74d-c447863bf34a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42346bfb-f3f2-4ee5-b83e-9f3bbbe1d3e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "012662f6-fc67-4b0a-8159-91fbd37eaf13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3fca5d1-ed1e-4d2f-8155-57430decc674",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e42406-ac8d-4f99-85b7-6dc64b0b8252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80c458ca-0e6a-4997-9ad0-94e7b0eff2a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e6c887-0345-43b5-aae0-ee93258a4f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb4c1ce7-618b-42ce-a5f8-3d03d88f3a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0d59d9-3369-4fbd-b69a-317bcd2cdb3b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "150fa557-4aa1-47a5-9bbc-5d980ef56d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cff0d9a3-1337-4790-994c-f9f643cf9e3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1146715d-7c98-484c-a4ac-2129a03a0405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "aeb1f825-359f-4e45-8243-b7a89d5fb4c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a9f6e2-c612-496d-910d-b338a122f5f0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab05a4d7-b7b9-4631-9210-0a65b76f3166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7356a3d8-21bc-4568-a761-83f104d6856e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa45be24-d3c5-4abe-90ab-17f93d11860c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d80a62c-4e26-4274-b564-f93dd1f86b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f907de96-6d29-4740-bea3-56542647a838",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbdda5c4-f544-4054-9a7c-fefa4bc9f4ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01bf34cc-490a-421f-a524-653ffb564194"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a3e2f7e-c1ff-463e-9a15-63045dc5dcb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bc28103-00b4-40ff-8af9-0f069abeb29f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b87f9e26-7ebc-4dc4-96df-2e13a6b3bf31",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ee3ad3-c05b-45b0-813b-5ca724906c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "903d8ee7-a1d0-4faa-82cc-40c727a39141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a9583b-7daa-4040-81f9-401174587cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b15bf96-b6fe-48cd-8b59-cb769db9aa3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb4da97-d33f-4067-b430-4d739bf1efc3",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62439b1e-1a03-4bbe-acf5-b7f3ac07b94f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "379b23dd-c362-4e4d-a011-ee1b6a3dbe70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "514047ec-f709-4abd-9dbf-3edb807f18d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a613cfb-8687-45e1-9a48-f698d3ae2d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a024dd7-119e-4e28-84ea-ceed96cde96b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f19f0787-45c6-486c-bd67-5f7963e3cabc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eea2e77d-5574-44f2-a3c9-23ba1fba2f9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b3d413a-4625-46f8-a11e-9a06849e7d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4e9abbb-07f0-44af-a39f-c388326854e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f056258c-2ee1-4354-87bb-dbb1c201acbc",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdff54dc-f7f6-4b5d-abf2-f052a46fc636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26cb381c-1e28-4c14-bbe4-42e735b460d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5b6994a-a9a9-4f49-a326-18eed258c858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "137b1fd7-f61b-45ae-82eb-c7f0a4cf5f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b5166ed-074e-4910-9e31-c435dd89ac5b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "497cd9dd-2054-4653-9e5b-ae5d1b47120b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9c310d2-3b6b-4b8f-92d9-6926ce55623b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e8a34f4-ff38-4e28-9f46-bc40b0513816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbbabc2e-31fd-4bb0-ae22-9b4ac673093b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e6caff-7bb0-4bd6-acf8-964fa43ef24f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "068e6231-7ce0-41af-ab90-b8a076635ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c9ac2a1-27f4-4556-8e86-06506d9ad6d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd112ee-a269-4655-a20e-96eff017aec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "897aa7e6-f6ed-4070-9a5b-d09dc5d694ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee918291-3c82-495d-96e8-65a0457a60e7",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ec3b79c-e890-49fd-97d0-6128d4898a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28087f94-6c9e-4738-8c77-43b772b0aea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c0510d-f5b7-4486-9c93-42da8050a04c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4244e649-2a02-4f24-bcad-59eaf4732166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd7b600-1927-45c7-a985-15f119fa6143",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c27fd9-ce24-491f-95d8-d1c01c7c6d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "983357b8-455a-47a9-b30c-9205543c890f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7844308-2b72-44ac-bcea-4246cc295767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33d1d7f5-a0c2-49ed-b53d-10f4940b3f67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f26ad454-fa90-4103-bb0e-46826708ee18",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a713233-f92a-4a71-b37c-73d27de1a5ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d76fb116-244b-4886-9a09-75c59f1be4ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b9d3590-8a7f-448e-8186-ca6245567e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f00d96a-ac35-4dde-99bc-cb29678f308e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f78db10-998f-4632-904d-3329ef6ebd49",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f382a60d-c501-4217-b302-021aabbf691d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5392673-3d94-41c1-9955-3aa5f1488e37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d75275-524d-405a-a0c4-e898e411243b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a2cf726-f985-46c6-80dd-2680689e0a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02c143aa-b310-4d4c-b5e4-d278a770e5a3",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce0f5d1d-e162-4faa-b989-62ac2426ba95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c025084-49c9-4ada-81c5-086357b50752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5890ef73-0150-4109-8113-255e9b49148e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6adadbb6-7dd0-4667-9750-5efb1101d05c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e9028a-c417-4647-9923-75c3ff313289",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d6ff3b-f979-4f81-963a-f65edc6a6077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5d4bc5f-cc8a-4078-b7c3-e68d111feb95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2837df47-4abb-45cc-acc2-2379315fd5d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a02cbdb-fcfe-4a6d-b8d8-95a21dc07d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f15bdead-72ea-45ea-9011-b13b7c8a2cca",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "014ee2b0-a450-48a7-8a25-b152b607b595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8206b98-dc03-46db-9376-6c7c9793de85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "666c697f-48e8-44f3-a4d2-eb2deca2f41c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd20b978-3429-474d-bf58-d795468c7a8c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6a2ffc7e-d0e4-488e-9350-8cf83c2e0b0f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c03087aa-bffc-4956-9361-ae3ef67832d4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d115e7-03a7-460c-bb0d-08e5acf7419c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4085bbd6-34a9-41d3-8e01-85cf826c5d46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2038519e-6c11-47af-b05d-7657905ba944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5c2671b9-20e4-440e-bb28-6d971eeb7c5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "678270f2-84e1-4bee-b116-edf77ff3e50e",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0984e8e9-bdc8-458b-8235-832467caadb8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "8fe44f91-df79-4c9d-a2e2-b09848a08a52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "973d2a86-bf0e-4818-a3e8-0b011804879f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "58c673d4-9974-4dbd-98b1-9bbaa8d5913b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2919a7a1-0daa-4d24-99f4-3728c2bd37b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "afe83d6f-22e5-4de4-a6ad-0f6e81f5b0a0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "470b5898-a07b-480c-9981-96d648360b38",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8159b0ec-8b2c-4a38-bc30-1ef1d79f3427"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "60a6a3a0-c5bd-4ad5-b3f1-525214c8832e",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dc536a80-412a-487c-bd53-03fa9d07b90e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "483b8af6-e662-454b-a3cb-b8965978179a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c5fce413-b6cf-46df-a491-8d55ab4e80af"
            }
          }
        ]
      },
      {
        "id": "a14ebab1-e626-49ed-b3b3-4be30c46744e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "442ff98b-a8c4-4e2e-950e-949c1ac3491b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e366a809-9810-4e9b-84f4-476c766772b7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8beda3f2-5a78-4ea1-afb9-803a33f914c3",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36a66eeb-1e7f-4cc2-83db-183eed7dc60f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7602068f-6137-40bd-a6fc-1d63819bde1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a1d0506-0e7a-445a-a6a2-f05cfda31f71",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab62653-3e09-4244-8c6e-fed1a3125880",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bab0280-de92-4daa-80b3-8d604b68bf33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8d42960-cc94-483e-b9f7-c99696e709d6",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf905bd8-3e78-4ae3-822b-b37250ad3a34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a190fc1-8baa-4502-a9f5-4447f6635dda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80766b78-6040-4259-9621-f5559d9f660d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7999f01-18e2-43c3-a47f-a78a76acef0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a486984-2f9d-4446-a642-c23dd8791458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1a4d7ab-61c8-4f14-89a8-0dfd61b8e121",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed1099c0-35d0-455a-b709-d348cd2bbdf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "730b0c36-d0cb-4ec6-b144-9cc72be38eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04fef123-48ee-4be7-b5b9-6d6232519f74",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6111c360-c137-451b-b61f-412e6e725d4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37c0a412-a6ae-4826-b87f-9b4d979ea746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b0aedc8-8d15-4275-8e3e-c04e00edfc1c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a7b79a5-d2ff-4207-a0aa-bef064e3e34d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8525a424-4cc6-46a1-a269-0cf0ecd62355"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8597cc25-efec-4ea2-a3ce-c5ce522f820b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d57461d2-1a0c-4a9c-9a5a-fddd98d4a1a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a325e289-ac21-4224-bcc3-2e51df646bf8",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16a7d389-1205-4bb0-87d3-15c4eaa4673c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6543a95-0d22-4b1e-8dc3-4fd0e1502c10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0efe311f-2b5b-449e-a154-8a6c6e3c0e60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eb6b43f-1d0e-46d1-b300-9f58145e18a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1cefee1-b6e6-49f6-81e5-783d045bb95b",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1290c350-e771-4018-b5ea-d25e14463456",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29ab7022-3827-4136-8eb2-234762a72cc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f71c0223-7996-42ba-a9d0-8bd37ae41d67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f65ad68e-fc93-40bb-9627-cd506213d2a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053bd2dd-ad35-411c-8350-6a55127579d8",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e061d1-819b-4f69-b3dc-8084e7665f4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63834a22-df0e-4b5f-9e62-68b16ffb04dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f889ddb5-537b-4f40-bcba-46c447bb9962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c01cef9e-f660-4b74-b9a0-3c02c5462544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c5d196-0674-48e2-8907-adeb68727d69",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f19b5b0-c887-4297-8def-0c6d1929591b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fe21ae4-dcd0-4829-ba57-9770d7cbd24c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91996494-9981-43b7-846f-9536394b53cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21adda88-9546-4adf-98b4-d2c137395f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d04a903b-5de4-4bbd-b791-64473b70c52a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5010f284-9873-4352-b43f-d9ab29f59b7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef4cb139-9377-49dc-84c7-99f0fab6221a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f26de5-2fae-40fa-b1e8-4b10de8f3e03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5942ae4-ce2b-4c0c-a80e-cd118146e5ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db642dc9-a892-4573-a214-8890e05814ee",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c2a83f-2546-45da-93f2-2e4438924b7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67f40dc7-d880-4715-be58-ad91225ceb45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a001cb-c51c-4cca-aa15-66f38bbec134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af0051ad-3e82-4dbe-8799-3034cb7b2b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddb80164-bac1-4a56-8eaa-6436cffb20a2",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e69185-6ccc-4479-b684-ab7b209cf2e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49d40668-4eaf-4151-a337-30171a554f85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7255a2f5-387b-4c43-8500-4319681b1a1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4a3496d-dbee-4841-ab78-7636e09607fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc6ee3d-cd74-4cd6-a5bf-f17f078e4d41",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee564f3-871e-4da0-8b69-9ec454824a3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26284541-af1d-4e7b-839c-c6f62734ada3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d74017f3-96f0-4f2e-86a9-5c64dbcb29c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ff9890d-caae-4e60-af47-5697655ee644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f146beea-8b41-4f5c-b938-dcffdb53e830",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a5def0-4021-4f74-b672-d44c1fc2b064",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30ed37ed-11bf-400a-a665-aef7890459d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc24449-b005-45ed-94fe-40f89da81441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39811f4c-c4d6-43aa-b02d-664c2cd46d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dea426ac-bc2a-43ba-83c5-0c09fe7ac8e4",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe36607-8a13-4102-8fc6-dbad74e6e7f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05bdf0d8-c358-4d43-b47d-06bf433b3c5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22aa4107-be8d-4b84-bb4e-429726d578f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb50cceb-afb6-44f0-b673-9dbfcab936eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "738dd45d-9dd7-43f8-b252-14510a078712",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1457264e-81b8-4647-8354-2b21cc3cd35b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdf9fd21-ad07-441c-af8a-4b711e5c10f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e0be3b-02a6-444f-a278-9bb007341152",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac948875-37ab-4083-9010-2bad5a095e88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e4a599f-8149-4259-a6f0-3c31ca7b5371",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "501155f5-68b4-403e-8521-e12cd032a8a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b089ea7d-1dad-4923-bf1c-dd523743338a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa8cd8b-9a74-4432-9b0c-37b002e19f3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de056a12-ab33-407b-812c-05dc8f560a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f67a7d9-a818-4d17-905f-c97b1a028364",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e7e637-0798-4140-b648-7fbb3d5b46ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "759c04e3-4025-4e6f-9d58-f2112ad272c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a65be1-457f-419d-9070-0a023b100117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b90e52e3-3c5d-4cb1-8c01-00d729fa80e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "977ebc86-3529-4e28-8774-d0a20112f46f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eed7ae3-3406-40c5-8d7e-ff2234de688b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab0fa597-d270-44c3-a0b1-e1ed4a912c03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a4901fa-21d3-46b7-a2d9-6b8e0ec0a839",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dbba841-a717-478e-8f76-7a9f6d10c829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85173ad5-439d-4b34-a498-49cff497a48a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e47396db-fac8-48d8-8b50-77f696ab9ad6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3a322b4-9954-44af-aac3-a93cbd946024"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5041f41-4f98-4986-9f89-2b2c2edadc62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d82bd1b3-6713-405d-bdd4-cf23c1c674c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e09ddb82-fd17-43ae-8ceb-d7bf836ad3a7",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "404a0a4e-83fe-480f-b6ff-e1c855fc19f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b1e36fc-d064-4ace-8dd8-dbd611ef59a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a006ef9-9c87-44e4-959d-049bd19e0ff4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65011fee-0de1-4c5c-9f52-829dfae06732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "028930a5-f6a6-42e3-8c94-9129f69ef18d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "339dc580-5240-458d-82a2-397b6eae7856",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bed68bfa-2345-4834-8902-4b55ef5f7b25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f531d0e9-fcf0-48c2-be42-58cde94ca5a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "476f4e9e-5519-4208-a866-6819b98826d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb9fc59-87da-42ae-adae-bc0bcd29fe04",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36dace37-b79c-49a3-a9a3-173928805203",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd293a77-1e44-4cbd-b349-99bf379ee987"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d6cfb4-c2a9-4238-ba09-4b9ed509fa34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce672e7b-ec31-4cb2-8394-3dbbe9fa019f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dfb0dee-9308-4755-bd6c-eb753b2c1850",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f413a62-b374-4c80-9254-7b7c04c1c207",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec0b696d-5ca6-467b-bc76-b1e4b9be1af1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bebf062-6b72-4ecc-af51-fc1f3dd80dff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd9582cc-f2cb-4e69-b400-45b08db0db47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fee207c-20ce-439b-ba9f-9b6311b5e73c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ef1eb5-5e33-434d-8bb9-54cf7819ad87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7444ef7e-1747-463b-b07f-8e80137939ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d707272-7280-4f74-a065-2e5857c4df29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c6722ee-80e0-4902-b991-38fbba8622c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a209e80e-31d7-4420-85de-cd13c8f0da0f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c94735-87a4-4562-a96a-37a7d629a50a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99e33e21-d2ff-4dcb-863c-ee3b6fd94202"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fab77b8-25f8-4433-935d-8808e7ec40aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8301723c-54c5-46d1-bb25-3de3f154d864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6daa7f-04ee-459d-ab08-fffa4b2cec05",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dcf611e-19c2-4120-a67a-ca126f8a8ab9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec5f2ec3-9db3-41c8-9b73-dd4a0f750b16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d9f7223-74fe-4e95-a0da-f69260732592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "800a75dc-dbba-4a9e-8919-be06a327be27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4812e51b-0af7-44bc-a220-591388dace43",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "441cd4ed-547c-44ec-99bf-2314fb1f4a79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07060c43-e8be-4eb3-990c-11445609be82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dfe1292-1789-4dfe-ab17-c3dca1a1effb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c12df08-a91b-400f-a1bb-f7fa3c232866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f33daa1-a802-4c98-9a79-8263f059214d",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f6f62d4-fd27-4339-86c4-745d68a2d3ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9d8e450-fd66-4f4f-8b1c-6fd36b7c0938"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "381b4745-320b-4609-b2a5-6b0978f75641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50f85981-97ec-4d4e-960f-001d7547fd6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff6b79e7-5ff2-4ed1-8b46-bdd30dcd3100",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e3b0ff3-412e-453f-81c9-106ff247415f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a4e464d-e632-4686-92a8-abeba15dda45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "160eb2dd-cbca-478a-b06c-d9928bda3e24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21c84275-6e22-4039-b58c-ec25848e80a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b1b25b9-e198-4625-818b-b1a16c3879cd",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d70a0608-6182-4192-8d2e-355a1a08be7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a06d5afb-ca31-41d4-bffb-aff8c67f2ccf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc69206-41c2-4681-8f91-03208172ab84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18ffaa0d-959f-4fe4-b99b-e97c2c45ee49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ca25e1-ab1e-4f6d-840e-e1220e3e929c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4566fe0-9c87-4030-aa44-e9d4764ff6cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1d2b629-66d9-480e-bbd3-c4b119d4e45e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4832a4ad-efb7-476d-b115-fa42a1fbb5e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bf910dc-0ff7-4af2-b49d-2452a1c9310a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "269b155b-16a2-4bf2-a549-4a24a0f75255",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e178fb-8262-4e37-be4d-31d7259f3ef8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10f8358b-f66c-466d-bb6f-481936d33a3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "280c78f0-88d4-49c5-8263-0b5c785f3721",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40709ce2-ba07-413a-af93-6e31db7f9e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "552eb52c-7bf5-4d21-b2d9-65a44359d06b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af4933af-6086-410e-8e20-4143a2fe6321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6876c1ea-4952-4f81-a78c-d327cc71885e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11600117-1893-4ec3-9830-c90287c3573d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aca1a326-8515-4fa9-b2bd-d7553c97dca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cab0faa-e55a-4cf7-8eda-b021be334fe2",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7965ec2-3cdf-48bc-b3b1-d06176b012c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcc543f1-cf78-488b-9ba9-a8e8d1d9e25d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94d8df5-e0da-4b58-83c5-c68a48a86f7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7589fbe-8078-4ca6-a1da-9682f689b02a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1ce0bee-8a52-4765-ad5c-9fb28d622f04",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d9851a-e763-4ec7-b5da-d41feaf59050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c22dcb7a-074b-419d-a16b-aaf4b60966c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e66d0f5-5de3-4cb2-aac2-6c695fb948df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c27e781-c811-4b7d-887a-0fff0cf2d7fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a671b0-36aa-4773-bcd2-469a92ef8572",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0c5323-2cd2-493a-85cc-93afdce3e524",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7aad882-247d-4384-8e57-6e2a22122cc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc536b2b-92b1-4ee3-9562-e4624dbc66c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb28665d-ec5a-4ce5-a4a0-a869ffab318a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a333c0de-f54e-448e-abf7-931c1d727040",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cefff2f5-78be-42ca-8667-7d34cd46a5a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cf62bd6-6420-4d9b-bb6a-59fd0f070625"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5cc77f4-f733-40d8-995b-39bec0f850dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3685cf2e-1ce9-485e-b73f-f7421d5a7b9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "841a3ab7-eb1a-4639-9d22-2296654a2be4",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe9d520-e77e-4b48-a9b5-2949943c8ec3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64fa0a16-1cd2-489e-8d7c-c082bdb45ea1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70ca9ddf-5c05-4aa3-be09-804b38ba567b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40831159-6032-420a-893d-3c200a4a6d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ffa263-dc82-4ad8-b1c7-8e282801b6f2",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b91a6c5-4793-4ddf-b57c-d51f235caf52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07806aa3-cb90-4b6f-b61b-2f30dec2577e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d822dd4f-e629-4d1a-b012-3341e24d5b62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b002508a-d5d1-40cc-9566-a2e5e1e0d74d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7b9c7ab-e86c-4c8d-be8d-d55146d958f0",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf6442b8-1574-4607-b989-67508f2636d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6cb9f2e-435a-48bb-b614-9915114f92f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2fd2cbe-a971-43b7-b251-0634e74ade84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99a419c3-5b0c-44e5-a9ca-47ae5fabc2d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c02e746-b187-4659-8645-8f731099eb4c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f247013c-7c73-4ad7-a934-ed1ec9972612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fa485c3-7939-4fff-9da1-d9e98421d525"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4568fc91-a2e3-4863-a9b4-ee2dd74cd646",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b953a5f-f977-4f9a-8d97-aad78291687a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46897297-b497-4e9b-a89d-f8062bffd518",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af32c6d-cd24-4ca9-90e3-cf1927804ff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f923da2-6d9e-4aaa-999d-58ab3dbebfb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8bf6b8d-2e29-4861-8575-0f9184e8fffc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cf5c629-e395-41dc-8bdb-671c546ec2c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fdd76fe-cd6d-4539-8ada-b7ab17486c1e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0011e8a0-cea4-43b9-bbc1-5fdd595ae211",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddc2d635-2530-4d1b-a136-e74fe0dd983e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1b6b53d-4f3b-44a9-8137-9c4fea5c8572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "136176b0-c54e-4f7d-8de2-f37860a1a8ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ddb017-1545-4d8c-b851-040cc669b20e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9abafa0-5761-4944-ad00-71c8d82f5b4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b48882a-efa2-4782-a689-8f5cf59c36d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15dcfdaa-df49-47d0-9175-6ad3cc293eda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3895457-2e2f-434f-9636-f2e4be02c5c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5340e33-e5f3-408b-937a-eb33ddf137d9",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b96451e7-0c4a-4df9-8d95-baa8766f167e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1723d1e2-1200-40b6-9674-23fddb55f663"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a89745e-7b84-4563-bbcc-f4f2f5978802",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d23c0e4-5183-467c-b06a-651c096b70c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7be531e-58d5-4794-99e8-57c873fad7d5",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56bc70e4-c8b0-4431-a1ad-a10505b74910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1d93b0e-6ec5-4aec-9687-8877368a8b23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd3c53f-33dc-4ff3-a1bd-015d755c2f6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fa8568a-35d8-4e19-89a4-c49fbf2bb461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a238c003-c947-4720-8015-185d88d004ab",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf7b036-e5c5-4f8a-8a46-ee1b399ac039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "869f4ba9-7cc7-426b-800e-63fb9f7afa97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe669a2-2bef-492b-bf56-b32942f5337b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd1e61ea-866b-4447-a31b-806f1267b0e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b63235ad-d30f-4035-9e89-a5c1f10ad83e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab6ee8b-6cb6-4569-bd8c-0d52d93957e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9f8dd5a-3ae5-4f43-9132-f8ebae3dc277"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "206167ff-97c2-4070-a955-dc71ee555b92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4dcac45-2c43-446a-8622-94bb1bd57188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34e8adf8-648c-4df8-b7e9-2fa368fc0155",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de65d4d-f23c-414f-8cdb-677428a1e3b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c520de1d-6c83-4737-8883-bd82ba721a20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5839f23-8acf-41d4-8cf1-028e8c21f026",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5500a76-4e64-4b4f-b763-71087fbb5e56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ada19d8-947c-447a-9e12-abe1d055a6d7",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a5d2f3-b397-4dbf-8a40-0283cd749d81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bba83ad-2895-482f-a0e4-476574cf85b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e3d6aa-acea-4981-afeb-41cf66867f69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69b181ed-5d8b-4f83-b34f-bd8d3215a488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56000c73-bc65-4446-9758-cc614e220fe5",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac041dc-e170-400f-b03e-f0019b2cecad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc407af8-201a-4ec2-90f3-176d9114af42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3074a9eb-be00-4c2c-9312-b7ff1e03df0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3373a67a-d711-4b47-9851-be2df4c81405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce9c19f2-8889-4fc2-9d6f-1c32f9a701e1",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da31909-770b-4fdb-b0a6-d352156e4b18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ce31940-5e1a-4221-bf57-ca93f2619327"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e433e72-6651-4959-a4ac-5c15b8ee2354",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bed633b-1266-4d2a-b4f6-7acfdaad5915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263aa3ab-3f70-4c99-b062-1357a257bc67",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c6e87cc-c27f-47d7-b627-5f21573d9b11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04210b39-659f-49dd-8da5-29ca3d7e93d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb6a9355-582c-41da-9dda-3e4788bb37ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "787ae2a7-fcdb-4bbf-9f2a-b8f41c487165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d85bfd8-2faf-4871-a22c-2834dbfe48ef",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff493c49-48a3-4ba8-8ab1-a34dd5056cec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "601b1a56-b566-4f40-9d5f-d6603783b4dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec62add-05ec-4ba2-ac64-2e3dfd068c7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9754bf47-ac02-4035-91ea-21a37369cec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "024c9993-d62e-469b-ab4d-addf66cd7209",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f94a662-fcb8-44d6-8849-d3428a1eacca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2870a166-df70-4690-8e5d-20043a636390"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6668cebb-38aa-49e4-b915-316f8f0d74e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e992b5fc-8e56-480f-9a41-267106c73699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7782b9ea-f14c-45c6-a168-edb2f338b50d",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa25f30a-1a8c-418f-9a8d-4a4a578df47a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73056570-f394-40ef-a32d-2832a408c25e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a645c36-e439-4e68-9a6b-17d6717b4127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c4ff6a3-15d9-4cd1-aa0a-11f35e4a3d88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c407a3eb-d9a4-4885-b20c-6930a2e0e0f0",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c012b1a3-853e-4714-b1e2-51bd162b6eaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ad8a0a2-152b-4b13-9e23-1f1c8954f554"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a4b00b7-12b0-4026-9170-96e4de3924bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3705b155-4dce-41ba-a7be-745edb610718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e47fef0-33f3-4156-88d0-3ea1db3e5849",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f9d42e-3b72-46dc-ba2b-a763496f15be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5494b061-4990-4008-a0d5-8833c682a401"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a468c9b-ab3b-4a5c-8958-949318ea50c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8647ae4-622b-46d2-b47b-e6638b61a964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88a8e9d-82fa-4678-8aab-6a339d478bc4",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d966cb-424b-4fdc-b73c-a166c5c6929a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c897970f-7da4-4156-9625-fc70b1e7387f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ccdf4a5-ac4a-4cbf-8b96-b0165cfa8ab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f56cf45-090a-4a90-9c2e-62e806973099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf752e2-3255-413e-ad55-9c4f2fdb9b95",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f48b0d50-6230-4706-8afe-f05a7c131540",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa70dd58-2dab-42f4-9724-95fa3987e94f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b36b65cb-8e5b-42cb-9036-ec14e50450fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c59af1a0-650e-4af1-8330-f880ca9f3612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d3e581d-9d4f-4e6c-a0d8-04f7a99d8759",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe4c608e-34b6-4439-bff7-4765963405a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c8f7349-d7d1-40ca-9d89-5c4418798e7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba533f6-212f-4b8e-9fb3-b0a46bf54b8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55f28a48-5eac-403e-bf18-38204664dd77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e82f0164-b1bb-4f2e-9720-38f8921b5a3a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eb608bd-4655-4baa-af23-673e195ca6fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85d3d7c8-8686-48a7-bb20-f3f75c5627ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b940370-14b0-417a-9a54-39ba2a21c63a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d45cd7d0-e46f-4ce2-85d4-20276c306790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfaba0a5-ffdf-4b3c-9400-0d3af331ec93",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfbcdcad-2e6a-424e-aee6-09aa065801db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab3c4286-16be-4965-8aa0-eb684896fd81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92682193-bb99-4b2d-8098-64592bd2ac57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ae515a9-9aa8-4477-891e-778299f057ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a886139b-9bfd-4433-9cd8-7b880e259a21",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10472a07-ca8f-4f26-86da-a4d29a9a74b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8300899e-a430-4ac6-ae5f-3835e8d0cf16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a24bdb9-5671-4671-bf5b-3a1b86650ddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebe2e131-d6fb-4800-a9cf-577f3326942d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcaed1fa-8845-4d9a-99e2-f86b1386075c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "000c6ed4-25aa-4f82-8609-98061e665098",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8a35942-7ad0-43ef-86a9-4c9debb41196"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3241a69-edf8-4b81-b3c6-2ccf2aa27cf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55e69a47-e027-4a20-9f0f-07be6b5ed82d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b199e82-0c68-427e-9c40-80677e4d7b69",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a93a19-2bd9-474a-a9af-84ac8cabf7f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "764a48c0-7d6a-4274-a7c0-621ca6976a51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e0db4d-0a0e-48f2-80f8-d12075e4b7e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93b7a02f-bdd7-4b70-a333-083dd44606fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c03f9d46-908c-4a2b-9925-bfca7498a00a",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "372ae32d-a76d-4517-ab59-5bf2ece9eb37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd910ede-17c6-4187-aaec-1b827a358aa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c24f6d92-fed0-4b04-9778-ad9d71409aae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5e26f63-3c3d-4188-8a0b-7d5f22befbd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df79348d-8a21-4b9b-8847-812a38e37f56",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44886013-410e-4f42-b934-860a5bb05398",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05e034c2-d440-4d78-b08e-f68d8104b8ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d8ce8c-2267-4de3-afc4-f13944fec976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8a06c7f-018a-45ff-b1dc-24061022b49c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "520221c5-4ebc-4ebe-a4a8-8b01342732fa",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d550a26e-caa4-4bfa-a84f-7522bca8b859",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "692b6412-1341-410d-bbbb-daaba9ad900c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "682b7d3c-4071-49c2-bac3-672121960ba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5438a2b1-3dae-417d-8323-f87b1e361984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5550551-5d79-4c2f-97dd-77ecacb3c1be",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6440a0b9-e79a-48b4-a337-26d1daed9d70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1de31c9c-e253-4992-8e51-3f1533467b78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "830f4c09-3e2c-4c8a-8f9b-20191a2a3077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85ac55b3-0b4e-43c9-989a-240a18baf319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "390f714e-d18a-4136-8dd1-d799ed274e7f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b42f8fb-8f94-447b-8d1d-e95cc263e750",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f180f68-450c-4fc5-acf5-437ccd9d715d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55da2548-671f-49fb-9e12-42de6212968d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "554e265f-7b64-4368-98cf-21ea9a39f324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf85c205-8a3e-47f1-9df8-f98c0454314f",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ef06eb1-7b70-43e6-99eb-e4b3432ca3b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b4e6262-0264-4091-8166-3903355c6a0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e4adc7f-53aa-4b3a-b8a9-fae1c793327b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdd5bf6f-b986-43dd-a95c-e2fd7458d4fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8227d997-67b5-489c-95d1-9150536002e0",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73dd9226-79e4-4a8a-adba-e896e5dfa6ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1bb3592-6186-4711-9fd4-662d495d4bdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a2f521-fef5-49f7-bf50-1973befab8c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4683954d-1091-4826-a5dc-dfe6a3e87f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adbc2c6e-7a16-4fe9-a8ff-19471b898fa2",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa29f85b-deda-42cc-a253-6712c66f6b49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbb2d339-0def-4cbd-91e2-ef38bd55198f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b96da850-f966-43af-9505-40d05d069790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9359a6c-f217-4eb9-a68e-467fc8d4d865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0706b7a3-4f05-4372-8a8f-883459b5a998",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "865d284b-d4af-4859-b03a-1ec06821be3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05d685f6-1ada-4aea-bacd-2c111eb1cc8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "587da73a-5a0e-437c-9229-486ff3d81f43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6720b9c5-28e6-43ad-a5af-d718527a20a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e32712db-85ab-41b9-bd0f-eed5158e117d",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9137566-3439-4701-ae17-2130f592f747",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1fea614-e233-4ece-94b3-f258bb6a3c78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f04541fb-66f5-4d13-9de3-b3c803a9e71f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "421287dc-6984-400b-ba00-122aac69b5a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ef67b5-c252-42e0-9c45-882862e1cb66",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ccec2e8-7a6c-4e8d-887e-9aad46478e9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61f41043-5c34-492d-bc0f-44f525641129"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fb6ee4d-38ee-4400-bebe-5ded4a609b51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90f030ba-a39c-4062-8e56-c9b27430a030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ecdf6c0-1b0b-4e77-a78f-bee5e63438d7",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25ddeb7-b3b3-4aa2-b29c-70bd930590b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a05f56f-78e7-42b5-be84-4b45c282ff3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9e74db0-e4a3-449e-aa8b-070de4b76ce6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8e72ae7-ed8f-4cea-99a0-a3df661a66dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a1318e7-1e4d-4c3f-ade6-c34d507cfc27",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ba0172-2f5e-4fec-9852-09004a51d572",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffb44496-289e-4457-9bcf-4261eba0ee47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a8bac7b-3ce2-4100-959f-ea1c0ea90586",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9c544fd-4e61-4660-822e-a4a413e31eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66b3d4c8-8806-4160-97f0-0333051fde95",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "172f24b6-5b8d-4738-ac49-ff65eae9815b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9ddf873-adc0-491f-a9fa-3f4f68a78825"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2543d21f-df59-4bfa-ba98-500129aa07ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa1d2704-91b6-4eb2-a403-cfd239230c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e65e1fe5-e20d-473f-9264-46b140ab8d74",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5683a892-1e72-472d-ae98-247bba4e4202",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e0e2bd9-9f2f-4933-8a31-31c76f0ce7f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdfc6c27-8460-44e9-8b52-8643ab27afab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58f690b1-c913-4384-beda-4239c0d7539b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da36880d-4f27-48d5-96f2-d0ac9441f041",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fccc2ad-edef-491c-81c6-d47d910ab673",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "043f3369-0877-4364-8a57-0c2153fbb7a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60085793-4e80-4027-b63d-d24be92d9cce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77af2626-37e9-4a6c-be45-c52bccc32918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ebe0f4-d23e-411a-a370-8ef0e5095127",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecfb3936-3bca-48e1-978d-820df6fa681e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72b42be3-4414-470e-99a6-2dbcd2070804"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3417447c-03e7-42f7-8e9b-ff7b15eeb029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d13fada5-a5a4-4261-b315-9dd7b4161703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14056ec5-872e-485f-aacb-0443b47e0f5b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b284f598-d7ec-4191-833f-6871d1c00745",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c19b81e7-5050-4f04-9982-90f8de6d9c3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e1b78a-3c3e-4cb8-bfa5-2319d07808ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ff4d210-552e-448d-a93c-52fa1b14470c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3e5b8fd-5af0-4af0-b4e3-d1335b681e3f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35784b5-c8e3-423b-a5dd-eee36cd8f2ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb4ac310-bc3e-4202-a008-1151db94c0dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25cd0814-989c-4549-99d1-1912b04ce8dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f70d0f03-f634-4c7a-bdc8-844dfb289665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e0240e-ca69-4771-b4cf-92f04cf09f37",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e1c26d3-c089-466c-bfe4-3364351b53bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1241a650-cc68-4eaf-a737-cc78a423f875"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1579349b-7713-4253-ae61-83f67d3c1d67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3608b603-fb3c-4fdd-8456-b3ef9ebd36ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b0c631-b053-448e-ad0d-66b3e3c0493b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c05c7a1-6a66-4f9f-be02-9d70bb10c01b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "202c8f98-d69c-4517-9614-13017d1fd6ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c494db-c001-4809-ada1-18be4dbd5cfa",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74ebf41f-c258-4469-bb5c-e054564bc634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c582fea4-1f2e-4447-9f7d-23b5556ca25d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0853ec1f-b3b6-46f2-9ddd-58d7cb0c068a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92c12d58-30ef-472c-990d-13aa827e5e83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e9020a-5d97-4365-ad70-10fd3a69909e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c9ae5b8-2576-490a-a422-e05159bb961f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68257010-0538-468b-af33-05d8b40926fa",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "183d2f8d-701f-4f2b-b1f1-77c275c8260d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3e8e87d-596d-4554-8379-99ac7e02732d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a50dadd5-1e00-494f-9c14-eba062a8cb7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee818e0b-284f-45b4-a325-4142f55f77c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "627f58ac-7b56-4522-8a3a-83803a7b4adb",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17849fd2-e584-40fd-b745-951ad1fd5422",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a13d8c74-d2d7-4beb-9134-036209b7a8a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "421cb221-ecd2-4d48-a758-a5775a176e3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e90d442d-2a7e-408d-abf8-6833848a8d20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3af723ac-f37b-4a4a-b33a-56db0738c154",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2402b2a-44a4-4e81-91be-704e70914fa1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90d1fcd6-532f-4c8c-85b4-5d51c9e77704"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7409c5a0-8b24-412f-b91c-d4373a4a0bff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0f9bada-c38e-403d-8de4-b8996b8b5e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7231a6d7-99b9-4829-98f2-14a3bb678e3d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5093a545-dbc2-40d8-95c9-575592e2989a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40619e54-654e-4ddf-b3a9-81252fa187fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e74ce10-ce2e-451d-9839-37d0e1896240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24eaeb34-de58-448a-85b6-c5b3d334b9a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33673bb-6c32-4fab-adb6-5c4c00f94c3b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad1ed3fe-ee5e-49a2-b3a0-b5f79eaceae8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2778818e-5d0d-4277-9b54-691a6b3abc5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4270be8-0957-484d-997d-6cd0e9a948e3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cde0e061-3218-4087-91e7-7020f727d847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "534e79d0-ba3e-494d-8c44-409830d4d819",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8941fc7-3db1-4441-9e6e-c1c0121687ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7072683d-001f-4e88-a4ae-6236d1453121"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc9131c-e659-428e-94fe-16cfbe079205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbeca1ad-394d-4d1f-b99c-0fb09062c620"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34f6af52-ae8c-4ad3-bba6-8f15e9149521",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93248c76-e4a4-4806-9103-0152e9bd7a39"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "282d0874-c058-4dbf-9f47-7a48b439588e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "22c4d21d-1d40-470c-837b-e00eae15dddb"
                    }
                  }
                ]
              },
              {
                "id": "f0ce3bc3-6abd-4666-8a16-9c76ef551927",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a481085d-6fd1-45f8-bbf2-d6b02f38f3a8",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d6ca4f-7cba-47ba-80ff-9c6911eac542",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9c356cb0-6633-4dac-9e83-42978fbc6b42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d8c9a24-1728-4a93-8956-003a59897a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b812949f-99b5-4961-bba9-bc435d65cdb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5c486e9-2820-40fb-9870-56f514dabdea",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "396402af-1211-4124-bd08-53074de447e3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "102320c7-e8b1-4608-886a-5262e38e975d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa236e6-83a0-436b-a9ba-feb244f8e1ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d147f4b7-0382-43aa-9b67-beecbd3d1f2a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d2de642-5c43-4202-a593-ed7af431cfbc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "81189177-60de-4c86-ba4d-b2e85631e0db"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a3281d7d-b931-458a-bae2-74b4671d9df3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "78e0b720-4455-4539-b8ef-128da6d2ba0c"
                    }
                  }
                ]
              },
              {
                "id": "745ae98f-b66a-42f3-b62a-d73db541f0c3",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "04db697c-7fa4-4d7d-8849-1dfbc3a3415a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a795e7-de10-4ea7-b848-29a88f81b46f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "8476c705-5052-4a66-934d-68fa73397804"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd5371e8-4c09-4996-9ac0-3dc02c4ca2cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4521c87a-86ca-4636-b435-111592e8a8bf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "cae79b5b-ceef-4474-ba7e-dae1e72d9433",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f212532c-761a-4863-bb8c-b3c49c956d89",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb377b7c-ffdb-4fd1-901b-82cb83e4a8fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "964865f6-0ada-4fb4-a6c7-d29f0b03e7b9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7702efc8-72a1-4cb8-a891-921565f37c67",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e80a6885-5f47-4089-ba2a-6085507ea50c"
                    }
                  }
                ]
              },
              {
                "id": "3fc5458c-7817-4e67-8785-7d9074941915",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d66bb182-a0f4-45b9-8b76-5e6ef82e9e41",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "43cfb5d6-0459-43a0-a47f-631c963f6edf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d2529548-ec78-48ee-b848-4fa6e1a972ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8bb9ca1e-cfcd-464f-8a22-c5cf920e0555"
                    }
                  }
                ]
              },
              {
                "id": "0026e785-b01a-45d2-ae17-30bca2d0fca2",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e5cf52a-aab7-4e56-950d-ae9d879ed638",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7bf99d9b-6998-45dc-8a71-844a7966db04"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "01d08dea-a424-4b0c-adeb-8f918d183111",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ea9c5f5-aed8-4af0-88b0-325ba30e4ee9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6c32f112-a922-49f9-aaa4-1d3d8b02aa94",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d0031293-72b7-45aa-b843-92174092c968"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e8f3a330-4fda-4c2f-8b8c-8deb6ebb1256",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "acddf929-309b-4ae0-afb9-81a368876766"
            }
          }
        ]
      },
      {
        "id": "77159d21-2598-450c-93c0-f4f4b605e624",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "6df673bc-a47f-43b8-9f04-decd975ee82a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2fe8dd0a-ce4b-457a-b377-5bfe2967809f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bdf6a6c1-b255-4769-aa67-c39093b8fdfa",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "379a1731-c75b-4672-8eb4-e144da31209c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ed6acfcd-5216-4691-8aad-d4e7b487d193"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df4bd7e-00e9-41b8-b44a-c269bd8f7f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b3ca618f-832e-4673-8256-9501a63fa261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e982b3-4c2c-49de-8117-a02d348325e5",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "303d4859-763f-425c-83fb-5d2cded9d014",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a723208b-f80c-4015-88f2-99a759efde5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fbb9a4b-8e91-4b4e-a92a-8c6f6dc000a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "46f630d8-0640-49a8-a1fe-396b37a9303e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec63e6e5-f18b-408b-ad3f-ae298620e45c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a395762a-2a4d-4d76-85c2-a0338b092dee"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "19ffd859-cea6-48b5-bd3e-1e869b29266a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43ab3da9-3a7a-48bf-9392-42ca44c0cb65"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "69af48ca-5aba-4be2-bf40-e1abea99b929",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3b79cb5b-f6d5-4a05-89fe-83dd4d5d0570"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ac11adee-3823-47c3-b6d3-332b3fce8f9a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5a67391d-5fd8-4929-857c-588cd9116785"
            }
          }
        ]
      },
      {
        "id": "902e405a-82d1-4cb1-bf9f-c40b5b42265d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ff709a8b-ce9f-41a4-aaee-53db0f3d3db5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5adacdea-0603-4299-bf21-0f1c28ac7ec3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "021db626-a54f-468f-b5c0-1b2b1c3c63b7",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43db4d79-49ec-45dc-a7fd-a20c9cf3a8d0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0b388a78-a3cb-489b-a757-6c4549749139"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "902fb946-b267-4e6c-b373-e01a7b4a87a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b77de98a-abee-4791-ba8f-1b37d2b6cab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e07e4c1-5f50-402b-9205-96c67d3fe58b",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e8d330-e199-4f1e-908e-84bff92ab437",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "784cdcdb-7ce9-4812-a8a1-87b769a5ce0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a99a56e-581d-40c3-851f-8cff91b0c6d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "81df5f5d-007f-4bf5-8a18-771ac638dec2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c9df5a4d-ffbc-4505-86c8-e3ca915b1d9f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "03665c23-35c2-4fcf-b92a-f9d54c4b9e25"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "898a47c4-1ceb-424a-9652-eb2f2b35d1c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19b74eef-76b2-4f4e-be61-826b8e3d0297"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "faa4c3ad-4b59-4043-adcc-8689dfd8439e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e43b71b5-4270-48c4-97fe-5bf7371e3314"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "626d949f-0d12-4c7e-b355-b386db4e1251",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4ccb2612-4a65-4cc9-8aec-77772382af37"
            }
          }
        ]
      },
      {
        "id": "15c84013-f890-4c80-8ff4-f3fe331e0853",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "670a772d-48d3-4a29-ab9d-a2d00d5fc34c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8d6a8e54-99e1-4b03-8373-519019e81c14",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "50cbdc3e-d584-4b9d-bfdc-1dc3ca48cd17",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d639feb-94f2-4ffd-93d4-5b29fc09f8a6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "139e3c0c-082f-4d93-bf2b-78c1c5aef75e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48c01f76-47ad-47df-aa69-07c333eb96f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7020c31b-8e56-4d89-b90c-de569c30c941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4587c64-700c-4bdb-8645-314b2f9297e3",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f66dca8-2718-4402-bd49-141d48f85cb0",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "869b7995-f308-4a15-aaf3-fdcb21329508"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2788e68-c78c-480c-9168-a651641a1175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b87518e-877b-4b91-896a-e0824e14f63b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "894ba89e-4313-4d5e-89c7-a3f66423679d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f54159c-2264-4e7a-b261-823dd83ce554"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2cb89680-0b86-4b36-bce0-8171fb261273",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48b19c63-e1cc-41d4-bbbb-4efbcb6843fe"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "186a3124-8769-42dd-9ee3-b951a3991a62",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "75c2f2c3-2398-46ba-9c37-e047906f019e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eeaf28a4-f2f8-4b3d-a915-c0cc4343fc2d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3a8aa9bf-f277-4478-8fa7-25b44e165d59"
            }
          }
        ]
      },
      {
        "id": "4cc93b37-768f-4831-9c9c-7accd2b2ac11",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bafe8dea-f95a-4f1e-9cfc-0a3c2af39191",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d759d165-fa7c-4e6e-a53e-d7facd6258f9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c17c8d6b-6603-4ce5-83c0-34e95af86078",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "83e2aac5-6bd5-4179-a409-96296513f836",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fe01222f-cf64-4ac2-8715-1572460fd93e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1915,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 261,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 13
      },
      "testScripts": {
        "total": 962,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 953,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 500.1187739463601,
      "responseMin": 11,
      "responseMax": 3129,
      "responseSd": 366.4739687901384,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1670546343622,
      "completed": 1670546484602
    },
    "executions": [
      {
        "id": "7a04ec9d-bf4f-4c8d-9fc5-95df0f3f6687",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 252,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "fe182def-7dac-41e7-a5f2-129430b9993b",
          "httpRequestId": "6b34c6b7-47d0-4c10-a61e-3f935d9f3ee1"
        },
        "item": {
          "id": "7a04ec9d-bf4f-4c8d-9fc5-95df0f3f6687",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d1d45013-f98a-4b6e-b7f8-7ab9a4429025",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 0
        }
      },
      {
        "id": "394845b1-f058-4a2d-b1fa-e06ab974c027",
        "cursor": {
          "ref": "816260e0-e7d0-47d7-90c5-e9a8754d82ee",
          "length": 252,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "8d054b2e-6ef3-44f7-9274-edb18b6bc6e9"
        },
        "item": {
          "id": "394845b1-f058-4a2d-b1fa-e06ab974c027",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f85bd69a-b95c-43be-ba40-6401a9c9a5f8",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "2e59d27d-c313-475f-8812-e4aa97afbc7e",
        "cursor": {
          "ref": "f60f9b3e-a622-4c52-bfd5-42038110af4a",
          "length": 252,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "05a2c68a-d28a-4ab2-9cb4-aee2424770d2"
        },
        "item": {
          "id": "2e59d27d-c313-475f-8812-e4aa97afbc7e",
          "name": "did_json"
        },
        "response": {
          "id": "bbbbee32-5dee-4b57-b31d-cd7b36bf96d8",
          "status": "OK",
          "code": 200,
          "responseTime": 847,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c649e41c-0d43-47b6-9023-7f2844818be5",
        "cursor": {
          "ref": "2c2226d8-e08e-4712-b67e-6ec8730a567f",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "306f37ce-bf70-4c1f-a433-a0cc9f513a9c"
        },
        "item": {
          "id": "c649e41c-0d43-47b6-9023-7f2844818be5",
          "name": "did:invalid"
        },
        "response": {
          "id": "d97f05ac-26f9-4e87-a9e7-15492d219528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 761,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c649e41c-0d43-47b6-9023-7f2844818be5",
        "cursor": {
          "ref": "2c2226d8-e08e-4712-b67e-6ec8730a567f",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "306f37ce-bf70-4c1f-a433-a0cc9f513a9c"
        },
        "item": {
          "id": "c649e41c-0d43-47b6-9023-7f2844818be5",
          "name": "did:invalid"
        },
        "response": {
          "id": "d97f05ac-26f9-4e87-a9e7-15492d219528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 761,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7cc3934-2a25-4631-973e-5f238beae697",
        "cursor": {
          "ref": "9707b9f4-28e6-4b0a-97b3-f1372343e8d9",
          "length": 252,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8f88bb72-99a9-417c-98d4-b632d9d22bf2"
        },
        "item": {
          "id": "d7cc3934-2a25-4631-973e-5f238beae697",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "73fe54dd-034b-49ef-ba97-9402cb364c2c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 758,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a650ea-8681-46a5-8b7f-79fd936d693d",
        "cursor": {
          "ref": "fa8834ec-f610-4e3b-a101-509842afba7a",
          "length": 252,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d0ca669e-b051-4a55-86c5-8250ad4679d2"
        },
        "item": {
          "id": "79a650ea-8681-46a5-8b7f-79fd936d693d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "0295abd2-86ce-42bc-bb74-5d2ba52301bc",
          "status": "Not Found",
          "code": 404,
          "responseTime": 937,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f994d332-b528-44f5-a68a-b7d39d01a645",
        "cursor": {
          "ref": "eba03342-c992-42c2-9889-59b3a27e1264",
          "length": 252,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "1d63be01-28b2-433e-8247-a085a9d89c06"
        },
        "item": {
          "id": "f994d332-b528-44f5-a68a-b7d39d01a645",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "9cab944b-bf48-4f91-b809-eb10e91ff97f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c16052-be21-43db-872e-e7b4abac7d35",
        "cursor": {
          "ref": "11375f8c-cfac-4d2d-bccf-9eacdd1866f6",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2ebb1680-7f77-40ce-8d3c-574eb488377b"
        },
        "item": {
          "id": "a0c16052-be21-43db-872e-e7b4abac7d35",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "bbc976a3-1ac0-4f3c-9aba-7d900d0631da",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 591,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c16052-be21-43db-872e-e7b4abac7d35",
        "cursor": {
          "ref": "11375f8c-cfac-4d2d-bccf-9eacdd1866f6",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2ebb1680-7f77-40ce-8d3c-574eb488377b"
        },
        "item": {
          "id": "a0c16052-be21-43db-872e-e7b4abac7d35",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "bbc976a3-1ac0-4f3c-9aba-7d900d0631da",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 591,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "600fa6ee-77c4-4fcb-8f9c-82e8aa39e4cf",
        "cursor": {
          "ref": "b03692e1-0a48-4d9d-9447-9094459b54a2",
          "length": 252,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ee2ffce7-3e74-4c6f-93d1-0b9e44f76ecb"
        },
        "item": {
          "id": "600fa6ee-77c4-4fcb-8f9c-82e8aa39e4cf",
          "name": "identifiers"
        },
        "response": {
          "id": "2d5dda0d-e402-4be5-805d-be2e028ca778",
          "status": "OK",
          "code": 200,
          "responseTime": 789,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64bad57e-0edc-475e-bc52-3d490b1b1fea",
        "cursor": {
          "ref": "ed816db8-f246-4363-9bb9-fde0f79d720f",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "dd1e85a6-c006-4833-92c2-490a0b4fbc26"
        },
        "item": {
          "id": "64bad57e-0edc-475e-bc52-3d490b1b1fea",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "13b0759d-b558-4da7-b0aa-1e2dad8f849e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64bad57e-0edc-475e-bc52-3d490b1b1fea",
        "cursor": {
          "ref": "ed816db8-f246-4363-9bb9-fde0f79d720f",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "dd1e85a6-c006-4833-92c2-490a0b4fbc26"
        },
        "item": {
          "id": "64bad57e-0edc-475e-bc52-3d490b1b1fea",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "13b0759d-b558-4da7-b0aa-1e2dad8f849e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e7798f-b2e2-40e0-812a-170a55a1e675",
        "cursor": {
          "ref": "1f156165-a25f-422e-94a8-1257942236e9",
          "length": 252,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f56891f0-5d12-452b-8f9d-45d1d0a4cc64"
        },
        "item": {
          "id": "04e7798f-b2e2-40e0-812a-170a55a1e675",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "26785d5e-bd86-44c8-837b-8d0c0a900329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "372197f4-53fe-4efe-a637-c7370431e6fa",
        "cursor": {
          "ref": "687a2e44-27ed-4b2f-82fb-e65db1bc1e38",
          "length": 252,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "f349d0c1-b40b-4162-9c88-86f5d1b6bc99"
        },
        "item": {
          "id": "372197f4-53fe-4efe-a637-c7370431e6fa",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "4725bf26-015d-40ed-8d4a-2ff1c29d42b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce4b1f5-e476-4219-b616-0c5f0bed43fb",
        "cursor": {
          "ref": "ba3fc7bb-29fa-4f52-8da0-9e51ee00fc9b",
          "length": 252,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "3991dc48-2114-437e-bc89-9f946a4d0591"
        },
        "item": {
          "id": "8ce4b1f5-e476-4219-b616-0c5f0bed43fb",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f64e7d23-eb0b-4f5d-a804-87aaf0e30860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29603999-829e-4b34-a3cc-05f3d4b12b77",
        "cursor": {
          "ref": "4567490a-63ab-4be2-bf1b-6d47fe6f07bb",
          "length": 252,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "3eae9af2-d872-4c1f-ad43-1793ab297882"
        },
        "item": {
          "id": "29603999-829e-4b34-a3cc-05f3d4b12b77",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "91886674-8185-44ed-97c3-e572e1dabf49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 678
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca91732-23c5-477e-9e55-f45a1121ffcf",
        "cursor": {
          "ref": "5e46a094-de06-444a-9d8c-77861c3526e5",
          "length": 252,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "4006eff4-7429-4be1-bfdc-d1b4ef096778"
        },
        "item": {
          "id": "9ca91732-23c5-477e-9e55-f45a1121ffcf",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "dfd29d6e-2e6a-4659-af84-b92aac5dc934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be0827b1-c466-478c-bd86-ac73b85e7406",
        "cursor": {
          "ref": "ec47cf53-64f8-48d6-ac42-eb4a60c3cab9",
          "length": 252,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "4018a01c-146d-4566-80f4-53a51a367261"
        },
        "item": {
          "id": "be0827b1-c466-478c-bd86-ac73b85e7406",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d9dbf4b2-6ce2-416b-b270-0c59e7340b2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c6cbbc-5e3a-46ac-af43-3535e150267c",
        "cursor": {
          "ref": "5411ba4e-05bb-4b29-a02c-f3f5c4793113",
          "length": 252,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "9b5b009d-8138-4e4b-a404-3c5e3e217b42"
        },
        "item": {
          "id": "b5c6cbbc-5e3a-46ac-af43-3535e150267c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "a83b6f18-6617-45c1-8df3-f22feb844437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c430bc14-0c3c-4fd8-bcc3-34f54fe61a0f",
        "cursor": {
          "ref": "e57fe198-66f0-432e-90b2-058d24c0b0a2",
          "length": 252,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "2ffc4f6d-b314-40bb-9956-0379b9b865da"
        },
        "item": {
          "id": "c430bc14-0c3c-4fd8-bcc3-34f54fe61a0f",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "508412df-3308-42fe-9a23-8ce10dc8f4fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 950
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d684d0-fc8f-432f-ab0d-4a509db4b01e",
        "cursor": {
          "ref": "fd6f9508-fe57-4e99-b3ee-c92bd14bc038",
          "length": 252,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "a7cd83c5-ab15-4b38-9e74-3646e8d1b63e"
        },
        "item": {
          "id": "e7d684d0-fc8f-432f-ab0d-4a509db4b01e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d6e8811a-6dfd-4841-8e6f-424bd15e83ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 947
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "895b2a55-f5d7-4056-838d-2a157d40a254",
        "cursor": {
          "ref": "163986d9-74f5-48c5-b527-97880bfc60e5",
          "length": 252,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "4130e517-2276-4cb6-99b3-6b8963b71ed1"
        },
        "item": {
          "id": "895b2a55-f5d7-4056-838d-2a157d40a254",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d9ddbd17-79bb-42d8-80e1-d9b76619e5c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "078f083c-3151-4341-b830-afd32607422e",
        "cursor": {
          "ref": "6274c8b2-c802-42d6-a888-1b5ab159e404",
          "length": 252,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c19ef6bc-9fa9-4e8c-952a-e51b0e2ecfd4"
        },
        "item": {
          "id": "078f083c-3151-4341-b830-afd32607422e",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "5eb502f7-a540-4698-8cea-afc0b9fec27d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba5634cf-4191-49b9-b648-d5441f88788d",
        "cursor": {
          "ref": "3b6e1a41-8c21-4616-b8ff-f9da4688a633",
          "length": 252,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "b64496b3-44c3-4128-92c0-7ac26f8d9c11"
        },
        "item": {
          "id": "ba5634cf-4191-49b9-b648-d5441f88788d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "045b71e9-f394-4973-b353-90fd493154a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f05eaa52-6db7-41b8-93b5-2b3d1a09a13e",
        "cursor": {
          "ref": "69d68581-b64c-4719-8412-a8d536511f4e",
          "length": 252,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "21072e4f-6b77-4853-866c-6965aa1d5015"
        },
        "item": {
          "id": "f05eaa52-6db7-41b8-93b5-2b3d1a09a13e",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "3c83e5cc-b980-41e5-a44d-b6e442bde56b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12588dd7-d8e3-4934-8089-c1cbd2c5c015",
        "cursor": {
          "ref": "b3770d52-51af-4ee9-9d02-8a705f27ffef",
          "length": 252,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "6608353b-9aed-4f34-8193-e31604cdfe67"
        },
        "item": {
          "id": "12588dd7-d8e3-4934-8089-c1cbd2c5c015",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "7019ad4a-8d6f-4ccf-8991-d474557d4b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc02aa09-47cc-43fc-acf2-f809c7bbcd54",
        "cursor": {
          "ref": "6df3e808-e6a0-4808-afc4-acfa73c4d1fb",
          "length": 252,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "decb22ac-d3b4-409f-b630-bcd566472c66"
        },
        "item": {
          "id": "bc02aa09-47cc-43fc-acf2-f809c7bbcd54",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "47b32f0b-8263-47ee-9887-277fc5120bd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a4c9ac3-9d57-4361-acc8-65222b97daf9",
        "cursor": {
          "ref": "34fc6f45-5d91-4225-908f-17db4847f05b",
          "length": 252,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "11f7fa7b-f994-4728-ae69-5d519bf6a44f"
        },
        "item": {
          "id": "0a4c9ac3-9d57-4361-acc8-65222b97daf9",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "631e3c27-975c-44e6-b99c-9a2f2eee7b1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee33ac3b-d2a7-4ef2-8cb1-b8d6b59c1dce",
        "cursor": {
          "ref": "12489f50-88e0-497d-8dc6-6aea6940c35e",
          "length": 252,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "023a537d-4643-4f05-a987-98329fbae33d"
        },
        "item": {
          "id": "ee33ac3b-d2a7-4ef2-8cb1-b8d6b59c1dce",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e51793ed-1cd9-4a64-9cdd-cf1c1bdf7a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ded337f5-2c1f-405e-bc94-aeb3b188b704",
        "cursor": {
          "ref": "f2ca8d68-68e2-4730-8317-673914d54d2f",
          "length": 252,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "121bc95c-d278-4535-a7eb-6d133b088ef0"
        },
        "item": {
          "id": "ded337f5-2c1f-405e-bc94-aeb3b188b704",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "1c512ebd-842e-4636-82e2-0e9003a5cb84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f49f7e54-9e71-4561-8383-f75ef1631f82",
        "cursor": {
          "ref": "deca6bb8-a9fe-4a4f-b7c8-e524c0654c9a",
          "length": 252,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "5c528a7f-d56e-4ba4-8d20-d730bebef40b"
        },
        "item": {
          "id": "f49f7e54-9e71-4561-8383-f75ef1631f82",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a02323bc-290d-4f63-bda3-41787d8de261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a523b9e-e954-4ceb-805a-1b8ddc6e5ac7",
        "cursor": {
          "ref": "3a2a8fcc-931e-4ce7-a6b1-e517a0881128",
          "length": 252,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e8f088c3-3a2f-4f14-846d-b9102c6c8117"
        },
        "item": {
          "id": "5a523b9e-e954-4ceb-805a-1b8ddc6e5ac7",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "b7efa942-d0e3-4d29-a9f5-f7ba4e2de987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "519ae236-bf9f-4627-a0fe-4707bc4965af",
        "cursor": {
          "ref": "3b2d4be0-ede2-43b9-b35d-a7723384bfc3",
          "length": 252,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "375bb47c-d0a3-433c-82a5-97ac1e676013"
        },
        "item": {
          "id": "519ae236-bf9f-4627-a0fe-4707bc4965af",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "0af47cab-0290-48ec-aa0b-034d3fd5d2ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e942ac3-d166-49e5-af4f-502ca695f3a8",
        "cursor": {
          "ref": "ac51d513-1d9e-43bd-be27-5a42a28c584c",
          "length": 252,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "1c4749e0-d325-459e-80fb-d76ee80ccb43"
        },
        "item": {
          "id": "1e942ac3-d166-49e5-af4f-502ca695f3a8",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "6fcfa337-d9bc-4b70-a9af-2fd2e1898000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4783d004-874d-4734-85be-5a3f94791875",
        "cursor": {
          "ref": "9f66d8cd-9fcb-4879-a6cb-712c0090c1f5",
          "length": 252,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "80d7aa3f-c404-4be2-b988-a50d4b90e78d"
        },
        "item": {
          "id": "4783d004-874d-4734-85be-5a3f94791875",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "8ace516a-aa2f-4953-861d-9b4fd50f37b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e9d2498-8acf-4e79-bcf3-a039baf6f19e",
        "cursor": {
          "ref": "fccd052c-d849-4851-8e03-8b183fe84692",
          "length": 252,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c723d62c-67d2-4dd8-8227-6aa72252b3f6"
        },
        "item": {
          "id": "7e9d2498-8acf-4e79-bcf3-a039baf6f19e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "efdc3941-ecb5-4375-a157-180cbd18e5ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58fc6f60-2819-4788-bbf0-9d9e46f82034",
        "cursor": {
          "ref": "99f4a8c5-8a44-46ff-891a-f81033947aec",
          "length": 252,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "915ae8d5-2a29-4748-b229-469a427995d0"
        },
        "item": {
          "id": "58fc6f60-2819-4788-bbf0-9d9e46f82034",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5eeab1a5-a6d7-41fb-8515-ee0d50469b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a768b503-d8ef-4ce4-a266-4bd708a15f39",
        "cursor": {
          "ref": "7a34ead2-9809-4f7b-be14-a9c92e0a3688",
          "length": 252,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d44433bd-a534-411b-9de9-6e9af0a7f060"
        },
        "item": {
          "id": "a768b503-d8ef-4ce4-a266-4bd708a15f39",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "69301a1f-e692-4a7d-8450-0a79a0046eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7aa5025-b421-4d95-afdb-65ee8728b375",
        "cursor": {
          "ref": "7782049e-66b4-498c-ba14-d5de86e4f690",
          "length": 252,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "73fa786a-97c3-4c14-987a-a57ecc187f72"
        },
        "item": {
          "id": "d7aa5025-b421-4d95-afdb-65ee8728b375",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "478fff9b-e9e5-4414-aac4-f868cd11fe18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76bad43d-fc2e-407c-825f-d9b38e882f1f",
        "cursor": {
          "ref": "3d5819e0-2dd4-4604-90ab-5a006d99047f",
          "length": 252,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c559a52e-b711-4172-a229-b9f623f2486a"
        },
        "item": {
          "id": "76bad43d-fc2e-407c-825f-d9b38e882f1f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "fa93d6aa-5a17-4575-b9ec-cfe0f5a73f1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "089606fa-7e66-4f0e-b1bd-7d18c573a5bc",
        "cursor": {
          "ref": "abc8544b-cf74-4786-89b6-1834a5f99ced",
          "length": 252,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "7571c850-c141-481f-9964-4791e54936b7"
        },
        "item": {
          "id": "089606fa-7e66-4f0e-b1bd-7d18c573a5bc",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "941d4cee-d1dc-455e-8ce5-53b8e33dfc23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 735,
          "responseSize": 466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "285b1315-6db6-46ed-a320-7468b05f1055",
        "cursor": {
          "ref": "b08c17ea-d5e6-4b82-960c-4b27b9b05c75",
          "length": 252,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "169f49e7-badc-4d67-bd8c-6331a9c43afc"
        },
        "item": {
          "id": "285b1315-6db6-46ed-a320-7468b05f1055",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "4f9866f4-81e5-49ab-9495-276f70c47c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b703da9-085b-4196-ab02-3dc85696c649",
        "cursor": {
          "ref": "3c4decc0-0f81-436c-b395-5c83cb0eb9c3",
          "length": 252,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "dfbeb4e2-a4c4-45ec-a976-994949cd94df"
        },
        "item": {
          "id": "7b703da9-085b-4196-ab02-3dc85696c649",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "84ca8bd1-a96d-418e-8607-18b3699563de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 727,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "258c36a5-f1c6-440e-be81-62ec47c0d020",
        "cursor": {
          "ref": "a4c1e484-be65-4961-8f04-3037da5592b2",
          "length": 252,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "0f540cd2-c958-4d63-87ee-8b46158a7c85"
        },
        "item": {
          "id": "258c36a5-f1c6-440e-be81-62ec47c0d020",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "d5ce0059-1377-4f8c-8363-3d3a5ac69567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 711,
          "responseSize": 892
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "179c4a58-e00f-4c21-b303-9f497ed433d0",
        "cursor": {
          "ref": "14fab23c-ef13-4585-9ffa-b8c1bab9e2a4",
          "length": 252,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "030cca9b-afb7-49ab-bfbe-2d87a47ad62a"
        },
        "item": {
          "id": "179c4a58-e00f-4c21-b303-9f497ed433d0",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "adde33a9-970b-45e7-8ce6-ad62c7c331c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d47ccf2-1eac-470a-8f50-ab70e51f3744",
        "cursor": {
          "ref": "f0319fa7-da73-43dd-a08c-7b63fb6feb18",
          "length": 252,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "8ac2e64e-0abb-4fb7-b686-5a9f28a833d8"
        },
        "item": {
          "id": "9d47ccf2-1eac-470a-8f50-ab70e51f3744",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "59a09194-9e63-47c6-a305-809573ad43db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "194ceddf-5291-4cf7-b1f1-57ff894fd449",
        "cursor": {
          "ref": "1e4816de-0853-45b6-88aa-beaf4346179a",
          "length": 252,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "6d8b2b47-092d-416d-93f7-8f605f5c517a"
        },
        "item": {
          "id": "194ceddf-5291-4cf7-b1f1-57ff894fd449",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "7bef2d7d-ab72-4d2f-897f-bf8d4028b9cb",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 729,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b166b1fc-43f3-491d-8a1f-0ec75e256ffa",
        "cursor": {
          "ref": "c0608dcc-aa12-487f-b3b6-a013390fd141",
          "length": 252,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "bdab4d93-e811-48b1-8441-7c0145a114be"
        },
        "item": {
          "id": "b166b1fc-43f3-491d-8a1f-0ec75e256ffa",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6acd25a8-aaab-47f9-8396-df7a10edea48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dab75c9-9318-4355-81f9-a44c7049212b",
        "cursor": {
          "ref": "acddcd8e-2095-44fe-ab74-bc775f747626",
          "length": 252,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "c1a3c900-5a4a-476b-825e-ffbc54e85fae"
        },
        "item": {
          "id": "7dab75c9-9318-4355-81f9-a44c7049212b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "9c3bfcf4-25af-4d02-9ac6-b1c442e064bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 1305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac959d3-7244-4713-9a8b-69a80d21e887",
        "cursor": {
          "ref": "2a9f5796-2990-4c66-ac74-2d4c33c4ed0c",
          "length": 252,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "14b02dc9-fc53-4fe8-9133-e55acd23cbeb"
        },
        "item": {
          "id": "eac959d3-7244-4713-9a8b-69a80d21e887",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "58a424f9-7717-426b-ae13-69aef3b7a55a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "436b1f4d-5d92-44a0-96c0-7cb3b3c55ebb",
        "cursor": {
          "ref": "ce6f859e-4d6a-47a2-be35-8d33065348ef",
          "length": 252,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "26fd1ea0-15b5-4f0e-a80f-e7fd6d04d8ed"
        },
        "item": {
          "id": "436b1f4d-5d92-44a0-96c0-7cb3b3c55ebb",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "844655f0-7041-4ac6-a004-66b040d7626d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be45c93-1dbf-4c3a-98c9-077e745972a0",
        "cursor": {
          "ref": "346a1d98-742d-4d4e-8d6d-9136d7bae2d9",
          "length": 252,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "639c4656-00ed-405f-83c2-006c485c3786"
        },
        "item": {
          "id": "7be45c93-1dbf-4c3a-98c9-077e745972a0",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a9b1dd40-92ce-4da9-b38c-b136de5e466a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "578a44d4-430f-4766-b6dd-3f979b815dcd",
        "cursor": {
          "ref": "c923dc74-5f69-4379-b9ff-ee0faefa4a4c",
          "length": 252,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a21ee6b1-be0c-4a7f-b66b-5a2e5f4f5a56"
        },
        "item": {
          "id": "578a44d4-430f-4766-b6dd-3f979b815dcd",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "52f313dd-83de-4613-a5dd-09c4e23f068c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 1636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ba6461-9413-4680-bae2-ff33a2a57534",
        "cursor": {
          "ref": "7d9ee876-17b0-4237-802d-5033e9bc188e",
          "length": 252,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "fe466a38-3c49-4a08-891b-910931b657de"
        },
        "item": {
          "id": "74ba6461-9413-4680-bae2-ff33a2a57534",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "8c2466ce-ae30-4e4f-8743-9972de1ccec2",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 641,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5320a8f-8573-4cf9-8484-6c81fb046642",
        "cursor": {
          "ref": "8d0c8229-c879-4176-acd8-9858a5eb1c74",
          "length": 252,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "79f0e25b-3c0b-4df2-a763-e7d7aa6f2292"
        },
        "item": {
          "id": "d5320a8f-8573-4cf9-8484-6c81fb046642",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "cf211680-aecf-4ba1-a493-de08cc07c07a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 773,
          "responseSize": 524
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c28be5-59e9-40dc-ba45-f61c1bf3ac12",
        "cursor": {
          "ref": "2bb5e1be-dc3a-4ec0-a7db-ab6e39b8c68f",
          "length": 252,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "debcfa63-a04d-4dae-ac7c-601d6fcd7cf4"
        },
        "item": {
          "id": "a3c28be5-59e9-40dc-ba45-f61c1bf3ac12",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "9d909144-297f-4137-a8df-0702ce70d8c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 548
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6a962f-9abc-428c-985b-0479e7e7eb8a",
        "cursor": {
          "ref": "dd78fa5c-c946-4aec-a215-a763f56900c7",
          "length": 252,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b30695ef-621a-424a-9581-94619dfa874b"
        },
        "item": {
          "id": "de6a962f-9abc-428c-985b-0479e7e7eb8a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "501ff6db-5830-4c8f-be47-b8b9fdf17519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff8dc55-db10-4eae-8c44-868e8ddee158",
        "cursor": {
          "ref": "244cec9d-3b7d-4721-910a-bea3c4049ac5",
          "length": 252,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "bd0657c0-11a8-4328-8bc9-4e83d9091ce0"
        },
        "item": {
          "id": "3ff8dc55-db10-4eae-8c44-868e8ddee158",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ea0fcc9f-60e4-4788-b2e9-06a7d1302a1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e903bb17-4961-4c93-9a91-236def58815b",
        "cursor": {
          "ref": "3a9af000-532a-46a8-b449-31673764ea5b",
          "length": 252,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "3103594d-dcf7-4489-ad73-86413daf17aa"
        },
        "item": {
          "id": "e903bb17-4961-4c93-9a91-236def58815b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "d03913bf-32f2-4264-a7fb-1c455a1e12b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3364d538-3c17-4eb2-abc2-eaff5c0f3dfd",
        "cursor": {
          "ref": "c13c01f8-024b-4ad5-b667-a98654a17853",
          "length": 252,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c165e4dd-3750-4793-8b0a-04c4ae9f72de"
        },
        "item": {
          "id": "3364d538-3c17-4eb2-abc2-eaff5c0f3dfd",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "4942c1dc-233b-489d-9b80-ad3b64a06d11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb37a311-f459-428d-b6de-74b89a4a0280",
        "cursor": {
          "ref": "79215ea7-5491-4df3-bdc4-bb0a8f6d73f6",
          "length": 252,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "76e59047-46d5-4bbc-a2d7-fc4a497cb4d1"
        },
        "item": {
          "id": "fb37a311-f459-428d-b6de-74b89a4a0280",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9132edd1-472b-4ab1-8d12-59c38ddf3702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f16259-8ea8-46ae-b607-6fa962d300d5",
        "cursor": {
          "ref": "2ae8b70f-eafd-46d9-9043-0b68aaa2f7b0",
          "length": 252,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "cf1086e3-71d8-46e9-bc1d-5fe3753e2912"
        },
        "item": {
          "id": "51f16259-8ea8-46ae-b607-6fa962d300d5",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a68533e0-a956-4156-9b99-90ae9cba5f0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e54bb3-c9a9-463f-b551-61b7ec261a79",
        "cursor": {
          "ref": "1ce93dac-a5ff-4b36-8564-7b76ca2e191e",
          "length": 252,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "07646675-6cfe-45f2-bdfe-994581c393cc"
        },
        "item": {
          "id": "f8e54bb3-c9a9-463f-b551-61b7ec261a79",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e73f71c4-60f2-4c93-98c5-fa7a8bb429b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91bb336-33b6-4aa9-b6e5-f0139fe45167",
        "cursor": {
          "ref": "964a7acf-0870-4431-a3c0-4a7176e623ed",
          "length": 252,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "885707bd-653f-4dcb-9060-8270ce1bf541"
        },
        "item": {
          "id": "a91bb336-33b6-4aa9-b6e5-f0139fe45167",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "2e0638ab-ed70-4de2-a360-91ea6ca55f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94cc09d3-4754-453b-9bac-f3e2c5f4b87a",
        "cursor": {
          "ref": "0d36dfb4-0924-4635-a60d-bda8221468a2",
          "length": 252,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6a4af67c-4366-4e0b-940e-95749e807cd1"
        },
        "item": {
          "id": "94cc09d3-4754-453b-9bac-f3e2c5f4b87a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "45d44e4e-0198-4d08-8e9b-398fb99a708e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 826
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de859f0-2e12-42c9-b644-e18d843871d1",
        "cursor": {
          "ref": "0ee9f7e2-3652-41bd-a6ef-85adb0bb3dda",
          "length": 252,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "6fbd4fec-e27a-40cf-921f-5f9004c11bc4"
        },
        "item": {
          "id": "0de859f0-2e12-42c9-b644-e18d843871d1",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "7562660d-0a7c-417b-82ab-f610161d1c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 828
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc4844fd-ed80-42c8-bfff-5c2ba2334a60",
        "cursor": {
          "ref": "b1396438-bb5d-4cc6-8638-6a610a09babb",
          "length": 252,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9f797178-c05e-41bd-9595-35b4c1757d1b"
        },
        "item": {
          "id": "fc4844fd-ed80-42c8-bfff-5c2ba2334a60",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "f9b29f8c-443c-4de9-bafb-ebe515238a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 841
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "779ff1a9-498d-4c4a-978c-f31d917b94c5",
        "cursor": {
          "ref": "a867eb44-c287-4827-a26c-733f0778a3c0",
          "length": 252,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "957b6757-5935-4f0b-885d-9b11bc0f41ba"
        },
        "item": {
          "id": "779ff1a9-498d-4c4a-978c-f31d917b94c5",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f534059b-86ec-4fcd-971b-e2913ce46162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48a83700-bbfa-40ff-8e4f-1586240bb315",
        "cursor": {
          "ref": "dd7757eb-d0f6-4605-a3e2-bd81b52425a8",
          "length": 252,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "33a1ce57-e82c-4cac-a990-fe1641d10c46"
        },
        "item": {
          "id": "48a83700-bbfa-40ff-8e4f-1586240bb315",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f833e5a8-2ee7-4abd-821f-a000dd106488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3325699d-1f15-4c5c-8f1e-e51d71343692",
        "cursor": {
          "ref": "35a6c176-5589-41cd-a45b-bb3084cf9206",
          "length": 252,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "7dd4bb48-9406-46d1-8141-19716cd728fb"
        },
        "item": {
          "id": "3325699d-1f15-4c5c-8f1e-e51d71343692",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3ac4f79c-6a02-49f5-a719-cbb692463783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 732,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27bddd6f-f70f-4e3b-a11e-095d3a624b35",
        "cursor": {
          "ref": "48be705e-b5fd-45ae-b9c7-a6f18c076432",
          "length": 252,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "caf9d74d-5afe-4b8f-8f9a-84f34ef38651"
        },
        "item": {
          "id": "27bddd6f-f70f-4e3b-a11e-095d3a624b35",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "8cbf21f5-a10b-4902-a2f1-6103a95aac80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 1320
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf90545-4f1a-4418-898e-4bcc6582dd4c",
        "cursor": {
          "ref": "61eaa533-72b4-4d03-a1c4-d1a401604fa5",
          "length": 252,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ebe602a5-e24e-4b90-a409-490b0fae75ed"
        },
        "item": {
          "id": "9bf90545-4f1a-4418-898e-4bcc6582dd4c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c965ab4f-4d2b-41b4-be5a-322c6cb1fa18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 818,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab8d108-ad27-43f0-b94e-200296b86299",
        "cursor": {
          "ref": "f4ea7812-3312-4834-a86d-91e5593ca816",
          "length": 252,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "47198ea1-b58c-43c2-9b93-f35efc4fe80e"
        },
        "item": {
          "id": "2ab8d108-ad27-43f0-b94e-200296b86299",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "4574c834-96e8-4444-9b68-199e18742700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6215712-b261-49b1-bea2-382ee968cef2",
        "cursor": {
          "ref": "4f2e38be-b0a1-4e83-8892-a044ce36c51e",
          "length": 252,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d213619e-2cb8-44cf-941d-135dffb7262e"
        },
        "item": {
          "id": "b6215712-b261-49b1-bea2-382ee968cef2",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "1a7fda0f-d726-4b5a-a175-765b7ee78bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da6eecd-20fe-46ff-a8e0-a14bfffd2fd9",
        "cursor": {
          "ref": "deb700fd-fc69-49ac-ba94-7913df840708",
          "length": 252,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "1dc5888d-accc-41ba-9480-13383d9c8eeb"
        },
        "item": {
          "id": "8da6eecd-20fe-46ff-a8e0-a14bfffd2fd9",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "d27f35db-565b-42af-b078-58378ae75b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "306051e1-0590-4b54-bce0-3e0acc392359",
        "cursor": {
          "ref": "04006c60-9802-426f-b257-61b5eded19c7",
          "length": 252,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d5dea573-07ac-4a7e-b08a-11005cfa8b5e"
        },
        "item": {
          "id": "306051e1-0590-4b54-bce0-3e0acc392359",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "bc856d50-ebae-4172-ac0b-294663a5ec8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71164dc3-b437-41f7-b301-486cf8b10a54",
        "cursor": {
          "ref": "570289a7-c5b7-41b8-8da6-60bf6bb4688b",
          "length": 252,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "464f6871-516c-440d-9d3a-698404ccdd2f"
        },
        "item": {
          "id": "71164dc3-b437-41f7-b301-486cf8b10a54",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "7b75afdb-d591-44d9-b192-447b5bdf92d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de943883-18a0-4925-86dc-2df59454ce70",
        "cursor": {
          "ref": "565cc458-b330-4dc5-9219-edb1c508d3ec",
          "length": 252,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ed132497-3920-49a7-b5bd-108abda2f83d"
        },
        "item": {
          "id": "de943883-18a0-4925-86dc-2df59454ce70",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "7d887492-ff40-467a-91d3-2e72fe444bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d095ca-651d-4cdb-b528-20b9c472876f",
        "cursor": {
          "ref": "ce1776e8-97e8-467d-af28-561910786a91",
          "length": 252,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "2ad13a93-30d3-4e93-9264-abcca398a455"
        },
        "item": {
          "id": "d1d095ca-651d-4cdb-b528-20b9c472876f",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "540f95c9-4f25-4add-8897-4e5832c9f9ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e8c4f0-1e3e-407b-a3f5-3ea3bd817573",
        "cursor": {
          "ref": "083d6df5-f918-47de-8e82-6d6228843ad8",
          "length": 252,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "60815f7a-d3e8-4e33-8731-7af8bf23c2c6"
        },
        "item": {
          "id": "80e8c4f0-1e3e-407b-a3f5-3ea3bd817573",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "7681f00a-ec6b-4665-be12-df7bc1213dfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fee2315-f6a1-48d3-b673-2af09eb48ef9",
        "cursor": {
          "ref": "0dceff84-c975-4add-8be7-f0165bd75aa1",
          "length": 252,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "881d78b3-8b1d-421f-913c-6964d4e3ba7d"
        },
        "item": {
          "id": "2fee2315-f6a1-48d3-b673-2af09eb48ef9",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "3468cd39-e6db-46a5-b66b-0d7c62a5c419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 737
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c9a2f1-fe50-4447-b119-d4047d0c74a9",
        "cursor": {
          "ref": "cfad310d-3bbe-40a1-9967-00ee8c1146ea",
          "length": 252,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "888a941c-19ee-4779-8c51-b34f75fd2bbf"
        },
        "item": {
          "id": "81c9a2f1-fe50-4447-b119-d4047d0c74a9",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "99d3d60c-99d6-4bd7-ba12-b61924dfff58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 734
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a9ffbd-be34-41c7-85d1-a333491b267b",
        "cursor": {
          "ref": "fef11bbd-ae29-47ea-9158-99bd7b961a21",
          "length": 252,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6eecf41a-36c4-43cb-893e-7fb5e60238df"
        },
        "item": {
          "id": "c0a9ffbd-be34-41c7-85d1-a333491b267b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "48acf680-b662-485a-9d36-5070bb9fa442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 736
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb0d3721-8c57-49c2-b06c-6befa56d0ebc",
        "cursor": {
          "ref": "6a8d1e53-04d9-4ac7-8c08-db0713a507e3",
          "length": 252,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "9eb6b36c-1301-412a-b7c6-ee188d12ecdd"
        },
        "item": {
          "id": "eb0d3721-8c57-49c2-b06c-6befa56d0ebc",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "8abead30-3909-40b5-a4a2-2533d9dcbf84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 734
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a678fc-c839-4b51-8407-2aa9156d494f",
        "cursor": {
          "ref": "fcaccd8f-db0d-41c3-b408-aefd5f5aae56",
          "length": 252,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "07db294f-9f47-459f-bb0d-3eba9268a837"
        },
        "item": {
          "id": "85a678fc-c839-4b51-8407-2aa9156d494f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "f611cf19-b73d-46c8-86fa-07ab040449e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c57f3c-64b3-43fc-a3d6-fdd28ebf2a83",
        "cursor": {
          "ref": "78df90e5-1f69-4cd5-93d1-e223035b00c7",
          "length": 252,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "526adba7-a971-4da0-b3ae-b78fc10cbe07"
        },
        "item": {
          "id": "e5c57f3c-64b3-43fc-a3d6-fdd28ebf2a83",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "4c6e1798-ad44-475c-9fbc-e587256c94c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d46bda-36d1-4eee-bbe7-dcc84bf8f33c",
        "cursor": {
          "ref": "99a8a34f-409f-49bd-b6ff-e64a8e9b59a6",
          "length": 252,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f1357179-505c-4ad7-bb3d-11fd933aa191"
        },
        "item": {
          "id": "94d46bda-36d1-4eee-bbe7-dcc84bf8f33c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "f9d1464d-63fa-435c-9d8e-6754f4dace4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db133b39-2278-455d-9def-142bf51fbe68",
        "cursor": {
          "ref": "fba1b89d-8e37-4126-992c-2e054e22ba16",
          "length": 252,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b87f3762-d94a-4ba7-ad30-dd4caf2e88b0"
        },
        "item": {
          "id": "db133b39-2278-455d-9def-142bf51fbe68",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "9c943aeb-9d87-42a9-b74b-a4a53dcd6095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac47166a-a106-4b21-8e0e-74d121650133",
        "cursor": {
          "ref": "a04db68b-5648-4ece-b0c6-0bf438590329",
          "length": 252,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f8f3bdd0-f3a3-4bde-97fe-ffdc473db91e"
        },
        "item": {
          "id": "ac47166a-a106-4b21-8e0e-74d121650133",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "22b49a0d-f358-48c5-8ea0-4c5117b1a468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db291d7f-1ee2-402b-9014-4fd5e05b6dc2",
        "cursor": {
          "ref": "5196ff00-4e1c-43b6-8bbc-9828d022da89",
          "length": 252,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "90821087-b146-4f1d-ad3c-e912d10d3d8c"
        },
        "item": {
          "id": "db291d7f-1ee2-402b-9014-4fd5e05b6dc2",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "311bd2a3-f030-48c6-9354-b0e4787eee60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dbc65d2-e4b8-4116-a70e-49c27703db44",
        "cursor": {
          "ref": "b71f9577-431b-41c7-b8da-df6348ebf546",
          "length": 252,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "abf3b887-e953-4f97-9ea2-7abf6e6f1886"
        },
        "item": {
          "id": "2dbc65d2-e4b8-4116-a70e-49c27703db44",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "7f32b620-d645-4281-834c-b33d29253622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc1327e1-e6a8-4b85-9f9b-594c858d59b6",
        "cursor": {
          "ref": "7797716c-5a28-4372-8b15-d7fcc74770b0",
          "length": 252,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "520fbe82-97f1-434d-bbda-dbe3f3b28d15"
        },
        "item": {
          "id": "cc1327e1-e6a8-4b85-9f9b-594c858d59b6",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "bbca18bb-f784-490f-a9f2-c6b5ede75835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c541a6-121b-4a9f-b30c-5dc1a0c97911",
        "cursor": {
          "ref": "4eb59e66-d233-4635-a1cd-b8b2d1745870",
          "length": 252,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "639c8e26-2bc0-4b3f-99ae-44c925300d12"
        },
        "item": {
          "id": "17c541a6-121b-4a9f-b30c-5dc1a0c97911",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "58f29209-3ee0-4fe4-8a23-a16a09b60db0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2772f5-de35-4edd-bacf-2e55cb93419e",
        "cursor": {
          "ref": "f98406f3-1557-40ce-8550-e79f9bbc477a",
          "length": 252,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "839f0446-ba1c-4da7-bdc4-c545c0583d5b"
        },
        "item": {
          "id": "eb2772f5-de35-4edd-bacf-2e55cb93419e",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e1137337-adbc-43b2-80b8-74fa0333726c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "280b1a3e-17ca-4614-a5b8-56edec67fab7",
        "cursor": {
          "ref": "410cb51a-1dcb-4336-a342-f3e117345090",
          "length": 252,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "76bd8aca-80b5-4aee-86be-ce67f11df8f9"
        },
        "item": {
          "id": "280b1a3e-17ca-4614-a5b8-56edec67fab7",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "766860d9-8c56-4fd7-802a-ec3f2469b315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d87f1c-7195-4cfc-9436-90e9db6a4b4d",
        "cursor": {
          "ref": "4ccb89f2-5297-44d5-ae28-f4707de5b7da",
          "length": 252,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e76937f9-de24-4e2d-947b-4e44b970f858"
        },
        "item": {
          "id": "87d87f1c-7195-4cfc-9436-90e9db6a4b4d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "194263f3-3d42-454e-9057-9156901e09fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd2d697e-c229-4ca3-b6c8-96ac39f92d4c",
        "cursor": {
          "ref": "b3a50aff-adb8-45f0-8e26-b9f0d94146f2",
          "length": 252,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "52d3b278-1f62-417e-924a-1b9846fbf5e4"
        },
        "item": {
          "id": "bd2d697e-c229-4ca3-b6c8-96ac39f92d4c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "bd1f8470-6224-4b90-900a-0f95f8ae9361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e440094e-f49c-4555-a0bf-58cdfe4b6b5b",
        "cursor": {
          "ref": "bd5912f4-5e80-46b9-aab5-2f4ea6b01eec",
          "length": 252,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "fbd6f893-5893-4426-8d3d-ee335c548356"
        },
        "item": {
          "id": "e440094e-f49c-4555-a0bf-58cdfe4b6b5b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "6f97582c-b946-4346-8cda-31d7ac85c504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 873
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa6c8ad-94d9-488d-add2-c92c40e0e233",
        "cursor": {
          "ref": "f9c63f3b-0b2d-4859-b78e-7476cb6d613a",
          "length": 252,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f979b36e-6f39-4bbb-814d-11efc6271a80"
        },
        "item": {
          "id": "1fa6c8ad-94d9-488d-add2-c92c40e0e233",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c884d8a7-5704-446a-b3de-548512b27bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 850
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9123c8f-29b8-4d76-9e09-9f4eeb74c14e",
        "cursor": {
          "ref": "e4cb4639-f409-4722-9b39-f73a426254f6",
          "length": 252,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "72d7185b-e02b-426b-8071-3450f463eae2"
        },
        "item": {
          "id": "d9123c8f-29b8-4d76-9e09-9f4eeb74c14e",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "8cc66c19-0876-4456-a724-555d1b973487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 847
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c680cacf-90ce-47b6-9dd2-d06b9015ad82",
        "cursor": {
          "ref": "bcd0bece-6efc-4e3e-8560-4ce589dfc3bf",
          "length": 252,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b8468097-f192-4c00-a11f-13ce3bf692b1"
        },
        "item": {
          "id": "c680cacf-90ce-47b6-9dd2-d06b9015ad82",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "bba64003-0b7a-4108-8984-a34844fb581d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 849
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea22e6b-ec84-4ea4-87ab-d7c9452093e9",
        "cursor": {
          "ref": "a50f6e6c-f0f6-4a9b-9ac2-f5d33d27ee93",
          "length": 252,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "2d9b173b-3e66-488d-b8da-126d36ba2e78"
        },
        "item": {
          "id": "8ea22e6b-ec84-4ea4-87ab-d7c9452093e9",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b8e8ce19-d8bb-408a-baa9-c27712aa090e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 758,
          "responseSize": 847
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a037a7ef-dd45-48a8-aed0-7ef9d79af372",
        "cursor": {
          "ref": "a22884e1-4400-427b-a0ed-1faec098e10c",
          "length": 252,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6b365340-e6b3-46ca-8143-024fada18046"
        },
        "item": {
          "id": "a037a7ef-dd45-48a8-aed0-7ef9d79af372",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "34689f28-444e-4ce5-a108-b4ebf8b2e7f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 736,
          "responseSize": 673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c8d0c0-d091-4c7c-a54c-82c7783e9866",
        "cursor": {
          "ref": "ca1f9ac5-9b8c-4971-ab92-e9d4faacfdbc",
          "length": 252,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "06a6feb9-9345-42dc-abe6-1abc956b6970"
        },
        "item": {
          "id": "82c8d0c0-d091-4c7c-a54c-82c7783e9866",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6d438c3b-a950-4185-a79a-03ea72e273e2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b6beb6b-2fd8-4e9e-92f2-d7b6d16ace8d",
        "cursor": {
          "ref": "768f9a45-2b58-48cc-bcc5-4df6f717693c",
          "length": 252,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "4c2dacf0-f3a0-49c0-9d3a-520e371f8338"
        },
        "item": {
          "id": "4b6beb6b-2fd8-4e9e-92f2-d7b6d16ace8d",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "a6afd743-efec-44dd-9a49-ecfd12b67d5a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 723,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab7f065-5424-40f0-a482-fe7b98ea190d",
        "cursor": {
          "ref": "53509f6d-8d91-488d-8acb-492e4dd1906f",
          "length": 252,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "51d2947b-1582-4ee8-88d8-9e542b3f5bee"
        },
        "item": {
          "id": "0ab7f065-5424-40f0-a482-fe7b98ea190d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ae937bac-bf9f-4cb3-a2a3-dd62ac9815ec",
          "status": "Created",
          "code": 201,
          "responseTime": 2948,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:104)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:104)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:104)"
            }
          }
        ]
      },
      {
        "id": "d5bb4d15-9959-4138-a34d-48be7282d652",
        "cursor": {
          "ref": "1cf25037-7a6e-45ac-8d3a-e4b0d259cd01",
          "length": 252,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "3a34e0bb-f6ae-4868-822b-997087f16e8c"
        },
        "item": {
          "id": "d5bb4d15-9959-4138-a34d-48be7282d652",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "abac0c11-2456-425c-b2c8-5f1e97a8b4f3",
          "status": "Created",
          "code": 201,
          "responseTime": 2223,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          }
        ]
      },
      {
        "id": "0ba978df-43e1-44fe-b638-c9a2ac3e2df0",
        "cursor": {
          "ref": "bbbf90fc-b76b-4272-a63a-1b5bf4aa854b",
          "length": 252,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e097adea-3fc3-4615-b1b4-98a2c52e3dae"
        },
        "item": {
          "id": "0ba978df-43e1-44fe-b638-c9a2ac3e2df0",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "2fb8a0d8-acf6-419b-835e-35a81d44b10f",
          "status": "Created",
          "code": 201,
          "responseTime": 2441,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "4342222f-d0dc-4b0c-b228-c9ca6c9ad789",
        "cursor": {
          "ref": "71359b7c-fb31-479c-aa69-8da8806eb468",
          "length": 252,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7edfa44d-0d66-4ba3-93f3-7639ef3941ac"
        },
        "item": {
          "id": "4342222f-d0dc-4b0c-b228-c9ca6c9ad789",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "6a7d82a8-17c3-4763-8fc9-65450f11abd6",
          "status": "Created",
          "code": 201,
          "responseTime": 2606,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "0169d218-0a32-4b3a-9303-2160bc5566c0",
        "cursor": {
          "ref": "1ae5a584-f843-46e4-9f04-dd11c956b615",
          "length": 252,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "3b8fd7f0-2558-4845-8394-f319b339f825"
        },
        "item": {
          "id": "0169d218-0a32-4b3a-9303-2160bc5566c0",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "92c35b65-b219-43db-afd0-b2121268eb69",
          "status": "Created",
          "code": 201,
          "responseTime": 2267,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:108)"
            }
          }
        ]
      },
      {
        "id": "9a10a38d-b481-432b-b711-dbe83567e02c",
        "cursor": {
          "ref": "22605acf-71d1-464d-9edf-eafacf97eaec",
          "length": 252,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "661fecda-2c39-45e0-a1a8-daadc1440d2a"
        },
        "item": {
          "id": "9a10a38d-b481-432b-b711-dbe83567e02c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "7e1caa35-fd80-47ab-a13c-1b1c9ed5ede1",
          "status": "Created",
          "code": 201,
          "responseTime": 3129,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          }
        ]
      },
      {
        "id": "13c70056-db37-47ed-8694-937ddfc3b417",
        "cursor": {
          "ref": "f12d9c12-ac01-4e88-b165-8414ed81dfbf",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "56808240-fa98-498c-bd7b-f54af99e1b31"
        },
        "item": {
          "id": "13c70056-db37-47ed-8694-937ddfc3b417",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "787be63c-94df-4917-98b9-89786dde8e9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c70056-db37-47ed-8694-937ddfc3b417",
        "cursor": {
          "ref": "f12d9c12-ac01-4e88-b165-8414ed81dfbf",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "56808240-fa98-498c-bd7b-f54af99e1b31"
        },
        "item": {
          "id": "13c70056-db37-47ed-8694-937ddfc3b417",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "787be63c-94df-4917-98b9-89786dde8e9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65582328-e4ee-44f6-8025-34617f3276ce",
        "cursor": {
          "ref": "94b579fd-9c47-409e-9ffe-d67fcf4e5d0c",
          "length": 252,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "385a1899-22cd-4589-a8f2-9fe35b79148b"
        },
        "item": {
          "id": "65582328-e4ee-44f6-8025-34617f3276ce",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f284c01f-b130-4034-9a1b-8b05474d7812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf28adb-3e18-4fb1-83ab-a3116066ff13",
        "cursor": {
          "ref": "2297826f-177e-44fb-b652-92db0ed913dd",
          "length": 252,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ae24ff50-93f2-4ac6-8110-394796b746a1"
        },
        "item": {
          "id": "9bf28adb-3e18-4fb1-83ab-a3116066ff13",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "020736d9-6511-45ab-970f-eb37096f2d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e333b4-ff6f-4246-8e65-10b092234ea7",
        "cursor": {
          "ref": "d59c1256-444c-4adf-a336-7352edc4a0b0",
          "length": 252,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b80653e9-764d-4374-a163-6f93f858534c"
        },
        "item": {
          "id": "a6e333b4-ff6f-4246-8e65-10b092234ea7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9091ad76-7ab6-43dc-a590-2198c90bafad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51518e24-dd7e-49d9-bc25-f991a018b919",
        "cursor": {
          "ref": "75bfa76d-a8b0-4404-9a38-b72436ef6f95",
          "length": 252,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "eef63fab-1804-4961-a729-0d12fa4ab832"
        },
        "item": {
          "id": "51518e24-dd7e-49d9-bc25-f991a018b919",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "952d13c2-9b47-42a3-b535-094a79bc971b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cbce298-9192-43a9-9f9c-f815d2e3aa1e",
        "cursor": {
          "ref": "eda3e03d-3155-4d55-a008-b21edf5a26d9",
          "length": 252,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f3da6962-3d5d-42f1-9f60-6a4f007a92f8"
        },
        "item": {
          "id": "5cbce298-9192-43a9-9f9c-f815d2e3aa1e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9616989b-f0b2-4256-ab57-fd7b95f26317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beca95a4-983b-48bd-9123-81e75fab3327",
        "cursor": {
          "ref": "a617961f-21e4-4f92-a163-70fd264d7e8e",
          "length": 252,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "8f492242-9ba9-45e3-968d-a79ee4b66899"
        },
        "item": {
          "id": "beca95a4-983b-48bd-9123-81e75fab3327",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3bdd9cf6-e987-4162-92b9-127d37919abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f68797b4-fef7-4f61-84e1-ccfc1df3c57f",
        "cursor": {
          "ref": "ed5ede86-cfae-47aa-90ce-a76cd0ab0ba6",
          "length": 252,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d70014fd-b365-4d3c-a00b-af425b83f17b"
        },
        "item": {
          "id": "f68797b4-fef7-4f61-84e1-ccfc1df3c57f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "45e14898-cd46-42ca-a1fe-4aa24885231d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9dcc13b-110c-4fc5-b977-b42cceb71f59",
        "cursor": {
          "ref": "5a461f31-aed2-4e29-a779-bdbc7e7f18f4",
          "length": 252,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ac3a60c9-df3a-498c-9bb7-ef69072e8684"
        },
        "item": {
          "id": "e9dcc13b-110c-4fc5-b977-b42cceb71f59",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f61ab360-6080-4e99-bca9-eb91229af14f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12619163-a424-40e9-a8dd-ac63b52c64a8",
        "cursor": {
          "ref": "8e19f0d7-dbe1-42f1-bb28-3704d8e2c2cc",
          "length": 252,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f264f9cf-2ec4-4eab-b3a8-cba4682ceb05"
        },
        "item": {
          "id": "12619163-a424-40e9-a8dd-ac63b52c64a8",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "24856b8c-bc08-4131-bc3c-8b061c4f40dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c6607c-e688-47c3-8e65-eb11ad9a03a9",
        "cursor": {
          "ref": "fb41903e-07c1-41cb-a321-2d6c30d019a2",
          "length": 252,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "4026aa32-21a4-4205-8fc6-715de23586cc"
        },
        "item": {
          "id": "91c6607c-e688-47c3-8e65-eb11ad9a03a9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7b2f1e46-917e-454d-aa50-9f19ae09f9ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c58db6f-3a74-4a3f-8219-338b7547415c",
        "cursor": {
          "ref": "efd3b9fc-0189-4db4-887b-53d0de9c35ef",
          "length": 252,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "448a20ca-dc06-4175-be3e-58b3af6dde9a"
        },
        "item": {
          "id": "4c58db6f-3a74-4a3f-8219-338b7547415c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d57b6e21-67af-4c7b-a808-7e7dcda714e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4fc382b-114a-4a71-a981-5d6cf9e4e061",
        "cursor": {
          "ref": "dd9a88cf-9ad2-4646-bed4-adf91aef4048",
          "length": 252,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "1768bb15-8278-42f1-81fe-92fbacf17499"
        },
        "item": {
          "id": "f4fc382b-114a-4a71-a981-5d6cf9e4e061",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b955ebd3-3f02-4e30-9025-aa57d530c83a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d749c9a1-bc22-4f1d-b5ec-1b69a6637f4d",
        "cursor": {
          "ref": "152fed6f-4927-4818-8a86-4bec634ea6e8",
          "length": 252,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "620a5cd4-bba2-405d-9632-989904643838"
        },
        "item": {
          "id": "d749c9a1-bc22-4f1d-b5ec-1b69a6637f4d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b18b4097-0e3d-41d1-b23d-12b76603fd3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ed79aa-05d9-4e44-9d7e-f1d331198a53",
        "cursor": {
          "ref": "6f8ddf76-6f2f-430c-9552-8591d8a9bf6b",
          "length": 252,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "9125d6a0-3125-4cb8-88e2-2578d9577c54"
        },
        "item": {
          "id": "25ed79aa-05d9-4e44-9d7e-f1d331198a53",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e8de4dc6-fa24-4af9-81cb-0c9b54da2582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3fca5d1-ed1e-4d2f-8155-57430decc674",
        "cursor": {
          "ref": "270cdd87-d20e-4e0c-ae51-17298caf9d64",
          "length": 252,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "68df0f09-3163-4700-b8cc-333b2e6b9303"
        },
        "item": {
          "id": "a3fca5d1-ed1e-4d2f-8155-57430decc674",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b2c07c6f-6c19-45a2-a9ba-c081ce93104d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0d59d9-3369-4fbd-b69a-317bcd2cdb3b",
        "cursor": {
          "ref": "09c5ab5a-926e-4e47-aea0-c8ec6adf3e30",
          "length": 252,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "679e4ce5-6db4-4074-88a3-7d85c5fc155e"
        },
        "item": {
          "id": "1f0d59d9-3369-4fbd-b69a-317bcd2cdb3b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f980c4a7-2ea0-48d4-8e95-4e468e3c7dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a9f6e2-c612-496d-910d-b338a122f5f0",
        "cursor": {
          "ref": "b0da9bef-2b79-478b-a629-7e31390fcbf2",
          "length": 252,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3b68b8b2-faed-46f7-a94f-4a7466b9ec79"
        },
        "item": {
          "id": "09a9f6e2-c612-496d-910d-b338a122f5f0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "4713461f-864b-4cc5-8d0d-1f382d7d05a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f907de96-6d29-4740-bea3-56542647a838",
        "cursor": {
          "ref": "b9be1953-4303-4634-8f53-0c08d15e2753",
          "length": 252,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "1d120ebe-24ce-4456-aa8f-19a67062581b"
        },
        "item": {
          "id": "f907de96-6d29-4740-bea3-56542647a838",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b13b1404-50c8-4af4-be7d-a3f1bd814ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b87f9e26-7ebc-4dc4-96df-2e13a6b3bf31",
        "cursor": {
          "ref": "9feced54-6d53-43b5-b267-d8a046e3a227",
          "length": 252,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "dfb58069-dae7-4290-8e72-e45fde68a93d"
        },
        "item": {
          "id": "b87f9e26-7ebc-4dc4-96df-2e13a6b3bf31",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "af1721af-18b5-414d-b5be-c563f33d0ab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb4da97-d33f-4067-b430-4d739bf1efc3",
        "cursor": {
          "ref": "fbeb2a03-095c-47fe-ab5b-2232f4ba592e",
          "length": 252,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "ab60709b-bf3d-4267-9348-6fdc9df5a643"
        },
        "item": {
          "id": "bdb4da97-d33f-4067-b430-4d739bf1efc3",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4d5d1c1e-5d1b-4579-876e-63271bbc8cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a024dd7-119e-4e28-84ea-ceed96cde96b",
        "cursor": {
          "ref": "0fb5b047-a807-43e0-9665-70d343b66751",
          "length": 252,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "8e1f5fa5-5821-4317-9cb7-1dc2793832f4"
        },
        "item": {
          "id": "6a024dd7-119e-4e28-84ea-ceed96cde96b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d0c1b2ea-99ca-4b17-b30d-2efbd94e9434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f056258c-2ee1-4354-87bb-dbb1c201acbc",
        "cursor": {
          "ref": "a325e430-0530-458f-8d12-74631de103d2",
          "length": 252,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "6ac20042-53b6-4ed8-811f-895b5d4324e8"
        },
        "item": {
          "id": "f056258c-2ee1-4354-87bb-dbb1c201acbc",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d72ef49f-631d-4294-8d9e-fdf8bcde6253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b5166ed-074e-4910-9e31-c435dd89ac5b",
        "cursor": {
          "ref": "282a2909-01c8-49c3-920a-d132f40815c1",
          "length": 252,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "6d8148f3-3df4-4010-ba0d-9a538fbb6511"
        },
        "item": {
          "id": "4b5166ed-074e-4910-9e31-c435dd89ac5b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1c5836f1-fea6-4f28-ba4d-26eabc2b99ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e6caff-7bb0-4bd6-acf8-964fa43ef24f",
        "cursor": {
          "ref": "5b6ede82-501f-4210-97e3-047904d63129",
          "length": 252,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "ef224217-5c6b-4d4d-8b06-d353d8e923b9"
        },
        "item": {
          "id": "a2e6caff-7bb0-4bd6-acf8-964fa43ef24f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2b36a074-2ac7-4022-bffc-f71fec8d5ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee918291-3c82-495d-96e8-65a0457a60e7",
        "cursor": {
          "ref": "494542cd-377a-41a1-b0e1-040c1a0a25e9",
          "length": 252,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "1171b59b-e2a3-46e8-8af3-ce7e7ced5b16"
        },
        "item": {
          "id": "ee918291-3c82-495d-96e8-65a0457a60e7",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2e2c79f7-ab00-4c6f-8480-2ef2de8bddae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd7b600-1927-45c7-a985-15f119fa6143",
        "cursor": {
          "ref": "51b7c8bc-085d-4015-b94c-a88f197e4cdf",
          "length": 252,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b2b621b0-da31-49d2-b8b8-4c5907dac401"
        },
        "item": {
          "id": "5cd7b600-1927-45c7-a985-15f119fa6143",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "71215822-b564-46a5-bd00-59e9ec8c4b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f26ad454-fa90-4103-bb0e-46826708ee18",
        "cursor": {
          "ref": "59ddde4f-97ac-431a-8de7-91f47eea79b9",
          "length": 252,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f79646c2-ef82-4df3-bebb-ff93107b2810"
        },
        "item": {
          "id": "f26ad454-fa90-4103-bb0e-46826708ee18",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "752a3bac-2a60-460b-bbb9-b7e383d78380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f78db10-998f-4632-904d-3329ef6ebd49",
        "cursor": {
          "ref": "bd788318-b509-4fa8-896b-2616b26f3e73",
          "length": 252,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "40c0ec74-d0fa-47d0-acc9-fa21fc7cd85b"
        },
        "item": {
          "id": "1f78db10-998f-4632-904d-3329ef6ebd49",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "275dcf41-613f-466e-be8e-1835ea230cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c143aa-b310-4d4c-b5e4-d278a770e5a3",
        "cursor": {
          "ref": "85b51261-4deb-4c8c-9bf3-a2e9df3880f4",
          "length": 252,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "3fad0303-87b5-4d5c-b6c0-e358dddf89b2"
        },
        "item": {
          "id": "02c143aa-b310-4d4c-b5e4-d278a770e5a3",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0c6a8949-0a6b-470b-ab26-789426fd4dcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e9028a-c417-4647-9923-75c3ff313289",
        "cursor": {
          "ref": "86f0814e-14f2-493a-a1c9-d03a9e09d40e",
          "length": 252,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "6d153cb7-c1cf-4a9c-86d4-81561baf9e49"
        },
        "item": {
          "id": "d8e9028a-c417-4647-9923-75c3ff313289",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9c619b8b-a3d9-459b-9f37-a0e9e866be32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f15bdead-72ea-45ea-9011-b13b7c8a2cca",
        "cursor": {
          "ref": "75f48bc5-75e1-4efe-8e5d-82e6353dad57",
          "length": 252,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ce7ef515-c753-4bef-a853-e02b5d13e5c6"
        },
        "item": {
          "id": "f15bdead-72ea-45ea-9011-b13b7c8a2cca",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "ad47b4e8-8307-4ff7-adce-e99ecf204d9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03087aa-bffc-4956-9361-ae3ef67832d4",
        "cursor": {
          "ref": "63d8d662-d61d-42b5-b7d5-d48937efeb07",
          "length": 252,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "452321f0-18e1-41ac-b23d-bf3aa22ca3fe"
        },
        "item": {
          "id": "c03087aa-bffc-4956-9361-ae3ef67832d4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7b20f71f-0a75-45f9-aa2f-32f69254b591",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "678270f2-84e1-4bee-b116-edf77ff3e50e",
        "cursor": {
          "ref": "cefb23b7-126f-484a-838a-97bc7a295bc0",
          "length": 252,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3e7aa6d6-3466-44d8-b21e-1fc1acdbc38d"
        },
        "item": {
          "id": "678270f2-84e1-4bee-b116-edf77ff3e50e",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "3039162f-9ce1-4422-be76-bcff1ff42de3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 567,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8beda3f2-5a78-4ea1-afb9-803a33f914c3",
        "cursor": {
          "ref": "51f19dbe-e459-4c4c-937b-c3374d356a23",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ef10aa96-cd8b-4d20-ac39-ea1cf4304ec4"
        },
        "item": {
          "id": "8beda3f2-5a78-4ea1-afb9-803a33f914c3",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6cb35d22-773a-4c6b-8901-1ffd38de6e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8beda3f2-5a78-4ea1-afb9-803a33f914c3",
        "cursor": {
          "ref": "51f19dbe-e459-4c4c-937b-c3374d356a23",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ef10aa96-cd8b-4d20-ac39-ea1cf4304ec4"
        },
        "item": {
          "id": "8beda3f2-5a78-4ea1-afb9-803a33f914c3",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6cb35d22-773a-4c6b-8901-1ffd38de6e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a1d0506-0e7a-445a-a6a2-f05cfda31f71",
        "cursor": {
          "ref": "f42b0f24-92aa-46c7-a9f4-cc74d08a60f0",
          "length": 252,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "8f46d446-d8e6-42ed-b792-8f9d2fb75181"
        },
        "item": {
          "id": "8a1d0506-0e7a-445a-a6a2-f05cfda31f71",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "81c8148f-4a6f-4be3-b5c4-4bd502b5f78d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8d42960-cc94-483e-b9f7-c99696e709d6",
        "cursor": {
          "ref": "012b744d-92ab-42b1-b40c-1f95ec6aa9d0",
          "length": 252,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "04acff12-67df-4b74-a702-13986c90a7d8"
        },
        "item": {
          "id": "a8d42960-cc94-483e-b9f7-c99696e709d6",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "97323e89-cdf1-4341-ac5d-d1528b3e3cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80766b78-6040-4259-9621-f5559d9f660d",
        "cursor": {
          "ref": "f9027049-0e59-4bdf-8e02-9de378f831fe",
          "length": 252,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "cd0657d1-30a9-4f4c-9581-d4684f61c0ca"
        },
        "item": {
          "id": "80766b78-6040-4259-9621-f5559d9f660d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "9e6d93ce-1755-43d4-a9fd-c0b12e1c6192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a4d7ab-61c8-4f14-89a8-0dfd61b8e121",
        "cursor": {
          "ref": "263e9b9f-b73a-44b4-8955-e6cc23ba1099",
          "length": 252,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "45683f4a-1771-4d1d-af68-6b47f11a752e"
        },
        "item": {
          "id": "f1a4d7ab-61c8-4f14-89a8-0dfd61b8e121",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "03dc904e-ce6d-493a-bf0b-5310c91d2328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04fef123-48ee-4be7-b5b9-6d6232519f74",
        "cursor": {
          "ref": "d22cc0d0-eccf-474f-b934-22edcf3b92d3",
          "length": 252,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "751443fc-2352-4da1-8d81-87e283d93a6a"
        },
        "item": {
          "id": "04fef123-48ee-4be7-b5b9-6d6232519f74",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "97a91331-cfcd-4ea0-ba47-db4adc557cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b0aedc8-8d15-4275-8e3e-c04e00edfc1c",
        "cursor": {
          "ref": "28ff86eb-a673-4f44-861d-477f5875d913",
          "length": 252,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6137a55f-3383-4c34-8d49-744377795ce8"
        },
        "item": {
          "id": "0b0aedc8-8d15-4275-8e3e-c04e00edfc1c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e13a11f8-e01c-4c80-a139-716a7217550d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a325e289-ac21-4224-bcc3-2e51df646bf8",
        "cursor": {
          "ref": "513dd913-4754-4fe3-a483-3a51916d33e6",
          "length": 252,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "be12a0dc-3f5a-4be4-8c8a-3a3e7531539c"
        },
        "item": {
          "id": "a325e289-ac21-4224-bcc3-2e51df646bf8",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "0c8f4a15-3d61-43ef-bb0c-da9c89b6a99e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1cefee1-b6e6-49f6-81e5-783d045bb95b",
        "cursor": {
          "ref": "ddc9b86f-dc5d-48f7-a295-da98f56245ed",
          "length": 252,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "549bc578-af23-4d21-b114-9deda47644d7"
        },
        "item": {
          "id": "a1cefee1-b6e6-49f6-81e5-783d045bb95b",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "93d79af5-9483-45e7-82d6-9c22a9347df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053bd2dd-ad35-411c-8350-6a55127579d8",
        "cursor": {
          "ref": "f62008c9-f244-4d7e-8334-492c83a86c08",
          "length": 252,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "94483de0-df27-41e0-8cd8-556a00b45f4b"
        },
        "item": {
          "id": "053bd2dd-ad35-411c-8350-6a55127579d8",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "085499a8-ab57-4655-8a10-58e021cff349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c5d196-0674-48e2-8907-adeb68727d69",
        "cursor": {
          "ref": "3139f226-3ab1-48f3-ad4d-d7c910a0cabf",
          "length": 252,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7677e614-bdc5-44f0-b889-171caa147f91"
        },
        "item": {
          "id": "c2c5d196-0674-48e2-8907-adeb68727d69",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "1b6f4f38-4dcb-4cd9-a8c4-394f93b1cef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1450
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d04a903b-5de4-4bbd-b791-64473b70c52a",
        "cursor": {
          "ref": "3b038020-6eb3-4280-b7db-2b3412332dc2",
          "length": 252,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "fc65ff3c-3419-4fcc-9b9c-03eb0632d2b7"
        },
        "item": {
          "id": "d04a903b-5de4-4bbd-b791-64473b70c52a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c551b5a6-953e-4b21-b211-2091590ec926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db642dc9-a892-4573-a214-8890e05814ee",
        "cursor": {
          "ref": "fd1926b0-95f8-43f7-8ad7-dd0a3a272571",
          "length": 252,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "8663fc06-b2f3-4d1f-94d7-34b7daaf23b7"
        },
        "item": {
          "id": "db642dc9-a892-4573-a214-8890e05814ee",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "739ba07f-555e-404e-a6de-71b0eff0721f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1843
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddb80164-bac1-4a56-8eaa-6436cffb20a2",
        "cursor": {
          "ref": "ecf58f2a-270c-4f02-9e3e-31874b6b2f16",
          "length": 252,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b4eaf379-a4f5-460e-9ece-c57ffa1aefc3"
        },
        "item": {
          "id": "ddb80164-bac1-4a56-8eaa-6436cffb20a2",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a8c4bb1e-702b-44a0-8feb-6ad1af0d5a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1833
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc6ee3d-cd74-4cd6-a5bf-f17f078e4d41",
        "cursor": {
          "ref": "efd08f86-0443-419d-8353-31f3762de9ee",
          "length": 252,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "1e2ae965-5bd8-4faf-9de4-2946af2c7996"
        },
        "item": {
          "id": "6cc6ee3d-cd74-4cd6-a5bf-f17f078e4d41",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "5085bcc9-32b0-4fb8-8f97-e74a99a7fac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1832
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f146beea-8b41-4f5c-b938-dcffdb53e830",
        "cursor": {
          "ref": "6b70884e-9a36-451d-84f6-c58727711c72",
          "length": 252,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "63c1daa3-d76b-4151-8b98-3760a2c1acd2"
        },
        "item": {
          "id": "f146beea-8b41-4f5c-b938-dcffdb53e830",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "dd98126a-b4f9-4959-b133-c3f945a8f16d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1833
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dea426ac-bc2a-43ba-83c5-0c09fe7ac8e4",
        "cursor": {
          "ref": "c451b42f-f214-430e-b030-02ca21f9e708",
          "length": 252,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "a6ab7a0a-9035-4d40-b6e9-4c2027e7f990"
        },
        "item": {
          "id": "dea426ac-bc2a-43ba-83c5-0c09fe7ac8e4",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "abc499f1-32a6-4878-a0c6-29c01db3ee74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "738dd45d-9dd7-43f8-b252-14510a078712",
        "cursor": {
          "ref": "c9f1eacc-a1d2-40cc-9fb4-ed13fcae7f5b",
          "length": 252,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2a6156be-031b-44bd-94f9-e31e7517313f"
        },
        "item": {
          "id": "738dd45d-9dd7-43f8-b252-14510a078712",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "66133e51-c78b-4467-bea5-303f87d98f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e4a599f-8149-4259-a6f0-3c31ca7b5371",
        "cursor": {
          "ref": "9a708aec-7584-42fa-815e-8003a8582bde",
          "length": 252,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "330ccd95-add4-4537-81d0-536d0a8e1856"
        },
        "item": {
          "id": "5e4a599f-8149-4259-a6f0-3c31ca7b5371",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b8de3f88-7b21-4c80-889b-ba23fd382d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1250
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f67a7d9-a818-4d17-905f-c97b1a028364",
        "cursor": {
          "ref": "5f45abd4-5f91-462d-b53f-25fc17ae7597",
          "length": 252,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c24ec99d-d2ad-45ce-bc5a-59f00e6e871f"
        },
        "item": {
          "id": "1f67a7d9-a818-4d17-905f-c97b1a028364",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "162fd41c-7c0a-4442-963f-e19ffb7f1abc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "977ebc86-3529-4e28-8774-d0a20112f46f",
        "cursor": {
          "ref": "120ab0df-78dd-4325-be41-1f813707e9dc",
          "length": 252,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d1cf1334-8ac2-4309-952c-3e574a8f83cb"
        },
        "item": {
          "id": "977ebc86-3529-4e28-8774-d0a20112f46f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a0f76863-7e03-449e-b325-bcc7f6d06695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1249
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85173ad5-439d-4b34-a498-49cff497a48a",
        "cursor": {
          "ref": "de93ad60-4bca-467a-b591-490a9c22c730",
          "length": 252,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "1022c8c7-fd06-4f82-a3f3-56b0539fb757"
        },
        "item": {
          "id": "85173ad5-439d-4b34-a498-49cff497a48a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3335f211-077a-46e9-a981-c9bc5995f373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e09ddb82-fd17-43ae-8ceb-d7bf836ad3a7",
        "cursor": {
          "ref": "a770b1bf-8f77-4d8c-adab-455e38121ae6",
          "length": 252,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "0a32645d-ab5c-4cdd-a346-e805680d1cd5"
        },
        "item": {
          "id": "e09ddb82-fd17-43ae-8ceb-d7bf836ad3a7",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4f5c4a0f-510d-409f-a01a-00259d9a18c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "028930a5-f6a6-42e3-8c94-9129f69ef18d",
        "cursor": {
          "ref": "03cd9e6d-bc5a-4767-bb32-41e79b423ff2",
          "length": 252,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e5ee9528-b6c0-4e0c-b88e-4166668b991b"
        },
        "item": {
          "id": "028930a5-f6a6-42e3-8c94-9129f69ef18d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "3863262f-57f2-4343-96ac-215c3550104a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb9fc59-87da-42ae-adae-bc0bcd29fe04",
        "cursor": {
          "ref": "b2ea8c37-7bd8-491d-a968-88a3fc9747ef",
          "length": 252,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "cc2d21e7-a3cb-4b84-889b-dd9d0d0e02f2"
        },
        "item": {
          "id": "0cb9fc59-87da-42ae-adae-bc0bcd29fe04",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "73a02724-eceb-403d-96b4-1672674d30ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dfb0dee-9308-4755-bd6c-eb753b2c1850",
        "cursor": {
          "ref": "076aac35-090c-442c-85e6-0583c027b6ab",
          "length": 252,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "962e4bc8-1362-4ce4-9bbb-39ecfb77ee98"
        },
        "item": {
          "id": "0dfb0dee-9308-4755-bd6c-eb753b2c1850",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "66a75a09-83d4-4f7e-8e10-dfc2c6408cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fee207c-20ce-439b-ba9f-9b6311b5e73c",
        "cursor": {
          "ref": "b96539ae-b3e7-4125-95ef-4fbc5f1b7e81",
          "length": 252,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "045c373b-b5aa-40c8-8d5a-04c68372d49c"
        },
        "item": {
          "id": "4fee207c-20ce-439b-ba9f-9b6311b5e73c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e994b730-a515-4468-9112-578ca7391d6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a209e80e-31d7-4420-85de-cd13c8f0da0f",
        "cursor": {
          "ref": "9de0b318-d08e-41c2-9733-82d7232a6b01",
          "length": 252,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f7b6c94d-2c9c-4b63-8d01-597fb71ef25b"
        },
        "item": {
          "id": "a209e80e-31d7-4420-85de-cd13c8f0da0f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f2666b89-bf9e-4e1c-be1f-0c317dcc0905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1239
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6daa7f-04ee-459d-ab08-fffa4b2cec05",
        "cursor": {
          "ref": "85a3e64c-5967-44d2-a322-55d4df96f900",
          "length": 252,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9ccc8ee5-cab3-4c83-a061-8a398d419eb3"
        },
        "item": {
          "id": "6a6daa7f-04ee-459d-ab08-fffa4b2cec05",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "36b88780-bcc3-4cd5-8c52-dfcb5e1b67a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4812e51b-0af7-44bc-a220-591388dace43",
        "cursor": {
          "ref": "6b0ce300-bab7-4bdd-bb74-4e8b6c2f6ab5",
          "length": 252,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "fe66bdab-d18d-4628-af16-ccfe0a130951"
        },
        "item": {
          "id": "4812e51b-0af7-44bc-a220-591388dace43",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9a226e95-8b2e-444c-b86c-debc062900eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f33daa1-a802-4c98-9a79-8263f059214d",
        "cursor": {
          "ref": "344dac0e-b495-4db6-afe1-4507c2de07a0",
          "length": 252,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "f9ead980-31cd-41f9-a759-aaff299c8ba0"
        },
        "item": {
          "id": "9f33daa1-a802-4c98-9a79-8263f059214d",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a3a197d5-1f16-4060-a8cf-30c375ecef30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6b79e7-5ff2-4ed1-8b46-bdd30dcd3100",
        "cursor": {
          "ref": "142ab93a-c686-4536-be0b-8e4fbf986082",
          "length": 252,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "3b1972d4-4b18-4507-be4e-bf86c60d048b"
        },
        "item": {
          "id": "ff6b79e7-5ff2-4ed1-8b46-bdd30dcd3100",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "51176819-3c77-41f5-bf9a-c28f83e683ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1255
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b1b25b9-e198-4625-818b-b1a16c3879cd",
        "cursor": {
          "ref": "5e8101b4-0f69-4937-809f-b8e2a61f1d4b",
          "length": 252,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "815a1b2a-aabe-4609-83b0-3a5f02d61096"
        },
        "item": {
          "id": "8b1b25b9-e198-4625-818b-b1a16c3879cd",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "eebe32ab-7ec4-40f3-9d41-9fa1c7d8b9ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ca25e1-ab1e-4f6d-840e-e1220e3e929c",
        "cursor": {
          "ref": "a01bc820-50d1-4d35-9692-8ac8dbd9a4ab",
          "length": 252,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9474dd7d-17c6-40b8-bacf-52d4cf8015b4"
        },
        "item": {
          "id": "45ca25e1-ab1e-4f6d-840e-e1220e3e929c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f742cfd6-f16b-40ed-8f01-0387748f9b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1282
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "269b155b-16a2-4bf2-a549-4a24a0f75255",
        "cursor": {
          "ref": "e3386ec6-7641-4054-a00f-225ca95ac74d",
          "length": 252,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a5ca0b9d-088d-40f2-b997-b356d65d0774"
        },
        "item": {
          "id": "269b155b-16a2-4bf2-a549-4a24a0f75255",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "1b58ce02-eaac-4b9e-b823-d005e636c38e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "552eb52c-7bf5-4d21-b2d9-65a44359d06b",
        "cursor": {
          "ref": "ff37fd08-7dbe-4722-ab2d-9d6e8f5c0757",
          "length": 252,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "46f0283f-db7d-4d20-8de1-b1be091ad37f"
        },
        "item": {
          "id": "552eb52c-7bf5-4d21-b2d9-65a44359d06b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "12b0a322-e6a8-490f-ab63-25a4506da555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1668
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cab0faa-e55a-4cf7-8eda-b021be334fe2",
        "cursor": {
          "ref": "b8c3a39d-d53a-4433-8297-b5d1cbc67b32",
          "length": 252,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "dde06c43-acec-4051-9fe1-1e0aa935896d"
        },
        "item": {
          "id": "5cab0faa-e55a-4cf7-8eda-b021be334fe2",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "7e1a1afe-b6e0-4779-9fdb-c0fbdee38fac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1654
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1ce0bee-8a52-4765-ad5c-9fb28d622f04",
        "cursor": {
          "ref": "0cf5f915-050a-469d-a013-85b0eedcbef6",
          "length": 252,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "ec500d33-f04e-4762-a046-548b40c2c3e1"
        },
        "item": {
          "id": "d1ce0bee-8a52-4765-ad5c-9fb28d622f04",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "35e434a9-0c98-4d07-87c8-79216119853d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a671b0-36aa-4773-bcd2-469a92ef8572",
        "cursor": {
          "ref": "b4a923a7-7edd-441c-ab10-921022e2219c",
          "length": 252,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "a94c4bff-eb7f-4335-9a8a-f5addab54956"
        },
        "item": {
          "id": "06a671b0-36aa-4773-bcd2-469a92ef8572",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "17dbb67a-2522-4b96-8d8f-3c667394f804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a333c0de-f54e-448e-abf7-931c1d727040",
        "cursor": {
          "ref": "508104e0-61e5-49f7-8570-b1421fb5c42e",
          "length": 252,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8d0946e5-cbbd-4cf1-8b7b-8a6d7c6c7f8c"
        },
        "item": {
          "id": "a333c0de-f54e-448e-abf7-931c1d727040",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "45f61887-220f-4c11-a191-dd5a9817e1f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "841a3ab7-eb1a-4639-9d22-2296654a2be4",
        "cursor": {
          "ref": "23a424af-963e-49d2-b6f2-d736a4459640",
          "length": 252,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a8eecfa3-a04b-470b-a434-41973b44ea9a"
        },
        "item": {
          "id": "841a3ab7-eb1a-4639-9d22-2296654a2be4",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b938f6c6-8c06-47d7-9d52-89da95c3601f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 2027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ffa263-dc82-4ad8-b1c7-8e282801b6f2",
        "cursor": {
          "ref": "40032ce3-626d-4f9e-974a-645aecdfebd5",
          "length": 252,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "4273113e-f997-4b16-9ae4-f9f8bea9e37f"
        },
        "item": {
          "id": "72ffa263-dc82-4ad8-b1c7-8e282801b6f2",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d6c088d9-00bf-45c3-aeca-8c56613c8632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 2013
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b9c7ab-e86c-4c8d-be8d-d55146d958f0",
        "cursor": {
          "ref": "f09c0782-fb32-4944-9ee1-be88b36081da",
          "length": 252,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "3467be93-cbad-407e-a4e2-8971b697b147"
        },
        "item": {
          "id": "d7b9c7ab-e86c-4c8d-be8d-d55146d958f0",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "21efd824-5305-490d-b173-74d26bf9f8f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 2011
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c02e746-b187-4659-8645-8f731099eb4c",
        "cursor": {
          "ref": "8a91a46d-2a43-46c6-a5f6-49bad24af790",
          "length": 252,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "58f3a61f-059f-4510-9c26-ab93168f8453"
        },
        "item": {
          "id": "0c02e746-b187-4659-8645-8f731099eb4c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "9569573c-5290-43ff-9dbd-75827d371fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 2012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46897297-b497-4e9b-a89d-f8062bffd518",
        "cursor": {
          "ref": "f322f5ab-bd7f-4569-ad94-ad30d0aa4a54",
          "length": 252,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8e215a80-9a9a-48ef-8636-b1e9e22bbd18"
        },
        "item": {
          "id": "46897297-b497-4e9b-a89d-f8062bffd518",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "569fe3c1-0cf6-4e1e-8f54-78962119aad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 2033
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fdd76fe-cd6d-4539-8ada-b7ab17486c1e",
        "cursor": {
          "ref": "2974425a-f595-46f6-bd99-63c0a8289ba0",
          "length": 252,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9f29c14c-ed40-4c30-a7e9-d8b6f4033582"
        },
        "item": {
          "id": "5fdd76fe-cd6d-4539-8ada-b7ab17486c1e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "409ebf38-ca40-4504-8e57-006338f0f96e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1237
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ddb017-1545-4d8c-b851-040cc669b20e",
        "cursor": {
          "ref": "841356aa-1e9a-4a11-a126-1c18894b44a3",
          "length": 252,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "505cb5b5-9aa9-4b46-94c5-377d7eebcf21"
        },
        "item": {
          "id": "54ddb017-1545-4d8c-b851-040cc669b20e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "46a6224e-6519-473e-83cb-63bc45410509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1261
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5340e33-e5f3-408b-937a-eb33ddf137d9",
        "cursor": {
          "ref": "30478192-b2a0-4a71-a37e-3eb455a992bd",
          "length": 252,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a978c0be-5c49-4a8b-b658-efc53cface5a"
        },
        "item": {
          "id": "e5340e33-e5f3-408b-937a-eb33ddf137d9",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2deaa809-fcc8-4276-9d1f-2fa8a0088a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1242
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7be531e-58d5-4794-99e8-57c873fad7d5",
        "cursor": {
          "ref": "eedff749-ac78-4799-8561-de2639063638",
          "length": 252,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "f23dd95f-d4a2-4f9c-9d9b-1183a96b5266"
        },
        "item": {
          "id": "c7be531e-58d5-4794-99e8-57c873fad7d5",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "dd475828-1540-4323-a84b-ef475a1f6085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a238c003-c947-4720-8015-185d88d004ab",
        "cursor": {
          "ref": "499b5524-48ad-4874-8609-fb91d9f0adc0",
          "length": 252,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b3f71e32-f6ff-471d-bc0f-93faf08ba7d5"
        },
        "item": {
          "id": "a238c003-c947-4720-8015-185d88d004ab",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d7443f06-121a-4fd7-8bd0-a885901c68f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b63235ad-d30f-4035-9e89-a5c1f10ad83e",
        "cursor": {
          "ref": "9b10412c-371b-4a11-b849-3c8f2b5ee724",
          "length": 252,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f842b2a9-8812-41ef-a80d-313492335fbe"
        },
        "item": {
          "id": "b63235ad-d30f-4035-9e89-a5c1f10ad83e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d434dcc7-1338-4c07-8657-dc2129d8c732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34e8adf8-648c-4df8-b7e9-2fa368fc0155",
        "cursor": {
          "ref": "a153492a-e4e3-4ad1-a428-0d2ecfd162ba",
          "length": 252,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "eaa543b7-db6f-4d9c-8795-d582c3c99e18"
        },
        "item": {
          "id": "34e8adf8-648c-4df8-b7e9-2fa368fc0155",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "37628678-6917-4920-828d-55e1e8e4ddb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ada19d8-947c-447a-9e12-abe1d055a6d7",
        "cursor": {
          "ref": "08fd4da6-1d02-49e6-ab70-9ee28cee701c",
          "length": 252,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "42fa25a6-43d9-448d-bcd3-54c76a592549"
        },
        "item": {
          "id": "8ada19d8-947c-447a-9e12-abe1d055a6d7",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c949f37d-ffeb-409f-8e4b-c470a1377e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56000c73-bc65-4446-9758-cc614e220fe5",
        "cursor": {
          "ref": "0c819892-586e-4607-97e6-f2dae986e22f",
          "length": 252,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "3be584e1-3b27-403c-8541-82b1de4bc4e5"
        },
        "item": {
          "id": "56000c73-bc65-4446-9758-cc614e220fe5",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "8edfb8f5-9935-4ec1-9db2-ac12d6498bbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce9c19f2-8889-4fc2-9d6f-1c32f9a701e1",
        "cursor": {
          "ref": "0e2b0eaa-3b80-45b8-bf7e-672583e7ab87",
          "length": 252,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "81418115-14b1-494f-87db-48b9d085903d"
        },
        "item": {
          "id": "ce9c19f2-8889-4fc2-9d6f-1c32f9a701e1",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "8f3e71b3-cef3-47db-9fca-7e0647c978aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263aa3ab-3f70-4c99-b062-1357a257bc67",
        "cursor": {
          "ref": "8449dc34-d9f3-481b-856b-04c648896004",
          "length": 252,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "9d86998b-8579-429d-917c-67f7a866c6b2"
        },
        "item": {
          "id": "263aa3ab-3f70-4c99-b062-1357a257bc67",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f063b100-de7c-41cd-93c5-48e479a20510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d85bfd8-2faf-4871-a22c-2834dbfe48ef",
        "cursor": {
          "ref": "0f614f0a-bc3e-49c6-b478-fb2a7ba44531",
          "length": 252,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ab32a2f6-f7f6-46b3-9633-b4db825dea06"
        },
        "item": {
          "id": "0d85bfd8-2faf-4871-a22c-2834dbfe48ef",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a8d50918-84e5-4957-af6f-857fdd17dd82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "024c9993-d62e-469b-ab4d-addf66cd7209",
        "cursor": {
          "ref": "17b32f7e-51c0-4439-aecd-bda1dac982f1",
          "length": 252,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "7285c17a-5de7-4c12-9620-6e39c5e53c4f"
        },
        "item": {
          "id": "024c9993-d62e-469b-ab4d-addf66cd7209",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "813b10aa-6c01-48d8-828d-2662d3e30c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7782b9ea-f14c-45c6-a168-edb2f338b50d",
        "cursor": {
          "ref": "1cb814af-6c80-47ae-b571-377288921add",
          "length": 252,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "8ea6d47a-e722-4205-a8de-4f87ab20aa16"
        },
        "item": {
          "id": "7782b9ea-f14c-45c6-a168-edb2f338b50d",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "3cfb2340-5087-4211-8ff9-0276050bbb42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 2076
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c407a3eb-d9a4-4885-b20c-6930a2e0e0f0",
        "cursor": {
          "ref": "412768b0-9d9c-4d22-b279-44b7412c3890",
          "length": 252,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "4a491381-3734-40e8-b16b-17f8b873128f"
        },
        "item": {
          "id": "c407a3eb-d9a4-4885-b20c-6930a2e0e0f0",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "6d1662b4-d0e7-4b8e-ade7-6d4c032487e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 2062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e47fef0-33f3-4156-88d0-3ea1db3e5849",
        "cursor": {
          "ref": "bc4d7d95-308a-4505-8a5f-55105d49ccdd",
          "length": 252,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "fd08f254-c2f0-4fd8-af2d-18d040ae0b3c"
        },
        "item": {
          "id": "0e47fef0-33f3-4156-88d0-3ea1db3e5849",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "2c6310da-6bb8-459f-83d0-5451df5e4422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 2060
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88a8e9d-82fa-4678-8aab-6a339d478bc4",
        "cursor": {
          "ref": "35f4f24c-0bf7-4793-a51c-c515016b3e82",
          "length": 252,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0db4d75f-7733-4b0a-94f5-38a72462b6a2"
        },
        "item": {
          "id": "a88a8e9d-82fa-4678-8aab-6a339d478bc4",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "541b2482-e695-4f69-ad02-9b2e2af7b10b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 2061
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf752e2-3255-413e-ad55-9c4f2fdb9b95",
        "cursor": {
          "ref": "5fe3753e-a01b-4ce4-a8a5-3779fa297dc2",
          "length": 252,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "2770b42f-b0d7-43a2-857b-1432210700ca"
        },
        "item": {
          "id": "eaf752e2-3255-413e-ad55-9c4f2fdb9b95",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ed3c84fe-62f0-437b-b64f-21b211668e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 2082
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d3e581d-9d4f-4e6c-a0d8-04f7a99d8759",
        "cursor": {
          "ref": "0a9b5ab5-0a28-4c2a-9766-2d759a223ada",
          "length": 252,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "70d12521-d005-4a3c-9ce8-2ed1b7be7f69"
        },
        "item": {
          "id": "2d3e581d-9d4f-4e6c-a0d8-04f7a99d8759",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "7cd12109-2849-4758-b478-c8f818277d41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 851
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e82f0164-b1bb-4f2e-9720-38f8921b5a3a",
        "cursor": {
          "ref": "b5ab3158-4070-482f-9d32-a10de1fb7dd5",
          "length": 252,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "dd2b8e71-4710-4c25-8eb5-405dc47d796e"
        },
        "item": {
          "id": "e82f0164-b1bb-4f2e-9720-38f8921b5a3a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "9507c3c4-78d0-447d-8c55-1c812c29a973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfaba0a5-ffdf-4b3c-9400-0d3af331ec93",
        "cursor": {
          "ref": "0e84d918-a8b5-4ffb-ae3b-d479a7ad97bc",
          "length": 252,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "1035d304-8058-4197-86d8-a5bb78b239c5"
        },
        "item": {
          "id": "cfaba0a5-ffdf-4b3c-9400-0d3af331ec93",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8c90b4a1-6a54-4fd2-a903-ac338b5b0807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a886139b-9bfd-4433-9cd8-7b880e259a21",
        "cursor": {
          "ref": "fa213698-5437-4c13-9ca8-363b45428473",
          "length": 252,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "11809131-161f-4890-8982-efb7f2f772e5"
        },
        "item": {
          "id": "a886139b-9bfd-4433-9cd8-7b880e259a21",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "35bde0ec-a9a3-4334-b835-d9744e1c8ed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcaed1fa-8845-4d9a-99e2-f86b1386075c",
        "cursor": {
          "ref": "ee2426d8-2825-4ded-82ff-ac2dc9b3888a",
          "length": 252,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f63cdf42-bb69-4438-ac4f-a87e5ff98f7c"
        },
        "item": {
          "id": "fcaed1fa-8845-4d9a-99e2-f86b1386075c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "a5f12af5-be58-47de-97a0-13d8d7be08ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b199e82-0c68-427e-9c40-80677e4d7b69",
        "cursor": {
          "ref": "6df051e1-f3b0-4b8e-8077-e4cab7652ceb",
          "length": 252,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "c8ef6bad-da93-4005-86d8-4554ab82d6cd"
        },
        "item": {
          "id": "3b199e82-0c68-427e-9c40-80677e4d7b69",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "35f593fe-262a-44e5-87c8-56654f1e92de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 868
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03f9d46-908c-4a2b-9925-bfca7498a00a",
        "cursor": {
          "ref": "55f242e2-0406-4e10-9af4-62e5253bc509",
          "length": 252,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c83a536c-ebc3-420b-8ccb-94393e6fd4bb"
        },
        "item": {
          "id": "c03f9d46-908c-4a2b-9925-bfca7498a00a",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ed7af7bb-7c7b-4fd1-9539-c96915b6ee53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df79348d-8a21-4b9b-8847-812a38e37f56",
        "cursor": {
          "ref": "6f986775-d236-4f28-ba84-76896e5b9ce2",
          "length": 252,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "e95b80ed-9ab3-43a1-a2d8-242857a81df0"
        },
        "item": {
          "id": "df79348d-8a21-4b9b-8847-812a38e37f56",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "5c0dcdaf-1e16-4a36-a3c6-7a07556b48a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "520221c5-4ebc-4ebe-a4a8-8b01342732fa",
        "cursor": {
          "ref": "f5d9b9c2-0651-475c-8dc5-92785643539f",
          "length": 252,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6eba014b-5fc8-4d55-93e1-8a7cef96881f"
        },
        "item": {
          "id": "520221c5-4ebc-4ebe-a4a8-8b01342732fa",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3a667ac1-0def-41f3-a3db-72296accb397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5550551-5d79-4c2f-97dd-77ecacb3c1be",
        "cursor": {
          "ref": "71b63d72-47a7-4ca2-a51e-dc3ecfa6b4c6",
          "length": 252,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "511410ea-e833-4bb0-9dda-e7e4d89422a5"
        },
        "item": {
          "id": "b5550551-5d79-4c2f-97dd-77ecacb3c1be",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "67fb0838-8817-4889-9751-379bbce182c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "390f714e-d18a-4136-8dd1-d799ed274e7f",
        "cursor": {
          "ref": "ec5b459c-a592-43ba-89c2-2d7a6c54227e",
          "length": 252,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "7de1c198-e9e2-43dd-af28-0c1b2fcc1bfa"
        },
        "item": {
          "id": "390f714e-d18a-4136-8dd1-d799ed274e7f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "22daec2a-767c-4a70-a372-90bf3798c735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf85c205-8a3e-47f1-9df8-f98c0454314f",
        "cursor": {
          "ref": "d09b19df-6737-4fd9-b62c-6cd588726d6d",
          "length": 252,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "97683cd9-0c7b-4729-9616-d50a078e1880"
        },
        "item": {
          "id": "bf85c205-8a3e-47f1-9df8-f98c0454314f",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "0a29c48e-2345-4ae4-b19e-21cd03445bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8227d997-67b5-489c-95d1-9150536002e0",
        "cursor": {
          "ref": "dd88ed81-dcdb-4fff-97ad-bba705603051",
          "length": 252,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "bafefb55-a6c4-4df2-a48e-5623b02ffa40"
        },
        "item": {
          "id": "8227d997-67b5-489c-95d1-9150536002e0",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "225c6ff8-9d8c-4de2-96e6-d50db40c380c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1246
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adbc2c6e-7a16-4fe9-a8ff-19471b898fa2",
        "cursor": {
          "ref": "0d9ef7b3-e790-45f3-87c5-821c88b01897",
          "length": 252,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "bac74357-34db-4565-b620-d69a6aea7809"
        },
        "item": {
          "id": "adbc2c6e-7a16-4fe9-a8ff-19471b898fa2",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "9de1d898-8b88-4b79-a971-cef9eaf1319e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0706b7a3-4f05-4372-8a8f-883459b5a998",
        "cursor": {
          "ref": "1bf88fa6-e51a-4144-87ad-ca4c7b1e933c",
          "length": 252,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c565c494-fac4-43d4-8212-4593175f0101"
        },
        "item": {
          "id": "0706b7a3-4f05-4372-8a8f-883459b5a998",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "71d4a97e-a1db-4f9a-baa1-28084dfbdeb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e32712db-85ab-41b9-bd0f-eed5158e117d",
        "cursor": {
          "ref": "9f671d98-aa76-4c59-a0fa-ed66963653d7",
          "length": 252,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b3171344-39e7-48ec-b2c0-58866f429106"
        },
        "item": {
          "id": "e32712db-85ab-41b9-bd0f-eed5158e117d",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "88d4688f-59be-46ca-94fb-41010ea6c003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ef67b5-c252-42e0-9c45-882862e1cb66",
        "cursor": {
          "ref": "b9e4ce89-e2da-4910-b452-ea320f414964",
          "length": 252,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "548c93ab-0efe-421d-bcad-3562e72c85b4"
        },
        "item": {
          "id": "93ef67b5-c252-42e0-9c45-882862e1cb66",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e272f767-0338-4420-99f5-f1e4a4b2817d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ecdf6c0-1b0b-4e77-a78f-bee5e63438d7",
        "cursor": {
          "ref": "47b69a39-039a-4c2b-b6f5-816c1e40ac53",
          "length": 252,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "7b068824-5db3-4311-86ab-e4339edbf409"
        },
        "item": {
          "id": "5ecdf6c0-1b0b-4e77-a78f-bee5e63438d7",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "0fe575c4-9c69-491c-b99d-5d9ec54ae8f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a1318e7-1e4d-4c3f-ade6-c34d507cfc27",
        "cursor": {
          "ref": "b6d931cd-d1ee-4622-a39e-af0b7e3aa871",
          "length": 252,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "11ca3f2d-4ff8-48da-9fd8-a987165d8dd0"
        },
        "item": {
          "id": "8a1318e7-1e4d-4c3f-ade6-c34d507cfc27",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "7cc303ac-3707-45c1-9de5-d460bf4558ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b3d4c8-8806-4160-97f0-0333051fde95",
        "cursor": {
          "ref": "d2a15612-aab4-4665-b95c-e4dd2f28a9c8",
          "length": 252,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "47f4d86e-2691-499b-a372-746a60564623"
        },
        "item": {
          "id": "66b3d4c8-8806-4160-97f0-0333051fde95",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "05980d0b-e28b-499d-a1c3-701f347c539e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e65e1fe5-e20d-473f-9264-46b140ab8d74",
        "cursor": {
          "ref": "2cc4bd6b-fdf2-4c51-bec6-28feafcd4538",
          "length": 252,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "0c10c399-d206-4312-b091-163c9633fb11"
        },
        "item": {
          "id": "e65e1fe5-e20d-473f-9264-46b140ab8d74",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "113eeb0b-4362-4386-a1c6-39289248077a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da36880d-4f27-48d5-96f2-d0ac9441f041",
        "cursor": {
          "ref": "3666d72f-4e56-4d83-8e79-9a8b5f4390b3",
          "length": 252,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f37e7158-5f4a-4567-8054-4a93e9b62d37"
        },
        "item": {
          "id": "da36880d-4f27-48d5-96f2-d0ac9441f041",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4a9f136b-b5ba-40da-8c44-1c542412deac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ebe0f4-d23e-411a-a370-8ef0e5095127",
        "cursor": {
          "ref": "17a05694-f25b-4ffc-be95-887fb2512850",
          "length": 252,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "90ccb759-98b3-4f00-a3a3-7832716a299d"
        },
        "item": {
          "id": "82ebe0f4-d23e-411a-a370-8ef0e5095127",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2afbeebc-147f-4e1c-bb95-276828f53997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1206
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14056ec5-872e-485f-aacb-0443b47e0f5b",
        "cursor": {
          "ref": "0264f56d-9f92-48ec-bd36-f084aee054dd",
          "length": 252,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "4de178de-073c-4be1-b372-d14611a24526"
        },
        "item": {
          "id": "14056ec5-872e-485f-aacb-0443b47e0f5b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "dea49ac1-fdec-46c1-8afb-901e989e8aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3e5b8fd-5af0-4af0-b4e3-d1335b681e3f",
        "cursor": {
          "ref": "4bda6233-ab49-4da6-b1f3-7d7726f1a489",
          "length": 252,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "fc5ea30d-4a7a-4379-abe1-859d41eb659c"
        },
        "item": {
          "id": "c3e5b8fd-5af0-4af0-b4e3-d1335b681e3f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "6b7b08ad-66d9-4bca-a5e0-db715b787a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e0240e-ca69-4771-b4cf-92f04cf09f37",
        "cursor": {
          "ref": "f673cc15-e810-433c-b459-792885e67687",
          "length": 252,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "81cb742c-f60c-4a38-94b8-6ae7c02a94dc"
        },
        "item": {
          "id": "59e0240e-ca69-4771-b4cf-92f04cf09f37",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a19bdd9e-750a-4a4c-a67d-88d2fb1b59b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1096
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b0c631-b053-448e-ad0d-66b3e3c0493b",
        "cursor": {
          "ref": "8952f0fc-be77-45a6-ac64-429c8727d201",
          "length": 252,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "7d8ffcbd-5544-416f-afdc-f167dea9c701"
        },
        "item": {
          "id": "b0b0c631-b053-448e-ad0d-66b3e3c0493b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "be5c2de1-697f-4970-9cbf-019fac313069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c582fea4-1f2e-4447-9f7d-23b5556ca25d",
        "cursor": {
          "ref": "775cff37-9e59-44e2-aac1-3a393c690755",
          "length": 252,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b54e7ab2-2bd2-45c1-a474-739a2d86be8c"
        },
        "item": {
          "id": "c582fea4-1f2e-4447-9f7d-23b5556ca25d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "209fdf55-e61b-41fb-99e3-7c37215997f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68257010-0538-468b-af33-05d8b40926fa",
        "cursor": {
          "ref": "07dac3ea-206b-4f9b-8213-09787199e726",
          "length": 252,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "6d3c783e-a4ee-4d3d-b7bd-f2916821a1e0"
        },
        "item": {
          "id": "68257010-0538-468b-af33-05d8b40926fa",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "434a2d0a-dd1f-44a1-b635-bdd53c03244c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627f58ac-7b56-4522-8a3a-83803a7b4adb",
        "cursor": {
          "ref": "4aeb5a96-3848-4cd6-bf01-d14c209848b0",
          "length": 252,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "bb46d3c2-20ac-4545-ad9b-f113392f852f"
        },
        "item": {
          "id": "627f58ac-7b56-4522-8a3a-83803a7b4adb",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c2d4638b-b8a7-4fb1-99c7-91e6ea60ad18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af723ac-f37b-4a4a-b33a-56db0738c154",
        "cursor": {
          "ref": "097f7537-849d-4c9d-b002-39b5cbe44277",
          "length": 252,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "5121471c-80a6-40b7-a06f-8ae4f8c476c2"
        },
        "item": {
          "id": "3af723ac-f37b-4a4a-b33a-56db0738c154",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "841f8fcf-278b-4676-bfea-7517bffa083a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1225
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7231a6d7-99b9-4829-98f2-14a3bb678e3d",
        "cursor": {
          "ref": "ccc5f578-bcab-4b4f-8316-1ed846f10bad",
          "length": 252,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "24bfc4d7-4a6c-47cf-b9b1-7725c47cbadd"
        },
        "item": {
          "id": "7231a6d7-99b9-4829-98f2-14a3bb678e3d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "26679e8d-7e4d-4b13-9ea8-2460c94f4627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33673bb-6c32-4fab-adb6-5c4c00f94c3b",
        "cursor": {
          "ref": "90e33f21-6e9d-471b-a14e-577e561b4d16",
          "length": 252,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "459b0019-3bff-4a7b-adad-f4301641786b"
        },
        "item": {
          "id": "b33673bb-6c32-4fab-adb6-5c4c00f94c3b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "46bd6ee8-fb49-48a1-8cc1-91eb554e03d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "534e79d0-ba3e-494d-8c44-409830d4d819",
        "cursor": {
          "ref": "8209172f-71f7-4b50-b0a4-bdab6ae0defe",
          "length": 252,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f038a989-5bd1-451d-a60d-2d8462f74b1a"
        },
        "item": {
          "id": "534e79d0-ba3e-494d-8c44-409830d4d819",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "0cb7ec34-ab0a-4502-8713-9885f55a09ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a481085d-6fd1-45f8-bbf2-d6b02f38f3a8",
        "cursor": {
          "ref": "a9d66c5f-0c2a-4ea3-a910-36b38df1c13c",
          "length": 252,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "95966631-071e-4205-8cc8-a8979c42d97d"
        },
        "item": {
          "id": "a481085d-6fd1-45f8-bbf2-d6b02f38f3a8",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a8443ac6-987e-47d9-8acc-f25cb5d12386",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c486e9-2820-40fb-9870-56f514dabdea",
        "cursor": {
          "ref": "26f49054-10af-4240-a1e9-78eaba3b3087",
          "length": 252,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "24f465f6-0697-44e7-a9c0-09c8af3129ec"
        },
        "item": {
          "id": "c5c486e9-2820-40fb-9870-56f514dabdea",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "0918ff6e-f7ec-493e-8a79-7865047f56a7",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 326,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04db697c-7fa4-4d7d-8849-1dfbc3a3415a",
        "cursor": {
          "ref": "ee7b26e8-29bb-4167-99fa-da82df5e1ebf",
          "length": 252,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a659cb6e-8033-484d-885c-2b8abe37ac14"
        },
        "item": {
          "id": "04db697c-7fa4-4d7d-8849-1dfbc3a3415a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "b7afb6d9-5929-4ffa-8391-c1426ba3770d",
          "status": "OK",
          "code": 200,
          "responseTime": 395,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "f212532c-761a-4863-bb8c-b3c49c956d89",
        "cursor": {
          "ref": "e0dcc346-8cd7-448b-98af-afd9174069ad",
          "length": 252,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "844db4c6-581d-474f-901c-47879bc6ada0"
        },
        "item": {
          "id": "f212532c-761a-4863-bb8c-b3c49c956d89",
          "name": "credentials_verify"
        },
        "response": {
          "id": "1b903362-d21c-4863-b36a-e8aa26480e0c",
          "status": "OK",
          "code": 200,
          "responseTime": 324,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fc5458c-7817-4e67-8785-7d9074941915",
        "cursor": {
          "ref": "d446b7a4-7575-4b8e-8548-5c5e9db85bfa",
          "length": 252,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "6b25f8c8-589a-42f3-acfc-954244f352ec"
        },
        "item": {
          "id": "3fc5458c-7817-4e67-8785-7d9074941915",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "a7652594-cd5a-4d0a-8f14-98d6bd97288a",
          "status": "OK",
          "code": 200,
          "responseTime": 396,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0026e785-b01a-45d2-ae17-30bca2d0fca2",
        "cursor": {
          "ref": "d3e012cc-0cdb-482d-a1c3-4d6d4b7105ab",
          "length": 252,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "6d315df5-f0e5-4bd0-8e9b-7c8247b63ca4"
        },
        "item": {
          "id": "0026e785-b01a-45d2-ae17-30bca2d0fca2",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "5e8fac23-3203-404c-b5cd-60cbb0584d57",
          "status": "OK",
          "code": 200,
          "responseTime": 358,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdf6a6c1-b255-4769-aa67-c39093b8fdfa",
        "cursor": {
          "ref": "2972aaeb-3f4d-4b4d-9f61-82d3846e1adb",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1ab41a11-e2dc-40da-aec8-2f8916c4c1df"
        },
        "item": {
          "id": "bdf6a6c1-b255-4769-aa67-c39093b8fdfa",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "afb7d1fc-16f8-4362-b2fd-0f5011d57244",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdf6a6c1-b255-4769-aa67-c39093b8fdfa",
        "cursor": {
          "ref": "2972aaeb-3f4d-4b4d-9f61-82d3846e1adb",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1ab41a11-e2dc-40da-aec8-2f8916c4c1df"
        },
        "item": {
          "id": "bdf6a6c1-b255-4769-aa67-c39093b8fdfa",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "afb7d1fc-16f8-4362-b2fd-0f5011d57244",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdf6a6c1-b255-4769-aa67-c39093b8fdfa",
        "cursor": {
          "ref": "2972aaeb-3f4d-4b4d-9f61-82d3846e1adb",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1ab41a11-e2dc-40da-aec8-2f8916c4c1df"
        },
        "item": {
          "id": "bdf6a6c1-b255-4769-aa67-c39093b8fdfa",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "afb7d1fc-16f8-4362-b2fd-0f5011d57244",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e982b3-4c2c-49de-8117-a02d348325e5",
        "cursor": {
          "ref": "e6290e5a-88a3-4267-a4fe-758b1139d1a2",
          "length": 252,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "fc9ef6a4-1018-43fa-8f2d-ec9f6f197cf5"
        },
        "item": {
          "id": "00e982b3-4c2c-49de-8117-a02d348325e5",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "c910c219-8f6a-48c3-9cc7-78ac0307cd7c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 272,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "021db626-a54f-468f-b5c0-1b2b1c3c63b7",
        "cursor": {
          "ref": "573f9880-453f-4d53-87a9-f1209bdd7e4c",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a6d1d8f9-2db3-4f48-b627-a31a0bec315c"
        },
        "item": {
          "id": "021db626-a54f-468f-b5c0-1b2b1c3c63b7",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "409b0b0a-5feb-4ac0-861d-d7f200f80b46",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "021db626-a54f-468f-b5c0-1b2b1c3c63b7",
        "cursor": {
          "ref": "573f9880-453f-4d53-87a9-f1209bdd7e4c",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a6d1d8f9-2db3-4f48-b627-a31a0bec315c"
        },
        "item": {
          "id": "021db626-a54f-468f-b5c0-1b2b1c3c63b7",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "409b0b0a-5feb-4ac0-861d-d7f200f80b46",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e07e4c1-5f50-402b-9205-96c67d3fe58b",
        "cursor": {
          "ref": "041aa3db-892f-441b-bf76-92624090f67e",
          "length": 252,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "19b1673f-7e66-40a2-8af3-48399986d088"
        },
        "item": {
          "id": "5e07e4c1-5f50-402b-9205-96c67d3fe58b",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "e739ba7e-54fa-40cc-ac36-84c690fb4e36",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 490,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50cbdc3e-d584-4b9d-bfdc-1dc3ca48cd17",
        "cursor": {
          "ref": "6379a2c9-f142-4ced-ac17-6b721105ab60",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "2b313bfe-923b-4371-9425-3c86dcfb8e18"
        },
        "item": {
          "id": "50cbdc3e-d584-4b9d-bfdc-1dc3ca48cd17",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "06975e95-a604-41d9-bf14-3c3994122814",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50cbdc3e-d584-4b9d-bfdc-1dc3ca48cd17",
        "cursor": {
          "ref": "6379a2c9-f142-4ced-ac17-6b721105ab60",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "2b313bfe-923b-4371-9425-3c86dcfb8e18"
        },
        "item": {
          "id": "50cbdc3e-d584-4b9d-bfdc-1dc3ca48cd17",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "06975e95-a604-41d9-bf14-3c3994122814",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4587c64-700c-4bdb-8645-314b2f9297e3",
        "cursor": {
          "ref": "a64ea59e-d0d4-4b20-9fd2-107b0f6b2d03",
          "length": 252,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "a33fdefd-96a2-4a26-b104-f88a415cd906"
        },
        "item": {
          "id": "d4587c64-700c-4bdb-8645-314b2f9297e3",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "99611e61-7465-47ac-bbf1-a0686c38ac89",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 504,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}